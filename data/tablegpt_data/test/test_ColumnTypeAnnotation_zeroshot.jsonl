{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Africa|\n|Europe|\n|Asia|\n|Eurasia|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nSportsTeam\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Continent\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test1"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|AIRPORT|\n|---|\n|Commercial Service - Primary Airports|\n|Pago Pago International Airport|\n|General Aviation Airports|\n|Fitiuta Airport|\n|Ofu Airport|\n|Private-Use Airports (partial list)|\n|Tau Airport|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMayor\nMonarch\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test10"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Commemoration|\n|---|\n|Philip and James|\n|Apostles|\n|John the Evangelist|\n|Julian of Norwich|\n|Spiritual Teacher|\n|Florence Nightingale|\n|Nurse|\n|Social Reformer|\n|St. Matthias the Apostle|\n|St. Dunstan of Canterbury|\n|Abp of Canterbury|\n|Bede|\n|Priest|\n|Religious|\n|Scholar|\n|Teacher of the Faith|\n|St. Augustine of Canterbury|\n|Abp of Canterbury|\n|John Charles Roper|\n|Bishop|\n|Roberta Elizabeth Tilton|\n|Founder of the Anglican Church Women|\n|Visit of the Blessed Virgin Mary to Elizabeth|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Saint\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test100"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Commemoration|\n|---|\n|St. Justin|\n|Martyr|\n|Teacher of the Faith|\n|Martyrs of Lyon|\n|Martyrs of Uganda and Janani Luwum|\n|Archbishop|\n|Martyr|\n|St. John XXIII|\n|Bishop|\n|Reformer|\n|St. Boniface|\n|Archbishop|\n|Martyr|\n|William Grant Broughton|\n|Bishop|\n|St. Columba|\n|Abbot|\n|Missionary|\n|St. Barnabas the Apostle|\n|Joseph Butler|\n|Bishop|\n|Teacher of the Faith|\n|Bernard Mizeki|\n|Catechist|\n|Martyr|\n|St. Alban|\n|Martyr|\n|Nativity of St. John the Baptist|\n|St. Irenaeus|\n|Bishop|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nCity\nCompany\nContinent\nCurrency\nGenre\nLanguage\nMammal\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Saint\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test101"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common Name|\n|---|\n|Mount Lyell shrew|\n|Vagrant shrew|\n|Montane shrew|\n|Pacific shrew|\n|Ornate shrew|\n|Fog shrew|\n|Inyo shrew|\n|American water shrew|\n|Preble's shrew|\n|Marsh shrew|\n|Trowbridge's shrew|\n|Merriam's shrew|\n|Desert (or Crawford's gray) shrew|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nMammal\nMayor\nNewspaper\nPoliticalParty\nRadioStation\nSportsTeam\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mammal\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test102"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common Name|\n|---|\n|Virginia opossum|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test103"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name (Korean name)|\n|---|\n|Long-tailed goral (\u00ec\\u0082\u00b0\u00ec\\u0096\\u0091)|\n|Siberian roe deer (\u00eb \u00b8\u00eb\u00a3\u00a8)|\n|Manchurian wapiti (\u00eb\u00b6\\u0089\u00ec\\u009D\\u0080\u00ec\\u0082\u00ac\u00ec\\u008A\u00b4)|\n|Manchurian sika deer (\u00eb\\u008C\\u0080\u00eb\u00a5\\u0099\u00ec\\u0082\u00ac\u00ec\\u008A\u00b4)|\n|Water deer (\u00ea\u00b3 \u00eb\\u009D\u00bc\u00eb\\u008B\\u0088)|\n|Wild boar (\u00eb\u00a9\u00a7\u00eb\\u008F\u00bc\u00ec\u00a7\\u0080)|\n|Siberian musk deer (\u00ec\\u0082\u00ac\u00ed\\u0096\u00a5\u00eb \u00b8\u00eb\u00a3\u00a8)|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nCompany\nContinent\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mammal\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test104"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|(Eurasian) wryneck|\n|European green woodpecker|\n|Great spotted woodpecker|\n|Lesser spotted woodpecker|\n\n**Candidate column type:**\nAcademicJournal\nBird\nBuilding\nCity\nCompany\nContinent\nGenre\nMayor\nMonarch\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Bird\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test105"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|(European) robin|\n|Thrush nightingale|\n|(Common) nightingale|\n|Bluethroat|\n|White-throated robin|\n|Black redstart|\n|(Common) redstart|\n|Moussier's redstart|\n|Whinchat|\n|(European) stonechat|\n|Isabelline wheatear|\n|(Northern) wheatear|\n|Pied wheatear|\n|Black-eared wheatear|\n|Desert wheatear|\n|(Rufous-tailed) rock thrush|\n|Blue rock thrush|\n|Swainson's thrush|\n|Grey-cheeked thrush|\n|Ring ouzel|\n|Common blackbird|\n|Eyebrowed thrush|\n|Dusky thrush|\n|Red-throated thrush (dark-throated thrush)|\n|Fieldfare|\n|Song thrush|\n|Redwing|\n|Mistle thrush|\n|American robin|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBuilding\nCity\nCompany\nContinent\nCurrency\nGenre\nLake\nLanguage\nMammal\nMonarch\nPlant\nPoliticalParty\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test106"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|Adoration|\n|Alicante|\n|Azoychka|\n|Beefsteak|\n|Better Boy (Tomato)|\n|Big Beef|\n|Big Rainbow|\n|Blaby Special|\n|Black Krim|\n|Brandywine|\n|Campari|\n|Celebrity|\n|Cherokee purple|\n|Early Girl|\n|Enchantment|\n|Flamenco|\n|Fourth of July|\n|Garden Peach|\n|Gardener's Delight|\n|German Johnson|\n|Granadero|\n|Great White|\n|Green Zebra|\n|Hillbilly|\n|Japanese Black Trifele|\n|Jubilee|\n|Juliet|\n|Kumato|\n|Lillian's Yellow|\n|McDreamy|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nLake\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPlant\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Plant\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test107"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|American white pelican|\n|Brown pelican|\n\n**Candidate column type:**\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nSaint\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Bird\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test108"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|Antillean euphonia[1]|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nLake\nLanguage\nMayor\nMonarch\nPlant\nRadioStation\nSaint\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Bird\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test109"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|AUTHOR|\n|---|\n|Bibhuti Patnaik[1]|\n|Gopalkrushna Rath[2]|\n|Bijay Misra[3]|\n|Gourahari Das[4]|\n|Kalpanakumari Devi|\n|Pathani Pattnaik|\n|Phani Mohanty|\n|Pramod Kumar Mohanty|\n|Dipak Mishra|\n|Bansidhar Sarangi|\n|Ramachandra Behera|\n|Prafulla Kumar Mohanty|\n|Jatindra Mohan Mohanty|\n|Sarat Kumar Mohanty|\n|Pratibha Satpathy|\n|Pratibha Ray|\n|Haraprasad Das|\n|Chittaranjan Das|\n|Chandrasekhar Rath|\n|Satyanarayana Rajguru|\n|Govind Chandra Udgata|\n|Guru Charan Patnaik|\n|Santanu Kumar Acharya|\n|Rabi Pattnayak*|\n|Jagannath Prasad Das|\n|Jagadish Mohanty[5]|\n|Bhanuji Rao|\n|Sourindra Barik|\n|Nityananda Mohapatra|\n|Soubhagya Kumar Misra|\n\n**Candidate column type:**\nAcademicJournal\nBook\nCompany\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Writer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test11"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|Baldwin|\n|Brown Snout|\n|Dabinett|\n|Dymock Red|\n|Foxwhelp|\n|Hagloe Crab|\n|Hangdown|\n|Kingston Black|\n|Newtown Pippin|\n|Redstreak|\n|Roxbury Russet|\n|Slack-ma-Girdle|\n|Stoke Red|\n|Styre|\n|Tremlett's Bitter|\n|Vista Bella|\n|Winesap|\n|Yeovil Sour|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nContinent\nCountry\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Plant\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test110"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|Beaver|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nLake\nLanguage\nMammal\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mammal\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test111"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|Belted kingfisher|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nCity\nContinent\nCurrency\nFilm\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Bird\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test112"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|Black-browed albatross|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCurrency\nFilm\nGenre\nLake\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPoliticalParty\nSaint\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Bird\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test113"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|Common kingfisher|\n|Hoopoe|\n|European bee-eater|\n|European roller|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBook\nBuilding\nCompany\nContinent\nCurrency\nGenre\nLake\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test114"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|Eastern cottontail|\n|Appalachian cottontail|\n|Snowshoe hare|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBird\nBook\nCity\nCompany\nContinent\nCurrency\nFilm\nLake\nLanguage\nMayor\nMonarch\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test115"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|Eastern pipistrelle|\n|Big brown bat|\n|Evening bat|\n|Red bat|\n|Seminole bat|\n|Hoary bat|\n|Keen's myotis|\n|Small-footed myotis|\n|Northern long-eared bat|\n|Little brown myotis|\n|Indiana bat|\n|Silver-haired bat|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBuilding\nContinent\nCountry\nCurrency\nGenre\nLake\nLanguage\nMayor\nMountain\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test116"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|Eurasian coot|\n|Common moorhen|\n|Water rail|\n\n**Candidate column type:**\nAdministrativeRegion\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMayor\nMountain\nNewspaper\nPoliticalParty\nScientist\nSportsTeam\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test117"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|European honey buzzard|\n|Black-winged kite|\n|Black kite|\n|Red kite|\n|Pallas's fish eagle|\n|White-tailed eagle|\n|Lammergeier|\n|Egyptian vulture|\n|Griffon vulture|\n|Black vulture|\n|Short-toed eagle|\n|Marsh harrier|\n|Hen harrier|\n|Pallid harrier|\n|Montagu's harrier|\n|Northern goshawk|\n|Sparrowhawk|\n|Levant sparrowhawk|\n|Buzzard|\n|Long-legged buzzard|\n|Rough-legged buzzard|\n|Lesser spotted eagle|\n|Spotted eagle|\n|Steppe eagle|\n|Imperial eagle|\n|Golden eagle|\n|Booted eagle|\n\n**Candidate column type:**\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCurrency\nFilm\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Bird\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test118"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|Gannet|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nMonarch\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Bird\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test119"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Airlines|\n|---|\n|Aegean Airlines|\n|Air Bucharest|\n|Blue Air|\n|Corendon Airlines|\n|Freebird Airlines|\n|Nesma Airlines|\n|Pegasus Airlines|\n|TAROM|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nCurrency\nFilm\nLake\nLanguage\nMammal\nMonarch\nMountain\nNewspaper\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test12"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|Gray squirrel|\n|Fox squirrel|\n|Red squirrel|\n|Northern flying squirrel|\n|Southern flying squirrel|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCountry\nFilm\nGenre\nLanguage\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test120"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|Hoopoe|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nLake\nMammal\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test121"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|House mouse|\n|Norway rat|\n|Black rat|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nLake\nLanguage\nMammal\nMonarch\nMountain\nNewspaper\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mammal\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test122"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|Makira woodhen|\n|New Caledonian rail|\n|Samoan wood rail|\n|Plain-flanked rail|\n|Zapata rail|\n|Lord Howe woodhen|\n|Great Indian bustard|\n|Takah\u00c4\\u0093|\n|Bengal florican|\n|Kagu|\n|Rusty-flanked crake|\n|Slender-billed flufftail|\n|Whooping crane|\n|Okinawa rail|\n|Buff-breasted buttonquail|\n|White-winged flufftail|\n|Madagascan wood rail|\n|Junin crake|\n|Masked finfoot|\n|Talaud rail|\n|Chestnut-headed flufftail|\n|Spotted rail|\n|Streaky-breasted flufftail|\n|Bogot\u00c3\u00a1 rail|\n|Brown wood rail|\n|Hawaiian coot|\n|Lesser florican|\n|Madagascan rail|\n|Pink-legged rail|\n|Rouget's rail|\n\n**Candidate column type:**\nBaseballPlayer\nBird\nBook\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Bird\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test123"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|Mallard|\n|Common pochard|\n|Wigeon|\n|Gadwall|\n|Eurasian teal|\n|Northern shoveler|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMayor\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Bird\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test124"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|Marsh tit|\n|Willow tit|\n|Crested tit|\n|Coal tit|\n|Eurasian blue tit|\n|Azure tit|\n|Great tit|\n\n**Candidate column type:**\nAirport\nBird\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMayor\nMountain\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Bird\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test125"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|North American porcupine|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMayor\nMonarch\nMountain\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test126"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|Osprey|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nFilm\nGenre\nLake\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nSportsTeam\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Bird\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test127"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|Philippine eagle|\n|Harpy eagle|\n|Wedge-tailed eagle|\n|Steller's sea eagle|\n|Crowned eagle|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nGenre\nLake\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Bird\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test128"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|Red-legged partridge|\n|Grey partridge|\n|(Common) quail|\n|(Common) pheasant|\n|Golden pheasant|\n|Lady Amherst's pheasant|\n\n**Candidate column type:**\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Bird\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test129"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Airlines|\n|---|\n|Aeroflot operated by Aurora|\n|AirAsia X|\n|AirAsia Zest|\n|Air Busan|\n|Air Busan|\n|Air China|\n|Asiana Airlines|\n|Asiana Airlines|\n|Cebu Pacific|\n|China Airlines|\n|China Eastern Airlines|\n|China Southern Airlines|\n|Dragonair|\n|Eastar Jet|\n|Eastar Jet|\n|HK Express|\n|Japan Airlines|\n|Jeju Air|\n|Jeju Air|\n|Jin Air|\n|Jin Air|\n|Korea Express Air|\n|Korean Air|\n|Korean Air|\n|Lao Airlines|\n|Peach|\n|Philippine Airlines|\n|Shanghai Airlines|\n|Sky Wings Asia Airlines|\n|Thai Airways|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCountry\nCurrency\nFilm\nLake\nMammal\nMonarch\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test13"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|Rock vole|\n|Meadow vole|\n|Woodland vole|\n|Southern bog lemming|\n|Southern red-backed vole|\n|Muskrat|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nCity\nCountry\nFilm\nGenre\nLanguage\nMayor\nMonarch\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test130"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|Star-nosed mole|\n|Hairy-tailed mole|\n|Eastern mole|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nCity\nCompany\nContinent\nGenre\nLake\nLanguage\nMammal\nMayor\nMountain\nRadioStation\nScientist\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mammal\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test131"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|Virginia opossum|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mammal\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test132"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|West Indian whistling duck|\n|Northern shoveler|\n|White-cheeked pintail|\n|Blue-winged teal|\n|Lesser scaup|\n|Red-breasted merganser|\n|Ruddy duck|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Bird\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test133"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|White-collared swift|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nLake\nMountain\nNewspaper\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Bird\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test134"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|Woodchuck|\n|Thirteen-lined ground squirrel|\n|Eastern chipmunk|\n\n**Candidate column type:**\nAirport\nBird\nBuilding\nCompany\nContinent\nCountry\nGenre\nLake\nLanguage\nMammal\nMonarch\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mammal\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test135"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|Woodland jumping mouse|\n|Meadow jumping mouse|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nFilm\nGenre\nLake\nMammal\nMayor\nMonarch\nPlant\nPoliticalParty\nRadioStation\nSaint\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mammal\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test136"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name|\n|---|\n|Woodrat|\n|Deer mouse|\n|White-footed mouse|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nCurrency\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nPoliticalParty\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mammal\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test137"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name(s)|\n|---|\n|Alampur Baneshan|\n|Alice|\n|Almaas|\n|Alphonso|\n|Amrapali|\n|Anderson|\n|Angie|\n|Anwar Ratol|\n|Ataulfo|\n|Bailey's Marvel|\n|Banganapalli|\n|Bennet Alphonso|\n|Beverly|\n|Bombay|\n|Brahm Kai Meu|\n|Brooks|\n|Carabao (Philippine Mango)|\n|Carrie|\n|Chaunsa|\n|Chok anan|\n|Cogshall|\n|Cushman|\n|Dasheri|\n|Dot|\n|Duncan|\n|Earlygold|\n|Edward|\n|Eldon|\n|Emerald|\n|Fazli (mango)|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nCity\nContinent\nCurrency\nFilm\nGenre\nLanguage\nMayor\nMonarch\nMountain\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Plant\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test138"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common name\\\\scientific name|\n|---|\n|Emperor rat Uromys imperator [1]|\n|Guadalcanal rat Uromys porculus[2]|\n|Guam flying fox Pteropus tokudae[3]|\n|Large Palau flying fox Pteropus pilosus[4]|\n|Nendo tube-nosed fruit bat Nyctimene sanctacrucis[5]|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nGenre\nLanguage\nMammal\nMayor\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mammal\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test139"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Airlines|\n|---|\n|Air China|\n|China Eastern Airlines|\n|China Southern Airlines|\n|China United Airlines|\n|Hainan Airlines|\n|Lucky Air|\n|Tianjin Airlines|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBook\nCountry\nCurrency\nFilm\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nScientist\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test14"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Company|\n|---|\n|Banner Health|\n|Wal-Mart Stores|\n|Inc.|\n|Kroger Co.|\n|Wells Fargo & Co.|\n|Albertsons Inc.|\n|McDonald's Corp.|\n|Intel Corp.|\n|HonorHealth|\n|Circle K Corp.|\n|American Airlines|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMountain\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test140"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Constructor|\n|---|\n|McLaren-TAG|\n|Ferrari|\n|Lotus-Renault|\n|Brabham-BMW|\n|Renault|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nCompany\nContinent\nCurrency\nFilm\nGenre\nMammal\nMayor\nMonarch\nNewspaper\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"SportsTeam\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test141"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Continent|\n|---|\n|Africa|\n|North America|\n|South America|\n|Antarctica|\n|Asia|\n|Europe|\n|Oceania|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Continent\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test142"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Continent|\n|---|\n|Asia|\n|Africa|\n|South America|\n|North America|\n|Oceania|\n|Europe|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Continent\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test143"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Continent|\n|---|\n|Europe|\n|Africa|\n|North America|\n|South America|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBuilding\nCountry\nCurrency\nFilm\nLake\nLanguage\nMammal\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test144"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Continent|\n|---|\n|Europe|\n|North America|\n|Asia Pacific|\n|Latin America|\n|Africa|\n|Middle East|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nLake\nLanguage\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Continent\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test145"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Continent|\n|---|\n|Europe|\n|North America|\n|South America|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Continent\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test146"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Continent|\n|---|\n|Europe|\n|South America|\n|Africa|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nCity\nCompany\nCountry\nLake\nMammal\nMayor\nMonarch\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test147"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Continent|\n|---|\n|Europe|\n|South America|\n|North America|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Continent\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test148"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Continent|\n|---|\n|North America|\n|Europe|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nCity\nCompany\nCountry\nCurrency\nGenre\nLake\nLanguage\nMountain\nNewspaper\nPoliticalParty\nSaint\nScientist\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test149"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Airlines|\n|---|\n|Air Madagascar|\n\n**Candidate column type:**\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test15"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|Belgium|\n|France|\n|England|\n|Ireland|\n|Scotland|\n|Wales|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nMammal\nMayor\nMountain\nPoliticalParty\nScientist\nSportsTeam\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test150"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|Bulgaria|\n|Greece|\n|Romania|\n|Yugoslavia|\n|Turkey|\n|Albania|\n|Total|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nCity\nCompany\nContinent\nCountry\nCurrency\nLake\nMammal\nMayor\nMonarch\nNewspaper\nPoliticalParty\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test151"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|China|\n|United States|\n|Thailand|\n|Mexico|\n|Netherlands|\n|Germany|\n|Malaysia|\n|Singapore|\n|Czech Republic|\n|Philippines|\n|South Korea|\n|Japan|\n|Ireland|\n|United Kingdom|\n|Vietnam|\n|Taiwan|\n|Poland|\n|Hungary|\n|France|\n|Hong Kong|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nCity\nCompany\nContinent\nLake\nLanguage\nMountain\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test152"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|Germany|\n|France|\n|Italy|\n|Netherlands|\n|Sweden|\n|Belgium|\n|Hungary|\n|Czech Republic|\n|Spain|\n|Serbia|\n|United Kingdom|\n|Austria|\n|Luxembourg|\n|Switzerland|\n|DDR|\n|Norway|\n|Finland|\n|Denmark|\n|Romania|\n|Poland|\n|Portugal|\n|Russian Federation|\n|Greece|\n|Ireland|\n|Croatia|\n|Slovenia|\n|Slovakia|\n|Belarus|\n|Estonia|\n|Bosnia and Herzegovina|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nBird\nCity\nCompany\nContinent\nCurrency\nLanguage\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test153"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|United Kingdom|\n|United States|\n|Spain|\n|Russia|\n|Japan|\n|United Kingdom|\n|United States|\n|Europe|\n|United States|\n\n**Candidate column type:**\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test154"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|United States[4]|\n|Chile[5]|\n|Canada[6]|\n|Mexico[7]|\n|Argentina[8]|\n|Trinidad and Tobago[9]|\n|Colombia[10]|\n|Panama[11]|\n|Peru[12]|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCountry\nGenre\nLake\nMayor\nMonarch\nNewspaper\nPlant\nRadioStation\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test155"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|County|\n|---|\n|Adams County|\n|Alexander County|\n|Bond County|\n|Boone County|\n|Brown County|\n|Bureau County|\n|Calhoun County|\n|Carroll County|\n|Cass County|\n|Champaign County|\n|Christian County|\n|Clark County|\n|Clay County|\n|Clinton County|\n|Coles County|\n|Cook County|\n|Crawford County|\n|Cumberland County|\n|DeKalb County|\n|DeWitt County|\n|Douglas County|\n|DuPage County|\n|Edgar County|\n|Edwards County|\n|Effingham County|\n|Fayette County|\n|Ford County|\n|Franklin County|\n|Fulton County|\n|Gallatin County|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nNewspaper\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AdministrativeRegion\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test156"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|County|\n|---|\n|Adams|\n|Asotin|\n|Benton|\n|Chelan|\n|Clallam|\n|Clark|\n|Columbia|\n|Cowlitz|\n|Douglas|\n|Ferry|\n|Franklin|\n|Garfield|\n|Grant|\n|Grays Harbor|\n|Island|\n|Jefferson|\n|King|\n|Kitsap|\n|Kittitas|\n|Klickitat|\n|Lewis|\n|Lincoln|\n|Mason|\n|Okanogan|\n|Pacific|\n|Pend Oreille|\n|Pierce|\n|San Juan|\n|Skagit|\n|Skamania|\n\n**Candidate column type:**\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test157"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|County|\n|---|\n|Alachua|\n|Baker|\n|Bay|\n|Bradford|\n|Brevard|\n|Broward|\n|Calhoun|\n|Charlotte|\n|Citrus|\n|Clay|\n|Collier|\n|Columbia|\n|DeSoto|\n|Dixie|\n|Duval|\n|Escambia|\n|Flagler|\n|Franklin|\n|Gadsden|\n|Gilchrist|\n|Glades|\n|Gulf|\n|Hamilton|\n|Hardee|\n|Hendry|\n|Hernando|\n|Highlands|\n|Hillsborough|\n|Holmes|\n|Indian River|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBook\nBuilding\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test158"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|County|\n|---|\n|Anne Arundel|\n|Baltimore County|\n|Caroline|\n|Cecil|\n|Charles|\n|Dorchester|\n|Howard|\n|Kent|\n|Montgomery|\n|Prince George's|\n|Queen Anne's|\n|St. Mary's|\n|Somerset|\n|Talbot|\n|Wicomico|\n|Worcester|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nContinent\nCountry\nLake\nMammal\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AdministrativeRegion\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test159"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Airlines|\n|---|\n|Allegiant Air|\n|American Eagle|\n|Delta Air Lines|\n|Delta Connection|\n|United Express|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBook\nCity\nCompany\nContinent\nCountry\nFilm\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test16"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|County|\n|---|\n|Blekinge|\n|Dalarna|\n|Gotland|\n|G\u00c3\u00a4vleborg|\n|Halland|\n|J\u00c3\u00a4mtland|\n|J\u00c3\u00b6nk\u00c3\u00b6ping|\n|Kalmar|\n|Kronoberg|\n|Norrbotten|\n|Sk\u00c3\u00a5ne|\n|Stockholm|\n|S\u00c3\u00b6dermanland|\n|Uppsala|\n|V\u00c3\u00a4rmland|\n|V\u00c3\u00a4sterbotten|\n|V\u00c3\u00a4sternorrland|\n|V\u00c3\u00a4stmanland|\n|V\u00c3\u00a4stra G\u00c3\u00b6taland|\n|\u00c3\\u0096rebro|\n|\u00c3\\u0096sterg\u00c3\u00b6tland|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMayor\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AdministrativeRegion\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test160"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|County|\n|---|\n|Catawba County|\n|Chesterfield County|\n|Alexander County|\n|Anson County|\n|Total for Alexander|\n|Anson|\n|Catawba|\n|and Chesterfield counties|\n|Total for entire Charlotte region|\n\n**Candidate column type:**\nAirport\nBaseballPlayer\nBird\nBook\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nPlant\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test161"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|County|\n|---|\n|Jefferson|\n|St. Clair|\n|Bryan|\n|De Kalb|\n|Liberty|\n|Long|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AdministrativeRegion\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test162"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|County|\n|---|\n|Osijek-Baranja|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nFilm\nGenre\nLake\nLanguage\nMayor\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AdministrativeRegion\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test163"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Crop|\n|---|\n|Miscanthus|\n|Switchgrass|\n|Poplar|\n|Sugar cane|\n|Sweet sorghum|\n|Corn|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nCity\nCompany\nContinent\nCountry\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nPlant\nSaint\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Plant\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test164"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Currency|\n|---|\n|Austrian schilling|\n|Belgian franc|\n|Cypriot pound|\n|Dutch guilder|\n|Estonian kroon|\n|Finnish markka|\n|French franc|\n|German mark|\n|Greek drachma|\n|Irish pound|\n|Italian lira|\n|Latvian lats|\n|Lithuanian litas|\n|Luxembourgish franc|\n|Maltese lira|\n|Mon\u00c3\u00a9gasque franc|\n|Portuguese escudo|\n|Sammarinese lira|\n|Slovak koruna|\n|Slovenian tolar|\n|Spanish peseta|\n|Vatican lira|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCountry\nCurrency\nFilm\nGenre\nMammal\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Currency\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test165"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Currency|\n|---|\n|Austrian schilling|\n|Belgian franc|\n|Cypriot pound|\n|Estonian kroon|\n|Finnish markka|\n|French franc|\n|German mark|\n|Greek drachma|\n|Irish pound|\n|Italian lira|\n|Latvian lats|\n|Lithuanian litas|\n|Luxembourgish franc|\n|Maltese lira|\n|Mon\u00c3\u00a9gasque franc|\n|Dutch guilder|\n|Portuguese escudo|\n|Slovenian tolar|\n|Slovak koruna|\n|Spanish peseta|\n|Sammarinese lira|\n|Vatican lira|\n\n**Candidate column type:**\nAdministrativeRegion\nBird\nBook\nBuilding\nCompany\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Currency\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test166"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Currency|\n|---|\n|Belgian franc|\n|Belgian franc|\n|Bohemian and Moravian koruna|\n|Bulgarian lev|\n|Danish krone|\n|French franc|\n|Italian lira|\n|Luxembourg franc|\n|Luxembourg franc|\n|Dutch Guilder|\n|Dutch Guilder|\n|Norwegian krone|\n|Norwegian krone|\n|Polish z\u00c5\\u0082oty|\n|Pound sterling (Channel Islands)|\n|Independent State of Croatia kuna|\n|Slovak koruna|\n|Slovak koruna|\n|Ukrainian karbovanets|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nLake\nMayor\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Currency\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test167"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Currency|\n|---|\n|CFA franc|\n|CFP franc|\n|East Caribbean dollar|\n|Euro|\n|Hong Kong dollar|\n|Singapore dollar Brunei dollar|\n|Armenian dram|\n|Australian dollar|\n|Pound sterling|\n|Indian rupee|\n|New Zealand dollar|\n|Israeli new sheqel|\n|Jordanian dinar[citation needed]|\n|Russian ruble|\n|South African rand|\n|Swiss franc|\n|Turkish lira|\n|United States dollar|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nLake\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Currency\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test168"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Currency|\n|---|\n|Thai baht|\n|Indonesian rupiah|\n|Philippine peso|\n|Malaysian ringgit|\n|South Korean won|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nLake\nLanguage\nMammal\nMountain\nNewspaper\nPlant\nRadioStation\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test169"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Airlines|\n|---|\n|Auric Air|\n|Coastal Aviation|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nLake\nMammal\nMayor\nMonarch\nPlant\nPoliticalParty\nSaint\nScientist\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test17"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Currency|\n|---|\n|United Arab Emirates dirham|\n|Afghan afghani|\n|Albanian lek|\n|Armenian dram|\n|Netherlands Antillean guilder|\n|Angolan kwanza|\n|Argentine peso|\n|Australian dollar|\n|Aruban florin|\n|Azerbaijani manat|\n|Bosnia and Herzegovina convertible mark|\n|Barbados dollar|\n|Bangladeshi taka|\n|Bulgarian lev|\n|Bahraini dinar|\n|Burundian franc|\n|Bermudian dollar|\n|Brunei dollar|\n|Boliviano|\n|Bolivian Mvdol (funds code)|\n|Brazilian real|\n|Bahamian dollar|\n|Bhutanese ngultrum|\n|Botswana pula|\n|Belarusian ruble|\n|Belize dollar|\n|Canadian dollar|\n|Congolese franc|\n|WIR Euro (complementary currency)|\n|Swiss franc|\n\n**Candidate column type:**\nAdministrativeRegion\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nLake\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test170"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Currency|\n|---|\n|\u00e2\\u0080\\u0089United States dollar|\n|\u00e2\\u0080\\u0089Euro|\n|\u00e2\\u0080\\u0089Japanese yen|\n|\u00e2\\u0080\\u0089Pound sterling|\n|\u00e2\\u0080\\u0089Australian dollar|\n|\u00e2\\u0080\\u0089Swiss franc|\n|\u00e2\\u0080\\u0089Canadian dollar|\n|\u00e2\\u0080\\u0089Mexican peso|\n|\u00e2\\u0080\\u0089Chinese yuan|\n|\u00e2\\u0080\\u0089New Zealand dollar|\n|\u00e2\\u0080\\u0089Swedish krona|\n|\u00e2\\u0080\\u0089Russian ruble|\n|\u00e2\\u0080\\u0089Hong Kong dollar|\n|Norwegian krone|\n|\u00e2\\u0080\\u0089Singapore dollar|\n|\u00e2\\u0080\\u0089Turkish lira|\n|South Korean won|\n|South African rand|\n|Brazilian real|\n|Indian rupee|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Currency\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test171"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Currency|\n|---|\n|\u00e2\\u0080\\u0089United States dollar|\n|\u00e2\\u0080\\u0089Euro|\n|\u00e2\\u0080\\u0089Japanese yen|\n|\u00e2\\u0080\\u0089Pound sterling|\n|\u00e2\\u0080\\u0089Swiss franc|\n|\u00e2\\u0080\\u0089Canadian dollar|\n|\u00e2\\u0080\\u0089Australian dollar|\n|\u00e2\\u0080\\u0089Mexican peso|\n|\u00e2\\u0080\\u0089Chinese yuan|\n|\u00e2\\u0080\\u0089New Zealand dollar|\n|\u00e2\\u0080\\u0089Swedish krona|\n|\u00e2\\u0080\\u0089Russian ruble|\n|\u00e2\\u0080\\u0089Hong Kong dollar|\n|Norwegian krone|\n|\u00e2\\u0080\\u0089Singapore dollar|\n|\u00e2\\u0080\\u0089Turkish lira|\n|South Korean won|\n|South African rand|\n|Brazilian real|\n|Indian rupee|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Currency\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test172"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Daily Mirror|\n|---|\n|The Sunday Times|\n|The Guardian|\n|The Sunday Telegraph|\n|The Economist|\n|Evening Standard|\n|Daily Mail|\n|The Sun|\n|City AM|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Newspaper\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test173"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Dance\\\/Song|\n|---|\n|Dance\\\/Song|\n|Cha-Cha-Cha\\\/ \\A Little Less Conversation\\\"\"|\n|Quickstep\\\/ \\99 Red Balloons\\\"\"|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nMammal\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Genre\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test174"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Dance\\\/Song|\n|---|\n|Dance\\\/Song|\n|Cha-Cha-Cha\\\/ \\I Like It\\\"\"|\n|Quickstep\\\/ \\If My Friends Could See Me Now\\\"\"|\n|Jive\\\/ \\Do You Love Me\\\"\"|\n|Foxtrot\\\/ \\Why Don't You Do Right\\\"\"|\n|Samba\\\/ \\For Once in My Life\\\" Group Salsa\\\/ \\\"Rhythm Is Gonna Get You\\\"\"|\n|Paso Doble\\\/ \\Espana Cani\\\" Group Viennese Waltz\\\/ \\\"Fallin'\\\"\"|\n|Tango\\\/ \\One Way or Another\\\" Rumba\\\/ \\\"Un-Break My Heart\\\"\"|\n|Foxtrot\\\/ \\Why Don't You Do Right\\\" Freestyle\\\/ \\\"Celebration\\\" Cha-Cha-Cha\\\/ \\\"Think\\\"\"|\n\n**Candidate column type:**\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMonarch\nNewspaper\nPlant\nRadioStation\nSaint\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Genre\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test175"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Dance\\\/Song|\n|---|\n|Dance\\\/Song|\n|Contemporary \\\/ \\Burn\\\"\"|\n|Rumba \\\/ \\Say Something\\\"\"|\n|Jive \\\/ \\Blue Suede Shoes\\\"\"|\n|Quickstep \\\/ \\The Ballroom Blitz\\\"\"|\n|Samba \\\/ \\Under the Sea\\\"\"|\n|Cha-Cha-Cha \\\/ \\I Love It\\\"\"|\n|Argentine Tango \\\/ \\1977\\\" Team Freestyle \\\/ \\\"Livin' la Vida Loca\\\"\"|\n|Foxtrot \\\/ \\That's It|\n|Viennese Waltz \\\/ \\If I Knew\\\" Jazz \\\/ \\\"Nasty\\\"\"|\n|Quickstep \\\/ \\Umbrella\\\" Freestyle \\\/ \\\"Canned Heat\\\" Samba & Quickstep Fusion \\\/ \\\"Sir Duke\\\"\"|\n\n**Candidate column type:**\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nSportsTeam\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Genre\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test176"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Dance\\\/Song|\n|---|\n|Dance\\\/Song|\n|Contemporary\\\/ \\Burn\\\"\"|\n|Rumba \\\/ \\Say Something\\\"\"|\n|Jive \\\/ \\Blue Suede Shoes\\\"\"|\n|Quickstep \\\/ \\The Ballroom Blitz\\\"\"|\n|Samba \\\/ \\Under the Sea\\\"\"|\n|Cha-cha-cha \\\/ \\I Love It\\\"\"|\n|Argentine tango \\\/\\1977\\\" Team freestyle \\\/ \\\"Livin' la Vida Loca\\\"\"|\n|Foxtrot \\\/ \\That's It|\n|Viennese Waltz \\\/ \\If I Knew\\\" Jazz \\\/ \\\"Nasty\\\"\"|\n|Quickstep \\\/ \\Umbrella\\\" Freestyle \\\/ \\\"Canned Heat\\\" Samba & quickstep Fusion \\\/ \\\"Sir Duke\\\"\"|\n|was paired with Tony Dovolani 3Score from guest judge Julianne Hough 4Score from guest judge Donny Osmond 5Score from guest judge Redfoo 6Scores from guest judge Ricky Martin 7Score from guest judge Abby Lee Miller 8Score from guest judge Kenny Ortega\"|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nLake\nLanguage\nMayor\nMonarch\nMountain\nPlant\nPoliticalParty\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Genre\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test177"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Dance\\\/Song|\n|---|\n|Dance\\\/Song|\n|Foxtrot\\\/ \\(Up A) Lazy River\\\"\"|\n|Mambo\\\/ \\I Got a Girl\\\"\"|\n|Tango\\\/ \\Jalousie\\\"\"|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Genre\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test178"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Dance\\\/Song|\n|---|\n|Dance\\\/Song|\n|Foxtrot\\\/ \\That's Life\\\" Salsa relay\\\/ \\\"Get Busy\\\"\"|\n|Tango\\\/\\Seven Nation Army\\\"\"|\n|Samba\\\/\\Mas Que Nada\\\"\"|\n|Two-Step\\\/\\Boot Scootin' Boogie\\\"\"|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Genre\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test179"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Airlines|\n|---|\n|Beijing Capital Airlines|\n|China Eastern Airlines|\n|Kunming Airlines|\n|Lucky Air|\n|Ruili Airlines|\n|Sichuan Airlines|\n\n**Candidate column type:**\nAcademicJournal\nBird\nBuilding\nCompany\nContinent\nCountry\nCurrency\nGenre\nLake\nLanguage\nMammal\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test18"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Dance\\\/Song|\n|---|\n|Dance\\\/Song|\n|Viennese Waltz \\\/ \\Breakaway\\\"\"|\n|Jive \\\/ \\Jump|\n|Rumba \\\/ \\If You're Reading This\\\"\"|\n|Foxtrot \\\/ \\Theme from The Pink Panther\\\"\"|\n|Samba \\\/ \\Conga\\\"\"|\n|Quickstep \\\/ \\Hot Honey Rag\\\" Group Broadway Dance \\\/ \\\"Big Spender\\\" & \\\"Money Money\\\"\"|\n|Tango \\\/ \\Theme from Ghostbusters\\\"\"|\n|Team Tango \\\/ \\Disturbia\\\"\"|\n|Waltz \\\/ \\What the World Needs Now\\\"\"|\n|Instant Jive \\\/ \\Tutti Frutti\\\"\"|\n|Paso Doble \\\/ \\Theme from The Legend of Zorro\\\"\"|\n|Argentine Tango \\\/ \\Bust Your Windows\\\"\"|\n|Cha-cha-cha Relay \\\/ \\I Like How It Feels\\\"\"|\n|Cha-cha-cha \\\/ \\Let's Get Loud\\\"\"|\n|Freestyle \\\/ \\Whine Up\\\"\"|\n|Jive \\\/ \\Jump|\n|Instant Samba \\\/ \\Shake Your Bon-Bon\\\"\"|\n\n**Candidate column type:**\nAdministrativeRegion\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nGenre\nLanguage\nMammal\nMayor\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Genre\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test180"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Dance\\\/Song|\n|---|\n|Dance\\\/Song|\n|Viennese Waltz\\\/\\I'll Be\\\"\"|\n|Jive\\\/\\Best Damn Thing\\\"\"|\n|Quickstep\\\/\\Hot Honey Rag\\\"\"|\n|Tango\\\/\\Wait a Minute\\\"\"|\n|Rumba\\\/\\I Don't Want to Miss a Thing\\\"\"|\n|Samba\\\/\\Hey Mama\\\" Swing\\\/\\\"In the Mood\\\"\"|\n|Argentine Tango\\\/\\Bust Your Windows\\\" Team Cha-Cha-Cha\\\/\\\"Holiday\\\"\"|\n|Waltz\\\/\\Open Arms\\\" Futuristic Cha-Cha-Cha\\\/\\\"Bulletproof\\\"\"|\n|Foxtrot\\\/\\I've Got the World on a String\\\" Paso Doble\\\/\\\"Bring Me to Life\\\"\"|\n|Viennese Waltz\\\/\\Piano Man\\\" Freestyle\\\/\\\"Footloose\\\" Argentine Tango\\\/\\\"Bust Your Windows\\\" Quickstep\\\/\\\"I Want You To Want Me\\\"\"|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Genre\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test181"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Delegate|\n|---|\n|Holland|\n|Sweden|\n|Poland|\n|Mexico|\n|USA|\n|Germany|\n|Venezuela|\n|Finland|\n|Jamaica|\n|Chile|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nCompany\nContinent\nCurrency\nFilm\nLanguage\nMammal\nMayor\nNewspaper\nPlant\nPoliticalParty\nSaint\nSportsTeam\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test182"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Description|\n|---|\n|Spitzer Berg|\n|Rehhecke|\n|Assberg|\n|Rauhh\u00c3\u00bcgel|\n|Mittelberg|\n|Hahnberg|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMonarch\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test183"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Digital gold currency|\n|---|\n|e-dinar|\n|Pecunix|\n|iGolder|\n|Liberty Reserve|\n|gbullion|\n|e-gold|\n|eCache|\n|Gold Bullion International LLC|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMayor\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Currency\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test184"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Employer|\n|---|\n|Harvard University|\n|Massachusetts Institute of Technology|\n|City of Cambridge|\n|Novartis Institutes for BioMedical Research|\n|Biogen Idec|\n|Mount Auburn Hospital|\n|Cambridge Health Alliance|\n|Genzyme|\n|Cambridge Innovation Center|\n|Akamai Technologies|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nLake\nMammal\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test185"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Engine|\n|---|\n|Honda|\n|Honda|\n|Honda|\n|Chevrolet|\n|Chevrolet|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCountry\nGenre\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test186"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|English Name|\n|---|\n|Qinghai Lake|\n|Namtso|\n|Siling Lake|\n|Ulungur Lake|\n|Yamdrok Lake|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBook\nCity\nCompany\nContinent\nCountry\nGenre\nLake\nLanguage\nMonarch\nMountain\nNewspaper\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Lake\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test187"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|English name|\n|---|\n|Baden|\n|Bayreuth|\n|D\u00c3\u00bcsseldorf|\n|East Prussia|\n|Eastern Hanover|\n|Electoral Hesse|\n|Cologne-Aix-la-Chapelle|\n|Essen|\n|Franconia|\n|Greater Berlin|\n|Halle-Merseburg|\n|Hamburg|\n|Hesse-Nassau|\n|Koblenz-Trier|\n|Magdeburg-Anhalt|\n|Main-Franconia|\n|March of Brandenburg|\n|Mecklenburg|\n|Munich-Upper Bavaria|\n|Pomerania|\n|Saar-Palatinate|\n|Saxony|\n|Silesia|\n|Schleswig-Holstein|\n|Southern Hanover-Brunswick|\n|Swabia|\n|Thuringia|\n|Weser-Ems|\n|Westphalia-North|\n|Westphalia-South|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nCountry\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AdministrativeRegion\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test188"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Establishment|\n|---|\n|Luoyuan Academy (Chinese: \u00e6\u00b3\u00ba\u00e6\u00ba\\u0090\u00e4\u00b9\u00a6\u00e9\\u0099\u00a2; pinyin: Luoyu\u00c3\u00a1n Sh\u00c5\u00abyu\u00c3 n)|\n|Tengchow College of Liberal Arts (Chinese: \u00e7\\u0099\u00bb\u00e5\u00b7\\u009E\u00e6\\u0096\\u0087\u00e4\u00bc\\u009A\u00e9\u00a6\\u0086; pinyin: D\u00c4\\u0093ngzh\u00c5\\u008Du W\u00c3\u00a9nhu\u00c3\u00ac Gu\u00c7\\u008En)|\n|Tsingchow Boy\u00e2\\u0080\\u0099s Boarding School (Chinese: \u00e5\u00bb\u00a3\u00e5\u00be\u00b7\u00e6\\u009B\u00b8\u00e9\\u0099\u00a2; pinyin: Gu\u00c7\\u008Engd\u00c3\u00a9 Sh\u00c5\u00abyu\u00c3 n)|\n|Arts College at Weixian Chinese: \u00e6\u00bd\\u008D\u00e5\\u008E\u00bf\u00e5\u00b9\u00bf\u00e6\\u0096\\u0087\u00e5\u00ad\u00a6\u00e5 \\u0082; pinyin: W\u00c3\u00a9ixi\u00c3 n Gu\u00c7\\u008Engw\u00c3\u00a9n Xu\u00c3\u00a9t\u00c3\u00a1ng|\n|Theological College at Qingzhou Chinese: \u00e9\\u009D\\u0092\u00e5\u00b7\\u009E\u00e5 \u00b1\u00e5\\u0090\\u0088\u00e7\u00a5\\u009E\u00e9\\u0081\\u0093\u00e5\u00ad\u00a6\u00e5 \\u0082; pinyin: Q\u00c4\u00abngzh\u00c5\\u008Du G\u00c3\u00b2ngh\u00c3\u00a9 Sh\u00c3\u00a9nd\u00c3 o Xu\u00c3\u00a9t\u00c3\u00a1ng|\n|Medical College Chinese: \u00e6\u00b5\\u008E\u00e5\\u008D\\u0097\u00e5 \u00b1\u00e5\\u0090\\u0088\u00e5\\u008C\u00bb\u00e9\\u0081\\u0093\u00e5\u00ad\u00a6\u00e5 \\u0082; pinyin: J\u00c3\u00acn\u00c3\u00a1n G\u00c3\u00b2ngh\u00c3\u00a9 Y\u00c4\u00abd\u00c3 o Xu\u00c3\u00a9t\u00c3\u00a1ng|\n|Shandong Imperial University (Chinese: \u00e5\u00b1\u00b1\u00e4\u00b8\\u009C\u00e5\u00a4\u00a7\u00e5\u00ad\u00a6\u00e5 \\u0082; pinyin: Sh\u00c4\\u0081nd\u00c5\\u008Dng D\u00c3 xu\u00c3\u00a9 T\u00c3\u00a1ng)|\n|Shandong Institution of Higher Learning (Chinese: \u00e5\u00b1\u00b1\u00e4\u00b8\\u009C\u00e9\u00ab\\u0098\u00e7\u00ad\\u0089\u00e5\u00ad\u00a6\u00e5 \\u0082; pinyin: Sh\u00c4\\u0081nd\u00c5\\u008Dng G\u00c4\\u0081od\u00c4\\u009Bng Xu\u00c3\u00a9t\u00c3\u00a1ng)|\n|Cheeloo University\\\/Shantung Protestant University (later renamed to Shantung Christian University|\n|Chinese: \u00e9\u00bd\\u0090\u00e9\u00b2\\u0081\u00e5\u00a4\u00a7\u00e5\u00ad\u00a6; pinyin: Q\u00c3\u00adl\u00c5\u00ad D\u00c3 xu\u00c3\u00a9)|\n|Advanced School of Special Sciences of a Special Type (Hochschule f\u00c3\u00bcr Spezialwissenschaften mit besonderem Charakter|\n|Chinese: \u00e7\\u0089\u00b9\u00e5\\u0088\u00ab\u00e9\u00ab\\u0098\u00e7\u00ad\\u0089\u00e4\u00b8\\u0093\u00e9\\u0097\u00a8\u00e5\u00ad\u00a6\u00e5 \\u0082; pinyin: T\u00c3\u00a8bi\u00c3\u00a9 G\u00c4\\u0081od\u00c4\\u009Bng Zhu\u00c4\\u0081nm\u00c3\u00a9n Xu\u00c3\u00a9t\u00c3\u00a1ng)|\n|School of Higher Learning (Chinese: \u00e5\u00b1\u00b1\u00e4\u00b8\\u009C\u00e9\u00ab\\u0098\u00e7\u00ad\\u0089\u00e5\u00ad\u00a6\u00e6 \u00a1; pinyin: Sh\u00c4\\u0081nd\u00c5\\u008Dng G\u00c4\\u0081od\u00c4\\u009Bng Xu\u00c3\u00a9xi\u00c3 o)|\n|Shandong Provincial Law and Politics College|\n|Shandong Provincial Industrial College|\n|Shandong Provincial Commercial College|\n|Shandong Provincial Medical College|\n|Shandong Provincial College of Mineralogy|\n|Qingdao University|\n|Shandong Provincial University (Chinese: \u00e7\\u009C\\u0081\u00e7\u00ab\\u008B\u00e5\u00b1\u00b1\u00e4\u00b8\\u009C\u00e5\u00a4\u00a7\u00e5\u00ad\u00a6; pinyin: Sh\u00c4\\u009Bngl\u00c3\u00ac Sh\u00c4\\u0081nd\u00c5\\u008Dng D\u00c3 xu\u00c3\u00a9)|\n|National Shandong University (simplified Chinese: \u00e5\\u009B\u00bd\u00e7\u00ab\\u008B\u00e5\u00b1\u00b1\u00e4\u00b8\\u009C\u00e5\u00a4\u00a7\u00e5\u00ad\u00a6; traditional Chinese: \u00e5\\u009C\\u008B\u00e7\u00ab\\u008B\u00e5\u00b1\u00b1\u00e6\\u009D\u00b1\u00e5\u00a4\u00a7\u00e5\u00ad\u00b8; pinyin: Gu\u00c3\u00b3l\u00c3\u00ac Sh\u00c4\\u0081nd\u00c5\\u008Dng D\u00c3 xu\u00c3\u00a9)|\n|University Property Protection Committee of National Shandong University|\n|Huazhong Construction University|\n|Linyi Shandong University|\n|National Shandong University|\n|Huadong (East China) University (Chinese: \u00e5\\u008D\\u008E\u00e4\u00b8\\u009C\u00e5\u00a4\u00a7\u00e5\u00ad\u00a6; pinyin: Hu\u00c3\u00a1d\u00c5\\u008Dng D\u00c3 xu\u00c3\u00a9)|\n|Shandong University|\n|Qingdao Medical College|\n|Shandong College of Oceanography (now Ocean University of China|\n|Qingdao)|\n\n**Candidate column type:**\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"University\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test189"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Airlines|\n|---|\n|China Southern Airlines|\n|Tianjin Airlines|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nMayor\nMonarch\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test19"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Euro|\n|---|\n|Japanese yen|\n|Pound sterling|\n|Canadian dollar|\n|Swedish krona|\n|Swiss franc|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nLake\nLanguage\nMammal\nMonarch\nNewspaper\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Currency\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test190"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Event|\n|---|\n|Ole Devil|\n|Civil War|\n|Floating Outfit|\n|Waco series|\n|Calamity Jane|\n|Waxahachie Smith|\n|Alvin Fog|\n|Rockabye County|\n|Bunduki|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nLake\nMammal\nMonarch\nMountain\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test191"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Fiction work(s)|\n|---|\n|A Painted Devil (1966)|\n|Thomas P. Cullinan|\n|A Painted House (2001)|\n|John Grisham|\n|The Painted Veil (1925)|\n|W. Somerset Maugham|\n|Pan Wolodyjowski (Fire in the Steppe) (1888)|\n|Henryk Sienkiewicz|\n|Parineeta (1914)|\n|Sharat Chandra Chattopadhyay|\n|Paris Blues (1957)|\n|Harold Flender|\n|Les Particules \u00c3\\u0089l\u00c3\u00a9mentaires (1998) (a.k.a. Atomised)|\n|Michel Houellebecq|\n|Pas\u00c3\u00b3 por aqu\u00c3\u00ad (Once in the Saddle) (1947)|\n|Eugene Manlove Rhodes|\n|A Passage to India (1924)|\n|E. M. Forster|\n|Patriot Games (1987)|\n|Tom Clancy|\n|The Peacock Spring (1975)|\n|Rumer Godden|\n|The Pelican Brief (1992)|\n|John Grisham|\n|The Penal Colony (1987)|\n|Richard Herley|\n|The People That Time Forgot (1918)|\n|Edgar Rice Burroughs|\n|Percy Jackson & the Olympians (2005\u00e2\\u0080\\u00932009) (series)|\n|Rick Riordan The Lightning Thief (2005) * The Sea of Monsters (2006)|\n\n**Candidate column type:**\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMayor\nMonarch\nPlant\nRadioStation\nSaint\nScientist\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test192"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Film Title|\n|---|\n|Sri Srinivasa Kalyana|\n|Daari Tappida Maga|\n|Chiranjeevi Sudhakara|\n|Nanjundi Kalyana|\n|Gajapathi Garvabhanga|\n|Aasegobba Meesegobba|\n|Anukoolakkobba Ganda|\n|Kalyana Mantapa|\n|Sutradhara|\n|Bharjari Gandu|\n|Anuraagada Alegalu|\n|Navibbaru Namagibbaru|\n|Sagara Deepa|\n|Aata Hudugaata|\n|Ibbara Naduve Muddina Aata|\n|Srimathi Kalyana|\n|Geluvina Saradaara|\n|Shivaranjini|\n|Tuvvi Tuvvi Tuvvi|\n|Swasthik|\n|Pakkadmane Hudugi|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBird\nBook\nBuilding\nCompany\nContinent\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test193"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Film|\n|---|\n|Adventure|\n|The Pony Express|\n|No Father to Guide Him|\n|Lord Jim|\n|Old Ironsides|\n|Hula|\n|Isle of Sunken Gold|\n|Woman Wise|\n|The Rescue|\n|Where East Is East|\n|Girl of the Port|\n|Isle of Escape|\n|Around the World with Douglas Fairbanks|\n|The Black Camel|\n|Wake of the Red Witch|\n|Mister Roberts|\n|This Is Your Life|\n|Free and Easy|\n|Surfari|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nCity\nCompany\nCurrency\nFilm\nLanguage\nMammal\nMayor\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test194"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Film|\n|---|\n|Audrey Rose|\n|Harper Valley PTA|\n|Featherstone's Nest|\n|Burned at the Stake|\n|The Six of Us|\n|A Killer in the Family|\n|Halloween: The Curse of Michael Myers|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nCountry\nCurrency\nLake\nLanguage\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test195"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Film|\n|---|\n|Badkonake sefid (The White Balloon)|\n|Mosafere jonoub (fa)|\n|Yek rooz bishtar (fa) (One More Day)|\n|Najva (fa) (Whispers)|\n|Nafas-e amigh (Deep Breath)|\n|Tehran saat-e 7 sobh (Tehran 7:00 a.m.)|\n|Be ahestegi... (fa) (Gradually...)|\n|Ayar 14 (fa) (Karat 14)|\n|Darband (fa) (Trapped)|\n\n**Candidate column type:**\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCurrency\nFilm\nLake\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test196"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Film|\n|---|\n|Equity|\n|Farah Goes Bang|\n|Mark in Argentina|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBird\nBuilding\nCompany\nCountry\nCurrency\nFilm\nLake\nLanguage\nMammal\nMonarch\nNewspaper\nPlant\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test197"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Film|\n|---|\n|Frost\\\/Nixon|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBird\nBook\nCity\nCompany\nContinent\nCountry\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPoliticalParty\nScientist\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test198"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Film|\n|---|\n|Gone with the Wind|\n|Dark Victory|\n|Goodbye|\n|Mr. Chips|\n|Love Affair|\n|Mr. Smith Goes to Washington|\n|Ninotchka|\n|Of Mice and Men|\n|Stagecoach|\n|The Wizard of Oz|\n|Wuthering Heights|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBook\nBuilding\nCompany\nContinent\nCurrency\nGenre\nLake\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPoliticalParty\nSaint\nScientist\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test199"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|California|\n|Florida|\n|Illinois|\n|Louisiana|\n|Pennsylvania|\n|South Carolina|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AdministrativeRegion\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test2"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Airlines|\n|---|\n|Nok Air|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test20"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Film|\n|---|\n|Mudalali|\n|Paanjali|\n|Naalu Veli Nilam|\n|Thamarai Kulam|\n|Odi Viliyadu Paapa|\n|Panithirai|\n|Idayathil Nee|\n|Poojaikku Vandha Malar|\n|Magane Kel|\n|Then Mazhai|\n|Ninaivil Nindraval|\n|Bommalattam|\n|Ayiram Poi|\n|Nirai Kudam|\n|Arunodhayam|\n|Thava Pudhalvan|\n|Suryakanthi|\n|Anbai Thedi|\n|Cinema Paithiyam|\n|Andharangam|\n|Perum Pugazhum|\n|Balaparitchai|\n|Andaman Kadhali|\n|Imayam|\n|Sri Ramajayam|\n|Avan Aval Adhu|\n|Polladhavan|\n|Keezh Vaanam Sivakkum|\n|Simla Special|\n|Paritchaikku Neramaachu|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nScientist\nSportsTeam\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test200"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Film|\n|---|\n|Star Wars[129]|\n|The Empire Strikes Back[130]|\n|Return of the Jedi[131]|\n|Original Star Wars trilogy total|\n|Episode I: The Phantom Menace[132]|\n|Episode II: Attack of the Clones[133]|\n|Episode III: Revenge of the Sith[134]|\n|Prequel Star Wars trilogy total|\n|Star Wars: The Clone Wars[135]|\n|Star Wars: The Force Awakens|\n|All Star Wars films total|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nCity\nContinent\nCountry\nCurrency\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nRadioStation\nSaint\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test201"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Film|\n|---|\n|The Boy Who Was a King|\n|Armadillo|\n|Last Train Home|\n|Unmistaken Child|\n|Up the Yangtze|\n|The Rape of Europa|\n|Taimagura Grandma|\n|Parallel Lines|\n|Long Gone|\n|The Boys of Second Street Park|\n|Company Jasmine|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nBird\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test202"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Film|\n|---|\n|The Lord of the Rings: The Return of the King|\n|Master and Commander: The Far Side of the World|\n|Mystic River|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nCompany\nContinent\nCurrency\nFilm\nGenre\nLake\nMammal\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test203"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Final host|\n|---|\n|Salamanca|\n|Ponferrada|\n|Villaralbo|\n|Miranda de Ebro|\n|Palencia|\n\n**Candidate column type:**\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nLake\nMammal\nMayor\nMonarch\nNewspaper\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test204"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|First used for|\n|---|\n|The Super Spy (1990)|\n|Hovertank 3D (1990)|\n|Catacomb 3D (1991)|\n|Gun Buster (1992)|\n|Wolfenstein 3D (1992)|\n|Ultima Underworld (1992)|\n|Ken's Labyrinth (1993)|\n|Lethal Tender (1993)|\n|Doom (1993)|\n|Marathon (1994)|\n|Marathon 2: Durandal (1995)|\n|Star Wars: Dark Forces (1995)|\n|Witchaven (1995)|\n|Gloom (1995)|\n|Alien Breed 3D (1995)|\n|Alien Breed 3D II: The Killing Grounds (1996)|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nLanguage\nMammal\nMayor\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"VideoGame\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test205"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Following station|\n|---|\n|Glasgow and South Western Railway Line Name|\n|Caledonian Railway Line Name|\n|Caledonian and Glasgow & South Western Railways Line Name|\n|British Rail Line Name|\n|London|\n|Midland and Scottish Railway Line Name|\n|London and North Eastern Railway Line Name|\n|North British Railway Line Name|\n|Caledonian and North British Railways Line Name|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nGenre\nLake\nLanguage\nMammal\nMayor\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test206"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|From|\n|---|\n|City of London (Holborn Circus)|\n|City of London (near St. Paul's Cathedral)|\n|Central London (near Marble Arch)|\n|Kegworth|\n|M40 motorway Junction 10 north of Bicester|\n|Oxford|\n|Birmingham|\n|Bath|\n|Leicester|\n|Highnam near Gloucester|\n|Ross-on-Wye|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCompany\nCountry\nCurrency\nFilm\nMammal\nMayor\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test207"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Game Title|\n|---|\n|1112 episode 3|\n|2020: My Country|\n|Age of Champions|\n|Alan Wake|\n|CityVille|\n|CastleVille|\n|Deadfall Adventures|\n|Dear Esther|\n|Demon's Souls|\n|Eufloria|\n|Gran Turismo PSP|\n|Great Edo of Nippon|\n|Half-Minute Hero|\n|Harvest Moon: Tree of Tranquility|\n|Hidden Chronicles|\n|Joe Danger|\n|Kingdom Conquest|\n|Kingdom Conquest 2|\n|King of Fighters XIII|\n|Deca Sports Extreme|\n|La-Mulana|\n|LittleBigPlanet|\n|Little King's Story|\n|My Country|\n|Mystery Manor|\n|New Little King's Story|\n|No More Heroes|\n|Painkiller|\n|Rune Factory 2: A Fantasy Harvest Moon|\n|Shufflepuck Cantina|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nCompany\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMountain\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test208"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Game|\n|---|\n|BioShock|\n|Fallout 3[160]|\n|Batman: Arkham Asylum[161]|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nCompany\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test209"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Airport Name|\n|---|\n|Airport Name|\n|John F. Kennedy International Airport|\n|Miami International Airport|\n|Los Angeles International Airport|\n|Newark Liberty International Airport|\n|O'Hare International Airport|\n|Hartsfield\u00e2\\u0080\\u0093Jackson Atlanta International Airport|\n|San Francisco International Airport|\n|George Bush Intercontinental Airport|\n|Washington Dulles International Airport|\n|Dallas\\\/Fort Worth International Airport|\n\n**Candidate column type:**\nAdministrativeRegion\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nCountry\nFilm\nGenre\nMammal\nMayor\nMountain\nNewspaper\nPlant\nSaint\nScientist\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test21"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Game|\n|---|\n|Kirby Super Star (SNES)|\n|The Legend of Zelda: A Link to the Past (SNES)|\n|Mega Man 7 (SNES)|\n|Goof Troop (SNES)|\n|Pok\u00c3\u00a9mon Emerald (GBA)|\n|Secret of Mana (SNES)|\n|Banjo-Kazooie (N64)|\n|New Super Mario Bros. Wii (Wii)|\n|Animal Crossing: City Folk (Wii)|\n|Zombies Ate My Neighbors (SNES)|\n|Castlevania III: Dracula's Curse (NES)|\n|Super Mario World 2: Yoshi's Island (SNES)|\n|The Legend of the Mystical Ninja (SNES)|\n|Battletoads (NES)|\n|Adventures in the Magic Kingdom (NES)|\n|Chuck E. Cheese's Party Games (Wii)|\n|Disney's Aladdin (SNES)|\n|Shenmue (SDC)|\n|Joe & Mac (SNES)|\n|Kirby's Return to Dreamland (Wii)|\n|Mary-Kate and Ashley: Sweet 16 - Licensed to Drive (GCN)|\n|Super Mario Land (NGB)|\n|Winter Olympics (GEN)|\n|Sonic the Hedgehog (PS3)|\n|Super Mario Land 2: 6 Golden Coins (NGB)|\n|Doom Troopers (GEN)|\n|Rugrats in Paris: The Movie (N64)|\n|Demon's Souls (PS3)|\n|Universal Studios Theme Parks Adventure (GCN)|\n|The Blues Brothers (SNES)|\n\n**Candidate column type:**\nAdministrativeRegion\nBaseballPlayer\nBird\nCity\nCompany\nContinent\nCurrency\nFilm\nLake\nLanguage\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test210"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Game|\n|---|\n|Prison Break: The Conspiracy|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nCity\nContinent\nCountry\nFilm\nLake\nMammal\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test211"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Game|\n|---|\n|Uncharted 2: Among Thieves|\n|Metal Gear Solid|\n|Final Fantasy VII|\n|Grand Theft Auto: Vice City|\n|Metal Gear Solid 4: Guns of the Patriots|\n|Metal Gear Solid 3: Snake Eater|\n|Call of Duty 4: Modern Warfare|\n|Shadow of the Colossus|\n|Red Dead Redemption|\n|Resident Evil 4|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBook\nCity\nContinent\nFilm\nGenre\nLake\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test212"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Genre Name|\n|---|\n|Top 200|\n|Metal and Loud Rock|\n|Jazz and Acoustic|\n|Local|\n|Dance|\n|Hip-Hop|\n|World|\n\n**Candidate column type:**\nAirport\nBaseballPlayer\nBird\nBuilding\nContinent\nCountry\nCurrency\nLake\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test213"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Geographies|\n|---|\n|Asia|\n|North America|\n|Europe|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nFilm\nGenre\nLake\nLanguage\nMayor\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test214"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Gold|\n|---|\n|Vladimir Bakulin Soviet Union (URS)|\n|Ion Baciu Romania (ROU)|\n|Roman Rurua Soviet Union (URS)|\n|Eero Tapio Finland (FIN)|\n|Viktor Igumenov Soviet Union (URS)|\n|L\u00c3\u00a1szl\u00c3\u00b3 Sillai Hungary (HUN)|\n|Nikolay Yakovenko Soviet Union (URS)|\n|Istv\u00c3\u00a1n Kozma Hungary (HUN)|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Wrestler\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test215"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Gold|\n|---|\n|Yu Miyahara Japan (JPN)|\n|Patimat Bagomedova Azerbaijan (AZE)|\n|Battsetseg Baatarzorig Mongolia (MGL)|\n|Dorothy Yeats Canada (CAN)|\n\n**Candidate column type:**\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nFilm\nGenre\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test216"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Grape|\n|---|\n|Abbuoto|\n|Abrusco|\n|Acitana|\n|Addoraca|\n|Aglianico|\n|Aglianicone|\n|Albana|\n|Albanella|\n|Albanello|\n|Albaranzeuli bianco|\n|Albaranzeuli nero|\n|Albarola|\n|Albarossa|\n|Aleatico|\n|Alionza|\n|Ancellotta|\n|Arilla|\n|Arneis|\n|Arvesiniadu|\n|Avan\u00c3|\n|Avarengo|\n|Baratuciat|\n|Barbarossa|\n|Barbera|\n|Barbera bianca|\n|Barbera del Sannio|\n|Barbera Sarda|\n|Bariadorgia|\n|Barsaglina|\n|Bellone|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCurrency\nFilm\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Plant\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test217"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Home team|\n|---|\n|Birmingham City|\n|Bolton Wanderers|\n|Cardiff City|\n|Chelsea|\n|Everton|\n|Grimsby Town|\n|Manchester United|\n|Aston Villa|\n|Blackburn Rovers|\n|Crystal Palace|\n|Doncaster Rovers|\n|Fulham|\n|Mansfield Town|\n|Reading|\n|Sunderland|\n|Wigan Athletic|\n\n**Candidate column type:**\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nMammal\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"SportsTeam\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test218"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Home team|\n|---|\n|Bohemians|\n|Transport|\n|Cork Celtic|\n|Drumcondra|\n|Limerick|\n|Sligo Rovers|\n|Shamrock Rovers|\n|Waterford|\n|Workman's Club|\n|Pike Rovers|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test219"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Airport|\n|---|\n|Copenhagen Airport|\n|Oslo Airport|\n|Stockholm Arlanda Airport|\n|Helsinki Airport|\n|Bergen Airport Flesland|\n|G\u00c3\u00b6teborg Landvetter Airport|\n|Stavanger Airport Sola|\n|Trondheim Airport V\u00c3\u00a6rnes|\n|Keflav\u00c3\u00adk International Airport|\n|Billund Airport|\n|Bromma Stockholm Airport|\n|Stockholm Skavsta Airport|\n|Malm\u00c3\u00b6 Airport|\n|Troms\u00c3\u00b8 Airport Langnes|\n|Moss Airport Rygge|\n|Torp Sandefjord Airport|\n|Bod\u00c3\u00b8 Airport|\n|Aalborg Airport|\n|Lule\u00c3\u00a5 Airport|\n|\u00c3 lesund Airport Vigra|\n|Kristiansand Airport Kjevik|\n|Ume\u00c3\u00a5 Airport|\n|Oulu Airport|\n|G\u00c3\u00b6teborg City Airport|\n|Haugesund Airport Karm\u00c3\u00b8y|\n|Harstad\\\/Narvik Airport Evenes|\n|Tampere-Pirkkala Airport|\n|Molde Airport \u00c3 r\u00c3\u00b8|\n|Aarhus Airport|\n|Rovaniemi Airport|\n\n**Candidate column type:**\nAcademicJournal\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test22"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Home team|\n|---|\n|St Kilda|\n|Fitzroy|\n|Essendon|\n|Collingwood|\n|Melbourne|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nGenre\nLanguage\nMayor\nMonarch\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"SportsTeam\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test220"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Home \u00e2\\u0095\u00b2 Away|\n|---|\n|Cibalia|\n|Dinamo Zagreb|\n|Hajduk Split|\n|Inter Zapre\u00c5\u00a1i\u00c4\\u0087|\n|Istra 1961|\n|Lokomotiva|\n|Osijek|\n|Rijeka|\n|Slaven Belupo|\n|RNK Split|\n|Zadar|\n|NK Zagreb|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBird\nBook\nBuilding\nCity\nContinent\nFilm\nGenre\nLake\nLanguage\nMammal\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"SportsTeam\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test221"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Host|\n|---|\n|Costa Rica|\n|Honduras|\n|El Salvador|\n|Guatemala|\n|Costa Rica|\n|Honduras|\n|Panama|\n|Guatemala|\n|El Salvador|\n|Honduras|\n|Panama|\n|Costa Rica|\n|United States|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test222"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Host|\n|---|\n|London (England)|\n|Karlsruhe (Germany)|\n|The Hague (Netherlands)|\n|Lahti (Finland)|\n|Akita (Japan)|\n|Duisburg (Germany)|\n|Kaohsiung (Taiwan)|\n|Cali (Colombia)|\n\n**Candidate column type:**\nAdministrativeRegion\nBaseballPlayer\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nGenre\nLake\nMonarch\nPlant\nPoliticalParty\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test223"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Host city|\n|---|\n|Auckland|\n|Vancouver|\n|British Columbia|\n|Cardiff|\n|Perth|\n|Western Australia|\n|Kingston|\n|Edinburgh|\n|Christchurch|\n|Edmonton|\n|Alberta|\n|Brisbane|\n|Queensland|\n|Edinburgh|\n|Auckland|\n|Victoria|\n|British Columbia|\n|Kuala Lumpur|\n|Manchester|\n|Melbourne|\n|Victoria|\n|Delhi|\n|Glasgow|\n|Gold Coast|\n|Queensland|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test224"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|ISO 4217 code (Symbol)|\n|---|\n|USD ($)|\n|EUR (\u00e2\\u0082\u00ac)|\n|JPY (\u00c2\u00a5)|\n|GBP (\u00c2\u00a3)|\n|CHF (CHF)|\n|CAD ($)|\n|AUD ($)|\n|MXN ($)|\n|CNY (\u00c2\u00a5)|\n|NZD ($)|\n|SEK (kr)|\n|RUB (\u00e2\\u0082\u00bd)|\n|HKD ($)|\n|NOK (kr)|\n|SGD ($)|\n|TRY (\u00e2\\u0082\u00ba)|\n|KRW (\u00e2\\u0082\u00a9)|\n|ZAR (R)|\n|BRL ($)|\n|INR (\u00e2\\u0082\u00b9)|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCountry\nLanguage\nMammal\nMonarch\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test225"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Institution|\n|---|\n|Bukidnon State University|\n|Camiguin Polytechnic State College|\n|Central Mindanao University|\n|Mindanao University of Science and Technology|\n|Misamis Oriental State College of Agriculture and Technology|\n|Northwestern Mindanao State College of Science and Technology|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBuilding\nContinent\nCurrency\nFilm\nLanguage\nMammal\nMonarch\nMountain\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"University\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test226"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Institution|\n|---|\n|Carleton College|\n|Coe College|\n|Hamline University|\n|Millikin University|\n|St. Olaf College|\n|University of Chicago|\n\n**Candidate column type:**\nAcademicJournal\nBird\nBook\nCity\nContinent\nCountry\nLake\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nScientist\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test227"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Institution|\n|---|\n|Delta State University|\n|Dillard University|\n|Louisiana State University|\n|Louisiana State University in Shreveport|\n|Loyola University New Orleans|\n|Millsaps College|\n|University of Mississippi|\n|Nicholls State University|\n|University of Southern Mississippi|\n|University of Louisiana at Lafayette|\n|University of Louisiana at Monroe|\n|Mississippi State University|\n|University of New Orleans|\n|Northwestern State University|\n|Southeastern Louisiana University|\n|Tulane University|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nCurrency\nLanguage\nMammal\nMayor\nMonarch\nMountain\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test228"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Institution|\n|---|\n|Texas Christian University *|\n|Boise State University **|\n|San Diego State University **|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nCompany\nContinent\nCountry\nCurrency\nFilm\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"University\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test229"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Airport|\n|---|\n|Dallas\\\/Ft Worth (DFW)|\n|TX|\n|Denver (DEN)|\n|CO|\n|Atlanta (ATL)|\n|GA|\n|Miami (MIA)|\n|FL|\n|Chicago (ORD)|\n|IL|\n|New York (JFK)|\n|NY|\n|Houston (IAH)|\n|TX|\n|Los Angeles (LAX)|\n|CA|\n|Newark (EWR)|\n|NJ|\n|Minneapolis\\\/St Paul (MSP)|\n|MN|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMonarch\nMountain\nPlant\nSaint\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Airport\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test23"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Institution|\n|---|\n|Universidad de Mendoza|\n|Universidad del Salvador|\n|Katholieke Universiteit Leuven|\n|McMaster University|\n|Simon Fraser University|\n|Universit\u00c3\u00a9 du Qu\u00c3\u00a9bec \u00c3 Trois-Rivi\u00c3\u00a8res|\n|University of Chile|\n|Pontificia Universidad Cat\u00c3\u00b3lica Madre y Maestra|\n|London Metropolitan University|\n|Alliance College|\n|St. Senis University|\n|University of Paris|\n|University of Hawaii at Manoa|\n|Meiji University|\n|Universidad An\u00c3\u00a1huac del Sur|\n|University of Lima|\n|Nicolaus Copernicus University in Toru\u00c5\\u0084|\n|Opole University|\n|University of Gda\u00c5\\u0084sk|\n|Korea University|\n|European University of Madrid|\n|University of Dundee|\n|Central Connecticut State University|\n|Columbia University|\n|Fordham University|\n|Gannon University|\n|Harvard University|\n|Lawrence University|\n|Lewis & Clark College|\n|Lewis & Clark College|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nCity\nContinent\nCountry\nFilm\nGenre\nLanguage\nMammal\nMayor\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test230"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Institution|\n|---|\n|University of Amsterdam|\n|Leiden University|\n|Utrecht University|\n|Delft University of Technology|\n|Erasmus University Rotterdam|\n|Maastricht University|\n|Eindhoven University of Technology|\n|University of Groningen|\n|Wageningen University|\n|Vrije Universiteit|\n|University of Twente|\n|Radboud Universiteit Nijmegen|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMountain\nNewspaper\nPlant\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"University\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test231"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Inventor|\n|---|\n|Tim Berners-Lee|\n|Shuji Nakamura|\n|Robert Langer|\n|Michael Gr\u00c3\u00a4tzel|\n|Linus Torvalds|\n|Shinya Yamanaka|\n|Stuart Parkin|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nCity\nContinent\nCountry\nCurrency\nFilm\nLake\nLanguage\nMayor\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSportsTeam\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test232"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Jane L. Campbell|\n|---|\n|Frank G. Jackson|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nMayor\nMonarch\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mayor\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test233"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Journal|\n|---|\n|Abstracts of Working Papers in Economics|\n|Acta geneticae medicae et gemellologiae: twin research|\n|Acta Neuropsychiatrica|\n|Acta Numerica|\n|Advances in Animal Biosciences|\n|Advances in Applied Mathematics and Mechanics|\n|Africa|\n|Africa Bibliography|\n|African Studies Review|\n|Ageing & Society|\n|AI EDAM|\n|AJS Review|\n|Albion|\n|American Journal of Alternative Agriculture|\n|American Political Science Review|\n|The Americas: A Quarterly Review of Latin American History|\n|Anatolian Studies|\n|Ancient Mesoamerica|\n|Anglo-Saxon England (journal)|\n|animal|\n|Animal Genetic Resources Resources g\u00c3\u00a9n\u00c3\u00a9tiques animales Recursos gen\u00c3\u00a9ticos animales|\n|Animal Health Research Reviews|\n|Animal Science|\n|International Journal of Limnology Annales de Limnologie|\n|Annals of Actuarial Science|\n|Annual of the British School at Athens|\n|Annual Review of Applied Linguistics|\n|Antarctic Science|\n|Antichthon|\n|The Antiquaries Journal|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test234"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Journal|\n|---|\n|Acta Botanica Gallica|\n|Acta Bot\u00c3\u00a1nica Mexicana|\n|Acta Botanica Yunnanica|\n|Acta Phytotaxonomica et Geobotanica|\n|Aliso|\n|American Journal of Botany|\n|Annals of Botany|\n|Annals of the Missouri Botanical Garden|\n|AoB PLANTS|\n|Aquatic Botany|\n|Arnoldia|\n|Australian Journal of Botany|\n|Australian Systematic Botany|\n|Biologia Plantarum|\n|Blumea|\n|Blyttia|\n|Bonplandia|\n|Botanica Helvetica|\n|Botanica Pacifica|\n|Botanical Journal of Scotland|\n|Botanical Journal of the Linnean Society|\n|Botanisk Tidsskrift|\n|\u00d0\\u0091\u00d0\u00be\u00d1\\u0082\u00d0\u00b0\u00d0\u00bd\u00d0\u00b8\u00d1\\u0087\u00d0\u00b5\u00d1\\u0081\u00d0\u00ba\u00d0\u00b8\u00d0\u00b9 \u00d0\u00b6\u00d1\\u0083\u00d1\\u0080\u00d0\u00bd\u00d0\u00b0\u00d0\u00bb (Botanical Magazine)|\n|Botany|\n|The Botanical Magazine|\n|Tokyo|\n|Botanicheskii zhurnal|\n|Brittonia|\n|Contributions of the University of Michigan Herbarium|\n|Curtis's Botanical Magazine|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AcademicJournal\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test235"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Journal|\n|---|\n|African Journal of Plant Pathology|\n|Annales de Phytopathologie|\n|Annual Review of Phytopathology|\n|Archives of Phytopathology and Plant Protection|\n|Australasian Plant Pathology|\n|Canadian Journal of Plant Pathology|\n|Canadian Plant Disease Survey|\n|Crop Protection|\n|EPPO Bulletin - A journal of regulatory plant protection|\n|European Journal of Forest Pathology|\n|European Journal of Plant Pathology|\n|Fitopatologia Brasileira|\n|Iranian journal of plant pathology\\\/Bimarihaye Guiahi|\n|Journal of General Plant Pathology|\n|Journal of Phytopathology\\\/Phytopathologische Zeitschrift|\n|Journal of Plant Diseases and Protection|\n|Journal of Plant Pathology|\n|Journal of Plant Protection Research|\n|Molecular Plant-Microbe Interactions|\n|Molecular Plant Pathology|\n|New Disease Reports|\n|New Zealand Plant Protection|\n|Pakistan Journal of Plant Pathology|\n|Physiological and Molecular Plant Pathology|\n|Phytoparasitica|\n|Phytopathologia Mediterranea|\n|Phytopathology|\n|Phytoprotection|\n|Plant Disease|\n|Plant Health Progress|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCurrency\nFilm\nGenre\nLake\nMammal\nMayor\nMonarch\nMountain\nPlant\nPoliticalParty\nSaint\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AcademicJournal\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test236"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Journal|\n|---|\n|Agronomy Journal|\n|Agronomie|\n|Agronomy for Sustainable Development|\n|American Journal of Potato Research|\n|Australian Journal of Grape and Wine Research|\n|The Biology of Canadian Weeds|\n|British Sugar Beet Review|\n|Cereal Research Communications|\n|Cereal Chemistry|\n|Ceiba|\n|Crop Protection (journal)|\n|Crop Science (journal)|\n|Davidsonia|\n|Economic Botany|\n|Erwerbs-Obstbau|\n|Euphytica|\n|European Journal of Agronomy|\n|European Journal of Horticultural Science|\n|Field Crops Research|\n|Genetic Resources and Crop Evolution|\n|Grass and Forage Science|\n|Hilgardia|\n|The Horticulturist|\n|Horticultural Reviews|\n|Industrial Crops and Products|\n|Invasive Plant Science and Management|\n|Journal of Agronomy and Crop Science|\n|Journal of Applied Horticulture|\n|Journal of Bamboo and Rattan|\n|Journal of Cereal Science|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBook\nBuilding\nCity\nContinent\nCurrency\nGenre\nLake\nMammal\nMonarch\nMountain\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AcademicJournal\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test237"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Journal|\n|---|\n|Annual Review of Plant Biology|\n|The Botanical Review|\n|Critical Reviews in Plant Sciences|\n|Current Advances in Plant Science|\n|Current Opinion in Plant Biology|\n|Trends in Plant Science|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test238"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Journal|\n|---|\n|Canadian Journal of Forest Research|\n|Dendrobiology|\n|Forest Genetic Resources Bulletin|\n|Journal of Dendrology|\n|New Forests|\n|Tree Genetics and Genomes|\n|Tree Physiology|\n|Trees - Structure and Function|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBird\nBook\nBuilding\nCompany\nContinent\nCurrency\nLake\nLanguage\nMammal\nMayor\nMonarch\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AcademicJournal\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test239"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Airport|\n|---|\n|Gimpo International Airport|\n|Gimhae International Airport|\n|Cheongju International Airport|\n|Gwangju Airport|\n|Daegu International Airport|\n|Incheon International Airport|\n|Gunsan Airport|\n|Wonju Airport|\n|Sacheon Airport|\n|Pohang Airport|\n|Yeosu Airport|\n|Ulsan Airport|\n|Muan International Airport|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nContinent\nCurrency\nFilm\nGenre\nLake\nMammal\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Airport\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test24"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Journal|\n|---|\n|Journal of Mammalogy|\n|Mammal Review|\n|Mammalian Biology|\n|Mammalia|\n|Mammal Research|\n|Mammal Study|\n|Hystrix|\n|Italian Journal of Mammalogy|\n|Galemys|\n|Spanish Journal of Mammalogy|\n|Lutra|\n|Australian Mammalogy|\n|Acta Theriologica Sinica|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nGenre\nMammal\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AcademicJournal\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test240"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Journal|\n|---|\n|Physical Review Series I|\n|Physical Review Series II|\n|Physical Review Letters|\n|Physical Review A|\n|Physical Review B|\n|Physical Review C|\n|Physical Review D|\n|Physical Review E|\n|Physical Review X|\n|Physical Review Accelerators and Beams|\n|Physical Review Physics Education Research|\n|Physics|\n|Physical Review Applied|\n|Physical Review Fluids|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBuilding\nCity\nCompany\nContinent\nCurrency\nGenre\nMayor\nMonarch\nScientist\nSportsTeam\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AcademicJournal\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test241"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Journal|\n|---|\n|Science|\n|PNAS|\n|Current Biology|\n|Current Plant Biology|\n|Journal of Neuroscience|\n|Journal of Theoretical Biology|\n|Cell|\n|Neuron|\n|Developmental Cell|\n|Molecular Cell|\n|Molecular Biology and Evolution|\n|Genes & Development|\n|Genome Research|\n|Learning & Memory|\n|RNA|\n|eLife|\n|F1000Research|\n|Frontiers in Journals|\n|Biophysical Journal|\n|Journal of Bacteriology|\n|Journal of Biology of the Cell|\n|EMBO Journal|\n|Journal of Neurophysiology|\n|Molecular & Cellular Proteomics|\n|Proteomics|\n|Journal of Proteome Research|\n|American Journal of Human Genetics|\n|Genetics|\n|Development|\n|The Journal of Experimental Biology|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMonarch\nMountain\nPlant\nRadioStation\nSportsTeam\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AcademicJournal\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test242"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Kit provider|\n|---|\n|Umbro|\n|Adidas|\n|Umbro|\n|ASICS|\n|Olympic Sportswear|\n|Patrick|\n|Umbro|\n|Adidas|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBird\nCity\nContinent\nCountry\nFilm\nGenre\nLanguage\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test243"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Known states|\n|---|\n|Alabama|\n|California|\n|Georgia|\n|Illinois|\n|Louisiana|\n|Nevada|\n|Texas|\n|Washington|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AdministrativeRegion\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test244"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Lake|\n|---|\n|Adelaide Tarn|\n|Bessons Dam|\n|Black Lakes|\n|Blue Lake|\n|Boulder Lake|\n|Bowscale Tarn|\n|Camp Lake|\n|Cleopatras Pool|\n|Cobb Reservoir|\n|Lake Constance|\n|Darby Pond|\n|Dew Lakes|\n|Diamond Lake|\n|Fish Lake|\n|Gillows Dam|\n|Hinapouri Tarn|\n|Iron Lake|\n|Island Lake|\n|Island Lake|\n|Kaihoka Lakes|\n|Kinzett Tarn|\n|Lake Angelus|\n|Lake Aorere|\n|Lake Barfoot|\n|Lake Bellbird|\n|Lake Caslani|\n|Lake Clara|\n|Lake Cobb|\n|Lake Daniell|\n|Lake Dora|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nCompany\nCountry\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test245"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Lake|\n|---|\n|Alph Lake|\n|Lake Bonney|\n|Lake Brownworth|\n|Lake Chad|\n|Don Juan Pond|\n|Lake Fryxell|\n|Lake Hoare|\n|Howchin Lake|\n|Mount Erebus Lava Lake|\n|Pyramid Pond|\n|Trough Lake|\n|Lake Vanda|\n|Lake Vida|\n|Walcott Lake|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nFilm\nGenre\nLake\nMammal\nMonarch\nMountain\nNewspaper\nPoliticalParty\nSaint\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Lake\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test246"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Lake|\n|---|\n|Caniapiscau Reservoir[9]|\n|Robert-Bourassa Reservoir[9]|\n|La Grande-3 Reservoir[10]|\n|Lac Mistassini|\n|Manicouagan Reservoir[9]|\n|Gouin Reservoir|\n|Lac a l'Eau-Claire|\n|Laforge-1 Reservoir|\n|Lake Champlain|\n|Lac Bienville|\n|Lac Saint-Jean|\n|Opinaca Reservoir|\n|Pipmuacan Reservoir|\n|Lake Abitibi|\n|Lake Minto|\n|Lac Guillaume-Delisle[11]|\n|Cabonga Reservoir|\n|Outardes-4 Reservoir[9]|\n|Eastmain Reservoir|\n|Lake Manouane|\n|Lacs des Loups Marins|\n|Lake Evans|\n|Lac Sakami|\n|Lac Payne|\n|Lac aux Feuilles|\n|Lake Albanel|\n|Baskatong Reservoir|\n|Dozois Reservoir|\n\n**Candidate column type:**\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nGenre\nLake\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPlant\nSaint\nScientist\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Lake\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test247"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Lake|\n|---|\n|Great Bear Lake|\n|Great Slave Lake|\n|Lac La Martre|\n|Kasba Lake|\n|MacKay Lake|\n|Hottah Lake|\n|Aylmer Lake|\n|Nonacho Lake|\n|Clinton-Colden Lake|\n|Selwyn Lake|\n|Point Lake|\n|Wholdaia Lake|\n|Lac de Gras|\n|Buffalo Lake|\n|Tathlina Lake|\n|Artillery Lake|\n|Snowbird Lake|\n|Trout Lake|\n|Lac des Bois|\n|Colville Lake|\n|Faber Lake|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBuilding\nCity\nFilm\nGenre\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nScientist\nSportsTeam\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test248"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Lake|\n|---|\n|Lake Athabasca|\n|Reindeer Lake|\n|Wollaston Lake|\n|Cree Lake|\n|Lac la Ronge|\n|Peter Pond Lake|\n|Dor\u00c3\u00a9 Lake|\n|Churchill Lake[12]|\n|Deschambault Lake[13]|\n|Frobisher Lake[14]|\n|Black Lake|\n|Montreal Lake|\n|Primrose Lake|\n|Amisk Lake|\n|Lake Diefenbaker[15]|\n|Pinehouse Lake|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nGenre\nLake\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Lake\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test249"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Airport|\n|---|\n|Helsinki Airport|\n|Copenhagen Airport|\n|Oslo Airport|\n|Stockholm Arlanda Airport|\n|Keflav\u00c3\u00adk International Airport|\n|G\u00c3\u00b6teborg Landvetter Airport|\n|Malm\u00c3\u00b6 Airport|\n|Billund Airport|\n|Turku Airport|\n|Bergen Airport Flesland|\n|\u00c3\\u0096rebro Airport|\n|J\u00c3\u00b6nk\u00c3\u00b6ping Airport|\n|Trondheim Airport V\u00c3\u00a6rnes|\n|Stockholm-V\u00c3\u00a4ster\u00c3\u00a5s Airport|\n|Ume\u00c3\u00a5 Airport|\n|Stavanger Airport Sola|\n|Molde Airport \u00c3 r\u00c3\u00b8|\n|Troms\u00c3\u00b8 Airport Langnes|\n|Sundsvall H\u00c3\u00a4rn\u00c3\u00b6sand Airport|\n|Oulu Airport|\n|Bod\u00c3\u00b8 Airport|\n|Lule\u00c3\u00a5 Airport|\n|Mariehamn Airport|\n|Reykjav\u00c3\u00adk Airport|\n|Visby Airport|\n|\u00c3 lesund Airport Vigra|\n|Karlstad Airport|\n|Kirkenes Airport H\u00c3\u00b8ybuktmoen|\n|Vagar Airport|\n|Svalbard Airport Longyear|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMayor\nMonarch\nMountain\nPlant\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Airport\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test25"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Lake|\n|---|\n|Lake Superior[3]|\n|Lake Huron[3]|\n|Lake Erie[3]|\n|Lake Ontario[3]|\n|Lake Nipigon|\n|Lake of the Woods|\n|Lac Seul|\n|Lake St. Clair|\n|Rainy Lake|\n|Lake Abitibi|\n|Lake Nipissing|\n|Lake Simcoe|\n|Big Trout Lake|\n|Sandy Lake|\n|Lake St. Joseph|\n|Trout Lake|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBook\nCity\nContinent\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Lake\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test250"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Lake|\n|---|\n|Nettilling Lake|\n|Dubawnt Lake|\n|Amadjuak Lake|\n|Nueltin Lake|\n|Baker Lake|\n|Yathkyed Lake|\n|Aberdeen Lake|\n|Napaktulik Lake|\n|Garry Lake|\n|Contwoyto Lake|\n|Ennadai Lake|\n|Tulemalu Lake|\n|Kamilukuak Lake|\n|Kaminak Lake|\n|Ferguson Lake|\n|Tebesjuak Lake|\n|Qamanirjuaq Lake|\n|Lake Hazen|\n|Princess Mary Lake|\n|South Henik Lake|\n|Angikuni Lake|\n|Hall Lake|\n|Tehek Lake|\n|Mallery Lake|\n|MacAlpine Lake|\n|Bluenose Lake|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Lake\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test251"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Lake|\n|---|\n|Paravani Lake|\n|Kartsakhi Lake|\n|Paliastomi Lake|\n|Tabatsquri Lake|\n|Khanchali Lake|\n|Jandari Lake|\n|Madatapa Lake|\n|Saghamo Lake|\n|Ritsa Lake|\n|Keli Lake|\n|Bazaleti Lake|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nCompany\nContinent\nCurrency\nFilm\nLake\nLanguage\nMammal\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Lake\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test252"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Lake|\n|---|\n|Trichonida|\n|Yliki|\n|Amvrakia|\n|Lysimachia|\n|Ozeros|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nCountry\nFilm\nLake\nMayor\nPlant\nRadioStation\nSportsTeam\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Lake\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test253"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Language|\n|---|\n|Azerbaijani[2]|\n|Berber|\n|Danish|\n|Dutch|\n|English|\n|English|\n|Finnish|\n|German|\n|Greek[8]|\n|Haida|\n|Hungarian[9]|\n|Icelandic|\n|Irish|\n|Japanese[10]|\n|Korean|\n|Limburgish|\n|Norwegian|\n|Pashto|\n|Pashto|\n|Portuguese|\n|Romanian|\n|Scottish Gaelic[14]|\n|Spanish|\n|Uzbek[16]|\n|Walloon|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBuilding\nCompany\nCountry\nCurrency\nFilm\nGenre\nLake\nMammal\nMayor\nMonarch\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test254"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Language|\n|---|\n|English|\n|French|\n|Arabic|\n|Spanish|\n|Portuguese|\n|Russian|\n|German|\n|Fula|\n|Italian|\n|Malay|\n|Manding|\n|Swahili|\n|Chinese|\n|Mandarin|\n|Dutch|\n|Gbe|\n|Kikongo|\n|Persian|\n|Romanian|\n|Serbian|\n|Somali|\n|Soninke|\n|Tamil|\n|Tswana|\n|Albanian|\n|Armenian|\n|Aymara|\n|Quechua|\n|Berber|\n|Chichewa|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBuilding\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Language\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test255"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Language|\n|---|\n|French|\n|English|\n|Italian|\n|Russian|\n|Portuguese|\n|Polish|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nFilm\nLake\nMammal\nMayor\nMountain\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test256"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Language|\n|---|\n|German|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nFilm\nGenre\nLanguage\nMammal\nMayor\nMonarch\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Language\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test257"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Language|\n|---|\n|Hindi|\n|Bhojpuri|\n|Magahi|\n|Maithili|\n|Urdu|\n|Bengali|\n|Santali|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCurrency\nGenre\nLake\nLanguage\nMammal\nMayor\nMountain\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Language\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test258"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Language|\n|---|\n|Navajo|\n|Dakota|\n|Yupik|\n|Apache|\n|Keres|\n|Cherokee|\n|Choctaw|\n|Zuni|\n|American Indian (Other)|\n|O'odham (Pima)|\n|Ojibwe (Chippewa)|\n|Hopi|\n|Inupiat (Inupik)|\n|Tewa|\n|Muskogee (Creek)|\n|Crow|\n|Shoshoni|\n|Cheyenne|\n|Tiwa|\n|Towa (Jemez)|\n|Inuit (Eskimo)|\n|Blackfoot|\n|Sahaptin|\n|Paiute|\n|Athapascan|\n|Ute|\n|Mohawk|\n|Seneca|\n|Winnebago|\n|Kiowa|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Language\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test259"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Airport|\n|---|\n|Kangerlussuaq Airport|\n|Nuuk Airport|\n|Ilulissat Airport|\n|\u00c3\\u008Dsafj\u00c3\u00b6r\u00c3\u00b0ur Airport|\n|Narsarsuaq Airport|\n|Sisimiut Airport|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nFilm\nGenre\nLake\nLanguage\nMayor\nMonarch\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Airport\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test26"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Language|\n|---|\n|Portuguese|\n|Portuguese|\n|Portuguese|\n\n**Candidate column type:**\nBaseballPlayer\nBird\nBuilding\nCompany\nCountry\nCurrency\nFilm\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Language\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test260"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Language|\n|---|\n|Romanian|\n|Yiddish|\n|Ukrainian|\n|Russian|\n|Polish|\n|German|\n|Bulgarian|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLanguage\nMayor\nMountain\nPoliticalParty\nSaint\nScientist\nSportsTeam\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Language\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test261"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Language|\n|---|\n|Russian|\n|Ukrainian|\n|Belarusian|\n|Uzbek|\n|Kazakh|\n|Georgian|\n|Azerbaijani|\n|Lithuanian|\n|Finnish|\n|Moldovan|\n|Latvian|\n|Kyrgyz|\n|Tajik|\n|Armenian|\n|Turkmen|\n|Estonian|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMayor\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Language\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test262"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Language|\n|---|\n|Russian|\n|Ukrainian|\n|Pontic Greek|\n|Turkish|\n|Total Population|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nCurrency\nFilm\nGenre\nLake\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nScientist\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Language\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test263"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Language|\n|---|\n|Spanish|\n|Chinese (including Cantonese and Mandarin)|\n|Vietnamese|\n|Tagalog|\n|Korean|\n|Russian|\n|German|\n|Japanese|\n|French|\n|Ukrainian|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nCity\nContinent\nCountry\nGenre\nLake\nLanguage\nMayor\nMountain\nPoliticalParty\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Language\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test264"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Language|\n|---|\n|Spanish|\n|French|\n|German|\n|Chinese (including Mandarin)|\n|Vietnamese|\n|Arabic|\n|Korean|\n|Tagalog|\n|Hindi|\n|Gujarati|\n|Russian|\n|and Hmong (tied)|\n|Italian and Japanese (tied)|\n|Cherokee|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nMayor\nMonarch\nMountain\nNewspaper\nRadioStation\nScientist\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test265"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Language|\n|---|\n|Spanish|\n|Vietnamese|\n|Chinese (including Mandarin and Cantonese)|\n|German|\n|Tagalog|\n|French|\n|Korean and Urdu (tied)|\n|Hindi|\n|Arabic|\n|Niger-Congo languages of West Africa (Ibo|\n|Kru|\n|and Yoruba)|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nBird\nBook\nCity\nCompany\nCountry\nFilm\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Language\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test266"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Language|\n|---|\n|Telugu|\n|Tamil|\n|Hindi|\n|Malayalam|\n|Marathi|\n|Kannada|\n|Bengali|\n|Bhojpuri|\n|Punjabi|\n|Gujarati|\n|Odia|\n|Assamese|\n|Rajasthani|\n|Chattisgarhi|\n|Tulu|\n|Maithali|\n|Konkani|\n|Sindhi|\n|English|\n|Nepali|\n|Haryanvi|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBuilding\nCity\nCompany\nGenre\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Language\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test267"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Languages|\n|---|\n|German|\n|Romansh|\n|Italian|\n\n**Candidate column type:**\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nContinent\nCurrency\nGenre\nLake\nMammal\nMountain\nNewspaper\nPlant\nPoliticalParty\nScientist\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test268"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Laureate|\n|---|\n|Peter Medawar|\n|Elias James Corey|\n|Aziz Sancar|\n\n**Candidate column type:**\nAirport\nBook\nCity\nCompany\nCountry\nFilm\nGenre\nLake\nMayor\nMonarch\nMountain\nRadioStation\nSaint\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test269"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Airport|\n|---|\n|New York- LaGuardia|\n|Newark|\n|New York- JFK|\n|Chicago- O'Hare|\n|Philadelphia|\n|Boston|\n|San Francisco|\n|Miami|\n|Charlotte Douglas|\n|Seattle-Tacoma|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nMayor\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Airport\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test27"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Lifespan|\n|---|\n|Bruno Nardelli|\n|Antonio Tacconi|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMayor\nMountain\nPlant\nPoliticalParty\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mayor\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test270"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Lifespan|\n|---|\n|Ivo Tartaglia|\n|Petar Bonetti|\n|Josip Berkovi\u00c4\\u0087|\n|Jak\u00c5\u00a1a Ra\u00c4\\u008Di\u00c4\\u0087|\n|Mihovil Kargoti\u00c4\\u0087|\n|Mirko Bui\u00c4\\u0087|\n|Vlado Mato\u00c5\u00a1i\u00c4\\u0087|\n|Ivan Zlatko Vrdoljak|\n|Stjepan Spalatin|\n|Josip Brki\u00c4\\u0087|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mayor\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test271"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Lifespan|\n|---|\n|Jakov Cindro|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nContinent\nFilm\nGenre\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mayor\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test272"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Lifespan|\n|---|\n|Karlo Lanza|\n|Petar Nutrizio Grisogono|\n|Petar Cambi|\n|Leonard Kru\u00c5\u00beevi\u00c4\\u0087|\n|Ivan Lovro Alberti|\n|Leonard Dudan|\n|Jerko Capogrosso|\n|Mihovil Tartaglia|\n|Leonard Dudan|\n|\u00c5 imun de Michieli-Vitturi|\n|Antonio Bajamonti|\n|Frano Lanza|\n|Antonio Bajamonti|\n|Aleksandar Nallini|\n|Emil Ragazzini|\n|Dujam Rendi\u00c4\\u0087-Mio\u00c4\\u008Devi\u00c4\\u0087|\n|Gajo Filomen Bulat|\n|Ivan Manger|\n|Petar Katalini\u00c4\\u0087|\n|Vinko Mili\u00c4\\u0087|\n|Ante Trumbi\u00c4\\u0087|\n|Vicko Mihaljevi\u00c4\\u0087|\n|Vicko Katalini\u00c4\\u0087|\n|Teodor \u00c5 porn|\n|Vicko Katalini\u00c4\\u0087|\n|Frane Madirazza|\n|Vicko Ni\u00c5\u00a1eti\u00c4\\u0087|\n|Teodor \u00c5 porn|\n|Josip Smodlaka|\n\n**Candidate column type:**\nAcademicJournal\nBird\nBook\nBuilding\nCompany\nFilm\nLake\nLanguage\nMammal\nMonarch\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test273"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Lifespan|\n|---|\n|Petar Alberti|\n|Antun Sarti|\n|Nikola Ivuli\u00c4\\u0087|\n|Petar Alberti|\n|Josip Cindro|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mayor\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test274"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Location|\n|---|\n|Carnegie Library of Homestead|\n|Munhall|\n|Pennsylvania[51]|\n|606 W. Cork St|\n|Winchester|\n|Virginia[52][53]|\n|Box 360|\n|Winchester|\n|Virginia (Frank Reed Horton's mailbox)[54]|\n|Ivanhoe Club Building|\n|3215 Park Avenue|\n|Kansas City|\n|Missouri[55]|\n|410-11 Land Bank Building|\n|Kansas City 6|\n|Missouri[56]|\n|505 Land Bank Building|\n|Kansas City 6|\n|Missouri[57]|\n|410 Land Bank Building|\n|Kansas City 6|\n|Missouri[58]|\n|407 Land Bank Building|\n|Kansas City 6|\n|Missouri[59]|\n|419 Columbia Bank Building|\n|Kansas City 6|\n|Missouri (Building imploded[60])[61]|\n|1100 Waltower Building|\n|823 Walnut Street|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nCity\nCompany\nContinent\nCurrency\nLake\nMammal\nMayor\nMonarch\nMountain\nPoliticalParty\nRadioStation\nSaint\nScientist\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test275"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Location|\n|---|\n|Manchester|\n|Nashua|\n|Concord|\n|Portsmouth|\n|Keene|\n|Laconia|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test276"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Loser (wager)|\n|---|\n|Avisman I (hair)|\n|Zonik 2000 (hair)|\n|Steel Man (hair)|\n|Cerebro Negro (mask)|\n|Mike Segura (hair)|\n|Masada (hair)|\n|Freelance (hair)|\n|Mike Segura (hair)|\n|Black Terry (hair)|\n|Rey Lobo (mask)|\n|Yamato (hair)|\n|Cerebro Negro (hair)|\n|Cerebro Negro (hair)|\n|Los Gemelo Fantasticos (hair) (I and II)|\n|Cerebro Negro (hair)|\n|Cerebro Negro (hair)|\n|Cerebro Negro (hair)|\n|Cerebro Negro (hair)|\n|Cerebro Negro (hair)|\n|Cerebro Negro (hair)|\n|Cerebro Negro (hair)|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nCurrency\nFilm\nGenre\nLake\nLanguage\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Wrestler\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test277"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Loser (wager)|\n|---|\n|Pantera Salvaje (mask)|\n|Dark Angel (mask)|\n|Goddess (mask)|\n|Princesa Blanca (hair) and La Seductora (mask)|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nBook\nCompany\nContinent\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nPlant\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Wrestler\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test278"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Loser (wager)|\n|---|\n|Ultratumba (mask)|\n|Ultratumba (hair)|\n|El Noruego (hair)|\n|El Destroyer (mask)|\n|Dory Dixon (hair)|\n|Humberto Garza (hair)|\n|C\u00c3\u00a9sar Valentino (hair)|\n|La Momia (mask)|\n|La Momia (hair)|\n|Pantera Negra (hair)|\n|Coloso Colosetti (hair)|\n|Coloso Colosetti (hair)|\n|Lem\u00c3\u00bas (mask)|\n|Sunny War Cloud (hair)|\n|Rub\u00c3\u00a9n Ju\u00c3\u00a1rez (hair)|\n|Jos\u00c3\u00a9 Torres (hair)|\n|\u00c3\\u0081ngel Blanco (hair)|\n|El Asesino (mask)|\n|Don Corleone (mask)|\n|Abdullah Tamba (hair)|\n|Ring Fujinami (hair)|\n|Blue Blazer (mask)|\n|Torre Infernal (mask)|\n|Yamato (hair)|\n|Scorpio|\n|Jr. (hair)|\n|Universo 2000 (mask)|\n|M\u00c3\u00a1scara A\u00c3\u00b1o 2000 Jr. (mask)|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nContinent\nCountry\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nNewspaper\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Wrestler\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test279"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Airport|\n|---|\n|Paris-Charles de Gaulle|\n|Paris-Orly|\n|Nice|\n|Lyon St Exup\u00c3\u00a9ry|\n|Marseille|\n|Toulouse Blagnac|\n|B\u00c3\u00a2le Mulhouse|\n|Bordeaux M\u00c3\u00a9rignac|\n|Beauvais|\n|Nantes|\n|Pointe-\u00c3 -Pitre|\n|R\u00c3\u00a9union Roland Garros|\n|Fort-de-France|\n|Lille Lesquin|\n|Montpellier M\u00c3\u00a9diterran\u00c3\u00a9e|\n|Ajaccio|\n|Strasbourg Entzheim|\n|Tahiti Faa'a|\n|Bastia|\n|Biarritz|\n|Brest|\n|Pau|\n|Toulon|\n|Rennes|\n|Noum\u00c3\u00a9a La Tontouta|\n|Figari Sud Corse|\n|Cayenne|\n|Carcassonne|\n|Clermont-Ferrand|\n|Noum\u00c3\u00a9a Magenta|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nLake\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPoliticalParty\nSaint\nScientist\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Airport\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test28"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Make|\n|---|\n|Chevrolet|\n|Toyota|\n|Dodge|\n|Ford|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nLake\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPoliticalParty\nSaint\nScientist\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test280"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Make|\n|---|\n|Toyota|\n|Dodge|\n|Ford|\n|Chevrolet|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nMammal\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test281"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Manufacturer|\n|---|\n|Schwarzenbach|\n|Puma|\n|Diadora|\n|Mikasa|\n|Kronos|\n|Adidas|\n|Adidas|\n|Hummel|\n|Lotto|\n|Lotto|\n|Lotto|\n|Stobi|\n|Puma|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCountry\nCurrency\nLake\nMayor\nMonarch\nPlant\nPoliticalParty\nRadioStation\nScientist\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test282"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Mayor|\n|---|\n|Charlie Hales|\n|Anna Peterson|\n|Kitty Piercy|\n|Shane Bemis|\n|Jerry Willey|\n|Denny Doyle|\n|Jim Clinton|\n|Gary Wheeler|\n|Christine Lundberg|\n|Oscar W. \\Biff\\\" Traber\"|\n|Sharon Konopa|\n|John L. Cook|\n|Kent Studebaker|\n|Cathy Clark|\n|Darin Fowler|\n|Daniel \\Dan\\\" Holladay\"|\n|Rick Olson|\n|George Endicott|\n|Lou Ogden|\n|Russ Axelrod|\n|Kathy Figley|\n|Bob Andrews|\n|Peter B. Truax|\n|Larry Rich|\n|Tim Knapp|\n\n**Candidate column type:**\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nCity\nGenre\nLake\nLanguage\nMayor\nMonarch\nMountain\nPoliticalParty\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mayor\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test283"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Mayor|\n|---|\n|Euseb Gast|\n|Josef Girard|\n|Franz Schilt|\n|Marx Sch\u00c3\u00bcrer|\n|Urs G\u00c3\u00bcggi|\n|Euseb Gast|\n|Franz Schilt|\n|Josef Luterbacher|\n|Euseb Vogt|\n|Franz Schilt|\n|Euseb Vogt|\n|Robert Luterbacher|\n|Hermann Guldimann|\n|Arthur St\u00c3\u00a4mpfli|\n|Adolf Furrer|\n|Eduard Rothen|\n|Boris Banga|\n|Fran\u00c3\u00a7ois Scheidegger|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBuilding\nCountry\nFilm\nLake\nLanguage\nMammal\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test284"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Mayor|\n|---|\n|Georges-Henri Brossard|\n|L\u00c3\u00a9on Gravel|\n|Alphonse Lepage|\n|Claude Chevrier|\n|Georgette Lepage|\n|Paul Leduc|\n|Nicole Carrier (Brossard borough president in Longueuil)[19]|\n|Jean-Marc Pelletier|\n|Paul Leduc|\n\n**Candidate column type:**\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMayor\nMountain\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mayor\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test285"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Mayor|\n|---|\n|Grant Decker|\n|Robert J. S. Page|\n|Henry M. Henderson|\n|William M. Fenton|\n|Henry H. Crapo|\n|Ephraim S. Williams|\n|William Paterson|\n|William Hamilton|\n|William B. McCreery|\n|Austin B. Witherbee|\n|Samuel M. Axford|\n|William S. Patrick|\n|James B. Walker|\n|David Spencer Fox|\n|George H. Durand|\n|Alexander McFarland|\n|William Hamilton|\n|Edward H. Thompson|\n|Jerome Eddy|\n|James C. Willson|\n|Zacheus Chase|\n|Charles A. Mason|\n|William A. Atwood|\n|George E. Newall|\n|William W. Joyner|\n|Mathew Davison|\n|George T. Warren|\n|John C. Dayton|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBuilding\nCompany\nContinent\nCountry\nCurrency\nGenre\nLake\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mayor\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test286"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Mayor|\n|---|\n|Kathy Sheehan|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nLake\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test287"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Mayor|\n|---|\n|Robert Butler|\n|Wilber Clark|\n|Monroe Evans|\n|Charles B.C. Holt|\n|Jack Lee|\n|Beth Finch|\n|Bill Hurley|\n|J.L. Dawkins|\n|Milo McBryde|\n|Marshall Pitts Jr.|\n|Tony Chavonne|\n|Nat Robertson|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nCity\nCompany\nContinent\nFilm\nGenre\nLake\nLanguage\nMayor\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mayor\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test288"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Mayor|\n|---|\n|William Carr Lane|\n|Daniel Page|\n|John W. Johnson|\n|John Fletcher Darby|\n|Wilson Primm|\n|William Carr Lane|\n|John Fletcher Darby|\n|John D. Daggett|\n|George Maguire|\n|John Wimer|\n|Bernard Pratte|\n|Peter G. Camden|\n|Bryan Mullanphy|\n|John Krum|\n|James G. Barry|\n|Luther Martin Kennett|\n|John How|\n|Washington King|\n|John How|\n|John Wimer|\n|Oliver Filley|\n|Daniel G. Taylor|\n|Chauncey Filley|\n|Ferdinand W. Cronenbold|\n|James Thomas|\n|Nathan Cole|\n|Joseph Brown|\n|Arthur Barret|\n|Herman Rechtien|\n|James H. Britton|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nLake\nMayor\nMountain\nPlant\nRadioStation\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mayor\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test289"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Airport|\n|---|\n|Warsaw Chopin|\n|London Stansted|\n|Frankfurt|\n|Munich|\n|Dublin|\n|Berlin Tegel|\n|Oslo Rygge|\n|Bergamo|\n|London Gatwick|\n|Edinburgh|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMayor\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Airport\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test29"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Mayor|\n|---|\n|William Carr Lane|\n|John Fletcher Darby|\n|Luther Martin Kennett|\n|Nathan Cole|\n|Joseph Brown|\n|James H. Britton|\n|David R. Francis|\n|Henry Ziegenhein|\n|James F. Conway|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nGenre\nLake\nLanguage\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test290"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Mayor[1]|\n|---|\n|Robert Brent|\n|Daniel Rapine|\n|James H. Blake|\n|Benjamin G. Orr|\n|Samuel N. Smallwood|\n|Thomas Carbery|\n|Samuel N. Smallwood|\n|Roger C. Weightman|\n|Joseph Gales|\n|John P. Van Ness|\n|William A. Bradley|\n|Peter Force|\n|William Winston Seaton|\n|Walter Lenox|\n|John W. Maury|\n|John T. Towers|\n|William B. Magruder|\n|James G. Berret|\n|Richard Wallach|\n|Sayles J. Bowen|\n|Matthew G. Emery[2]|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nCity\nCountry\nCurrency\nFilm\nLake\nMammal\nMayor\nMonarch\nMountain\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mayor\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test291"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Mother tongue|\n|---|\n|English|\n|French|\n|Urdu|\n|Polish|\n|Punjabi|\n|Arabic|\n|Tagalog (Pilipino|\n|Filipino)|\n|Portuguese|\n|Spanish|\n|Chinese|\n|not otherwise specified|\n|Italian|\n|Cantonese|\n|Mandarin|\n|Tamil|\n|Vietnamese|\n|Hindi|\n|Gujarati|\n|Ukrainian|\n|Croatian|\n|Korean|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nFilm\nLake\nMammal\nMonarch\nMountain\nNewspaper\nPoliticalParty\nScientist\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test292"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Motorcycle|\n|---|\n|Honda|\n|Honda|\n|Honda|\n|Honda|\n|TSR|\n|Yamaha|\n|Aprilia|\n|Aprilia|\n|Aprilia|\n|Aprilia|\n|Aprilia|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nContinent\nCountry\nCurrency\nFilm\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test293"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Mountain Peak|\n|---|\n|Mount Caubvick[193][194][195] (Mont d'Iberville)|\n|Barbeau Peak[118][119][120]|\n|Qiajivik Mountain[196][197]|\n|Melville Island High Point[198][199]|\n|Mathiassen Mountain[200][201]|\n|Mount Logan[1][2][3]|\n|Mount Odin[158][159][160]|\n|Mount Waddington[42][43][44]|\n|Melville Hills High Point[202]|\n|Keele Peak[152][153][154]|\n|Mealy Mountains High Point[203]|\n|The Cabox[204][205][206]|\n|Mont Yapeitso[207][208][209]|\n|Mount Robson[46][47][48]|\n|Ulysses Mountain[138][139]|\n|Mont Jacques-Cartier[210][211][212]|\n|Victoria Island High Point[213]|\n|South Ellesmere Ice Cap High Point[169]|\n|Manuel Peak[214][215]|\n|Mount Ratz[124][125][126]|\n|Cap Mountain[216][217][218]|\n|Outlook Peak[145][146][147]|\n|Devon Ice Cap High Point[185][186]|\n|Howson Peak[219][220][221]|\n|Fox Mountain[222][223][224]|\n|Mount Frank Rae[225][226][227]|\n|Mount Nirvana[228][229]|\n|Durham Heights[230][231]|\n|Kisimngiuqtuq Peak[232][233]|\n|Mount Moresby[234][235][236]|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nCity\nCountry\nCurrency\nFilm\nGenre\nLake\nMayor\nMonarch\nMountain\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mountain\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test294"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Mountain Peak|\n|---|\n|Mount Elbert[4][5][6][7]|\n|Pikes Peak[172][173][174][175]|\n|Blanca Peak[40][41][42]|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nCity\nCompany\nContinent\nCountry\nLake\nLanguage\nMammal\nMonarch\nMountain\nNewspaper\nRadioStation\nSaint\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mountain\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test295"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Mountain Peak|\n|---|\n|Mount Harvard NGS|\n|La Plata Peak[2]|\n|Mount Belford NGS|\n|Mount Princeton NGS|\n|Mount Yale NGS|\n|Mount Oxford NGS|\n|Mount Columbia NGS|\n|Missouri Mountain NGS|\n|Huron Peak NGS|\n|Grizzly Peak NGS|\n|Ice Mountain[2] PB|\n|Mount Hope[2] PB|\n|Emerald Peak[2] PB|\n|North Apostle[2] PB|\n|Rinker Peak[2] PB|\n|Peak 13|\n|762 (Silver King Peak)[2] PB|\n|Garfield Peak[2] PB|\n|Sayres Benchmark NGS PB|\n|Sewanee Peak|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCountry\nCurrency\nGenre\nLake\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mountain\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test296"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Mountain Peak|\n|---|\n|Mount Whitney[1][2][3][4]|\n|Mount Williamson[5][6]|\n|White Mountain Peak[7][8][9][10]|\n|North Palisade[11][12][13][14]|\n|Mount Shasta[15][16][17][18]|\n|Mount Humphreys[19][20][21]|\n|Mount Keith[22][23][24]|\n|Mount Darwin[25][26][27]|\n|Mount Kaweah[28][29][30]|\n|Mount Morgan[31][32][33]|\n|Mount Gabb[34][35]|\n|Mount Tom[36][37][38]|\n|Mount Dubois[39][40]|\n|Mount Pinchot[41][42]|\n|Mount Ritter[43][44]|\n|Red Slate Mountain[45][46][47]|\n|Mount Lyell[48][49][50]|\n|Mount Dana[51][52][53]|\n|Mount Conness[54][55][56]|\n|Needham Mountain[57][58]|\n|Twin Peaks[59][60]|\n|Olancha Peak[61][62][63][64]|\n|Mount Patterson[65][66][67]|\n|San Gorgonio Mountain[68][69][70]|\n|Waucoba Mountain[71][72][73][74]|\n|Glass Mountain[75][76][77][78]|\n|Keynot Peak[79][80]|\n|Telescope Peak[81][82][83][84]|\n|Mammoth Mountain[85][86]|\n|Freel Peak[87][88][89]|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBuilding\nContinent\nCurrency\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test297"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Mountain Peak|\n|---|\n|Pico Duarte[1] PB|\n|Pic la Selle[2] PB|\n|Blue Mountain Peak[3] PB|\n|Pic Macaya PB|\n|Pico Real del Turquino[4] PB|\n|Loma Gajo en Medio PB|\n|Loma Alto de la Bandera PB|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mountain\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test298"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Mountain [8]|\n|---|\n|Yushan[i]|\n|Xueshan[ii]|\n|Yushan East Peak|\n|Yushan North Peak|\n|Yushan South Peak|\n|Xiuguluanshan[iii]|\n|Mabolasishan[iv]|\n|Nanhudashan|\n|Dongxiaonanshan|\n|Zhongyangjianshan|\n|Xueshan North Peak[v]|\n|Guanshan[vi]|\n|Dashuikushan|\n|Nanhushan East Peak[vii]|\n|Dongjundashan[viii]|\n|Qilaishan North Peak|\n|Xiangyangshan[ix]|\n|Dajianshan[x]|\n|Yunfeng[xi]|\n|Qilaishan[xii]|\n|Malijiananshan[xiii]|\n|Nanhubeishan[xiv]|\n|Daxueshan|\n|Pintianshan[xv]|\n|Yushan West Peak[xvi]|\n|Touyingshan|\n|Sanchashan[xvii]|\n|Dabajianshan[xviii]|\n|Nanhushan South Peak|\n|Dongluandashan|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBuilding\nCompany\nContinent\nCurrency\nFilm\nGenre\nLake\nMayor\nMonarch\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test299"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Euro1|\n|Japanese yen|\n|Pound sterling|\n|Canadian dollar|\n|Mexican peso|\n|Renminbi yuan|\n|Indian rupee|\n|Singapore dollar|\n|South African rand|\n\n**Candidate column type:**\nAirport\nBaseballPlayer\nBird\nCity\nCurrency\nFilm\nGenre\nLake\nMayor\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Currency\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test3"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Airport name|\n|---|\n|Abingdon Airport|\n|Agnew Airport|\n|Alpha Airport|\n|Aramac Airport|\n|Arrabury Airport|\n|Augustus Downs Airport|\n|Aurukun Airport|\n|Ayr Airport|\n|Badu Island Airport|\n|Ballera Airport|\n|Northern Peninsula Airport (Bamaga\\\/Injinoo Airport)|\n|Barcaldine Airport|\n|Bedourie Airport|\n|Betoota Airport|\n|Biloela Airport|\n|Birdsville Airport|\n|Bizant Airport|\n|Blackall Airport|\n|Blackwater Airport|\n|Bloomfield River Airport|\n|Boigu Island Airport|\n|Bollon Airport|\n|Bolwarra Airport|\n|Boulia Airport|\n|Bowen Airport|\n|Brampton Island Airport|\n|Brighton Downs Airport|\n|Brisbane Airport|\n|Archerfield Airport|\n|Bulimba Airport|\n\n**Candidate column type:**\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nCountry\nGenre\nLake\nLanguage\nMammal\nMayor\nMountain\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test30"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Mountain|\n|---|\n|Mount Mackintosh|\n|Mount Joyce|\n|Mount Billing|\n|Mount Mallis|\n|Mount Priestley|\n\n**Candidate column type:**\nAcademicJournal\nBird\nBook\nCity\nCompany\nContinent\nCountry\nFilm\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mountain\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test300"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Mountain|\n|---|\n|Scafell Pike|\n|Helvellyn|\n|Skiddaw|\n|Great Gable|\n|Cross Fell|\n|Pillar|\n|Fairfield|\n|Blencathra|\n|Grasmoor|\n|St Sunday Crag|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nCountry\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMayor\nMonarch\nMountain\nPlant\nPoliticalParty\nSportsTeam\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mountain\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test301"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Municipality|\n|---|\n|Amacuzac|\n|Atlatlahucan|\n|Axochiapan|\n|Ciudad Ayala|\n|Coatl\u00c3\u00a1n del R\u00c3\u00ado|\n|Cuautla|\n|Cuernavaca|\n|Emiliano Zapata|\n|Huitzilac|\n|Jantetelco|\n|Jiutepec|\n|Jojutla|\n|Jonacatepec|\n|Mazatepec|\n|Miacatlan|\n|Ocuituco|\n|Puente de Ixtla|\n|Temixco|\n|Temoac|\n|Tepalcingo|\n|Tepoztl\u00c3\u00a1n|\n|Tetecala|\n|Tetela del Volc\u00c3\u00a1n|\n|Tlalnepantla|\n|Tlaltizap\u00c3\u00a1n|\n|Tlaquiltenango|\n|Tlayacapan|\n|Totolapan|\n|Xochitepec|\n|Yautepec|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test302"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Aci Sivri[8]|\n|Afghan Short|\n|Albino Bullnose[8]|\n|Aleppo|\n|Alma Paprika[8]|\n|Anaheim[8]|\n|Ancient Sweet|\n|Banana|\n|Barkers Hot|\n|Beaver Dam[8]|\n|Bird's Eye|\n|Black Cuban[10]|\n|Black Hungarian|\n|Black Pearl|\n|Black Prince|\n|Bulgarian Carrot|\n|Bulgarian Ratund|\n|Bullnose|\n|California Wonder[10]|\n|Canary Bell|\n|Cascabel|\n|Cayenne (Red)[10]|\n|Charleston Belle|\n|Cherry|\n|Chervena Chuska|\n|Chilaca|\n|Chile Rama|\n|Chiltepin[10]|\n|Chimayo|\n|Chinese Five-Color|\n\n**Candidate column type:**\nBaseballPlayer\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nLake\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Plant\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test303"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Acrocephalus|\n|Acta Ornithologica|\n|Africa Geographic|\n|Birds & Birding|\n|Airo|\n|Alabama Birdlife|\n|Alauda|\n|Alula|\n|Anuari Ornitol\u00c3\u00b2gic de les Balears|\n|Aquila|\n|Ardea|\n|Ardeola|\n|Atualidades Ornitol\u00c3\u00b3gicas|\n|Audubon|\n|Aves Ichnusae|\n|The Auk|\n|The Austral Avian Record|\n|Australian Field Ornithology|\n|Avian Conservation and Ecology|\n|Avian Science|\n|Avicultural Magazine|\n|Avifauna|\n|Avocetta|\n|Backyard Bird Newsletter|\n|Bird Conservation International|\n|Birds of Silesia|\n|Bird Study|\n|Bird Watcher's Digest|\n|Bird Watching (magazine)|\n|BirdWatching (formerly Birder's World)|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nCompany\nContinent\nCurrency\nFilm\nLake\nMonarch\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AcademicJournal\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test304"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Aj\u00c3\u00ad Amarillo|\n|Aj\u00c3\u00ad Brazilian Red Pumpkin|\n|Aj\u00c3\u00ad Criolla Sella|\n|Aj\u00c3\u00ad Crystal|\n|Aj\u00c3\u00ad Omnicolor[10]|\n|Atomic Starfish|\n|Bishop's Crown|\n|Christmas Bell[10]|\n|Lemon Drop|\n|Piquant\u00c3\u00a9|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBook\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test305"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Akodon oenos|\n|Akodon paranaensis|\n|Amblysomus robustus|\n|Antechinus subtropicus|\n|Avahi unicolor|\n|Brucepattersonius guarani|\n|Brucepattersonius misionensis|\n|Brucepattersonius paradisus|\n|Cheirogaleus minusculus|\n|Cheirogaleus ravus|\n|Mesomys occultus|\n|Mico acariensis|\n|Mico manicorensis|\n|Microcebus berthae|\n|Microcebus sambiranensis|\n|Microcebus tavaratra|\n|Myosorex kihaulei|\n|Neacomys minutus|\n|Neacomys musseri|\n|Nesolagus timminsi|\n|Notiosorex villai|\n|Ochotona nigritia|\n|Pipanacoctomys aureus|\n|Plecotus balensis|\n|Pseudantechinus roryi|\n|Rhinolophus maendeleo|\n|Rhipidomys gardneri|\n|Salinoctomys loschalchalerosorum|\n|Tapecomys primus|\n|Aepeomys reigi|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nMammal\nMayor\nMonarch\nMountain\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mammal\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test306"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Alexander Fleming|\n|Hermann Muller|\n|Peter C. Doherty|\n|Paul Nurse|\n|Robert G. Edwards|\n|Randy Schekman|\n|May-Britt Moser|\n|Edvard Moser|\n\n**Candidate column type:**\nAdministrativeRegion\nBird\nBook\nCity\nContinent\nCurrency\nGenre\nLake\nLanguage\nMayor\nMonarch\nNewspaper\nScientist\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Scientist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test307"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|American Mineralogist|\n|Bulletin of Volcanology|\n|Contributions to Mineralogy and Petrology|\n|Journal of Petrology|\n|Journal of Volcanology and Geothermal Research|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test308"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Annei|\n|Itoku|\n\n**Candidate column type:**\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nCountry\nFilm\nLake\nLanguage\nMammal\nMonarch\nMountain\nNewspaper\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Monarch\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test309"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Airport name|\n|---|\n|Ambriz Airport|\n|Andulo Airport|\n|Benguela Airport|\n|Cabinda Airport|\n|Cacolo Airport|\n|Cafunfo Airport|\n|Camabatela Airport|\n|Camaxilo Airport|\n|Camembe Airport|\n|Cangamba Airport|\n|Catoca Airport|\n|Catumbela Airport|\n|Cazombo Airport|\n|Chitato Airport|\n|Cuito Cuanavale Airport|\n|Damba Airport|\n|Dirico Airport|\n|Dundo Airport|\n|Huambo Airport|\n|Albano Machado Airport|\n|Kapanda Airport|\n|Kuito Airport|\n|Lobito Airport|\n|Quatro de Fevereiro Airport|\n|Angola International Airport (project)|\n|Luau Airport|\n|Lubango Airport|\n|Lucapa Airport|\n|Luena Airport|\n|Lumbala Airport|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nCurrency\nFilm\nGenre\nMayor\nNewspaper\nRadioStation\nSaint\nSportsTeam\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Airport\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test31"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Anselm of Nonantola|\n|Maurontus|\n|Paulinus of Aquileia|\n|Amalburga|\n|Urbitius (Urbez)|\n|Martyrs of Iona|\n|Tarasius|\n|Tanco (Tancho|\n|Tatta|\n|Tatto)|\n|Ludger|\n|William of Gellone|\n|John of Constantinople|\n|John|\n|Angilbert (Homer)|\n|Charlemagne|\n|Plato|\n|Geminus|\n|Theophanes and Companions|\n|Leo III|\n|Theophanes the Chronicler|\n|Athanasius|\n|Michael the Confessor|\n|Anne (Euphemianus)|\n|Benedict of Angers|\n|Emilian|\n|Benedict of Aniane|\n|Eigil (Aegilius)|\n|Adolphus and John|\n|Aengus (Dengus|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nLake\nMammal\nMonarch\nMountain\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Saint\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test310"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Anthony J. Arduengo III|\n|Paul K. Calaway|\n|Ronald Coll\u00c3\u00a9|\n|James R. Fair|\n|Irving Geis|\n|Linda Griffith|\n|Kary Mullis|\n|David Rasnick|\n|Wyatt C. Whitley|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test311"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Antimachus I|\n|Apollodotus I|\n|Demetrius II|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test312"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Apollodotus I|\n|Eucratides I|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Monarch\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test313"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Apollodotus I|\n|Eucratides I|\n|Plato|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nCity\nCompany\nCountry\nCurrency\nFilm\nLake\nLanguage\nMammal\nMayor\nMonarch\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Monarch\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test314"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Baikal[1]|\n|Tanganyika|\n|Crater[5]|\n|Vostok[3]|\n|Tahoe|\n|Adams|\n|Malawi|\n|Issyk Kul|\n|Kivu|\n|Matano[8]|\n|Hornindalsvatnet[8]|\n|Toba[8]|\n|Karakul|\n|Sarez|\n|(Caspian Sea[2])|\n|Lake Teletskoye|\n|Ranau|\n|Slocan|\n|Azure|\n|Quesnel|\n|Ohrid|\n|Geneva[8]|\n|Singkarak|\n|Loch Ness|\n|Great Central|\n|Garibaldi|\n|Dead Sea|\n|Titicaca|\n|Gander|\n|Kauhak\u00c5\\u008D Crater[9] [10]|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMayor\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test315"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Berkhamsted Castle|\n|Hertford Castle|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nCity\nCompany\nContinent\nFilm\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test316"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Bethel College|\n|Mid-Continent University|\n|New-York Central College|\n|McGrawville|\n|Old University of Chicago|\n|Pillsbury Baptist Bible College|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"University\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test317"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Blessed Columba of Rieti|\n|Blessed Jerome Garibo|\n|Blessed Bernardino of Fossa|\n|Blessed Louisa of Savoy|\n|Blessed Magdalen Panattieri|\n|Blessed Timothy of Montecchio|\n|Blessed Vincent of Aquila|\n|Joan of Valois|\n|Blessed Ladislaus of Gielniow|\n|Blessed Margaret of Ravenna|\n|Blessed Osanna of Mantua|\n|Blessed John-Angelo Porro|\n|Blessed Antonia of Brescia|\n|Blessed Francis of Calderola|\n|Francis of Paola|\n|Blessed Gratia of Kotor|\n|Blessed Jacopino de'Canepacci|\n|Catherine of Genoa|\n|Blessed Mark of Marconi|\n|Blessed John Liccio|\n|Blessed Margaret Fontana|\n|Blessed Paula Montaldi|\n|Joseph of Volokolamsk|\n|Blessed Paula Gambara-Costa|\n|Blessed Hans Wagner|\n|Blessed Giles of Lorenzana|\n|Blessed Helen Duglioli|\n|Blessed Dominic Spadafora|\n|Blessed Margaret of Lorraine|\n|Blessed Michael Pini|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Saint\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test318"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Boreosphenida|\n|Neoceti|\n|Platanistida|\n|Abrotrichini|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nCurrency\nFilm\nLanguage\nMammal\nMayor\nMonarch\nMountain\nPlant\nPoliticalParty\nSaint\nSportsTeam\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mammal\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test319"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Airport name|\n|---|\n|Commercial service \u00e2\\u0080\\u0093 primary airports|\n|Bemidji Regional Airport|\n|Brainerd Lakes Regional Airport|\n|Duluth International Airport|\n|Range Regional Airport (was Chisholm\u00e2\\u0080\\u0093Hibbing Airport)|\n|Falls International Airport|\n|Minneapolis\u00e2\\u0080\\u0093St. Paul International Airport (Wold\u00e2\\u0080\\u0093Chamberlain Field)|\n|Rochester International Airport|\n|St. Cloud Regional Airport|\n|Reliever airports|\n|Anoka County\u00e2\\u0080\\u0093Blaine Airport (Janes Field)|\n|Crystal Airport|\n|Flying Cloud Airport|\n|Airlake Airport|\n|South St. Paul Municipal Airport (Richard E. Fleming Field)|\n|St. Paul Downtown Airport (Holman Field)|\n|Lake Elmo Airport|\n|General aviation airports|\n|Aitkin Municipal Airport (Steve Kurtz Field)|\n|Albert Lea Municipal Airport|\n|Alexandria Municipal Airport (Chandler Field)|\n|Austin Municipal Airport|\n|Baudette International Airport & Seaplane Base|\n|Benson Municipal Airport|\n|Blue Earth Municipal Airport|\n|Buffalo Municipal Airport|\n|Houston County Airport (Caledonia\u00e2\\u0080\\u0093Houston County Airport)|\n|Cambridge Municipal Airport|\n|Canby Municipal Airport (Myers Field)|\n|Cloquet\\\/Carlton County Airport|\n\n**Candidate column type:**\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nMammal\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Airport\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test32"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Brendan Gall|\n|Mavis Gallant|\n|Steven Galloway|\n|Fran\u00c3\u00a7ois-Xavier Garneau|\n|Saint-Denys Garneau|\n|Hugh Garner|\n|Elyse Gasco|\n|Bill Gaston|\n|C. E. Gatchalian|\n|Connie Gault|\n|Pauline Gedge|\n|Camilla Gibb|\n|John Murray Gibbon|\n|Douglas Gibson|\n|Graeme Gibson|\n|Margaret Gibson|\n|William Gibson|\n|Sky Gilbert|\n|Charlotte Gill|\n|John Patrick Gillese|\n|David Gilmour|\n|Joanna Glass|\n|John Glassco|\n|Paul Glennon|\n|Susan Glickman|\n|Douglas Glover|\n|Jacques Godbout|\n|Dave Godfrey|\n|Glenda Goertzen|\n|Oliver Goldsmith|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nLake\nMayor\nMountain\nNewspaper\nPlant\nRadioStation\nSaint\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Writer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test320"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Bryden MacDonald|\n|John Henry Mackay|\n|Bennett Madison|\n|Gregory Maguire|\n|Anand Mahadevan|\n|Louise Maheux-Forcier|\n|Klaus Mann|\n|Thomas Mann|\n|David Charles Manners|\n|Jaime Manrique|\n|Blaine Marchand|\n|Jovette Marchessault|\n|Daphne Marlatt|\n|Douglas A. Martin|\n|Richard Mason|\n|Blair Mastbaum|\n|Nemir Matos-Cintr\u00c3\u00b3n|\n|F.O. Matthiessen|\n|W. Somerset Maugham|\n|Armistead Maupin|\n|Tawiah M'carthy|\n|Richard McCann|\n|Barry McCrea|\n|Carson McCullers|\n|Val McDermid|\n|Keith McDermott|\n|Peter McGehee|\n|Fiona McGregor|\n|Vestal McIntyre|\n|Terrence McNally|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBook\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPlant\nSaint\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Writer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test321"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Bulbus Lilii|\n|Radix Rehmanniae|\n|Radix Rehmanniae Preparata|\n|Radix Ophiopogonis|\n|Radix Scrophulariae|\n|Bulbus fritillariae cirrhosae|\n|Radix Angelicae Sinensis|\n|Radix Paeoniae Alba|\n|Radix Platycodonis|\n|Radix Glycyrrhizae|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Plant\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test322"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Charles Glover Barkla|\n|Sir Owen Willans Richardson|\n|Sir Frederick Hopkins|\n|Sir Charles Scott Sherrington|\n|Sir Edward Victor Appleton|\n|Max Theiler|\n|Maurice Wilkins|\n|Sir James Black|\n|Peter Higgs|\n|Michael Levitt|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nMammal\nMayor\nPlant\nPoliticalParty\nRadioStation\nSaint\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test323"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Demetrius II Aetolicus|\n|Antigonus III Doson|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBuilding\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nMammal\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Monarch\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test324"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Dinosaur Ridge|\n|Mount Gorman|\n|Kakwa Mountain|\n|Mount C\u00c3\u00b4t\u00c3\u00a9|\n|Intersection Mountain|\n|Mount Morkill|\n|Mount Forget|\n|Mount Talbot|\n|Interpass Ridge|\n|Big Shale Hill|\n|Mount Pauline|\n|Perseverance Mountain|\n|Jackpine Mountain|\n|Mount Bess|\n|Whiteshield Mountain|\n|Treadmill Ridge|\n|Mumm Peak|\n|Upright Mountain|\n|Mount Phillips|\n|Tatei Ridge|\n|Titkana Peak|\n|Chushina Ridge|\n|Lynx Mountain|\n|Mount Machray|\n|Salient Mountain|\n|Mount McCord|\n|Razorback Mountain|\n|Caledonia Mountain|\n|Mount O'Beirne|\n|T\u00c3\u00aate Roche|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nFilm\nMayor\nMountain\nNewspaper\nPlant\nSaint\nScientist\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mountain\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test325"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Doctor Radio|\n|Kids Place Live|\n|KIDZ BOP Radio|\n|Radio Classics|\n|Radio Disney|\n|Rural Radio|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nCity\nCompany\nContinent\nCountry\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"RadioStation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test326"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Donkmeer|\n|Grand Large|\n|Ixelles Ponds|\n|Lake B\u00c3\u00bctgenbach|\n|Lake Eau d'Heure|\n|Lake Eupen|\n|Lake Genval|\n|Lake Gileppe|\n|Lake Kraenepoel|\n|Lake Neufch\u00c3\u00a2teau|\n|Lake Nisramont|\n|Lake Robertville|\n|Lake Ry de Rome|\n|Lake Schulens|\n|Lake Virelles|\n|Lake Warfaaz|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Lake\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test327"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|E. Lee Spence|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nCity\nCountry\nCurrency\nGenre\nLake\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Scientist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test328"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Ed Gagnier|\n|Claude Gouzzie|\n|Duke Markell|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nMammal\nMonarch\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"BaseballPlayer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test329"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Airport name|\n|---|\n|Commercial service \u00e2\\u0080\\u0093 primary airports|\n|Bismarck Municipal Airport|\n|Dickinson Theodore Roosevelt Regional Airport|\n|Hector International Airport|\n|Grand Forks International Airport|\n|Minot International Airport|\n|Sloulin Field International Airport|\n|Commercial service \u00e2\\u0080\\u0093 nonprimary airports|\n|Devils Lake Regional Airport (Knoke Field)|\n|General aviation airports|\n|Beach Airport|\n|Bottineau Municipal Airport|\n|Bowman Municipal Airport|\n|Cando Municipal Airport|\n|Carrington Municipal Airport|\n|Casselton Robert Miller Regional Airport|\n|Cavalier Municipal Airport|\n|Cooperstown Municipal Airport|\n|Crosby Municipal Airport|\n|International Peace Garden Airport|\n|Edgeley Municipal Airport|\n|Ellendale Municipal Airport|\n|Standing Rock Airport|\n|Garrison Municipal Airport|\n|Glen Ullin Regional Airport|\n|Grafton Municipal Airport (Hutson Field)|\n|Gwinner-Roger Melroe Field|\n|Harvey Municipal Airport|\n|Mercer County Regional Airport|\n|Hettinger Municipal Airport|\n\n**Candidate column type:**\nAcademicJournal\nBird\nBuilding\nCity\nCompany\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test33"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Eddie Ainsmith|\n|Jake Gettman|\n|Jake Livingstone|\n|Rube Schauer|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMonarch\nPoliticalParty\nRadioStation\nScientist\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"BaseballPlayer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test330"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Eucratides I|\n|Demetrius II|\n|Menander I|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nFilm\nLake\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Monarch\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test331"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Eucratides I|\n|Menander I|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBook\nCity\nCompany\nCountry\nFilm\nGenre\nLake\nLanguage\nMayor\nNewspaper\nPlant\nRadioStation\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test332"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Farewell Lakes|\n|First Yarp|\n|Flagstaff Lake|\n|Lake Fleay|\n|Lake Flora|\n|Lake Florence|\n|Forrestdale Lake|\n|Fossil Billabong|\n|Lake Fox|\n|Fraser Lake|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nContinent\nCurrency\nFilm\nGenre\nLake\nMayor\nMonarch\nPlant\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Lake\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test333"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Fred Hofheinz|\n|Kathy Whitmire|\n|Lee Brown|\n|Bill White|\n|Annise Parker|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCity\nContinent\nCurrency\nFilm\nLanguage\nMammal\nMayor\nMountain\nPlant\nPoliticalParty\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mayor\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test334"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Galba SERVIVS SVLPICIVS GALBA CAESAR AVGVSTVS|\n|Otho MARCVS SALVIVS OTHO CAESAR AVGVSTVS|\n|Vitellius AVLVS VITELLIVS GERMANICVS AVGVSTVS|\n|Vespasian TITVS FLAVIVS CAESAR VESPASIANVS AVGVSTVS|\n|Titus TITVS FLAVIVS CAESAR VESPASIANVS AVGVSTVS|\n|Domitian TITVS FLAVIVS CAESAR DOMITIANVS AVGVSTVS|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBird\nCompany\nCountry\nCurrency\nFilm\nLanguage\nMayor\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test335"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|George Tupou I 1875\u00e2\\u0080\\u00931893|\n|George Tupou II 1893\u00e2\\u0080\\u00931918|\n|S\u00c4\\u0081lote Tupou III 1918\u00e2\\u0080\\u00931965|\n|T\u00c4\\u0081ufa\u00ca\u00bbahau Tupou IV 1965\u00e2\\u0080\\u00932006|\n|George Tupou V 2006\u00e2\\u0080\\u00932012|\n|Tupou VI 2012\u00e2\\u0080\\u0093present|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBird\nBook\nCity\nCountry\nCurrency\nGenre\nLanguage\nMammal\nMayor\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Monarch\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test336"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Haytham I|\n|Muhammad I|\n|Haytham II|\n|Ali I|\n|Muhammad II Also Shah of Layzan|\n|Abu Tahir Yazid Also Shah of Layzan|\n|Muhammad III Also Shah of Layzan and Shah of Tabarsaran in 917\u00e2\\u0080\\u0093948|\n|Ahmad I Also Shah of Layzan in 948\u00e2\\u0080\\u0093956|\n|Muhammad IV Also Shah of Layzan in 956\u00e2\\u0080\\u0093981|\n|Yazid III|\n|Manuchehr I|\n|Ali II|\n|Kubad|\n|Ali III Bukhtnassar|\n|Salar|\n|Fariburz I|\n|Manuchehr II|\n|Afridun I the Martyr|\n|Manuchehr III|\n|Afridun II|\n|Akhsitan I|\n|Shahanshah|\n|Fariburz II|\n|Farrukhzad|\n|Gushtasb I|\n|Fariburz III|\n|Akhsitan II|\n|Farrukhzad II|\n|Akhsitan III|\n|Keykavus I|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test337"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Hideo Hosono|\n|Steven D. Tanksley|\n|Yutaka Takahasi|\n|Theodore Friedmann Alain Fischer|\n|Yasuharu Suematsu|\n|C. David Allis|\n|C. Grant Willson Jean M. J. Fr\u00c3\u00a9chet|\n|John Frederick Grassle|\n|Janet Rowley Brian Druker Nicholas Lydon|\n|Masato Sagawa|\n|Kenneth Thompson Dennis Ritchie|\n|Tadamitsu Kishimoto Toshio Hirano|\n|Shun\u00e2\\u0080\\u0099ichi Iwasaki|\n|Peter Vitousek|\n|Dennis L. Meadows|\n|David E. Kuhl|\n|Vinton Gray Cerf Robert E. Kahn|\n|Victor A. McKusick|\n|Albert Fert Peter Gr\u00c3\u00bcnberg|\n|Peter Shaw Ashton|\n|John Houghton|\n|Akira Endo|\n|Makoto Nagao|\n|Masatoshi Takeichi Erkki Ruoslahti|\n|Kenichi Honda Akira Fujishima|\n|Keith J. Sainsbury|\n|John H. Lawton|\n|Beno\u00c3\u00aet Mandelbrot James A. Yorke|\n|Seiji Ogawa|\n|Tim Berners-Lee|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nFilm\nGenre\nLake\nMammal\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Scientist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test338"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Hippostratos|\n|Dionysios Soter|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Monarch\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test339"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Association|\n|---|\n|Africa|\n|America|\n|Asia|\n|Europe|\n|Oceania|\n\n**Candidate column type:**\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Continent\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test34"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Hippostratos|\n|Dionysios Soter|\n|Zoilos II|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBuilding\nCity\nCompany\nContinent\nCurrency\nMayor\nMountain\nPoliticalParty\nRadioStation\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test340"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Indira Gandhi International Airport|\n|Chhatrapati Shivaji International Airport|\n|Kempegowda International Airport|\n|Chennai International Airport|\n|Netaji Subhash Chandra Bose International Airport|\n|Rajiv Gandhi International Airport|\n|Cochin International Airport|\n|Sardar Patel International Airport|\n|Goa International Airport|\n|Pune International Airport|\n|Thiruvananthapuram International Airport|\n|Kozhikode International Airport|\n|Chaudhary Charan Singh International Airport|\n|Lokpriya Gopinath Bordoloi International Airport|\n|Jaipur International Airport|\n|Srinagar Airport|\n|Biju Patnaik International Airport|\n|Coimbatore International Airport|\n|Dr. Babasaheb Ambedkar International Airport|\n|Devi Ahilyabai Holkar Airport|\n|Mangalore Airport|\n|Chandigarh Airport|\n|Lok Nayak Jayaprakash Airport|\n|Tiruchirappalli International Airport|\n|Visakhapatnam Airport|\n|Sri Guru Ram Dass Jee International Airport|\n|Bagdogra Airport|\n|Varanasi Airport|\n|Jammu Airport|\n|Swami Vivekananda Airport|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nGenre\nLake\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Airport\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test341"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Jackadder Lake|\n|Jandabup Lake|\n|Lake Janet|\n|Lake Jasper|\n|Jaugle Lake|\n|Lake Jeavons|\n|Jebarjup Swan Lake|\n|Lake Jeffries|\n|Jerdacuttup Lakes|\n|Jilakin Lake|\n|Jogalong Billabong|\n|Lake Johnston|\n|Jolimont Lake|\n|Lake Jones|\n|Lake Joondalup|\n|Lake Josceline|\n|Lake Josephine (Western Australia)|\n|Lake Joy|\n|Jualbup Lake|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nLake\nMammal\nMayor\nMonarch\nNewspaper\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Lake\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test342"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Jimmy Archer|\n|Tommy Bond|\n|Hugh Campbell|\n|Mike Campbell|\n|Joe Cleary|\n|Bill Collins|\n|John Curran|\n|Andy Cusick|\n|Hugh Daily|\n|Pete Daniels|\n|Patsy Donovan|\n|Tom Dowse|\n|Conny Doyle|\n|Jack Doyle|\n|Ed Duffy|\n|Bill Farmer|\n|Jocko Fields|\n|Mike Flynn|\n|Curry Foley|\n|Jimmy Hallinan|\n|Mike Hines|\n|Andy Leonard|\n|Con Lucid|\n|Reddy Mack|\n|Fergy Malone|\n|Charlie McCullough|\n|John McGuinness|\n|Irish McIlveen|\n|Barney McLaughlin|\n|Pat McManus|\n\n**Candidate column type:**\nAirport\nBaseballPlayer\nBird\nBook\nCompany\nContinent\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"BaseballPlayer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test343"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Joachim|\n|Anne|\n|The Holy Innocents|\n|Simeon|\n|Anna the Prophetess|\n|Joseph|\n|Virgin Mary|\n|Longinus|\n|John the Baptist|\n|Dismas|\n|Stephen|\n|Pancras of Taormina|\n|James the Greater|\n|Stachys the Apostle|\n|Barnabas|\n|Pudens|\n|Andrew|\n|James the Just|\n|Clateus|\n|Evodius|\n|First Martyrs of the Church of Rome|\n|Basilissa and Anastasia|\n|Evellius|\n|Matthew the Evangelist|\n|Torpes of Pisa|\n|Paulinus of Antioch|\n|Peter|\n|Paul the Apostle|\n|Plautilla|\n|Processus and Martinian|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nCity\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMonarch\nMountain\nNewspaper\nSaint\nScientist\nSportsTeam\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Saint\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test344"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|John Herschel|\n|James Sylvester|\n|John Newport Langley|\n|Charles Pritchard|\n|Arthur Schuster|\n|Percy MacMahon|\n|William Burnside|\n|Augustus Love|\n|William Mitchinson Hicks|\n|Grafton Elliot Smith|\n|William Johnson Sollas|\n|Joseph Larmor|\n|William Rivers|\n|William Bateson|\n|Frederick Blackman|\n|Albert Seward|\n|John Edward Marr|\n|Patrick Laidlaw|\n|Alfred Harker|\n|Paul Dirac|\n|William Topley|\n|Harold Jeffreys|\n|Edward Appleton|\n|Frederic Bartlett|\n|Nevill Mott|\n|John Cockcroft|\n|W. V. D. Hodge|\n|Rudolf Peierls|\n|Raymond Lyttleton|\n|Frank Yates|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nGenre\nLake\nLanguage\nMayor\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Scientist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test345"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Juliomys|\n|Pipanacoctomys|\n|Salinoctomys|\n|Tapecomys|\n|Hyladelphys|\n|Handleyomys|\n|Sommeromys|\n|Chacodelphys|\n|Drymoreomys|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mammal\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test346"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Kanakasooriya Cinkaiariyan (restored)|\n|Singai Pararasasegaram|\n|Cankili I|\n|Puviraja Pandaram|\n|Kasi Nayinar Pararacacekaran|\n|Periyapillai|\n|Puviraja Pandaram (restored)|\n|Ethirimana Cinkam|\n|Cankili II|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nCountry\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Monarch\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test347"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Kempegowda International Airport|\n|Chennai International Airport|\n|Rajiv Gandhi International Airport|\n|Cochin International Airport|\n|Thiruvananthapuram International Airport|\n|Kozhikode International Airport|\n|Coimbatore International Airport|\n|Visakhapatnam Airport|\n|Mangalore International Airport|\n|Tiruchirappalli International Airport|\n|Madurai Airport|\n|Veer Savarkar International Airport|\n|Vijayawada Airport|\n|Tirupati Airport|\n|Rajahmundry Airport|\n\n**Candidate column type:**\nAdministrativeRegion\nBaseballPlayer\nBuilding\nCity\nCompany\nCountry\nGenre\nLanguage\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test348"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Manson Benedict|\n|Norbert Wiener|\n|Gordon S. Brown|\n|Martin Julian Buerger|\n|Morris Cohen|\n|Charles S. Draper|\n|Harold Eugene \\Doc\\\" Edgerton\"|\n|Herman Feshbach|\n|Edwin R. Gilliland|\n|Hermann Anton Haus|\n|Arthur von Hippel|\n|Arthur Thomas Ippen|\n|Roman O. Jakobson|\n|Gy\u00c3\u00b6rgy Kepes|\n|Norman Levinson|\n|Francis E. Low|\n|Franco Modigliani|\n|Philip Morrison|\n|Walle J. H. Nauta|\n|Walter A. Rosenblith|\n|Bruno Rossi|\n|Paul Samuelson|\n|Francis O. Schmitt|\n|Nevin S. Scrimshaw|\n|Ascher H. Shapiro|\n|John C. Slater|\n|Cyril S. Smith|\n|Carl R. Soderberg|\n|Charles H. Townes|\n|John S. Waugh|\n\n**Candidate column type:**\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test349"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Author|\n|---|\n|Alberto Casella (play|\n|La Morte in Vacanza)|\n|Walter Ferris (English adaptation)|\n|William Shakespeare|\n|Jules Romains|\n|Marion Osmond and James Corbet|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nLanguage\nMayor\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Writer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test35"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Maury Wills|\n|Jim Gilliam|\n|Wally Moon|\n|Duke Snider|\n|Johnny Roseboro|\n|Ron Fairly|\n|Daryl Spencer|\n|Willie Davis|\n|Johnny Podres|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCountry\nFilm\nLake\nLanguage\nMammal\nMonarch\nMountain\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"BaseballPlayer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test350"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Michel Condomines|\n|Marc Chaussidon|\n|Ken Farley|\n|Terry Plank|\n|Eric Hauri|\n|Gleb Prokorvsky|\n|Jess Atkins|\n|Albert Galy|\n|Mark E. Hodson|\n|James Badro|\n|Steve Parman|\n|Nicolas Dauphas|\n|Nathan Yee|\n|Karim Benzerara|\n|Maud Boyet|\n|Fr\u00c3\u00a9d\u00c3\u00a9ric Moynier|\n|James Day|\n|Liping Qin|\n|Caroline Peacock|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nLake\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Scientist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test351"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Mount Kinabalu|\n|Mount Trusmadi|\n|Mount Tambuyukon|\n|Mount Murud|\n|Mount Mulu|\n|Mount Tahan|\n|Mount Korbu|\n|Mount Yong Belar|\n|Mount Gayong|\n|Mount Chamah|\n|Mount Yong Yap|\n|Mount Ulu Sepat|\n|Mount Batu Putih|\n|Mount Tama Abu|\n|Mount Irau|\n|Mount Benum|\n|Mount Apad Runan|\n|Mount Gerah|\n|Batu Hill|\n|Batu Buli Hill|\n|Mount Junction|\n|Mount Tumang Batak|\n|Mount Bilah|\n|Mount Berembun|\n|Mount Bieh|\n|Mount Belatok|\n|Mount Gedung|\n|Batu Lawit Hill|\n|Mount Berinchang|\n|Batu Iran Hill|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nCity\nCompany\nContinent\nCurrency\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mountain\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test352"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Murray|\n|NoreenNoreen Murray|\n|Fersht|\n|AlanAlan Fersht|\n|Weissmann|\n|CharlesCharles Weissmann|\n|Hopwood|\n|DavidDavid Hopwood|\n|Holmes|\n|KennethKenneth Holmes|\n|Bird|\n|Adrian PeterAdrian Peter Bird|\n|Surani|\n|M. AzimM. Azim Surani|\n|Beggs|\n|JeanJean Beggs|\n|Crawford|\n|LionelLionel Crawford|\n|Roberts|\n|Richard J.Richard J. Roberts|\n|Challis|\n|GregoryGregory Challis|\n|Davies|\n|GideonGideon Davies|\n|McLean|\n|AngelaAngela McLean|\n|Toumazou|\n|ChristoferChristofer Toumazou|\n|Benjamin David Simons|\n\n**Candidate column type:**\nAdministrativeRegion\nBaseballPlayer\nBook\nCity\nCompany\nContinent\nFilm\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Scientist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test353"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Name|\n|Braunsteffer Lake|\n|Club Lake|\n|Collerson Lake|\n|Dingle Lake|\n|Krok Lake|\n|Station Tarn|\n|Stinear Lake|\n|Lake Vereteno|\n|Lake Zvezda|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMayor\nMonarch\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Lake\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test354"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Name|\n|Lake Amadeus|\n|Corella Lake|\n|Lake Mackay|\n|Lake Neale|\n|Numby Numby|\n|Lake Sylvester|\n|Tarrabool Lake|\n|Lake Woods|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nSaint\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test355"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Nazi-Maruttash|\n|Kadashman-Turgu|\n|Kadashman-Enlil II|\n|Kudur-Enlil|\n|Shagarakti-Shuriash|\n|Kashtiliash IV|\n|Enlil-nadin-shumi|\n|Kadashman-Harbe II|\n|Adad-shuma-iddina|\n|Adad-shuma-usur|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nNewspaper\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test356"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|OKO: South Tower|\n|Mercury City Tower|\n|The Shard|\n|City of Capitals|\n|Naberezhnaya Tower C|\n|Triumph-Palace|\n|Commerzbank Tower|\n|Messeturm|\n|Moscow State University|\n|Kotelnicheskaya Embankment Building|\n|Terrazza Martini Tower|\n|City Hall|\n|Palace of Justice|\n|City Hall|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCompany\nContinent\nCountry\nCurrency\nLake\nLanguage\nMammal\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Building\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test357"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Orontes IV|\n|Abdissares|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nGenre\nLake\nMammal\nMayor\nMonarch\nNewspaper\nPlant\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Monarch\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test358"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Panduvasdeva|\n|Abhaya|\n\n**Candidate column type:**\nAdministrativeRegion\nBook\nBuilding\nCompany\nContinent\nCountry\nFilm\nGenre\nLake\nMammal\nMayor\nMonarch\nNewspaper\nPlant\nRadioStation\nScientist\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Monarch\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test359"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Author|\n|---|\n|Charles Shadwell|\n|Samuel Richardson|\n|Elizabeth Barrett Browning|\n|Eliza Pope|\n|M. Bryant|\n|John Charles Tarver|\n|Winifred Phelps|\n|David R. Slavitt (Henry Sutton)|\n|Stanley Cook|\n|William J. Sullivan|\n|Fred Moramarco|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nMonarch\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test36"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Pizzo Coca|\n|Corno Stella|\n|Pizzo Recastello|\n|Monte Legnone|\n|Pizzo Tre Signori|\n|Pizzo Arera|\n|Presolana|\n|Pizzo Camino|\n|Grigna|\n|Monte Resegone|\n|Canto Alto|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nLake\nMammal\nMayor\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mountain\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test360"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Sarbel and Barbe|\n|Phocas|\n|Evaristus|\n|Zachary|\n|Charbel|\n|Eudokia of Heliopolis|\n|Ignatius of Antioch|\n|Rufus and Zosimus|\n|Simeon of Jerusalem|\n|Hyacinth|\n|Antiochus of Sulcis|\n|Zosimus|\n|Eleuchadius|\n|Publius|\n|Romulus|\n|Flavius Latinus of Brescia|\n|Quirinus of Neuss|\n|Zacchaeus of Jerusalem|\n|Astius|\n|Hermione of Ephesus|\n|Maurus|\n|Pantalemon and Sergius|\n|Thecla|\n|Eustace|\n|Terentian|\n|Pope Alexander I|\n|Secundus of Asti|\n|Seraphia|\n|Getulius and companions|\n|Marcian of Tortona|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nLake\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Saint\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test361"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Shunichi Kimura|\n|Bruce McCall|\n|Herbert Matayoshi|\n|Megumi Kon|\n|Dante Keala Carpenter|\n|Bernard Akana|\n|Larry Tanimoto|\n|Lorraine Inouye|\n|Stephen Kei Yamashiro|\n|Harry Kim|\n|Billy Kenoi|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nMammal\nMonarch\nMountain\nNewspaper\nPoliticalParty\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test362"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Taarblin Lake|\n|Tadpole Lake|\n|Lake Talbot|\n|Talyelwelup Lake|\n|Tamaton Lake|\n|Tarblong Lake|\n|Lake Tay|\n|Taylor Lake|\n|Tea Lake|\n|Lake Teague|\n|Terminal Lake|\n|Lake Thetis|\n|Thomsons Lake|\n|Three Star Lake|\n|Lake Throssell|\n|Tiger Snake Lake|\n|Lake Tilly|\n|Lake Timperley|\n|Tobin Lake|\n|Tom South Lake|\n|Tomato Lake|\n|Toolbrunup Lake|\n|Toolibin Lake|\n|Lake Torrup|\n|Towerrining Lake|\n|Lake Tunney|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nMayor\nMountain\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test363"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Upatissa|\n|Panduvasdeva|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Monarch\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test364"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Vector Prime|\n|Boba Fett: A Practical Man|\n|Dark Tide I: Onslaught|\n|Dark Tide: Siege|\n|Dark Tide II: Ruin|\n|Agents of Chaos I: Hero\u00e2\\u0080\\u0099s Trial|\n|Agents of Chaos II: Jedi Eclipse|\n|Balance Point|\n|Emissary of the Void|\n|Knightfall I: Jedi Storm|\n|Knightfall II: Jedi Blood|\n|Knightfall III: Jedi Fire|\n|Recovery (set during Edge of Victory I: Conquest)|\n|Edge of Victory I: Conquest|\n|Edge of Victory II: Rebirth|\n|Star by Star|\n|Dark Journey|\n|The Apprentice (set during Dark Journey)|\n|Enemy Lines I: Rebel Dream|\n|Enemy Lines II: Rebel Stand|\n|Traitor|\n|Destiny's Way|\n|Ylesia (set during Destiny's Way)|\n|Force Heretic I: Remnant|\n|Equals and Opposites|\n|Force Heretic II: Refugee|\n|Or Die Trying|\n|Force Heretic III: Reunion|\n|The Final Prophecy|\n|The Unifying Force|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nMayor\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test365"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Wells Fargo Tower|\n|Regions-Harbert Plaza|\n|AT&T City Center|\n|Regions Center|\n|City Federal Building|\n|Alabama Power Headquarters Building|\n|Thomas Jefferson Tower|\n|John Hand Building|\n|Daniel Building|\n\n**Candidate column type:**\nAdministrativeRegion\nBaseballPlayer\nBird\nCompany\nContinent\nCountry\nCurrency\nGenre\nLake\nLanguage\nMayor\nMonarch\nMountain\nRadioStation\nSaint\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test366"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Wilshire Grand Tower|\n|U.S. Bank Tower|\n|Aon Center|\n|Two California Plaza|\n|Gas Company Tower|\n|Bank of America Center|\n|777 Tower|\n|Wells Fargo Center|\n|Figueroa at Wilshire|\n|City National Tower|\n|Paul Hastings Tower|\n|LA Live Hotels & Condominiums|\n|Citigroup Center|\n|611 Place|\n|One California Plaza|\n|Century Plaza Tower II|\n|Century Plaza Tower I|\n|KPMG Tower|\n|Ernst & Young Plaza|\n|SunAmerica Center|\n|TCW Tower|\n|Union Bank Plaza|\n|10 Universal City Plaza|\n|1100 Wilshire|\n|Fox Plaza|\n|Constellation Place|\n|The Century|\n|ARCO Tower|\n|Los Angeles City Hall|\n|Equitable Life Building|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBuilding\nCity\nCompany\nContinent\nCountry\nLake\nLanguage\nMonarch\nNewspaper\nRadioStation\nSaint\nScientist\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Building\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test367"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Zaman|\n|Posta|\n|H\u00c3\u00bcrriyet|\n|S\u00c3\u00b6zc\u00c3\u00bc|\n|Sabah|\n|Habert\u00c3\u00bcrk|\n|Pas Fotoma\u00c3\u00a7|\n|T\u00c3\u00bcrkiye|\n|Milliyet|\n|Fanatik|\n|Bug\u00c3\u00bcn|\n|Yeni \u00c5\\u009Eafak|\n|Takvim|\n|Star|\n|Vatan|\n|G\u00c3\u00bcne\u00c5\\u009F|\n|Ak\u00c5\\u009Fam|\n|Taraf|\n|Yeni Akit|\n|D\u00c3\u00bcnya|\n|Cumhuriyet|\n|Millet|\n|Yeni Asya|\n|Ayd\u00c4\u00b1nl\u00c4\u00b1k|\n|Yeni\u00c3\u00a7a\u00c4\\u009F|\n|AMK|\n|Yurt|\n|Yeni Mesaj|\n|Vahdet|\n|Milat|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nLanguage\nMonarch\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Newspaper\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test368"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name and location|\n|---|\n|Huncoat Hall and barn 53\u00c2\u00b045\u00e2\\u0080\u00b259\u00e2\\u0080\u00b3N 2\u00c2\u00b020\u00e2\\u0080\u00b205\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.76640\u00c2\u00b0N 2.33476\u00c2\u00b0W|\n|Higher Antley Hall and Cottage 53\u00c2\u00b044\u00e2\\u0080\u00b242\u00e2\\u0080\u00b3N 2\u00c2\u00b022\u00e2\\u0080\u00b225\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.74495\u00c2\u00b0N 2.37361\u00c2\u00b0W|\n|High Riley Cottages 53\u00c2\u00b045\u00e2\\u0080\u00b203\u00e2\\u0080\u00b3N 2\u00c2\u00b020\u00e2\\u0080\u00b211\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.75092\u00c2\u00b0N 2.33629\u00c2\u00b0W|\n|Hill House Farmhouse 53\u00c2\u00b046\u00e2\\u0080\u00b212\u00e2\\u0080\u00b3N 2\u00c2\u00b020\u00e2\\u0080\u00b221\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.77011\u00c2\u00b0N 2.33924\u00c2\u00b0W|\n|Slate Pits Farmhouse 53\u00c2\u00b045\u00e2\\u0080\u00b226\u00e2\\u0080\u00b3N 2\u00c2\u00b020\u00e2\\u0080\u00b210\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.75732\u00c2\u00b0N 2.33614\u00c2\u00b0W|\n|Higher Hey Farmhouse and Cottage 53\u00c2\u00b044\u00e2\\u0080\u00b247\u00e2\\u0080\u00b3N 2\u00c2\u00b019\u00e2\\u0080\u00b241\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.74636\u00c2\u00b0N 2.32806\u00c2\u00b0W|\n|Sundial 53\u00c2\u00b045\u00e2\\u0080\u00b207\u00e2\\u0080\u00b3N 2\u00c2\u00b021\u00e2\\u0080\u00b256\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.75191\u00c2\u00b0N 2.36562\u00c2\u00b0W|\n|Village stocks 53\u00c2\u00b046\u00e2\\u0080\u00b211\u00e2\\u0080\u00b3N 2\u00c2\u00b020\u00e2\\u0080\u00b221\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.76968\u00c2\u00b0N 2.33916\u00c2\u00b0W|\n|Friar Hill Farmhouse 53\u00c2\u00b043\u00e2\\u0080\u00b247\u00e2\\u0080\u00b3N 2\u00c2\u00b021\u00e2\\u0080\u00b218\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.72983\u00c2\u00b0N 2.35492\u00c2\u00b0W|\n|St James' Church 53\u00c2\u00b045\u00e2\\u0080\u00b207\u00e2\\u0080\u00b3N 2\u00c2\u00b021\u00e2\\u0080\u00b255\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.75195\u00c2\u00b0N 2.36534\u00c2\u00b0W|\n|104 Abbey Street 53\u00c2\u00b045\u00e2\\u0080\u00b203\u00e2\\u0080\u00b3N 2\u00c2\u00b021\u00e2\\u0080\u00b240\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.75078\u00c2\u00b0N 2.36115\u00c2\u00b0W|\n|High Brake Hall 53\u00c2\u00b046\u00e2\\u0080\u00b232\u00e2\\u0080\u00b3N 2\u00c2\u00b020\u00e2\\u0080\u00b237\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.77562\u00c2\u00b0N 2.34352\u00c2\u00b0W|\n|Oak Hill Park Mansion 53\u00c2\u00b044\u00e2\\u0080\u00b249\u00e2\\u0080\u00b3N 2\u00c2\u00b021\u00e2\\u0080\u00b226\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.74692\u00c2\u00b0N 2.35715\u00c2\u00b0W|\n|100 and 102 Blackburn Road 53\u00c2\u00b045\u00e2\\u0080\u00b214\u00e2\\u0080\u00b3N 2\u00c2\u00b022\u00e2\\u0080\u00b208\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.75379\u00c2\u00b0N 2.36896\u00c2\u00b0W|\n|Old Toll House 53\u00c2\u00b044\u00e2\\u0080\u00b244\u00e2\\u0080\u00b3N 2\u00c2\u00b021\u00e2\\u0080\u00b220\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.74545\u00c2\u00b0N 2.35568\u00c2\u00b0W|\n|Warner Arms public house 53\u00c2\u00b045\u00e2\\u0080\u00b206\u00e2\\u0080\u00b3N 2\u00c2\u00b021\u00e2\\u0080\u00b252\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.75175\u00c2\u00b0N 2.36436\u00c2\u00b0W|\n|New High Riley Farmhouse 53\u00c2\u00b045\u00e2\\u0080\u00b205\u00e2\\u0080\u00b3N 2\u00c2\u00b020\u00e2\\u0080\u00b219\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.75151\u00c2\u00b0N 2.33858\u00c2\u00b0W|\n|Railway viaduct 53\u00c2\u00b045\u00e2\\u0080\u00b221\u00e2\\u0080\u00b3N 2\u00c2\u00b022\u00e2\\u0080\u00b200\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.75579\u00c2\u00b0N 2.36671\u00c2\u00b0W|\n|Former Christ Church School 53\u00c2\u00b044\u00e2\\u0080\u00b251\u00e2\\u0080\u00b3N 2\u00c2\u00b021\u00e2\\u0080\u00b237\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.74757\u00c2\u00b0N 2.36028\u00c2\u00b0W|\n|Town Hall 53\u00c2\u00b045\u00e2\\u0080\u00b211\u00e2\\u0080\u00b3N 2\u00c2\u00b021\u00e2\\u0080\u00b255\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.75314\u00c2\u00b0N 2.36533\u00c2\u00b0W|\n|21 Cannon Street 53\u00c2\u00b045\u00e2\\u0080\u00b208\u00e2\\u0080\u00b3N 2\u00c2\u00b022\u00e2\\u0080\u00b205\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.75216\u00c2\u00b0N 2.36810\u00c2\u00b0W|\n|Monument to Adam Westwell 53\u00c2\u00b045\u00e2\\u0080\u00b208\u00e2\\u0080\u00b3N 2\u00c2\u00b021\u00e2\\u0080\u00b258\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.75219\u00c2\u00b0N 2.36607\u00c2\u00b0W|\n|Church of St John the Evangelist 53\u00c2\u00b045\u00e2\\u0080\u00b227\u00e2\\u0080\u00b3N 2\u00c2\u00b021\u00e2\\u0080\u00b239\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.75763\u00c2\u00b0N 2.36072\u00c2\u00b0W|\n|Old People's Day Centre 53\u00c2\u00b045\u00e2\\u0080\u00b209\u00e2\\u0080\u00b3N 2\u00c2\u00b022\u00e2\\u0080\u00b205\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.75244\u00c2\u00b0N 2.36809\u00c2\u00b0W|\n|Market Hall 53\u00c2\u00b045\u00e2\\u0080\u00b211\u00e2\\u0080\u00b3N 2\u00c2\u00b021\u00e2\\u0080\u00b252\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.75309\u00c2\u00b0N 2.36446\u00c2\u00b0W|\n|Baptist Church 53\u00c2\u00b045\u00e2\\u0080\u00b208\u00e2\\u0080\u00b3N 2\u00c2\u00b022\u00e2\\u0080\u00b202\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.75231\u00c2\u00b0N 2.36735\u00c2\u00b0W|\n|Church of St John the Baptist 53\u00c2\u00b044\u00e2\\u0080\u00b205\u00e2\\u0080\u00b3N 2\u00c2\u00b020\u00e2\\u0080\u00b249\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.73476\u00c2\u00b0N 2.34684\u00c2\u00b0W|\n|Mechanics' Institution 53\u00c2\u00b045\u00e2\\u0080\u00b209\u00e2\\u0080\u00b3N 2\u00c2\u00b021\u00e2\\u0080\u00b259\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.75250\u00c2\u00b0N 2.36633\u00c2\u00b0W|\n|St Peter's Church 53\u00c2\u00b044\u00e2\\u0080\u00b257\u00e2\\u0080\u00b3N 2\u00c2\u00b022\u00e2\\u0080\u00b230\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.74912\u00c2\u00b0N 2.37509\u00c2\u00b0W|\n|Richmond Hill Street Works 53\u00c2\u00b044\u00e2\\u0080\u00b258\u00e2\\u0080\u00b3N 2\u00c2\u00b022\u00e2\\u0080\u00b222\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.74947\u00c2\u00b0N 2.37288\u00c2\u00b0W|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nContinent\nCountry\nFilm\nGenre\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nSaint\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Building\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test369"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Author|\n|---|\n|Christopher Paul Carey|\n|Win Scott Eckert|\n|Emmanuel Gorlier|\n|Matthew Baugh & Micah Harris|\n|Travis Hiltz|\n|Rick Lai|\n|Roman Leary|\n|Jean-Marc Lofficier|\n|Randy Lofficier|\n|Xavier Maum\u00c3\u00a9jean|\n|William P. Maynard|\n|John Peel|\n|Neil Penswick|\n|Dennis E. Power|\n|Frank Schildiner|\n|Bradley H. Sinor|\n|Michel St\u00c3\u00a9phan|\n|David L. Vineyard|\n|Brian Stableford|\n\n**Candidate column type:**\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nLake\nMonarch\nMountain\nPlant\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test37"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name and location|\n|---|\n|Village cross 53\u00c2\u00b031\u00e2\\u0080\u00b226\u00e2\\u0080\u00b3N 3\u00c2\u00b001\u00e2\\u0080\u00b235\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.52392\u00c2\u00b0N 3.02641\u00c2\u00b0W|\n|Wayside cross 53\u00c2\u00b031\u00e2\\u0080\u00b212\u00e2\\u0080\u00b3N 3\u00c2\u00b000\u00e2\\u0080\u00b252\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.51991\u00c2\u00b0N 3.01453\u00c2\u00b0W|\n|Cross Barn 53\u00c2\u00b031\u00e2\\u0080\u00b211\u00e2\\u0080\u00b3N 3\u00c2\u00b001\u00e2\\u0080\u00b213\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.51959\u00c2\u00b0N 3.02017\u00c2\u00b0W|\n|Barn|\n|Grange Farm 53\u00c2\u00b032\u00e2\\u0080\u00b211\u00e2\\u0080\u00b3N 3\u00c2\u00b004\u00e2\\u0080\u00b202\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.53627\u00c2\u00b0N 3.06725\u00c2\u00b0W|\n|Ince Blundell Old Hall 53\u00c2\u00b031\u00e2\\u0080\u00b206\u00e2\\u0080\u00b3N 3\u00c2\u00b001\u00e2\\u0080\u00b204\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.51841\u00c2\u00b0N 3.01781\u00c2\u00b0W|\n|Car Side Farmhouse 53\u00c2\u00b031\u00e2\\u0080\u00b220\u00e2\\u0080\u00b3N 3\u00c2\u00b000\u00e2\\u0080\u00b223\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.52232\u00c2\u00b0N 3.00643\u00c2\u00b0W|\n|Moss Farmhouse 53\u00c2\u00b032\u00e2\\u0080\u00b208\u00e2\\u0080\u00b3N 3\u00c2\u00b003\u00e2\\u0080\u00b214\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.53567\u00c2\u00b0N 3.05397\u00c2\u00b0W|\n|Ince Blundell Hall 53\u00c2\u00b031\u00e2\\u0080\u00b208\u00e2\\u0080\u00b3N 3\u00c2\u00b000\u00e2\\u0080\u00b259\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.51901\u00c2\u00b0N 3.01631\u00c2\u00b0W|\n|Rigmaiden's Farmhouse 53\u00c2\u00b031\u00e2\\u0080\u00b234\u00e2\\u0080\u00b3N 3\u00c2\u00b001\u00e2\\u0080\u00b206\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.52606\u00c2\u00b0N 3.01844\u00c2\u00b0W|\n|Sundial|\n|Ince Blundell Hall 53\u00c2\u00b031\u00e2\\u0080\u00b208\u00e2\\u0080\u00b3N 3\u00c2\u00b001\u00e2\\u0080\u00b200\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.51886\u00c2\u00b0N 3.01664\u00c2\u00b0W|\n|Sunnyfield Farmhouse 53\u00c2\u00b030\u00e2\\u0080\u00b244\u00e2\\u0080\u00b3N 3\u00c2\u00b000\u00e2\\u0080\u00b249\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.51234\u00c2\u00b0N 3.01366\u00c2\u00b0W|\n|East Gate|\n|Ince Blundell Hall 53\u00c2\u00b031\u00e2\\u0080\u00b202\u00e2\\u0080\u00b3N 3\u00c2\u00b000\u00e2\\u0080\u00b212\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.51724\u00c2\u00b0N 3.00336\u00c2\u00b0W|\n|Lion Gate|\n|Ince Blundell Hall 53\u00c2\u00b030\u00e2\\u0080\u00b241\u00e2\\u0080\u00b3N 3\u00c2\u00b000\u00e2\\u0080\u00b243\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.51151\u00c2\u00b0N 3.01202\u00c2\u00b0W|\n|Northeast Gate|\n|Ince Blundell Hall 53\u00c2\u00b031\u00e2\\u0080\u00b211\u00e2\\u0080\u00b3N 3\u00c2\u00b000\u00e2\\u0080\u00b231\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.51966\u00c2\u00b0N 3.00858\u00c2\u00b0W|\n|Structure|\n|Ince Blundell Hall 53\u00c2\u00b031\u00e2\\u0080\u00b209\u00e2\\u0080\u00b3N 3\u00c2\u00b001\u00e2\\u0080\u00b203\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.51921\u00c2\u00b0N 3.01753\u00c2\u00b0W|\n|Priest's House 53\u00c2\u00b030\u00e2\\u0080\u00b258\u00e2\\u0080\u00b3N 3\u00c2\u00b001\u00e2\\u0080\u00b207\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.51599\u00c2\u00b0N 3.01869\u00c2\u00b0W|\n|Garden temple|\n|Ince Blundell Hall 53\u00c2\u00b031\u00e2\\u0080\u00b208\u00e2\\u0080\u00b3N 3\u00c2\u00b001\u00e2\\u0080\u00b202\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.51894\u00c2\u00b0N 3.01717\u00c2\u00b0W|\n|Stables|\n|Ince Blundell Hall 53\u00c2\u00b031\u00e2\\u0080\u00b205\u00e2\\u0080\u00b3N 3\u00c2\u00b001\u00e2\\u0080\u00b204\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.51801\u00c2\u00b0N 3.01764\u00c2\u00b0W|\n|Pantheon|\n|Ince Blundell Hall 53\u00c2\u00b031\u00e2\\u0080\u00b209\u00e2\\u0080\u00b3N 3\u00c2\u00b000\u00e2\\u0080\u00b258\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.51925\u00c2\u00b0N 3.01602\u00c2\u00b0W|\n|Lion Cottage 53\u00c2\u00b030\u00e2\\u0080\u00b241\u00e2\\u0080\u00b3N 3\u00c2\u00b000\u00e2\\u0080\u00b242\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.51128\u00c2\u00b0N 3.01162\u00c2\u00b0W|\n|White House 53\u00c2\u00b030\u00e2\\u0080\u00b236\u00e2\\u0080\u00b3N 3\u00c2\u00b000\u00e2\\u0080\u00b238\u00e2\\u0080\u00b3W\u00ef\u00bb\u00bf \\\/ \u00ef\u00bb\u00bf53.51001\u00c2\u00b0N 3.01064\u00c2\u00b0W|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBook\nCity\nContinent\nCountry\nCurrency\nFilm\nLake\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test370"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name of Owner|\n|---|\n|Rinascimento Global Limited|\n|Shegas Limited|\n|Balst Investment Holdings Limited|\n|Amethis Finance of France|\n|Festuca Investments Limited|\n|German Investment Corporation (DEG)[8]|\n|Carlo Van Wageningen|\n|ESOP|\n|Responsability investments \\\/ ResponsAbility Participations AG|\n|Namaja Investments Limited|\n|Other Local & International Investors|\n|Total|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nLake\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test371"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name of the book|\n|---|\n|Burmese Writing System|\n|History of Mon and Burmese Alphabets|\n|Pyu Hpat-Sa (Pyu Reader)[8][9][10][11][12][13][14][15][16][17][18]|\n|The Myazeidi Pyu Inscription|\n|Myazeidi Yazakumah Inscription|\n|Pali Myazeidi Inscription|\n|Myanmar Ekkhaya Hnint Ganan Thincha Htuppat (On the Burmese Alphabet and Mathematics)|\n|Myanmar Ekkhaya Hnint Ganan Thincha Htuppat|\n|Myanma Pwe-Taw La Mya|\n|The Twelve Festivals of Burma|\n|Niti Kyan Kyaw Dway Hna Phaw (Hsanakya Niti and Lawka Niti)|\n|Mingala Sutta|\n|Planting vegetables|\n|Planting Fruit Trees|\n|Planting vegetables and fruit trees|\n|Growing a Kitchen Garden|\n|Pawrana Zaga Dictionary[28][29]|\n|The Ancient Pyu[32][33][34]|\n|Sanskrit Language|\n|Foundation of Mandalay|\n|the Royal Capital|\n|Myanma Salon Paung Letswe[37]|\n|Agriculture handouts for Standard 5|\n|6|\n|7|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nContinent\nCurrency\nGenre\nLake\nLanguage\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test372"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name[C]|\n|---|\n|International Commerce Centre|\n|Two International Finance Centre|\n|Central Plaza|\n|Bank of China Tower|\n|The Centre|\n|Nina Tower|\n|One Island East|\n|Cheung Kong Centre|\n|The Cullinan North Tower|\n|The Cullinan South Tower|\n|The Masterpiece|\n|Sorrento 1|\n|Langham Place Office Tower|\n|Highcliff|\n|The Harbourside|\n|Manulife Plaza|\n|Sorrento 2|\n|The Harbourfront Landmark|\n|The Arch|\n|Cosco Tower|\n|The Belcher's Tower 5|\n|The Belcher's Tower 6|\n|Hopewell Centre|\n|The Belcher's Tower 1|\n|The Belcher's Tower 2|\n|Tregunter 3|\n|The Summit|\n|Grand Promenade 2\u00e2\\u0080\\u00935|\n|Sorrento 3|\n|LOHAS Park Phase 2B Le Prime Towers 6\u00e2\\u0088\\u00928|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nCurrency\nFilm\nGenre\nLanguage\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nSportsTeam\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Building\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test373"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Nation|\n|---|\n|Morocco|\n|Egypt|\n|Syria|\n|Bahrain|\n|Iraq|\n|Tunisia|\n|Sudan|\n|Algeria|\n|Jordan|\n|Kuwait|\n|Lebanon|\n|Qatar|\n|23|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nFilm\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test374"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Nation|\n|---|\n|Russia|\n|Italy|\n|Ukraine|\n|Germany|\n|United Kingdom|\n|10|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBuilding\nCity\nCurrency\nLake\nLanguage\nMammal\nMayor\nMonarch\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test375"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Nations|\n|---|\n|Russia|\n|United States|\n|Germany|\n|Bulgaria|\n|Ukraine|\n|Italy|\n|South Africa|\n|Sweden|\n|Cuba|\n|East Germany|\n\n**Candidate column type:**\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nLake\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test376"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Newspaper|\n|---|\n|Ada|\n|Daily Mirror|\n|Ceylon Today|\n|Daily News|\n|Dinamina|\n|Divaina|\n|The Island|\n|Lakbima|\n|Lakbima News|\n|Lankadeepa|\n|Mawbima|\n|The Nation|\n|Ravaya|\n|Rivira|\n|Silumina|\n|Sudar Oli|\n|The Sunday Leader|\n|Sunday Observer|\n|The Sunday Times|\n|Thinakaran|\n|Thinakkural|\n|Uthayan|\n|Virakesari|\n|Randiwa|\n|Sathhanda|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Newspaper\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test377"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Newspaper|\n|---|\n|Adresseavisen|\n|Aftenposten|\n|Agder|\n|Agderposten|\n|Akershus Amtstidende (\\Amta\\\")\"|\n|And\u00c3\u00b8yposten|\n|Ask\u00c3\u00b8yv\u00c3\u00a6ringen|\n|Avisa Nordland|\n|Bergens Tidende|\n|Bergensavisen|\n|Bladet Troms\u00c3\u00b8|\n|Bladet Vester\u00c3\u00a5len|\n|Bondebladet|\n|Br\u00c3\u00b8nn\u00c3\u00b8ysunds avis|\n|Budstikka|\n|Dag og Tid|\n|Dagbladet|\n|Dagen|\n|Dagens N\u00c3\u00a6ringsliv|\n|Dagsavisen|\n|Dalane Tidende|\n|Demokraten|\n|Drammens Tidende|\n|Driva|\n|Enebakk Avis|\n|Fanaposten|\n|Finnmark Dagblad|\n|Finnmarken|\n|Firda|\n|Firda Tidend|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nLake\nMammal\nMonarch\nNewspaper\nPlant\nRadioStation\nSaint\nSportsTeam\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Newspaper\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test378"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Newspaper|\n|---|\n|Berita Harian|\n|Berita Minggu (Sundays only)|\n|zbCOMMA (\u00e6\\u0097\u00a9\u00e6\\u008A\u00a5\u00e9\\u0080\\u0097\u00e5\\u008F\u00b7)|\n|Lianhe Wanbao (\u00e8\\u0081\\u0094\u00e5\\u0090\\u0088\u00e6\\u0099\\u009A\u00e6\\u008A\u00a5)|\n|Lianhe Zaobao (\u00e8\\u0081\\u0094\u00e5\\u0090\\u0088\u00e6\\u0097\u00a9\u00e6\\u008A\u00a5)|\n|My Paper (\u00e6\\u0088\\u0091\u00e6\\u008A\u00a5)|\n|Good Paper|\n|Shin Min Daily News (\u00e6\\u0096\u00b0\u00e6\\u0098\\u008E\u00e6\\u0097\u00a5\u00e6\\u008A\u00a5)|\n|Tamil Murasu (\u00e0\u00ae\u00a4\u00e0\u00ae\u00ae\u00e0\u00ae\u00bf\u00e0\u00ae\u00b4\u00e0\u00af\\u008D \u00e0\u00ae\u00ae\u00e0\u00af\\u0081\u00e0\u00ae\u00b0\u00e0\u00ae\\u009A\u00e0\u00af\\u0081)|\n|tabla!|\n|Business Times|\n|The New Paper|\n|The Straits Times|\n|Thumbs Up (\u00e5\u00a4\u00a7\u00e6\\u008B\\u0087\u00e6\\u008C\\u0087)|\n|Today|\n|WEEKENDER[3]|\n|TGIF Papers|\n|Pravasi Express[4]|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nGenre\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Newspaper\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test379"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Author|\n|---|\n|Hideo Yokoyama|\n|Miyuki Miyabe|\n|Ryoe Tsukimura|\n|Shinzo Mitsuda|\n|Ken Nishimura (ja)|\n|Maha Harada (ja)|\n|Fumio Takano (ja)|\n|Rintaro Norizuki|\n|Yukito Ayatsuji|\n|Yusuke Miyauchi (ja)|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nMammal\nMayor\nNewspaper\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Writer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test38"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Newspaper|\n|---|\n|BusinessMirror|\n|BusinessWorld|\n|Malaya|\n|Manila Bulletin|\n|Philippine Daily Inquirer|\n|The Daily Tribune|\n|The Manila Times|\n|The Philippine Star|\n|The Standard|\n|United Daily Press|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nMammal\nMayor\nPlant\nRadioStation\nScientist\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test380"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Newspaper|\n|---|\n|Corriere della Sera|\n|la Repubblica|\n|La Gazzetta dello Sport|\n|La Stampa|\n|Il Sole 24 Ore|\n|Il Messaggero|\n|il Resto del Carlino|\n|Avvenire|\n|Corriere dello Sport|\n|La Nazione|\n|il Giornale|\n|Tuttosport|\n|Libero|\n|Il Giorno|\n|Il Mattino|\n|Italia Oggi|\n|Il Fatto Quotidiano|\n|Il Tempo|\n|il manifesto|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nMammal\nMayor\nMonarch\nRadioStation\nSaint\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test381"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Newspaper|\n|---|\n|Die Zeit|\n|S\u00c3\u00bcddeutsche Zeitung|\n|Frankfurter Allgemeine Zeitung|\n|Die Welt|\n|Handelsblatt|\n|Der Tagesspiegel|\n|Frankfurter Rundschau|\n|die tageszeitung|\n|Neues Deutschland|\n|Junge Freiheit|\n|Junge Welt|\n|Jungle World|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nContinent\nCountry\nFilm\nGenre\nLake\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Newspaper\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test382"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Newspaper|\n|---|\n|Maui Time Weekly (Wailuku)[309]|\n\n**Candidate column type:**\nAdministrativeRegion\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nLake\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Newspaper\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test383"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Newspaper|\n|---|\n|San Antonio Express-News[1]|\n|Houston Chronicle[15]|\n|Pittsburgh Post-Gazette[16]|\n|Pittsburgh Tribune-Review[17]|\n|Hartford Courant[18]|\n|The Baltimore Sun[19]|\n|Milwaukee Journal Sentinel[20]|\n|Journal Star (Peoria)[21]|\n|Chicago Tribune[22]|\n|Daily Herald (Arlington Heights)[23]|\n|The Birmingham News[24]|\n|The Plain Dealer (Cleveland)[25]|\n|The Cincinnati Enquirer[26]|\n|The Columbus Dispatch[27]|\n|The Arizona Republic (Phoenix)[28]|\n|Detroit Free Press[29]|\n|The Grand Rapids Press[30]|\n|The Oakland Press (Pontiac)[31]|\n|The Detroit News[32]|\n|The Denver Post[33]|\n|Kansas City Star[2]|\n|Reno Gazette-Journal[34]|\n|Las Vegas Review-Journal[35]|\n|Orlando Sentinel[36]|\n|Tampa Bay Times (St. Petersburg)[37]|\n|Lakeland Ledger[38]|\n|Pensacola News Journal[39]|\n|The Post and Courier (Charleston)[40]|\n|The State (Columbia)[7][41]|\n|The Greenville News[42]|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nLake\nMayor\nMonarch\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test384"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Newspaper|\n|---|\n|The Macarthur advertiser|\n|Macarthur chronicle|\n|Macarthur Chronicle|\n|Macarthur Chronicle Camden Edition|\n|Macarthur Chronicle Campbelltown Edition|\n|Macarthur Chronicle Wollondilly Edition|\n|The Macksville elevator|\n|The Macleay Argus[25]|\n|The Macleay argus and Macleay chronicle : special flood issue|\n|The Macleay Chronicle|\n|Macleay district advertiser|\n|The Macleay herald|\n|The Magnet & the voice|\n|Magnet : Merimbula|\n|Eden|\n|Pambula|\n|Tura Beach|\n|Mailbox shopper|\n|The Maitland advertising medium|\n|The Maitland Daily Mercury|\n|The Maitland ensign|\n|The Maitland herald|\n|The Maitland mail|\n|The Maitland Mercury and Hunter River General Advertiser|\n|The Maitland Mercury|\n|The Maitland post|\n|The Maitland Weekly Mercury|\n|The Maitland weekly post|\n|The Maltese herald|\n|The Manaro Mercury|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nCity\nCompany\nCountry\nCurrency\nFilm\nLake\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Newspaper\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test385"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Newspaper|\n|---|\n|The Wall Street Journal|\n|The New York Times|\n|USA Today|\n|Los Angeles Times|\n|Daily News|\n|New York Post|\n|The Washington Post|\n|Chicago Sun-Times|\n|The Denver Post|\n|Chicago Tribune|\n|The Dallas Morning News|\n|Newsday|\n|Houston Chronicle|\n|Orange County Register|\n|The Star-Ledger|\n|Tampa Bay Times|\n|The Plain Dealer|\n|The Philadelphia Inquirer|\n|Star Tribune|\n|The Arizona Republic|\n|Honolulu Star-Advertiser|\n|Las Vegas Review-Journal|\n|San Diego Union-Tribune|\n|The Boston Globe|\n|The Atlanta Journal-Constitution|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nMammal\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Newspaper\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test386"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Novel (publication date)|\n|---|\n|Casino Royale (1953)|\n|Live and Let Die (1954)|\n|Moonraker (1955)|\n|Diamonds Are Forever (1956)|\n|From Russia|\n|with Love (1957)|\n|Dr. No (1958)|\n|Goldfinger (1959)|\n|\\From a View to a Kill\\\" (1960)\"|\n|\\For Your Eyes Only\\\" (1960)\"|\n|\\Quantum of Solace\\\" (1960)\"|\n|\\Risico\\\" (1960)\"|\n|\\The Hildebrand Rarity\\\" (1960)\"|\n|Thunderball (1961)|\n|The Spy Who Loved Me (1962)|\n|On Her Majesty's Secret Service (1963)|\n|You Only Live Twice (1964)|\n|The Man with the Golden Gun (1965|\n|posthumously)|\n|\\The Living Daylights\\\" (1966|\n|\\The Property of a Lady\\\" (1966|\n|\\Octopussy\\\" (1966|\n|\\007 in New York\\\" (1966|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMayor\nMonarch\nNewspaper\nPlant\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test387"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Novel (publication date)|\n|---|\n|Colonel Sun (1968)|\n|Licence Renewed (1981)|\n|For Special Services (1982)|\n|Icebreaker (1983)|\n|Role of Honour (1984)|\n|Nobody Lives for Ever (1986)|\n|No Deals|\n|Mr. Bond (1987)|\n|Scorpius (1988)|\n|Win|\n|Lose or Die (1989)|\n|Brokenclaw (1990)|\n|The Man from Barbarossa (1991)|\n|Death is Forever (1992)|\n|Never Send Flowers (1993)|\n|SeaFire (1994)|\n|COLD (1996)|\n|\\Blast From the Past\\\" (1997)\"|\n|Zero Minus Ten (1997)|\n|The Facts of Death (1998)|\n|\\Midsummer Night's Doom\\\" (1999)\"|\n|High Time to Kill (1999)|\n|\\Live at Five\\\" (1999)\"|\n|DoubleShot (2000)|\n|Never Dream of Dying (2001)|\n|The Man with the Red Tattoo (2002)|\n|Devil May Care (2008)|\n|Carte Blanche (2011)|\n|Solo (2013)|\n|Trigger Mortis (2015)|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nScientist\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test388"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Novel|\n|---|\n|The Black Echo (1992)|\n|The Black Ice (1993)|\n|The Concrete Blonde (1994)|\n|The Last Coyote (1995)|\n|Trunk Music (1997)|\n|Angels Flight (1999)|\n|A Darkness More Than Night (2001)|\n|City of Bones (2002)|\n|Lost Light (2003)|\n|The Narrows (2004)|\n|The Closers (2005)|\n|Echo Park (2006)|\n|The Overlook (2007)|\n|9 Dragons (2009)|\n|The Drop (2011)|\n|The Black Box (2012)|\n|The Burning Room (2014)|\n|The Crossing (2015)|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCompany\nCountry\nFilm\nGenre\nLake\nLanguage\nMammal\nMonarch\nNewspaper\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test389"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Author|\n|---|\n|Indra Bahadur Rai|\n|Shiva Kumar Rai|\n|Guman Singh Chamling|\n|Okima Gwyn|\n|Asit Rai|\n|M.M. Gurung|\n|Indra Sundas|\n|Ramchandra Giri|\n|Matsyendra Pradhan|\n|Sharad Chhetri|\n|Lil Bahadur Chettri|\n|Pushpalal Upadhyaya|\n|Tulsi Bahadur Chhetri|\n|Tulsiram Sharma Kashyap|\n|Girmee Sherpa|\n|R.P. Lama|\n|Gadul Singh Lama aka Sanu Lama|\n|Jiwan Namdung|\n|Nagendramani Pradhan|\n|Mohan Thakuri|\n|Mani Prasad Rai|\n|Man Prasad Subba|\n|Bikram Bir Thapa|\n|Ramlal Adhikari|\n|Lakhi Devi Sundas|\n|Prem Pradhan|\n|Bindya Subba|\n|Jas Yonjan \u00e2\\u0080\\u0098Pyasi\u00e2\\u0080\\u0099|\n|Krishna Singh Moktan|\n|Bhim Dahal|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBird\nBook\nCity\nCompany\nContinent\nFilm\nGenre\nLanguage\nMayor\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Writer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test39"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Novel|\n|---|\n|Wanderer|\n|kommst Du nach Spa...|\n|Lion of Macedon|\n|The First Chronicles of Druss the Legend|\n|The Dark Tower|\n|The Spartan|\n|Gates of Fire|\n|The Lion in the Gateway|\n|Ghost|\n|2004|\n|Halo: The Fall of Reach|\n|2001|\n|Atlantis: Gate|\n|The Hot Gate (Troy Rising|\n|book three)|\n|Halo: Ghosts of Onyx|\n|2006|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test390"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Opponent|\n|---|\n|Stockton State College|\n|Cabrini College|\n|Johns Hopkins University|\n|Hunter College|\n|Lebanon Valley College|\n|Goucher College|\n|William Paterson University|\n|Christopher Newport University|\n|William Paterson University|\n|Franklin & Marshall College|\n|City College of New York|\n|Widener University|\n|State University of New York at Brockport|\n|Clark University|\n|Ohio Northern University|\n|William Paterson University|\n|Hampden\u00e2\\u0080\\u0093Sydney College|\n|Clark University|\n|Montclair State University|\n|SUNY-Old Westbury|\n|Gwynedd\u00e2\\u0080\\u0093Mercy College|\n|Widener University|\n|Messiah College|\n|Lincoln University|\n|College of Staten Island|\n|Williams College|\n|Alvernia University|\n|Randolph\u00e2\\u0080\\u0093Macon College|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nContinent\nCountry\nFilm\nGenre\nMammal\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"University\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test391"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Orishas|\n|---|\n|Orunmila \\\/ \u00e1\u00bb\\u008C\u00cc\\u0080r\u00c3\u00banm\u00c3\u00acl\u00c3|\n|Eshu \\\/ \u00c3\\u0088\u00e1\u00b9\u00a3\u00c3\u00b9|\n|Ogoun \\\/ \u00c3\\u0092g\u00c3\u00ban|\n|Yemoja \\\/ Yem\u00e1\u00bb\\u008Dja|\n|Oshun \\\/ \u00e1\u00bb\\u008C\u00cc\\u0080\u00e1\u00b9\u00a3un|\n|Shango \\\/ \u00e1\u00b9\u00a2\u00c3 ng\u00c3\u00b3|\n|Oya \\\/ \u00e1\u00bb\\u008Cya|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nFilm\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Saint\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test392"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Parish|\n|---|\n|Allison|\n|Biamble|\n|Binnaway|\n|Binnia|\n|Bullinda|\n|Bungabah|\n|Butheroo|\n|Carlisle|\n|Cookabingie|\n|Coolah|\n|Dalglish|\n|Gundare|\n|Lowe|\n|Malcolm|\n|Mendooran|\n|Merrygoen|\n|Moorangoorang|\n|Morven|\n|Mumbedah|\n|Napier|\n|Narangarie|\n|Neible|\n|Piambra|\n|Purlewaugh|\n|Queensborough|\n|Terrawinda|\n|Toorawandi|\n|Ulinda|\n|Yuggel|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nGenre\nLake\nLanguage\nMayor\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AdministrativeRegion\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test393"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Party|\n|---|\n|Conservative|\n|BNP|\n|Labour|\n|Liberal Democrat|\n|Green|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nLake\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"PoliticalParty\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test394"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Party|\n|---|\n|Conservative|\n|Farmer Independent|\n|Labour|\n|UKIP|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBook\nCity\nCompany\nContinent\nCurrency\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"PoliticalParty\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test395"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Party|\n|---|\n|Conservative|\n|Labour|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMayor\nMonarch\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"PoliticalParty\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test396"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Party|\n|---|\n|Conservative|\n|Labour|\n|Liberal|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nCurrency\nFilm\nGenre\nLake\nMammal\nNewspaper\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test397"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Party|\n|---|\n|Conservative|\n|Liberal Democrat|\n|Labour|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nCompany\nContinent\nCountry\nCurrency\nFilm\nLake\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"PoliticalParty\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test398"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Party|\n|---|\n|Conservative|\n|Liberal|\n|Green|\n|New Democratic|\n|Christian Heritage|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBook\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nRadioStation\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test399"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Hindi|\n|Urdu|\n|Hindustani|\n|Punjabi[9]|\n|Telugu|\n|Marathi|\n|Tamil|\n|Bengali|\n|Gujarati|\n|Kannada|\n|Malayalam|\n|Odia|\n|Assamese|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nLanguage\nMayor\nMonarch\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Language\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test4"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Author|\n|---|\n|Jacques Strauss|\n|Shehan Karunatilaka|\n|Riel Nason|\n|Alecia McKenzie|\n|Cory Taylor|\n|E. E. Sule|\n|Nayomi Munaweera|\n|Lisa O'Donnell|\n|Ezekel Alan|\n|Michael Sala|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nCompany\nCountry\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Writer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test40"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Party|\n|---|\n|Democratic|\n|Republican|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nLake\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"PoliticalParty\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test400"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Party|\n|---|\n|Labour|\n|Conservative|\n|Liberal Democrat|\n|Monster Raving Loony|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nLake\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"PoliticalParty\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test401"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Party|\n|---|\n|Labour|\n|Conservative|\n|Liberal Democrat|\n|Referendum|\n|Green|\n|Rainbow Dream Ticket|\n|Natural Law|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nLake\nLanguage\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nScientist\nSportsTeam\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test402"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Party|\n|---|\n|Liberal National|\n|Labour|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nLake\nLanguage\nMayor\nMonarch\nNewspaper\nPlant\nSaint\nScientist\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test403"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Party|\n|---|\n|Liberal and Country|\n|Liberal and Country hold|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBird\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nLanguage\nMammal\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"PoliticalParty\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test404"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Party|\n|---|\n|Liberal|\n|Conservative|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nBook\nCity\nCompany\nContinent\nFilm\nMayor\nMonarch\nMountain\nNewspaper\nPoliticalParty\nScientist\nSportsTeam\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"PoliticalParty\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test405"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Party|\n|---|\n|Liberal|\n|Progressive Conservative|\n|Co-operative Commonwealth|\n|Labor\u00e2\\u0080\\u0093Progressive|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMonarch\nPlant\nRadioStation\nScientist\nSportsTeam\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test406"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Party|\n|---|\n|Liberal|\n|Progressive Conservative|\n|New Democratic|\n|Social Credit|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBook\nBuilding\nCity\nCompany\nCountry\nFilm\nLake\nMammal\nMountain\nNewspaper\nPlant\nSaint\nScientist\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test407"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Party|\n|---|\n|New Democratic|\n|Liberal|\n|Bloc Qu\u00c3\u00a9b\u00c3\u00a9cois|\n|Conservative|\n|Green|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nCity\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nPlant\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test408"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Party|\n|---|\n|Progressive Conservative|\n|Liberal|\n|NDP|\n|Independent|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBird\nBuilding\nCity\nCountry\nCurrency\nGenre\nLake\nLanguage\nMonarch\nMountain\nPlant\nPoliticalParty\nSaint\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"PoliticalParty\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test409"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Author|\n|---|\n|John Dunning|\n|James Ellroy|\n|Peter Lovesey|\n|Dick Francis|\n|James Crumley|\n|Joe R. Lansdale|\n|Michael Connelly|\n|P. D. James|\n|Lorenzo Carcaterra|\n|John le Carr\u00c3\u00a9|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nCountry\nCurrency\nGenre\nMammal\nMayor\nMonarch\nMountain\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Writer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test41"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Party|\n|---|\n|Revolutionary Socialist Party[3]|\n|Independent[4]|\n|Communist Party of India (Marxist)[5]|\n|Indian National Congress[6]|\n|Indian National Congress (I)[7]|\n|Indian National Congress[8]|\n|Indian National Congress[9]|\n|Indian National Congress[10]|\n|Indian National Congress[11]|\n|Trinamool Congress[12]|\n|All India Trinamool Congress[13]|\n|All India Trinamool Congress[14]|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBuilding\nCity\nContinent\nCountry\nFilm\nLake\nLanguage\nMammal\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"PoliticalParty\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test410"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Peak Name|\n|---|\n|Everest|\n|K2|\n|Kangchenjunga|\n|Lhotse|\n|Makalu|\n|Cho Oyu|\n|Dhaulagiri|\n|Manaslu|\n|Nanga Parbat|\n|Annapurna|\n|Gasherbrum I|\n|Faichan Kangri|\n|Gasherbrum II|\n|Shishapangma|\n|Gyachung Kang|\n|Gasherbrum IV|\n|Nuptse|\n|Masherbrum|\n|Nanda Devi|\n|Rakaposhi|\n|Tirich Mir|\n|Gangkhar Puensum|\n|Ismoil Somoni Peak|\n|Langtang Lirung|\n|Machapuchare|\n|Dorje Lakpa|\n|Ama Dablam|\n|Kailash|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nBird\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mountain\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test411"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Peak|\n|---|\n|Aran Fawddwy|\n|Cadair Berwyn|\n|Gyrn Moelfre|\n|Rhialgwm|\n|Glasgwm|\n|Cyrniau Nod|\n|Allt y Main|\n|Esgeiriau Gwynion|\n|Y Golfa|\n|Mynydd-y-briw|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nCompany\nFilm\nGenre\nLake\nMayor\nMonarch\nPlant\nRadioStation\nScientist\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test412"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Peak|\n|---|\n|Buni Zom|\n|Koyo Zom|\n|Ghamubar Zom|\n|Chiantar Sar|\n|Shah Dok|\n|Thalo Zom|\n|Falak Sher|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nLake\nMammal\nMayor\nNewspaper\nPlant\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test413"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Peak|\n|---|\n|Cuilcagh|\n|Truskmore|\n|Slievemore|\n|Slieve Anierin|\n|The Playbank|\n|Arroo|\n|Dough Mountain|\n|Crockauns|\n|Carran Hill|\n|Lackagh|\n|Thur Mountain|\n|Benbo|\n|Slieve Rushen|\n|Killerry Mountain|\n|Corn Hill|\n|Slieve Daeane|\n|Slieve Bawn|\n|Bruse Hill|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nContinent\nFilm\nGenre\nLanguage\nMammal\nMayor\nMountain\nPlant\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mountain\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test414"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Peak|\n|---|\n|Grasmoor|\n|Crag Hill|\n|Grisedale Pike|\n|Sail|\n|Wandope|\n|Hopegill Head|\n|Sand Hill|\n|Dale Head|\n|Hobcarton Crag|\n|Robinson|\n|Hindscarth|\n|Whiteside east top|\n|Whiteside|\n|Ladyside Pike|\n|Scar Crags|\n|Whiteless Pike|\n|High Spy|\n|Causey Pike|\n|High Spy north top|\n|Hobcarton End|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nCurrency\nGenre\nLake\nLanguage\nMayor\nMonarch\nNewspaper\nPlant\nPoliticalParty\nSaint\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test415"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Peak|\n|---|\n|Great Gable|\n|Pillar|\n|Scoat Fell|\n|Black Crag|\n|Red Pike (Wasdale)|\n|Steeple|\n|High Stile|\n|Kirk Fell|\n|Green Gable|\n|Haycock|\n|Kirk Fell east top|\n|Pillar Rock|\n|Red Pike (Buttermere)|\n|High Crag|\n|Little Gowder Crag|\n|Brandreth|\n|Caw Fell|\n|Grey Knotts|\n|Seatallan|\n|Fleetwith Pike|\n|Base Brown|\n|Dodd|\n|Iron Crag|\n|Starling Dodd|\n|Honister Crag 1|\n|Yewbarrow|\n|Looking Stead|\n|Great Borne|\n|Yewbarrow north top|\n\n**Candidate column type:**\nAcademicJournal\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nFilm\nGenre\nLake\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mountain\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test416"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Peak|\n|---|\n|Mangerton Mountain|\n|Knockboy|\n|Crohane|\n|Knocknamanagh|\n|Carran|\n|Peakeen Mountain|\n|Torc Mountain|\n|Knockanaguish|\n|Coomagearlahy|\n|Bennaunmore|\n|Cappanlivane|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBird\nBook\nBuilding\nCity\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mountain\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test417"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Peak|\n|---|\n|Mount Everest|\n|Dhaulagiri|\n|Manaslu|\n|Annapurna I|\n|Shishapangma|\n|Gurla Mandhata|\n|Annapurna II|\n|Dhaulagiri II|\n|Makalu|\n|Yangra|\n|Cho Oyu|\n|Chamar|\n|Api|\n|Labuche Kang|\n|Nemjung|\n|Kanjiroba|\n|Saipal|\n|Kubi Gangri|\n|Deora|\n|Changla|\n|Bhalu Lek|\n|Himalchuli|\n|Pangpoche|\n|Gauri Sankar|\n|Jethi Bahurani|\n|Melungtse|\n|Langtang Lirung|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nLake\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mountain\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test418"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Person|\n|---|\n|Ivan Lazhechnikov (1792\u00e2\\u0080\\u00931869)|\n|Leonid Leonov (1899-1994)|\n|Dmitri Lipskerov (born 1964)|\n|Lev Lunts (1901-1924)|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nCity\nCompany\nContinent\nCurrency\nFilm\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Writer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test419"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Author|\n|---|\n|Miyuki Miyabe|\n|Hideo Okuda|\n|Masaki Yamada|\n|Ryuichi Kasumi (ja)|\n|Keigo Higashino|\n|Arimasa Osawa|\n|Futaro Yamada|\n|Kazuaki Takano|\n|Otaro Maijo|\n|Go Osaka|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBook\nBuilding\nCity\nCountry\nFilm\nGenre\nLanguage\nMammal\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test42"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Person|\n|---|\n|Pyotr Yakubovich (1860\u00e2\\u0080\\u00931911)|\n|Alexander Yashin (1913\u00e2\\u0080\\u00931968)|\n|Nikolay Yazykov (1803\u00e2\\u0080\\u00931847)|\n|Pyotr Yershov (1815\u00e2\\u0080\\u00931869)|\n|Sergey Yesenin (1895\u00e2\\u0080\\u00931925)|\n|Yevgeny Yevtushenko (born 1933)|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nFilm\nLake\nMammal\nMonarch\nMountain\nPlant\nPoliticalParty\nScientist\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Writer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test420"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Person called apostle|\n|---|\n|Barnabas|\n|Andronicus and Junia|\n|Silas|\n|Timothy|\n|Apollos|\n\n**Candidate column type:**\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nLake\nLanguage\nMonarch\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Saint\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test421"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Place|\n|---|\n|San Diego|\n|California|\n|US|\n|Odense|\n|Denmark|\n|Montreal|\n|Canada|\n|Porto|\n|Portugal|\n|Orlando|\n|Florida|\n|US|\n|Gda\u00c5\\u0084sk|\n|Poland|\n|Mountain View|\n|California|\n|US|\n|Linz|\n|Austria|\n|Hong Kong|\n|Berlin|\n|Germany|\n|San Francisco|\n|US|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nGenre\nLanguage\nMammal\nMayor\nMonarch\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test422"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Plant source|\n|---|\n|Grape|\n|Apricot|\n|Plum|\n|Watermelon|\n|Banana|\n|Avocado|\n|Crabapple|\n|Onion|\n|Cherry|\n|Peach|\n|Carrot|\n|Apple|\n|Asparagus|\n|Horned melon|\n|Beetroot|\n|Chokecherry|\n|Pear|\n|Lettuce|\n|Cucumber|\n|Eggplant|\n|Raisin|\n|Fig|\n|Bilberry|\n|Medlar|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nCompany\nCountry\nCurrency\nLake\nLanguage\nMammal\nMayor\nMountain\nPlant\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Plant\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test423"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Plant source|\n|---|\n|Kakadu plum|\n|Camu Camu|\n|Acerola|\n|Seabuckthorn|\n|Indian gooseberry|\n|Rose hip|\n|Baobab|\n|Chili pepper (green)|\n|Guava (common|\n|raw)|\n|Blackcurrant|\n|Red pepper|\n|Chili pepper (red)|\n|Parsley|\n|Kiwifruit|\n|Broccoli|\n|Loganberry|\n|Redcurrant|\n|Brussels sprouts|\n|Wolfberry (Goji)|\n|Lychee|\n|Persimmon (native|\n|raw)|\n|Cloudberry|\n|Elderberry|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nMammal\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Plant\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test424"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Plant source|\n|---|\n|Papaya|\n|Strawberry|\n|Orange|\n|Lemon|\n|Pineapple|\n|Cauliflower|\n|Kale|\n|Melon|\n|cantaloupe|\n|Garlic|\n|Grapefruit|\n|Raspberry|\n|Tangerine|\n|Mandarin orange|\n|Passion fruit|\n|Spinach|\n|Cabbage raw green|\n|Lime|\n|Mango|\n|Rutabaga|\n|Blackberry|\n|Potato|\n|Melon|\n|honeydew|\n|Tomato|\n|red|\n|Cranberry|\n|Tomato|\n|Blueberry|\n|Pawpaw|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMayor\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Plant\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test425"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Player (2015 Rs)|\n|---|\n|Miguel Cabrera (64)|\n|Willie McCovey \u00e2\\u0080|\n|Jason Giambi|\n|Ed McKean|\n|Earl Averill \u00e2\\u0080|\n|Red Schoendienst \u00e2\\u0080|\n|Edgar Mart\u00c3\u00adnez|\n|Willie Davis|\n|Eddie Yost|\n|Cupid Childs|\n|Scott Rolen|\n|Andruw Jones|\n|Lloyd Waner \u00e2\\u0080|\n|Edgar Renter\u00c3\u00ada|\n|Joe Medwick \u00e2\\u0080|\n|Dale Murphy|\n|Mickey Vernon|\n|Andr\u00c3\u00a9s Galarraga|\n|Willie Stargell \u00e2\\u0080|\n|Graig Nettles|\n|Al Oliver|\n|Rusty Staub|\n|George Burns|\n|Brian Downing|\n|Marquis Grissom|\n|Jos\u00c3\u00a9 Canseco|\n|Will Clark|\n|Earle Combs \u00e2\\u0080|\n|Joe Judge|\n|Tommy Corcoran|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBook\nCity\nCompany\nContinent\nCountry\nLake\nMammal\nMayor\nMonarch\nPlant\nPoliticalParty\nRadioStation\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test426"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Player|\n|---|\n|* Danny Goodwin|\n|Jay Franklin|\n|Tommy Bianco|\n|* Condredge Holloway|\n|Roy Branch|\n|Roy Thomas|\n|Roger Quiroga|\n|Ed Kurpiel|\n|David Sloan|\n|Taylor Duncan|\n|Tom Veryzer|\n|Frank Tanana|\n|Neil Rasmussen|\n|Rich Puig|\n|Jim Rice|\n|Jeff Wehmeir|\n|William \\Sugar Bear\\\" Daniels\"|\n|Frank Riccelli|\n|Terry Whitfield|\n|Rick Rhoden|\n|Dale Soderholm|\n|Craig Reynolds|\n|Randy Stein|\n|* Mike Miley|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nPlant\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"BaseballPlayer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test427"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Player|\n|---|\n|Chief Wilson|\n|Dave Orr|\n|Heinie Reitz|\n|Perry Werden|\n|Harry Davis|\n|Jimmy Williams|\n|George Davis|\n|Sam Thompson|\n|John Reilly|\n|George Treadway|\n|Joe Jackson|\n|Sam Crawford|\n|Kiki Cuyler|\n|Roger Connor|\n|Buck Freeman|\n|Sam Crawford|\n|Larry Doyle|\n|Tom Long|\n|Ed McKean|\n|Ty Cobb|\n|Ty Cobb|\n|Harry Stovey|\n|Sam Thompson|\n|Elmer Smith|\n|Dan Brouthers|\n|Nap LaJoie|\n|Ty Cobb|\n|Sam Crawford|\n|Earle Combs|\n|Adam Comorosky|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBird\nBook\nBuilding\nCity\nCountry\nCurrency\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test428"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Player|\n|---|\n|Chief Wilson|\n|Dave Orr|\n|Heinie Reitz|\n|Perry Werden|\n|Harry Davis|\n|Jimmy Williams|\n|George Davis|\n|Sam Thompson|\n|Sam Crawford|\n|Kiki Cuyler|\n|Joe Jackson|\n|John Reilly|\n|George Treadway|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMountain\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"BaseballPlayer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test429"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Author|\n|---|\n|Shakespeare|\n|WilliamWilliam Shakespeare|\n|Christie|\n|AgathaAgatha Christie|\n|Cartland|\n|BarbaraBarbara Cartland|\n|Steel|\n|DanielleDanielle Steel|\n|Robbins|\n|HaroldHarold Robbins|\n|Simenon|\n|GeorgesGeorges Simenon|\n|Sheldon|\n|SidneySidney Sheldon|\n|Blyton|\n|EnidEnid Blyton|\n|Seuss|\n|Dr.Dr. Seuss|\n|Patten|\n|GilbertGilbert Patten|\n|Rowling|\n|J. K.J. K. Rowling|\n|Tolstoy|\n|LeoLeo Tolstoy|\n|Tellado|\n|Cor\u00c3\u00adnCor\u00c3\u00adn Tellado|\n|Collins|\n|JackieJackie Collins|\n|Alger|\n|Jr.|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nBook\nBuilding\nCity\nContinent\nCurrency\nGenre\nLake\nMammal\nMayor\nMonarch\nNewspaper\nPlant\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test43"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Player|\n|---|\n|Dean Chance|\n|Elston Howard|\n|Bob Allison|\n|Bobby Richardson|\n|Brooks Robinson|\n|Jim Fregosi|\n|Harmon Killebrew|\n|Mickey Mantle|\n|Tony Oliva|\n\n**Candidate column type:**\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"BaseballPlayer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test430"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Player|\n|---|\n|Dizzy Dean|\n|Gabby Hartnett|\n|Ripper Collins|\n|Billy Herman|\n|Pinky Whitney|\n|Leo Durocher|\n|Joe Medwick|\n|Augie Galan|\n|Frank Demaree|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nBird\nBook\nContinent\nCountry\nCurrency\nGenre\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nScientist\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"BaseballPlayer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test431"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Player|\n|---|\n|Hal Newhouser|\n|Dizzy Trout|\n|Virgil Trucks|\n|Stubby Overmire|\n|Al Benton|\n|Jim Tobin|\n|Les Mueller|\n|Tommy Bridges|\n|George Caster|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nLake\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"BaseballPlayer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test432"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Player|\n|---|\n|Kirby Puckett|\n|Kirby Puckett|\n|Shane Mack|\n|Chuck Knoblauch|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBook\nBuilding\nCity\nCountry\nCurrency\nFilm\nLake\nMammal\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test433"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Player|\n|---|\n|Mike Bordick|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nLanguage\nMonarch\nMountain\nNewspaper\nRadioStation\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"BaseballPlayer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test434"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Player|\n|---|\n|Red Roberts|\n|Ted Browning|\n|Vern Morgan|\n|Ken Guettler|\n\n**Candidate column type:**\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"BaseballPlayer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test435"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Player|\n|---|\n|Red Ruffing|\n|Bill Dickey|\n|Hank Greenberg|\n|Joe Gordon|\n|Red Rolfe|\n|Joe Cronin|\n|George Selkirk|\n|Joe DiMaggio|\n|Doc Cramer|\n\n**Candidate column type:**\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nSaint\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"BaseballPlayer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test436"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Player|\n|---|\n|Robin Yount|\n|Cecil Cooper|\n|Ryan Braun*|\n|Paul Molitor|\n|Geoff Jenkins|\n|Ben Oglivie|\n|Prince Fielder|\n|Gorman Thomas|\n|Jim Gantner|\n|Greg Vaughn|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nFilm\nGenre\nMonarch\nMountain\nNewspaper\nRadioStation\nSaint\nSportsTeam\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test437"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Player|\n|---|\n|Walter Johnson|\n|Eddie Guardado|\n|Rick Aguilera|\n|Jim Kaat|\n|Firpo Marberry|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nLake\nLanguage\nMammal\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"BaseballPlayer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test438"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Player|\n|---|\n|Walter Johnson|\n|Jim Kaat|\n|Camilo Pascual|\n|Brad Radke|\n|Bert Blyleven|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"BaseballPlayer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test439"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Author|\n|---|\n|Stanley G. Weinbaum|\n|John W. Campbell|\n|Lester del Rey|\n|Robert A. Heinlein|\n|Theodore Sturgeon|\n|Isaac Asimov|\n|A. E. van Vogt|\n|Lewis Padgett|\n|Clifford D. Simak|\n|Fredric Brown|\n|Murray Leinster|\n|Judith Merril|\n|Cordwainer Smith|\n|Ray Bradbury|\n|Cyril M. Kornbluth|\n|Richard Matheson|\n|Fritz Leiber|\n|Anthony Boucher|\n|James Blish|\n|Arthur C. Clarke|\n|Jerome Bixby|\n|Tom Godwin|\n|Alfred Bester|\n|Damon Knight|\n|Daniel Keyes|\n|Roger Zelazny|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nCountry\nCurrency\nGenre\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test44"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Player|\n|---|\n|\u00e2\\u0080 Randy Johnson|\n|\u00e2\\u0080 Pedro Mart\u00c3\u00adnez|\n|\u00e2\\u0080 John Smoltz|\n|Craig Biggio|\n|Mike Piazza|\n|Jeff Bagwell|\n|Tim Raines|\n|Curt Schilling|\n|Roger Clemens|\n|Barry Bonds|\n|Lee Smith|\n|Edgar Mart\u00c3\u00adnez|\n|Alan Trammell|\n|Mike Mussina|\n|Jeff Kent|\n|Fred McGriff|\n|Larry Walker|\n|\u00e2\\u0080 Gary Sheffield|\n|Mark McGwire|\n|Don Mattingly|\n|Sammy Sosa|\n|\u00e2\\u0080 Nomar Garciaparra|\n|\u00e2\\u0080 Carlos Delgado*|\n|\u00e2\\u0080 Troy Percival*|\n|\u00e2\\u0080 Aaron Boone*|\n|\u00e2\\u0080 Tom Gordon*|\n|\u00e2\\u0080 Darin Erstad*|\n|\u00e2\\u0080 Rich Aurilia*|\n|\u00e2\\u0080 Tony Clark*|\n|\u00e2\\u0080 Jermaine Dye*|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nMayor\nMonarch\nMountain\nPoliticalParty\nSaint\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test440"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Player(s)|\n|---|\n|Miguel Cabrera[148]|\n|Josh Willingham[150]|\n|Philip Humber[151]|\n|Paul Konerko[152]|\n|Jered Weaver[154]|\n|Josh Hamilton[156]|\n|J. P. Arencibia[158]|\n|Paul Konerko[160]|\n|Justin Smoak[162]|\n|Torii Hunter[164]|\n|Mike Trout[164]|\n|Brandon Moss[166]|\n|Will Middlebrooks[168]|\n|Robinson Can\u00c3\u00b3[170]|\n|Kevin Youkilis[172]|\n|Yoenis C\u00c3\u00a9spedes[173]|\n|Adrian Gonzalez[175]|\n|Billy Butler[177]|\n|Billy Butler[177]|\n|Albert Pujols[179]|\n|Adrian Gonzalez[181]|\n|Manny Machado[181]|\n|F\u00c3\u00a9lix Hern\u00c3\u00a1ndez[183]|\n|Adri\u00c3\u00a1n Beltr\u00c3\u00a9[185]|\n|Josh Reddick[187]|\n|James Shields[189]|\n|B. J. Upton[189]|\n|Miguel Cabrera[191]|\n|Ichiro Suzuki[193]|\n|Chris Davis[195]|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nCurrency\nFilm\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"BaseballPlayer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test441"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Political Parties|\n|---|\n|Republican Party|\n|Democratic Party|\n|Independent|\n|Vacant|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nFilm\nGenre\nLanguage\nMammal\nMayor\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"PoliticalParty\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test442"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Political Party|\n|---|\n|America First Party|\n|American Conservative Party|\n|American Freedom Party|\n|America's Party|\n|Black Riders Liberation Party|\n|Christian Liberty Party*|\n|Citizens Party of the United States|\n|Communist Party USA|\n|Freedom Socialist Party|\n|Independent American Party|\n|Justice Party|\n|Modern Whig Party|\n|National Socialist Movement|\n|New Black Panther Party|\n|Objectivist Party|\n|Party for Socialism and Liberation|\n|Peace and Freedom Party|\n|Prohibition Party|\n|Reform Party of the United States of America|\n|Socialist Action|\n|Socialist Alternative|\n|Socialist Equality Party|\n|Socialist Party USA|\n|Socialist Workers Party|\n|Transhumanist Party|\n|United States Marijuana Party|\n|United States Pacifist Party|\n|United States Pirate Party|\n|Unity Party of America|\n|Veterans Party of America|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nLake\nLanguage\nMammal\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nSaint\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test443"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|President|\n|---|\n|Professor W Bickmore|\n|Professor E Coen|\n|FRS|\n|Professor V van Heyningen|\n|FRS|\n|Professor B Charlesworth|\n|FRS|\n|Professor J A Hodgkin|\n|FRS|\n|Professor L Partridge|\n|FRS|\n|Professor M Ashburner|\n|FRS|\n|Professor DJ Sherratt|\n|FRS|\n|Professor PM Nurse|\n|PRS|\n|Professor NE Murray|\n|FRS|\n|Professor Sir DA Hopwood|\n|FRS|\n|Professor J Jinks|\n|FRS|\n|Professor JRS Fincham|\n|FRS|\n|Professor JM Thoday|\n|FRS|\n|Professor R Riley|\n|FRS|\n|Professor W Hayes|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBook\nContinent\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nNewspaper\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Scientist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test444"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Press|\n|---|\n|American Association for Cancer Research (AACR)|\n|American Institute of Physics (AIP)|\n|American Physical Society|\n|American Phytopathological Society|\n|American Society for Microbiology|\n|Nature Publishing Group|\n|IOP Publishing|\n|Oxford Journals|\n|Elsevier|\n|Springer|\n|incl. SpringerOpen Journals and BioMed Central (BMC)|\n|Wiley-Blackwell|\n|PLOS|\n|PeerJ|\n|Royal Society Publishing|\n|American Chemical Society|\n|Cold Spring Harbor Laboratory Press|\n|University of Chicago Press|\n|NRC Research Press|\n|iMedPub|\n|Cambridge University Press|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nCity\nCompany\nContinent\nCountry\nFilm\nGenre\nLake\nMammal\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AcademicJournal\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test445"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Publication|\n|---|\n|Arkansas Times|\n|Artvoice|\n|The Athens News|\n|The Austin Chronicle|\n|Baltimore City Paper|\n|Birmingham Weekly|\n|Black & White|\n|Boise Weekly|\n|Boston's Weekly Dig|\n|Boulder Weekly|\n|Charleston City Paper|\n|Chicago Reader|\n|Chico News & Review|\n|Cincinnati CityBeat|\n|City Newspaper|\n|City Pages (Twin Cities)|\n|Cityview|\n|Cleveland Scene|\n|The Coast|\n|Colorado Springs Independent|\n|Columbia Free Times|\n|Creative Loafing|\n|Creative Loafing (Charlotte)|\n|Creative Loafing (Tampa)|\n|C-Ville Weekly|\n|Dallas Observer|\n|East Bay Express|\n|Easy Reader|\n|Eugene Weekly|\n|Fairfield County Weekly|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Newspaper\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test446"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Publication|\n|---|\n|Bolsa de Noticias|\n|El Nuevo Diario|\n|La Prensa|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMountain\nPlant\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test447"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Publication|\n|---|\n|Copeia|\n|Journal of Applied Ichthyology|\n|Ichthyological Bulletin|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AcademicJournal\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test448"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Publisher|\n|---|\n|Televisa Home Entertainment|\n|Televisa Interactive Media|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test449"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Author|\n|---|\n|Tom Rob Smith|\n|R. D. Wingfield|\n|Dennis Lehane|\n|Joe Hill|\n|Jeffery Deaver|\n|Henning Mankell|\n|S. J. Rozan|\n|Troy Cook|\n|Steve Hockensmith|\n|D. M. Devine|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBook\nCountry\nCurrency\nFilm\nLake\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Writer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test45"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|RBDS program type (North America)|\n|---|\n|No program type or undefined|\n|News|\n|Information|\n|Sports|\n|Talk|\n|Rock|\n|Classic rock|\n|Adult hits|\n|Soft rock|\n|Top 40|\n|Country|\n|Oldies|\n|Soft|\n|Nostalgia|\n|Jazz|\n|Classical|\n|Rhythm and blues|\n|Soft rhythm and blues|\n|Language|\n|Religious music|\n|Religious talk|\n|Personality|\n|Public|\n|College|\n|Spanish Talk|\n|Spanish Music|\n|Hip Hop|\n|Unassigned|\n|Unassigned|\n|Weather|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Genre\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test450"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|RDS program type (EU)|\n|---|\n|No programme type or undefined|\n|News|\n|Current affairs|\n|Information|\n|Sport|\n|Education|\n|Drama|\n|Culture|\n|Science|\n|Varied|\n|Pop music|\n|Rock music|\n|Easy listening|\n|Light classical|\n|Serious classical|\n|Other music|\n|Weather|\n|Finance|\n|Children\u00e2\\u0080\\u0099s programmes|\n|Social affairs|\n|Religion|\n|Phone-in|\n|Travel|\n|Leisure|\n|Jazz music|\n|Country music|\n|National music|\n|Oldies music|\n|Folk music|\n|Documentary|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Genre\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test451"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Radio station|\n|---|\n|Heart Cardiff|\n|Radio Wales|\n|Capital Cardiff|\n|Nation Radio|\n|Capital North West and Wales|\n|The Wave|\n|Heart North Wales|\n|Radio Cymru|\n|Smooth North Wales|\n|Swansea Sound|\n|Smooth South Wales|\n|Smooth North Wales|\n|Radio Pembrokeshire|\n|Bridge FM|\n|Nation Hits|\n|Radio Carmarthenshire|\n|Radio Ceredigion|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBuilding\nCity\nCompany\nContinent\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nNewspaper\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"RadioStation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test452"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Recipient|\n|---|\n|Adams|\n|Neil|\n|ALLEN|\n|Denise Mary|\n|ALLISON|\n|Ian Frederick|\n|BARNAART|\n|Willem Philip|\n|BESSO|\n|Ricky|\n|BETTS|\n|Martin Stephen|\n|BLABY|\n|David Andrew|\n|BRAND|\n|Russell James|\n|BRUEHWILER|\n|Albert|\n|BURTON|\n|Harry Roy|\n|BURTON|\n|Howard Douglas|\n|CLARKE|\n|Judith Rebekah|\n|CONRICK|\n|Neil Joseph|\n|CORCORAN|\n|John Gerard|\n|COSGROVE|\n|Charles Henry Lewis|\n\n**Candidate column type:**\nAirport\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nPlant\nPoliticalParty\nRadioStation\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Scientist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test453"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Recipient|\n|---|\n|Cecilia Payne-Gaposchkin|\n|Charlotte Moore Sitterly|\n|Julie Vinter Hansen|\n|Antonia Maury|\n|Emma Vyssotsky|\n|Helen Sawyer Hogg|\n|Ida Barney[2]|\n|Helen Dodson Prince|\n|Margaret Mayall|\n|Margaret Harwood|\n|Erika B\u00c3\u00b6hm-Vitense|\n|Henrietta Swope|\n|Beatrice Tinsley|\n|Catharine Garmany|\n|Paula Szkody|\n|Lee Anne Willson|\n|Judith Young|\n|Harriet Dinerstein|\n|Rosemary Wyse|\n|Karen Jean Meech|\n|Jacqueline Hewitt|\n|Claudia Megan Urry|\n|Jane Luu|\n|Elizabeth Lada|\n|Stefi Baum|\n|Andrea Ghez|\n|Suzanne Madden|\n|Joan Najita|\n|Chung-Pei Ma|\n|Victoria M. Kaspi|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nCurrency\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Scientist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test454"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Recipient|\n|---|\n|Dr Mark Henderson|\n|Professor Armand Leroi|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nLanguage\nMayor\nMountain\nNewspaper\nRadioStation\nSaint\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test455"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Recipient|\n|---|\n|K. Satchidanandan|\n|Prabha Varma|\n|Puthussery Ramachandran|\n|Desamangalam Ramakrishnan|\n|Vijayalakshmi|\n|O. N. V. Kurup|\n|D. Vinayachandran|\n|Chemmanam Chacko|\n|Attoor Ravi Varma|\n|K. Ayyappa Paniker|\n|Sugathakumari|\n|Vishnunarayanan Namboothiri|\n|P. K. Gopi|\n|Ettumanoor Somadasan|\n|C. Radhakrishnan|\n|Attoor Ravi Varma|\n|P. P. Ramachandran|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMonarch\nNewspaper\nPlant\nRadioStation\nScientist\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Writer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test456"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Recipient|\n|---|\n|Karl August Folkers|\n|The University of Texas at Austin|\n|Albert Eschenmoser|\n|Swiss Federal Institute of Technology|\n|Neil Bartlett|\n|University of California|\n|Berkeley|\n|Edgar Bright Wilson|\n|Harvard University|\n|Sune Bergstr\u00c3\u00b6m|\n|Karolinska Institute|\n|Paul Doughty Bartlett|\n|Texas Christian University|\n|Frank Westheimer|\n|Harvard University|\n|Henry Taube|\n|Stanford University|\n|Kenneth Pitzer|\n|University of California|\n|Berkeley|\n|Duilio Arigoni|\n|Swiss Federal Institute of Technology|\n|George C. Pimentel|\n|University of California|\n|Berkeley|\n|Harry George Drickamer|\n|University of Illinois at Urbana-Champaign|\n|Richard Barry Bernstein|\n|University of California|\n|Los Angeles|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nCompany\nContinent\nFilm\nGenre\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Scientist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test457"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Region|\n|---|\n|Africa|\n|Asia|\n|Europe|\n|Americas|\n|Oceania|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMonarch\nMountain\nPlant\nPoliticalParty\nScientist\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test458"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Region|\n|---|\n|Europe|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nFilm\nGenre\nLake\nMammal\nMayor\nMonarch\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Continent\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test459"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Awarded|\n|---|\n|Christos Papadimitriou|\n|Gordon Plotkin|\n|Martin Dyer|\n|Moshe Vardi|\n|Boris Trakhtenbrot|\n|Kurt Mehlhorn|\n|G\u00c3\u00a9rard Huet|\n|Leslie G. Valiant|\n|Dana S. Scott|\n|Mike Paterson|\n|Robin Milner|\n|Arto Salomaa|\n|Grzegorz Rozenberg|\n|Maurice Nivat|\n|Corrado B\u00c3\u00b6hm|\n|Richard Karp|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nLake\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Scientist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test46"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Region|\n|---|\n|Europe including Turkey|\n|North America (Canada|\n|Mexico and United States)|\n|Latin America excluding Mexico|\n|Other markets|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCompany\nContinent\nCountry\nGenre\nLake\nMammal\nMonarch\nMountain\nPlant\nPoliticalParty\nScientist\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Continent\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test460"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Region|\n|---|\n|Oceania|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Continent\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test461"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Region|\n|---|\n|Suvarnabhumi Airport (BKK)|\n|Don Mueang International Airport (DMK)|\n|Phuket International Airport (HKT)|\n|Chiang Mai International Airport (CNX)|\n|Hat Yai International Airport (HDY)|\n|Mae Fah Luang\u00e2\\u0080\\u0093Chiang Rai International Airport (CEI)|\n\n**Candidate column type:**\nAirport\nBird\nBuilding\nCompany\nContinent\nCountry\nCurrency\nGenre\nLanguage\nMammal\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Airport\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test462"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Region|\n|---|\n|United Kingdom|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCompany\nCurrency\nLanguage\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test463"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Riding|\n|---|\n|Yukon|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCurrency\nLake\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPoliticalParty\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AdministrativeRegion\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test464"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|R\u00c4\\u0081g|\n|---|\n|Kola|\n|Nam\u00c4\\u0081mi|\n|M\u00c4\\u0081law\u00c4\\u0081|\n|Bihan chuli|\n|Bhakta|\n|Jayashree|\n|M\u00c4\\u0081luw\u00c4\\u0081|\n|Bibhas|\n|Asavari|\n|Padmajati|\n|Desh|\n|Kausi|\n|Kedar|\n|Wijaya|\n|Wim\u00c4\\u0081sa|\n|N\u00c4\\u0081ya|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMayor\nMountain\nPlant\nRadioStation\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Genre\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test465"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Saint|\n|---|\n|Alexander Sauli|\n|Gerard Majella|\n|Clemens Maria Hofbauer|\n|Joseph Oriol|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBook\nCompany\nContinent\nCountry\nCurrency\nFilm\nLake\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test466"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Saint|\n|---|\n|Alphonsus Maria de Liguori|\n|Francis de Geronimo|\n|John Joseph of the Cross|\n|Pacificus of San Severino|\n|Veronica Giuliani|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Saint\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test467"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Saint|\n|---|\n|Angela Merici|\n|Benedict the Moor|\n|Colette Boylet|\n|Francis Caracciolo|\n|Hyacintha Mariscotti|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBuilding\nCity\nCompany\nContinent\nCurrency\nLake\nLanguage\nMammal\nMayor\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Saint\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test468"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Saint|\n|---|\n|Gabriel of Our Lady of Sorrows|\n|Marguerite Marie Alacoque|\n|Joan of Arc|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nCity\nCompany\nCurrency\nFilm\nGenre\nLake\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test469"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Base|\n|---|\n|RAF Ipswich|\n|Suffolk|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nFilm\nLake\nLanguage\nMammal\nMonarch\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Airport\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test47"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Saint|\n|---|\n|Michael de Sanctis|\n|Twenty-six Martyrs of Japan|\n|Germaine Cousin|\n|Josaphat Kuntsevych|\n|Leonard of Port Maurice|\n|Mary Frances of the Five Wounds|\n|Nicholas Pieck and 18 companions|\n|Paul of the Cross|\n|Pedro de Arbu\u00c3\u00a9s|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nLanguage\nMayor\nPoliticalParty\nRadioStation\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test470"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Saint|\n|---|\n|Saint|\n|Abadiu of Antinoe|\n|Abakuh|\n|Abamun of Tarnut|\n|Saint Phoenix|\n|Abaskhayroun|\n|Abban of Magheranoidhe|\n|Abban of New Ross|\n|Abban the Hermit|\n|Abbo of Fleury|\n|Abdas of Susa|\n|Abel of Reims|\n|Saint Abib|\n|Abo of Tiflis|\n|Abraham the Coptic|\n|Abraham of Rostov|\n|Abraham of Scetes|\n|Abraham of Smolensk|\n|Abraam Bishop of Faiyum|\n|Abraham the Syrian|\n|Abuna Aregawi|\n|Abundius|\n|Acacius of Amida|\n|Acca of Hexham|\n|Achilleus Kewanuka|\n|Adalbert of Prague|\n|Adalgar|\n|Adalgott|\n|Adamo Abate|\n|Adelaide of Italy|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Saint\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test471"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Saint|\n|---|\n|Th\u00c3\u00a9r\u00c3\u00a8se of Lisieux|\n|Peter Canisius|\n|Madeleine Sophie Barat|\n|Marie-Madeleine Postel|\n|John Vianney|\n|Jean Eudes|\n|Catalina Tom\u00c3\u00a1s|\n|Lucy Filippini|\n|Canadian Martyrs|\n|Robert Bellarmine|\n|Theophilus of Corte|\n|Albertus Magnus|\n|Andrew Fournet|\n|Bernadette Soubirous|\n|Joan Antidea Thouret|\n|Maria Micaela Desmaisieres|\n|Louise de Marillac|\n|Giuseppe Benedetto Cottolengo|\n|Pompilio Maria Pirrotti|\n|Teresa Margaret of the Sacred Heart|\n|John Bosco|\n|Conrad of Parzham|\n|John Fisher|\n|Thomas More|\n|Andrew Bobola|\n|Giovanni Leonardi|\n|Salvador of Horta|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nCurrency\nFilm\nLanguage\nMayor\nMountain\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Saint\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test472"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Sargon|\n|---|\n|Rimush|\n|Man-ishtishu|\n|Naram-Suen|\n|Shar-kali-sharri|\n|Irgigi|\n|Imi|\n|Nanum|\n|Elulu|\n|Dudu|\n|Shu-Durul|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nGenre\nLake\nLanguage\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Monarch\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test473"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|School|\n|---|\n|Arizona State[15]|\n|Cornell[16]|\n|TCNJ[17]|\n|Boston University[18]|\n|UC Berkeley[19]|\n|UCLA[20]|\n|Wesleyan University[21]|\n|Frostburg[22]|\n|DePaul[23]|\n|Carnegie-Mellon[24]|\n|U. Minnesota[25]|\n|U. Florida[26]|\n|U. Delaware[27][28]|\n|U. Georgia [29]|\n|Bucknell[30]|\n|Haverford [31]|\n|Lehigh[32]|\n|Stanford[33]|\n|Emory[34]|\n|U. Michigan[35]|\n|U. Texas-Austin[36]|\n|Pomona[37]|\n|Vanderbilt[38]|\n|Rice[39]|\n|Notre Dame[40]|\n|Purdue[41]|\n|SUNY-Binghamton[42]|\n|Reed[43]|\n|Swarthmore[44]|\n|Harvard[45]|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test474"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|School|\n|---|\n|Arkansas Baptist College|\n|Arkansas Northeastern College|\n|Arkansas State University|\n|Arkansas State University-Beebe|\n|Arkansas State University-Mountain Home|\n|Arkansas State University-Newport|\n|Arkansas Tech University|\n|Black River Technical College|\n|Central Baptist College|\n|College of the Ouachitas|\n|Cossatot Community College of the University of Arkansas|\n|Crowley's Ridge College|\n|East Arkansas Community College|\n|Ecclesia College|\n|Harding University|\n|Henderson State University|\n|Hendrix College|\n|John Brown University|\n|Lyon College|\n|Mid-South Community College|\n|National Park College|\n|North Arkansas College|\n|Northwest Arkansas Community College|\n|Ouachita Baptist University|\n|Ozarka College|\n|Philander Smith College|\n|Phillips Community College of the University of Arkansas|\n|Pulaski Technical College|\n|Rich Mountain Community College|\n|Shorter College|\n\n**Candidate column type:**\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nContinent\nFilm\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSportsTeam\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test475"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Second runner-up|\n|---|\n|Nick Bockwinkel|\n|Bob Backlund|\n|Ricky Steamboat|\n|Jimmy Snuka|\n|Verne Gagne|\n|Tommy Rich|\n|Hulk Hogan|\n|Andr\u00c3\u00a9 the Giant|\n|Kerry Von Erich|\n|Rick Martel|\n|Randy Savage|\n|Randy Savage|\n|Lex Luger|\n|Lex Luger|\n|Hulk Hogan|\n|Bret Hart|\n|Rick Rude|\n|Shawn Michaels|\n|Razor Ramon|\n|Sting|\n|Ric Flair|\n|The Undertaker|\n|Diamond Dallas Page|\n|Sting|\n|Booker T|\n|The Rock|\n|Triple H|\n|Triple H|\n|Eddie Guerrero|\n|A.J. Styles|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nScientist\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Wrestler\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test476"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Series|\n|---|\n|The Island of Doctor Moreau|\n|\\Johnny Black\\\" stories\"|\n|Sirius (novel)|\n|Planet of the Apes (novel)|\n|2001: A Space Odyssey|\n|Instrumentality of Mankind|\n|Uplift Universe|\n|Watchers (novel)|\n|Moreau series|\n|seaQuest DSV|\n|Star Trek: Deep Space Nine|\n|GURPS|\n|Orion's Arm|\n|Schlock Mercenary|\n|Eureka (U.S. TV series)|\n|Assassin's Creed|\n|Mass Effect|\n|Race for the Galaxy|\n|Spore (2008 video game)|\n|Eclipse Phase (role-playing game)|\n|XCOM: Enemy Unknown|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBuilding\nCity\nContinent\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test477"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Service|\n|---|\n|BBC Radio 2|\n|BBC Radio 3|\n|BBC Radio 4|\n|BBC Radio Cymru|\n|BBC Radio 1|\n|Classic FM|\n|BBC Radio Wales|\n|Nation Radio|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBuilding\nCity\nCompany\nContinent\nGenre\nLake\nLanguage\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nScientist\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"RadioStation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test478"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Service|\n|---|\n|BBC Radio Cymru|\n|BBC Radio Wales|\n|Heat Radio|\n|Swansea Sound|\n|96.4 The Wave|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBook\nCity\nContinent\nCountry\nCurrency\nFilm\nLanguage\nMammal\nMountain\nNewspaper\nPlant\nPoliticalParty\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test479"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Base|\n|---|\n|RAF Mellaha|\n|Libya|\n|RAF Castel Benito|\n|Libya|\n|FAF Istres|\n|France|\n|RAF El Adem|\n|Libya|\n|RAF El Adem|\n|Libya|\n|RAF Akrotiri|\n|Cyprus|\n|RAF Navy Point|\n|Falkland Islands|\n|RAF Mount Pleasant|\n|Falkland Islands|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBuilding\nCity\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMayor\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Airport\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test48"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Service|\n|---|\n|BBC Radio Leeds|\n|Heat Radio|\n|Kismat Radio|\n|Kiss|\n|Masti Radio|\n|Panjab Radio|\n|The Pulse|\n|Pulse Two|\n|Sunrise Radio|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nLanguage\nMammal\nMayor\nMonarch\nMountain\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"RadioStation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test480"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Service|\n|---|\n|Star FM|\n|Radio Teddy|\n|Berliner Rundfunk 91|\n|4|\n|Jam FM|\n|94|\n|3 rs2|\n|Radio Eins|\n|Deutschlandfunk|\n|98.8 KISS FM Berlin|\n|Antenne Brandenburg|\n|FluxFM|\n|Klassik Radio|\n|Radyo Metropol FM|\n|Fritz|\n|Energy Berlin|\n|104.6 RTL|\n|105'5 Spreeradio|\n|Radio B2|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLanguage\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"RadioStation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test481"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Sheet B|\n|---|\n|Czech Republic (Bares)|\n|Sweden (Edin)|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test482"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Sheet C|\n|---|\n|China (Wang)|\n|Poland (Klu\u00c5\\u009B)|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test483"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Sheet C|\n|---|\n|Slovenia (Zelinka)|\n|Finland (Rantam\u00c3\u00a4ki)|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nCompany\nCountry\nCurrency\nFilm\nGenre\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test484"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Significant Cities Served|\n|---|\n|Pensacola|\n|Bradenton|\n|Fort Myers|\n|Naples|\n|St. Petersburg|\n|Tampa|\n|Biloxi|\n|Gulfport|\n|Houston|\n|Victoria|\n|Brownsville|\n|Corpus Christi|\n|Harlingen|\n|Victoria|\n|Brownsville|\n|Harlingen|\n|Beaumont|\n|Biloxi|\n|Crestview|\n|Houma|\n|Houston|\n|Lafayette|\n|Lake Charles|\n|Mobile|\n|New Orleans|\n|Pascagoula|\n|Pensacola|\n|Thibodaux|\n|Fort Walton Beach|\n|Mobile|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test485"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Silver|\n|---|\n|Lulia Leorda Moldova (MDA)|\n|Yuan Yuan China (CHN)|\n|Pooja Dhanda India (IND)|\n|Moon Jin-Ju South Korea (KOR)|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBook\nBuilding\nCompany\nContinent\nCountry\nLake\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Wrestler\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test486"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Source|\n|---|\n|Heckler Magazine|\n|The Boston Phoenix|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nLake\nLanguage\nMayor\nMonarch\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test487"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Source|\n|---|\n|The Age|\n|The Sydney Morning Herald|\n|The Border Mail|\n|SX News|\n\n**Candidate column type:**\nAirport\nBaseballPlayer\nBird\nBuilding\nCompany\nContinent\nCurrency\nLake\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Newspaper\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test488"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Source|\n|---|\n|The Guardian|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nLake\nMammal\nMayor\nPlant\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test489"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Basilica of St. Nicholas, Nantes|\n|---|\n|Basilica of St. Donatien et St. Rogatien|\n|Nantes|\n|Basilica of Notre-Dame du Ch\u00c3\u00aane|\n|Vion (\\Basilica of Our Lady of the Oak|\n|Basilica of Notre-Dame d'Avesni\u00c3\u00a8res|\n|Laval|\n|Basilica of Notre-Dame des Miracles|\n|Mayenne|\n|Basilica of Notre-Dame|\n|Pontmain|\n|Basilica of St. Madeleine|\n|Angers|\n|Basilica of Notre-Dame de l\u00e2\\u0080\\u0099\u00c3\\u0089pine|\n|\u00c3\\u0089vron (\\Basilica of Our Lady of the Thorn|\n|Basilica of St. Benedict|\n|Saint-Beno\u00c3\u00aet-sur-Loire|\n|Basilica of St. Louis de Montfort Basilique Saint-Louis-Marie-Grignon-de-Montfort de Saint-Laurent-sur-S\u00c3\u00a8vre|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nFilm\nLake\nLanguage\nMonarch\nMountain\nNewspaper\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Building\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test49"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Source|\n|---|\n|The Guardian|\n|Jazzwise Magazine|\n\n**Candidate column type:**\nAcademicJournal\nBird\nBook\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMonarch\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Newspaper\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test490"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Source|\n|---|\n|The Japan Times|\n|Metropolis|\n|Nichi Bei Times|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nLake\nLanguage\nMammal\nMayor\nMonarch\nNewspaper\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Newspaper\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test491"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Source|\n|---|\n|The Sunday Times|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nLake\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nSaint\nScientist\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Newspaper\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test492"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Sourcebook|\n|---|\n|Age of Heroes Campaign Sourcebook|\n|Arabian Adventures|\n|Chronomancer|\n|City of Gold|\n|Defilers and Preservers - The Wizard of Athas|\n|Diablo II: The Awakening|\n|Elves of Evermeet|\n|Jakandor - Isle of Destiny|\n|Masque of the Red Death|\n|Player's Option: Skills & Powers|\n|The Complete Barbarian\u00e2\\u0080\\u0099s Handbook|\n|The Complete Bard\u00e2\\u0080\\u0099s Handbook|\n|The Complete Book of Dwarves|\n|The Complete Book of Elves|\n|The Complete Book of Gnomes & Halflings|\n|The Complete Book of Humanoids|\n|The Complete Book of Necromancers|\n|The Complete Druid's Handbook|\n|The Complete Fighter's Handbook|\n|The Complete Gladiator\u00e2\\u0080\\u0099s Handbook|\n|The Complete Ninja\u00e2\\u0080\\u0099s Handbook|\n|The Complete Paladin\u00e2\\u0080\\u0099s Handbook|\n|The Complete Priest's Handbook|\n|The Complete Ranger\u00e2\\u0080\\u0099s Handbook|\n|The Complete Sha\u00e2\\u0080\\u0099ir\u00e2\\u0080\\u0099s Handbook|\n|The Complete Spacefarer\u00e2\\u0080\\u0099s Handbook|\n|The Complete Thief's Handbook|\n|The Complete Wizard's Handbook|\n|The Glory of Rome Campaign Sourcebook|\n|The Planewalker's Handbook|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test493"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Species & Synonyms|\n|---|\n|Geum laciniatum Murray|\n|Geum latilobum Somm. & Levier 1893 [39]|\n|Geum lechlerianum Schltdl.|\n|Geum leiospermum Petrie|\n|Geum lobatum (Baldwin) Smedmark|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nContinent\nCountry\nGenre\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPlant\nSportsTeam\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Plant\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test494"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Species|\n|---|\n|Abelmoschus esculentus (L.) Moench|\n|Actinidia deliciosa (A. Chev.) C.F.Liang & A.R.Ferguson|\n|Agave fourcroydes Lem.|\n|Agave sisalana Perrine|\n|Allium ampeloprasum L.|\n|Allium cepa L.|\n|Allium cornutum Clementi|\n|Ananas comosus (L.) Merr is|\n|Annona x atemoya|\n|Arachis hypogaea L.|\n|Armoracia rusticana P.Gaertn.|\n|B.Mey. & Scherb.|\n|Artocarpus altilis (Parkinson ex F.A.Zorn) Fosberg|\n|Avena sativa L.|\n|Brassica carinata A.Braun|\n|Brassica juncea (L.) Czern.|\n|Brassica napus L.|\n|Cajanus cajan (L.) Millsp.|\n|Cannabis sativa L.|\n|Carica pentagona Heilborn|\n|Carya illinoinensis (Wangenh.) K.Koch|\n|Castanea dentata (Marshall) Borkh|\n|Castanea sativa Mill.|\n|Chenopodium quinoa Willd.|\n|Cicer arietinum L.|\n|Cichorium intybus L.|\n|Citrus aurantiifolia (Christm.) Swingle|\n|Citrus aurantium L.|\n|Citrus clementina hort.|\n|Citrus limon (L.) Osbeck|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Plant\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test495"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Species|\n|---|\n|Adiantum capillus-veneris|\n|Alsophila spinulosa|\n|Angiopteris evecta|\n|Equisetum arvense|\n|Huperzia lucidula|\n|Isoetes flaccida|\n|Psilotum nudum|\n|Selaginella moellendorffii|\n|Selaginella uncinata|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nCity\nCountry\nCurrency\nFilm\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test496"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Species|\n|---|\n|Aiphanes acanthophylla (Mart.) Burret|\n|Aiphanes acaulis Galeano & R.Bernal|\n|Aiphanes aculeata Willd.|\n|Aiphanes bicornis Cer\u00c3\u00b3n & R.Bernal|\n|Aiphanes caryotifolia (Kunth) H.Wendl.|\n|Aiphanes chiribogensis Borchs. & Balslev|\n|Aiphanes chocoensis A.H.Gentry|\n|Aiphanes concinna H.E.Moore|\n|Aiphanes corallina (Mart.) H.Wendl.|\n|Aiphanes deltoidea Burret|\n|Aiphanes disticha (Linden) Burret|\n|Aiphanes duquei Burret|\n|Aiphanes echinocarpa Dugand|\n|Aiphanes eggersii Burret|\n|Aiphanes elegans (Linden & H.Wendl.) H.Wendl.|\n|Aiphanes erinacea (H.Karst.) H.Wendl.|\n|Aiphanes ernestii (Burret) Burret|\n|Aiphanes erosa (Mart.) Burret|\n|Aiphanes fosteriorum H.E.Moore|\n|Aiphanes fuscopubens L.H.Bailey|\n|Aiphanes gelatinosa H.E.Moore|\n|Aiphanes gracilis Burret|\n|Aiphanes graminifolia Galeano & R.Bernal|\n|Aiphanes grandis Borchs. & Balslev|\n|Aiphanes hirsuta Burret|\n|Aiphanes horrida (Jacq.) Burret|\n|Aiphanes kalbreyeri Burret|\n|Aiphanes killipii Burret|\n|Aiphanes leiospatha Burret|\n|Aiphanes leiostachys Burret|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBook\nCity\nContinent\nCountry\nCurrency\nGenre\nLanguage\nMammal\nMayor\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Plant\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test497"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Species|\n|---|\n|Bowhead whale Balaena mysticetus|\n|North Pacific right whale Eubalaena japonica|\n|Blue whale Balaenoptera musculus|\n|Fin whale Balaenoptera physalus|\n|Sei whale Balaenoptera borealis|\n|Minke whale Balaenoptera acutorostrata|\n|Humpback whale Megaptera novaeangliae|\n|Gray whale Eschrichtius robustus|\n|Northern right-whale dolphin Lissodelphis borealis|\n|Striped dolphin Stenella coeruleoalba|\n|Pacific white-sided dolphin Lagenorhynchus obliquidens|\n|Short-finned pilot whale Globicephala macrorhynchus|\n|Risso's dolphin Grampus griseus|\n|Killer whale Orcinus orca|\n|Harbor porpoise Phocoena phocoena|\n|Dall's porpoise Phocoenoides dalli|\n|Beluga whale Delphinapterus leucas|\n|Narwhal Monodon monoceros|\n|Sperm whale Physeter macrocephalus|\n|Cuvier's beaked whale Ziphius cavirostris|\n|Stejneger's beaked whale Mesoplodon stejnegeri|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCurrency\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mammal\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test498"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Species|\n|---|\n|Red-throated loon|\n|Pacific loon|\n|Common loon|\n|Pied-billed grebe|\n|Horned grebe|\n|Eared grebe|\n|Western grebe|\n|Clark's grebe|\n|American white pelican|\n|Brown pelican|\n|Brandt's cormorant|\n|Double-crested cormorant|\n|Pelagic cormorant|\n|American bittern|\n|Great blue heron|\n|Great egret|\n|Snowy egret|\n|Cattle egret|\n|Green heron|\n|Black-crowned night heron|\n|Turkey vulture|\n|Canada goose|\n|Brant|\n|Wood duck|\n|Gadwall|\n|American wigeon|\n|Mallard|\n|Blue-winged teal|\n|Cinnamon teal|\n|Northern shoveler|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nMammal\nMayor\nMonarch\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Bird\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test499"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Ivatan|\n|Hawaiian|\n|Javanese|\n|Indonesian|\n|Malagasy|\n\n**Candidate column type:**\nAcademicJournal\nBird\nBook\nBuilding\nCity\nCountry\nCurrency\nFilm\nGenre\nLake\nMammal\nMayor\nMonarch\nNewspaper\nPlant\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test5"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Binomial name|\n|---|\n|Agrostis castellana|\n|Hordeum vulgare|\n|Hydrangea spp.|\n|Melastoma malabathricum L.|\n|Solidago hispida (Solidago canadensis L.)|\n|Vicia faba|\n|Brassica napus|\n|Salix spp.|\n|Amanita strobiliformis|\n|Brassica juncea|\n|Agrostis capillaris L.|\n|Agrostis castellana|\n|Agrostis tenerrima Trin.|\n|Pteris vittata L.|\n|Sarcosphaera coronaria|\n|xxx|\n|Azolla spp.|\n|Bacopa monnieri|\n|Brassica juncea L.|\n|Brassica napus|\n|Vallisneria americana|\n|Dicoma niccolifera|\n|Eichhornia crassipes|\n|Helianthus annuus|\n|Hydrilla verticillata|\n|Medicago sativa|\n|Pistia stratiotes|\n|Salix spp.|\n|Salvinia molesta|\n|Spirodela polyrhiza|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nMammal\nMayor\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Plant\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test50"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Standard|\n|---|\n|Encyclopedia of China|\n|Cihai|\n|Ciyuan|\n|Chinese Academy of Surveying and Mapping ideographs|\n|Geology Press ideographs|\n|Old Chinese Dictionary (\u00e5\\u008F\u00a4\u00e4\u00bb\u00a3\u00e6\u00b1\\u0089\u00e8\u00af\u00ad\u00e8\u00af\\u008D\u00e5 \u00b8)|\n|Hanyu Da Cidian|\n|ID System of the Ministry of Public Security of China|\n|Commercial Press ideographs|\n|Kangxi Dictionary|\n|People's Daily ideographs|\n|Hanyu Da Cidian Press ideographs|\n|Xiandai Hanyu Cidian|\n|Xinhua Zidian|\n|Hanyu Fangyan Dacidian (\u00e6\u00b1\\u0089\u00e8\u00af\u00ad\u00e6\\u0096\u00b9\u00e8\u00a8\\u0080\u00e5\u00a4\u00a7\u00e8\u00be\\u009E\u00e5 \u00b8|\n|Dictionary of Chinese Dialects)|\n|Collections of Bronze Inscriptions from Yin and Zhou Dynasties (\u00e6\u00ae\u00b7\u00e5\\u0091\u00a8\u00e9\\u0087\\u0091\u00e6\\u0096\\u0087\u00e9\\u009B\\u0086\u00e6\\u0088\\u0090\u00e5\u00bc\\u0095\u00e5\u00be\\u0097)|\n|Japanese Kokuji Collection|\n|Macao Information System Character Set (\u00e6\u00be\u00b3\u00e9\\u0096\\u0080\u00e8\u00b3\\u0087\u00e8\u00a8\\u008A\u00e7\u00b3\u00bb\u00e7\u00b5\u00b1\u00e5\u00ad\\u0097\u00e9\\u009B\\u0086)|\n|CNS 11643-1992 plane 12|\n|CNS 11643-1992 plane 13|\n|CNS 11643-1992 plane 14|\n|UTC sources|\n|Dictionary on Nom (T\u00e1\u00bb\u00ab \u00c4\\u0091i\u00e1\u00bb\\u0083n ch\u00e1\u00bb\u00af N\u00c3\u00b4m) Dictionary on Nom of Tay ethnic (T\u00e1\u00bb\u00ab \u00c4\\u0091i\u00e1\u00bb\\u0083n ch\u00e1\u00bb\u00af N\u00c3\u00b4m T\u00c3 y) Lookup Table for Nom in the South (B\u00e1\u00ba\u00a3ng tra ch\u00e1\u00bb\u00af N\u00c3\u00b4m mi\u00e1\u00bb\\u0081n Nam)|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nLanguage\nMammal\nMonarch\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test500"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|State|\n|---|\n|Alabama|\n|Alaska|\n|Arizona|\n|Arkansas|\n|California|\n|Colorado|\n|Connecticut|\n|Delaware|\n|Florida|\n|Georgia|\n|Guam|\n|Hawaii|\n|Idaho|\n|Illinois|\n|Indiana|\n|Iowa|\n|Kansas|\n|Kentucky|\n|Louisiana|\n|Maine|\n|Maryland|\n|Massachusetts|\n|Michigan|\n|Minnesota|\n|Mississippi|\n|Missouri|\n|Montana|\n|Nebraska|\n|Nevada|\n|New Hampshire|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nGenre\nMammal\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AdministrativeRegion\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test501"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|State|\n|---|\n|California|\n|Texas|\n|New York|\n|Florida|\n|Illinois|\n|Pennsylvania|\n|Ohio|\n|Michigan|\n|Georgia|\n|North Carolina|\n|New Jersey|\n|Virginia|\n|Washington|\n|Massachusetts|\n|Indiana|\n|Arizona|\n|Tennessee|\n|Missouri|\n|Maryland|\n|Wisconsin|\n|Minnesota|\n|Colorado|\n|Alabama|\n|South Carolina|\n|Louisiana|\n|Kentucky|\n|Oregon|\n|Oklahoma|\n|Connecticut|\n|Iowa|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AdministrativeRegion\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test502"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|State|\n|---|\n|Schleswig-Holstein|\n|Mecklenburg-Vorpommern|\n|Hamburg|\n|Saarland|\n|Bremen|\n|North Rhine-Westphalia|\n|Bavaria|\n|Baden-W\u00c3\u00bcrttemberg|\n|Lower Saxony|\n|Hesse|\n|Saxony|\n|Rhineland-Palatinate|\n|Berlin|\n|Saxony-Anhalt|\n|Thuringia|\n|Brandenburg|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nGenre\nLanguage\nMammal\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AdministrativeRegion\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test503"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|State|\n|---|\n|South Australia|\n|New South Wales|\n|Tasmania|\n|Victoria|\n|Queensland|\n|Western Australia|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBird\nCity\nCompany\nContinent\nGenre\nLake\nLanguage\nMayor\nMonarch\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AdministrativeRegion\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test504"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|State|\n|---|\n|Texas|\n|Louisiana|\n|Florida|\n|Virginia|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nFilm\nGenre\nMammal\nMayor\nMountain\nNewspaper\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test505"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Submitting country|\n|---|\n|Argentina|\n|Austria|\n|Belgium|\n|Bhutan|\n|Brazil|\n|Canada|\n|China|\n|Colombia|\n|Croatia|\n|Czech Republic|\n|Denmark|\n|Finland|\n|France|\n|Georgia|\n|Germany|\n|Greece|\n|Hong Kong|\n|Hungary|\n|Iceland|\n|India|\n|Indonesia|\n|Iran|\n|Israel|\n|Italy|\n|Japan|\n|Lebanon|\n|Mexico|\n|Nepal|\n|Netherlands|\n|Norway|\n\n**Candidate column type:**\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nFilm\nGenre\nLake\nLanguage\nMammal\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test506"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Susceptible Families|\n|---|\n|Orchidaceae|\n|Liliaceae|\n|Asteraceae|\n|Caryophyllaceae|\n|Asparagaceae|\n|Crassulaceae|\n|Amaryllidaceae|\n|Begoniaceae|\n\n**Candidate column type:**\nBaseballPlayer\nBird\nBook\nBuilding\nCountry\nCurrency\nFilm\nLake\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nScientist\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test507"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|THE LAKE|\n|---|\n|Caspian Sea|\n|Aike|\n|Alakol|\n|Aral|\n|Balkhash|\n|Bartogay|\n|Chagan|\n|Issyk[2]|\n|Jasybay|\n|Kayindi|\n|Kamyslybas|\n|Kapchagay|\n|Kopa|\n|Markakol|\n|Sasykkol|\n|Tengiz|\n|Zaysan|\n|Zerenda|\n|Zhasylkol|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBuilding\nCity\nCompany\nContinent\nCountry\nFilm\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test508"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Team #1|\n|---|\n|Fostiras|\n|Kallithea|\n|Aris|\n|Anagennisi Epanomi|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"SportsTeam\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test509"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Blessed|\n|---|\n|Cristobal of Saint Catherine|\n|Luca Passi|\n|Nicol\u00c3\u00b2 Rusca|\n|Francisca de Paula de Jesus|\n|Luigi Novarese|\n|Giuseppe Puglisi|\n|Zofia Czeska-Maciejowska|\n|Ma\u00c5\\u0082gorzata Szewczyk|\n|Edward Focherini|\n|Vladimir Ghika|\n|Antonio Franco|\n|Maria Bolognesi|\n|Jose Gabriel del Rosario Brochero|\n|Thomas Olera|\n|Miroslav Bule\u00c5\u00a1i\u00c4\\u0087|\n|Rolando Rivi|\n|522 Spanish Martyrs|\n|Istv\u00c3\u00a1n S\u00c3\u00a1ndor|\n|Maria Theresia Bonzel|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Saint\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test51"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Team #1|\n|---|\n|Herbalife Gran Canaria|\n|Khimki|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nLake\nLanguage\nMammal\nMayor\nMonarch\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"SportsTeam\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test510"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Team|\n|---|\n|@ Cleveland|\n|Miami|\n|@ Indiana|\n|Phoenix|\n|@ Miami|\n|Detroit|\n|Cleveland|\n|@ Oklahoma City|\n|@ San Antonio|\n|Philadelphia|\n|@ Miami|\n|Charlotte|\n\n**Candidate column type:**\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nGenre\nLake\nLanguage\nMayor\nMonarch\nNewspaper\nPlant\nPoliticalParty\nSaint\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"SportsTeam\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test511"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Team|\n|---|\n|Arsenal|\n|Borussia Dortmund|\n|Auxerre|\n|PSV Eindhoven|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nMammal\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test512"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Team|\n|---|\n|Aston Villa|\n|Ipswich Town|\n|Arsenal|\n|West Bromwich Albion|\n|Liverpool|\n|Southampton|\n|Nottingham Forest|\n|Manchester United|\n|Leeds United|\n|Tottenham Hotspur|\n|Stoke City|\n|Manchester City|\n|Birmingham City|\n|Middlesbrough|\n|Everton|\n|Coventry City|\n|Sunderland|\n|Wolverhampton Wanderers|\n|Brighton & Hove Albion|\n|Norwich City|\n|Leicester City|\n|Crystal Palace|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nMammal\nMayor\nMountain\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"SportsTeam\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test513"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Team|\n|---|\n|Calgary Stampeders|\n|Winnipeg Blue Bombers|\n|Regina Roughriders|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nLanguage\nMammal\nMayor\nMonarch\nMountain\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"SportsTeam\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test514"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Team|\n|---|\n|Denmark (Frederiksen)|\n|Norway (Ulsrud)|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nGenre\nLake\nLanguage\nMammal\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test515"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Team|\n|---|\n|Feijenoord|\n|AFC Ajax|\n|SC Enschede|\n|Be Quick 1887|\n|NAC|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nFilm\nLake\nLanguage\nMammal\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"SportsTeam\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test516"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Team|\n|---|\n|Indiana|\n|California|\n|Arizona|\n|New Jersey|\n|Virginia|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nPoliticalParty\nRadioStation\nSportsTeam\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AdministrativeRegion\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test517"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Team|\n|---|\n|Kyung Hee University|\n|Korea University|\n|Yonsei University|\n|Chung-Ang University|\n|University of Suwon|\n|Hanyang University|\n|Myongji University|\n|Seoul National University|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nLake\nLanguage\nMayor\nMountain\nPlant\nPoliticalParty\nRadioStation\nScientist\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"University\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test518"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Team|\n|---|\n|Minnesota 1|\n|New York|\n\n**Candidate column type:**\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nScientist\nSportsTeam\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test519"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Book|\n|---|\n|Psalms|\n|Deuteronomy|\n|1 Enoch|\n|Genesis|\n|Isaiah|\n|Jubilees|\n|Exodus|\n|Leviticus|\n|Numbers|\n|Minor Prophets|\n|Daniel|\n|Jeremiah|\n|Ezekiel|\n|Job|\n|Tobit|\n|1 & 2 Kings|\n|1 & 2 Samuel|\n|Judges|\n|Song of Songs (Canticles)|\n|Ruth|\n|Lamentations|\n|Sirach|\n|Ecclesiastes|\n|Joshua|\n\n**Candidate column type:**\nAdministrativeRegion\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test52"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Team|\n|---|\n|Oregon State (W)|\n|Oregon State (W)|\n|Oregon State (W)|\n|Oregon State (W)|\n|Oregon State (W)|\n|Oregon State (W)|\n|Oregon State (W)|\n|Oregon State (W)|\n|Oregon State (W)|\n|Oregon State (W)|\n|Pacific (W)|\n|Pacific (W)|\n|Pacific (W)|\n|Pacific (W)|\n|Pacific (W)|\n|Pacific (W)|\n|Pacific (W)|\n|Pacific (W)|\n|Pacific (W)|\n|Ohio State (M)|\n|Ohio State (M)|\n\n**Candidate column type:**\nAdministrativeRegion\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"University\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test520"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Team|\n|---|\n|Pepperdine|\n|Pepperdine|\n|Pepperdine|\n|Pepperdine|\n|Pepperdine|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nLake\nLanguage\nMammal\nMonarch\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"SportsTeam\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test521"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Team|\n|---|\n|THW Kiel|\n|SG Flensburg-Handewitt|\n|Rhein-Neckar L\u00c3\u00b6wen|\n|F\u00c3\u00bcchse Berlin|\n|HSV Hamburg|\n|TSV Hannover-Burgdorf|\n|HSG Wetzlar|\n|SC Magdeburg|\n|TBV Lemgo|\n|MT Melsungen|\n|Frisch Auf G\u00c3\u00b6ppingen|\n|TuS Nettelstedt-L\u00c3\u00bcbbecke|\n|HBW Balingen-Weilstetten|\n|GWD Minden|\n|VfL Gummersbach|\n|TV Grosswallstadt|\n|TV 1893 Neuhausen|\n|TUSEM Essen|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBuilding\nCity\nContinent\nFilm\nLanguage\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test522"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Team|\n|---|\n|Universitario|\n|Sporting Cristal|\n|Cienciano|\n|Melgar|\n|Alianza Atl\u00c3\u00a9tico|\n|Wanka|\n|Uni\u00c3\u00b3n Minas|\n|Alianza Lima|\n|Sport Boys|\n|Juan Aurich|\n|Municipal|\n|UPAO|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCurrency\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"SportsTeam\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test523"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Team \\\\ Round|\n|---|\n|Anderlecht|\n|Genk|\n|Gent|\n|Club Brugge|\n|Lokeren|\n|Standard Li\u00c3\u00a8ge|\n|Mechelen|\n|Westerlo|\n|Cercle Brugge|\n|Kortrijk|\n|Zulte Waregem|\n|Sint-Truiden|\n|Germinal Beerschot|\n|Lierse|\n|Eupen|\n|Charleroi|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nGenre\nLake\nLanguage\nMammal\nMayor\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test524"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Term|\n|---|\n|John R. Williams|\n|Henry Jackson Hunt|\n|Jonathan Kearsley|\n|John Biddle|\n|Jonathan Kearsley|\n|John R. Williams|\n|Marshall Chapin|\n|Levi Cook|\n|Marshall Chapin|\n|Charles Christopher Trowbridge|\n|Andrew Mack|\n|Levi Cook|\n|Henry Howard|\n|Augustus Seymour Porter|\n|Asher B. Bates|\n|De Garmo Jones|\n|Zina Pitcher|\n|Douglass Houghton|\n|Zina Pitcher|\n|John R. Williams|\n|James A. Van Dyke|\n|Frederick Buhl|\n|Charles Howard|\n|John Ladue|\n|Zachariah Chandler|\n|John H. Harmon|\n|Oliver Moulton Hyde|\n|Henry Ledyard|\n|Oliver Moulton Hyde|\n|John Patton|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCountry\nCurrency\nFilm\nLake\nMayor\nMonarch\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mayor\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test525"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Term|\n|---|\n|Solomon Sibley|\n|Elijah Brush|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBird\nBook\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mayor\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test526"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|50 Cent: Bulletproof|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBuilding\nCompany\nCountry\nCurrency\nGenre\nLanguage\nMammal\nMountain\nNewspaper\nRadioStation\nSaint\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"VideoGame\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test527"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Adventures of Pip|\n|Cobalt|\n|The Garrick Arms|\n|Just Shapes & Beats|\n|Mighty No. 9|\n|Ong Bak Tri: The Video Game|\n|Ori and the Blind Forest|\n|Pressure|\n|Road Redemption|\n|Shantae: Half-Genie Hero|\n|Tiny Brains|\n|Tumblestone|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBook\nBuilding\nCompany\nCountry\nFilm\nLanguage\nMammal\nMayor\nMonarch\nNewspaper\nPlant\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"VideoGame\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test528"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Albany Business Review|\n|Albuquerque Business First|\n|Atlanta Business Chronicle|\n|Austin Business Journal|\n|Baltimore Business Journal|\n|Birmingham Business Journal|\n|Boston Business Journal|\n|Buffalo Business First|\n|Charlotte Business Journal|\n|Chicago Business Journal|\n|Cincinnati Business Courier|\n|Columbus Business First|\n|Dallas Business Journal|\n|Dayton Business Journal|\n|Denver Business Journal|\n|Triad Business Journal|\n|Pacific Business News|\n|Houston Business Journal|\n|Jacksonville Business Journal|\n|Kansas City Business Journal|\n|L.A. Biz|\n|Business First of Louisville|\n|Memphis Business Journal|\n|Milwaukee Business Journal|\n|Minneapolis \\\/ St. Paul Business Journal|\n|Nashville Business Journal|\n|Orlando Business Journal|\n|Philadelphia Business Journal|\n|Phoenix Business Journal|\n|Pittsburgh Business Times|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AcademicJournal\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test529"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Book|\n|---|\n|Twenty Thousand Leagues Under the Sea|\n|Journey to the Center of the Earth|\n|Leaves of Grass|\n|Anna Karenina|\n|A Confession|\n\n**Candidate column type:**\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nGenre\nMammal\nMayor\nMonarch\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test53"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Almuric|\n|People of the Dark|\n|Black Canaan|\n|Delenda Est|\n|Golnor the Ape|\n|The Isle of the Eons|\n|Nekht Semerkeht|\n|Spear and Fang|\n|The Thunder-Rider|\n|The Tomb of the Dragon|\n|Under the Baobab Tree|\n|Valley of the Lost|\n|The Voice of El-Lil|\n|Witch from Hell's Kitchen|\n\n**Candidate column type:**\nAcademicJournal\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nLanguage\nMammal\nMountain\nPlant\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test530"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Another Life|\n|Border Princes|\n|Slow Decay|\n|Something in the Water|\n|Trace Memory|\n|The Twilight Streets|\n|Pack Animals|\n|SkyPoint|\n|Almost Perfect|\n|Into the Silence|\n|Bay of the Dead|\n|The House that Jack Built|\n|Risk Assessment|\n|The Undertaker's Gift|\n|Consequences|\n|First Born[2]|\n|Long Time Dead[2]|\n|The Men Who Sold The World[2]|\n|Exodus Code|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nLake\nLanguage\nMayor\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test531"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Antoine et S\u00c3\u00a9bastien (fr)|\n|OK patron (fr)|\n|That Most Important Thing: Love|\n|The Good and the Bad|\n|Mado|\n|Violette et Fran\u00c3\u00a7ois (fr)|\n|Le Point de mire (fr)|\n|Dirty Dreamer|\n|The Savage State|\n|Return to the Beloved|\n|Us Two|\n|Slow Motion a.k.a. Every Man for Himself|\n|Malevil|\n|Tricheurs|\n|My Nights Are More Beautiful Than Your Days|\n|Van Gogh|\n|Toutes peines confondues|\n|Place Vend\u00c3\u00b4me|\n|Merci pour le chocolat|\n|Summer Things|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nFilm\nGenre\nMammal\nMayor\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test532"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Babruvahana|\n|Bala Nagamma|\n|Bhakta Potana|\n|Bhale Pelli|\n|Deena Bandhu|\n|Gharana Donga|\n|Honest Rogue|\n|Jeevana Mukthi|\n|Maayala Marati|\n|Patni|\n|Satyabhama|\n|Seeta Rama Jananam|\n|Shanta Bala Nagamma|\n|Sumathi|\n|Tarumaru|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nCompany\nContinent\nCountry\nFilm\nLake\nMammal\nMonarch\nMountain\nNewspaper\nPoliticalParty\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test533"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Blitzkrieg 3|\n|Age of Empires Online|\n|Beyond Protocol|\n|Boom Beach|\n|Clash of Clans|\n|Company of Heroes Online|\n|DarkSpace|\n|Dawn of Fantasy|\n|End of Nations|\n|Happy Farm|\n|Illyriad|\n|Imperia Online|\n|Mankind|\n|Monopoly City Streets|\n|Saga|\n|Shattered Galaxy|\n|Society|\n|Stronghold Kingdoms|\n|Travian|\n|Mechhero|\n|War of Legends|\n|Zandagort|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCurrency\nGenre\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPoliticalParty\nSportsTeam\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"VideoGame\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test534"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Bust a Groove|\n|Star Ocean: The Second Story|\n|Tomb Raider III (Japanese version)|\n|Bust a Groove 2|\n|Torneko: The Last Hope|\n|Valkyrie Profile|\n|Dragon Warrior VII|\n|Astron\u00c5\\u008Dka|\n|Itadaki Street: Gorgeous King|\n|Great Hits|\n|Eurasia Express Satsujin Jiken|\n|Googootrops|\n|Mystic Ark: Maboroshi Gekijou|\n|Segare Ijiri|\n|Pop'n Tanks!|\n|Rakugaki Showtime|\n|Planet Laika|\n|Kaikan Phrase: Datenshi Kourin|\n|Utautau: Seirei Songs|\n|Ten Made Jack: Odorokimamenoki Dai Tou Bou!!|\n|Omiai Commando: Bakappuru Nitsukkomiwo|\n|Suzuki Bakuhatsu|\n|Blade Arts: Tasogare no Miyako R'lyeh|\n|Riven (Japanese version)|\n|Eggs of Steel (Japanese version)|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nContinent\nCountry\nCurrency\nFilm\nGenre\nLanguage\nMonarch\nPlant\nPoliticalParty\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"VideoGame\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test535"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Colour Blossoms|\n|W.|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBook\nBuilding\nCity\nCompany\nFilm\nGenre\nLake\nLanguage\nMayor\nMonarch\nMountain\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test536"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Dinner for Schmucks|\n|I Am Number Four|\n|Cowboys & Aliens|\n|The Help|\n|Fright Night|\n|Real Steel|\n|War Horse|\n|People Like Us|\n|Lincoln|\n|The Fifth Estate|\n|Delivery Man|\n|Need for Speed|\n|The Hundred-Foot Journey|\n|Bridge of Spies|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nMammal\nMonarch\nMountain\nPoliticalParty\nRadioStation\nSaint\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test537"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|EGAint[34]|\n|Blockout|\n|Tetris 2|\n|Frac4D[35]|\n|Quadrapassel (Formerly Gnometris)|\n|KBlocks|\n|Wordtris|\n|La Bastille|\n|Tetris 1D[39]|\n|Tetris Grand Master 3|\n|NullpoMino|\n|Not Tetris|\n\n**Candidate column type:**\nAcademicJournal\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nGenre\nLake\nMammal\nMountain\nPlant\nRadioStation\nSaint\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test538"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|EGAint[34]|\n|Lockjaw|\n|Blockout|\n|Tetris 2|\n|Frac4D[35]|\n|Quadrapassel (Formerly Gnometris)|\n|KBlocks|\n|Wordtris|\n|La Bastille|\n|Tetris 1D[39]|\n|Tetris Grand Master 3|\n|NullpoMino|\n|Not Tetris|\n|Twitch Plays Tetris|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMayor\nMonarch\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test539"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Bronze|\n|---|\n|So Sim-hyang North Korea (PRK)|\n|Lyudmyla Balushka Ukraine (UKR)|\n|Oleksandra Kohut Ukraine (UKR)|\n|Yuri Kai Japan (JPN)|\n|Alena Filipava Belarus (BLR)|\n|Tonya Verbeek Canada (CAN)|\n|Marianna Sastin Hungary (HUN)|\n|Hanna Vasylenko Ukraine (UKR)|\n|Yelena Shalygina Kazakhstan (KAZ)|\n|Justine Bouchard Canada (CAN)|\n|Ifeoma Iheanacho Nigeria (NGR)|\n|Badrakhyn Odonchimeg Mongolia (MGL)|\n|Maider Unda Spain (ESP)|\n|Stanka Zlateva Bulgaria (BUL)|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nGenre\nLake\nLanguage\nMammal\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Wrestler\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test54"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Enter the Matrix|\n|Mass Effect 2|\n|Mass Effect 3|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nContinent\nFilm\nGenre\nLake\nLanguage\nMayor\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nScientist\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"VideoGame\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test540"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Everything About Her|\n|Kid Kulafu|\n|Boy Golden|\n|Ang Panday 2|\n|Super Inday and the Golden Bibe [1]|\n|Kamoteng Kahoy|\n|Ang Panday|\n|Iskul Bukol 20 Years After|\n|Supahpapalicious|\n|Shake|\n|Rattle & Roll X|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nGenre\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test541"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Final Fantasy X|\n|Final Fantasy X-2|\n|Star Wars: Knights of the Old Republic|\n|Kingdom Hearts II|\n|Project Sylpheed|\n|Final Fantasy Tactics: The War of the Lions|\n|Valkyria Chronicles|\n|Terminator Salvation|\n|Valkyria Chronicles 2|\n|Dissidia 012 Final Fantasy|\n|Final Fantasy XIII-2|\n\n**Candidate column type:**\nAirport\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nLake\nLanguage\nMonarch\nNewspaper\nPlant\nRadioStation\nScientist\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"VideoGame\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test542"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Halo: The Master Chief Collection|\n|Dead Rising 3|\n|Forza Motorsport 5|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nLake\nMammal\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"VideoGame\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test543"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Homeworld: Cataclysm|\n|Counter-Strike|\n|Global Operations|\n|Treasure Planet: Battle at Procyon|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBook\nCompany\nCountry\nCurrency\nLake\nMayor\nNewspaper\nPlant\nPoliticalParty\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"VideoGame\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test544"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Ishq Ishq Ishq|\n|Jaan Hazir Hai|\n|Toote Khilone|\n|Jeena Yahan|\n|Khanjar|\n|Bindiya Chamkegi|\n|Falak (The Sky)|\n|Udaan|\n|Gawaahi|\n|Drishti|\n|Nazar|\n|Saatwan Aasman|\n|Vishwaroopam|\n|Vishwaroop|\n|Vishwaroopam II|\n|Vishwaroop II|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test545"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Medal of Honor (Single-player mode)|\n|Medal of Honor: Warfighter|\n\n**Candidate column type:**\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMayor\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"VideoGame\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test546"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Night of Knives|\n|Return of the Crimson Guard|\n|Stonewielder|\n|Orb|\n|Sceptre|\n|Throne|\n|Blood and Bone|\n|Assail|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBook\nCity\nCompany\nContinent\nCountry\nFilm\nGenre\nLake\nMammal\nMayor\nMountain\nPlant\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test547"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Quantum Break|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nFilm\nGenre\nLake\nMammal\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"VideoGame\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test548"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Restless Plots|\n|Mediums|\n|Well Done!|\n|Psi-Lines: A Book of Psychic Quotes|\n|Sense and S\u00c3\u00a9ance|\n|Confessions of a 900 Psychic|\n|How to Increase Your Income with ESP|\n|Silentium|\n|Loose Ends: Leaves from a Medium's Notebook|\n|Bundles|\n|Hand Springs|\n|Top Ten Mentalism with Cards|\n|Graphick: How to Read Handwriting for Fun and Profit|\n|Psychic Blues: Confessions From a Happy Medium|\n|Tenebrae|\n|Psychic Blues: Confessions of a Conflicted Medium|\n|ISBN 1936239272 ISBN 978-1936239276|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBird\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nMayor\nMonarch\nNewspaper\nPlant\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test549"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Building|\n|---|\n|Abbeydale Industrial Hamlet (Works)|\n|Church of St. Nicholas|\n|Bradfield|\n|Church of St. Mary|\n|Ecclesfield|\n|Sheffield Cathedral|\n|Town Hall|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nCompany\nCountry\nFilm\nMayor\nMountain\nNewspaper\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test55"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Spartakiada|\n|Charlie Chan at the Olympics|\n|Olympia Part 1: Festival of Nations|\n|Olympia Part 2: Festival of Beauty|\n|Kings of the Olympics|\n|Olympia 52|\n|The Grand Olympics|\n|Tokyo Olympiad|\n|13 jours en France|\n|The Olympics in Mexico|\n|Visions of Eight|\n|White Rock|\n|A Step Away|\n|Stade 81 a.k.a. Starting Blocks|\n|The First Olympics: Athens 1896|\n|16 Days of Glory|\n|Dorf and the First Games of Mount Olympus|\n|Fire|\n|Ice and Dynamite|\n|One Day in September|\n|Asterix at the Olympic Games|\n|Dream Weavers: Beijing 2008|\n|Equestria Girls|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test550"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Spock Must Die!|\n|Star Trek: The New Voyages \u00e2\\u0080|\n|Spock|\n|Messiah!|\n|The Price of the Phoenix \u00e2\\u0080\u00a1|\n|Planet of Judgment \u00e2\\u0080\u00a1|\n|Star Trek: The New Voyages 2 \u00e2\\u0080|\n|Vulcan! \u00e2\\u0080\u00a1|\n|The Starless World \u00e2\\u0080\u00a1|\n|Trek to Madworld \u00e2\\u0080\u00a1|\n|World Without End \u00e2\\u0080\u00a1|\n|The Fate of the Phoenix \u00e2\\u0080\u00a1|\n|Devil World \u00e2\\u0080\u00a1|\n|Perry's Planet \u00e2\\u0080\u00a1|\n|The Galactic Whirlpool \u00e2\\u0080\u00a1|\n|Death's Angel \u00e2\\u0080\u00a1|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nMammal\nMayor\nMonarch\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test551"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Strikes and Spares|\n|Dreamer|\n|Greedy|\n|Kingpin|\n|The Big Lebowski|\n|Alley Cats Strike|\n|Crackerjack|\n|Blackball|\n|A League of Ordinary Gentlemen|\n|Super Bowlin'|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nNewspaper\nPlant\nRadioStation\nScientist\nSportsTeam\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test552"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|The Bostonians|\n|The Europeans|\n|Bombay Talkie|\n|Heat and Dust|\n|Maurice|\n|Quartet|\n|Shakespeare Wallah|\n|The Householder|\n|Hullabaloo Over Georgie and Bonnie's Pictures|\n|Savages|\n|Roseland|\n|Jane Austen in Manhattan|\n|The Ballad of the Sad Caf\u00c3\u00a9|\n|The Deceivers|\n|The Perfect Murder|\n|In Custody|\n|The Courtesans of Bombay|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nFilm\nLanguage\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test553"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|The Spaceship Graveyard|\n|Alien Arena|\n|The Time Crocodile|\n|The Corinthian Project|\n|The Crystal Snare|\n|War of the Robots|\n|Dark Planet|\n|The Haunted Wagon Train|\n|Lost Luggage|\n|Second Skin|\n|The Dragon King|\n|The Horror of Howling Hill|\n|Claws of the Macra|\n|The Coldest War|\n|Judoon Monsoon|\n|Empire of the Wolf|\n\n**Candidate column type:**\nAirport\nBaseballPlayer\nBook\nBuilding\nCompany\nContinent\nCurrency\nGenre\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test554"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|The X-Files Game|\n|XIII|\n|The X-Files: Resist or Serve|\n|Area 51|\n|Call of Duty: Black Ops III|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nFilm\nGenre\nLake\nLanguage\nMayor\nMonarch\nMountain\nPlant\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"VideoGame\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test555"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Trends in Biochemical Sciences (TIBS)|\n|Trends in Biotechnology (TiBTech)|\n|Trends in Cancer (TiC)|\n|Trends in Cell Biology|\n|Trends in Cognitive Sciences (TiCS)|\n|Trends in Ecology & Evolution (TREE)|\n|Trends in Endocrinology and Metabolism (TEM)|\n|Trends in Genetics (TIG)|\n|Trends in Immunology (TIM)|\n|formerly Immunology Today|\n|Trends in Microbiology (TIMI)|\n|Trends in Molecular Medicine (TMM)|\n|formerly Molecular Medicine Today|\n|Trends in Neurosciences (TINS)|\n|Trends in Parasitology (TiP) -- formerly Parasitology Today|\n|Trends in Pharmacological Sciences (TIPS)|\n|Trends in Plant Science|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nLanguage\nMayor\nMonarch\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AcademicJournal\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test556"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Trends in Biochemical Sciences (TIBS)|\n|Trends in Biotechnology|\n|Trends in Cell Biology|\n|Trends in Cognitive Sciences (TiCS)|\n|Trends in Ecology & Evolution (TREE)|\n|Trends in Endocrinology and Metabolism (TEM)|\n|Trends in Genetics (TIG)|\n|Trends in Immunology formerly Immunology Today|\n|Trends in Microbiology (TIMI)|\n|Trends in Molecular Medicine formerly Molecular Medicine Today|\n|Trends in Neurosciences (TINS)|\n|Trends in Parasitology -- formerly Parasitology Today|\n|Trends in Pharmacological Sciences (TIPS)|\n|Trends in Plant Science|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nSaint\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AcademicJournal\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test557"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Total votes|\n|---|\n|Iraq Awakening and Independents National Alliance (Sahwa)|\n|National Iraqi Project Gathering|\n|Tribes and Educated Coalition for Development|\n|National Movement for Development and Reform (al-Hal)|\n|Iraqi National List|\n|Coalition for Iraqi National Unity|\n|Tribes of Iraq Coalition|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBuilding\nCity\nCompany\nCountry\nFilm\nGenre\nLake\nMammal\nMayor\nMountain\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test558"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Tournament|\n|---|\n|Wuhan|\n|China|\n|Ahmedabad|\n|India|\n|Wuxi|\n|China|\n|Guangzhou|\n|China|\n|Qian Shan|\n|China|\n|Pingguo|\n|China|\n|Qian Shan|\n|China|\n|Gifu|\n|Japan|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nGenre\nLake\nMammal\nMonarch\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test559"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Building|\n|---|\n|Belas Knap|\n|Knap of Howar|\n|West Kennet Long Barrow|\n|Midhowe Chambered Cairn|\n|Pentre Ifan|\n|Tomb of the Eagles|\n|Skara Brae|\n|Unstan Chambered Cairn|\n|Maeshowe|\n|Barnhouse Settlement|\n|Jarlshof|\n|Broch of Mousa|\n|Temple of Claudius (Colchester Castle)|\n|Balkerne Gate|\n|Caerleon Roman Amphitheatre|\n|'Walls Castle'|\n|Edin's Hall Broch|\n|London Wall|\n|Painted House|\n|Portchester Castle|\n|Newport Arch|\n|Beehive cells|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nFilm\nGenre\nLake\nLanguage\nMammal\nMountain\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Building\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test56"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|University|\n|---|\n|Al-Jamiatul Ahlia Darul Ulum Moinul Islam[1]|\n|Al-Jamiah Al-Islamiah Patiya[2]|\n|Al-Jamiatul Arabiatul Islamiah|\n|Ziri[3]|\n|Jamia Tawakkulia Renga Madrasah[4]|\n|Jamiah Islamiah Yunusia Brahmanbaria|\n|Jamiah Rahmania Arabia Dhaka[5]|\n|Jamia Qurania Arabia Lalbagh[6]|\n|Jamia Luthfia Anwarul Uloom Hamid Nogor[7]|\n|Al-Jamiatul Islamiah Qasemul Uloom Charia|\n|Al-Jamiatul Islamiah Azizul Uloom Babunagar[8]|\n|Al-Jamiah Al-Islamiah Obaidia Nanupur[9]|\n|Al-Jamiatus Shari'ah Malibag|\n|Dhaka|\n|Jamiatul Uloom Al-Islamia Lalkhan Bazar[10]|\n|Jamia Darul Ma'arif Al-Islamia[11]|\n|Shahbag Jamia Madania Quasimul Uloom|\n|Jamia Hosainia Islamia Arjabad|\n|Al Jamiatul Islamia Darul Uloom Madani Nagar Madrahsa|\n|Jameah Islamiah Hussainia Gohorpur[12]|\n|Darul Uloom Sahbania[13]|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBuilding\nCompany\nContinent\nCountry\nCurrency\nGenre\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSportsTeam\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test560"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|University|\n|---|\n|Cardiff Metropolitan University|\n|University of South Wales|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nLake\nLanguage\nMonarch\nMountain\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test561"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|University|\n|---|\n|Central Queensland University|\n|Southern Cross University|\n|Federation University (Previously The University of Ballarat)|\n|The University of Southern Queensland|\n|The University of the Sunshine Coast|\n|The University of New England (Australia)|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBook\nBuilding\nCity\nContinent\nCurrency\nLake\nMayor\nMountain\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"University\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test562"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|University|\n|---|\n|Mirpur University of Science and Technology|\n|Mirpur|\n|University of Azad Jammu and Kashmir|\n|Azad Jammu Kashmir Medical College|\n|Mohtarma Benazir Bhutto Shaheed Medical College Mirpur AJK|\n|Poonch Medical College Rawalakot AJK|\n|Al-Khair University|\n|Mohi-ud-Din Islamic University|\n|University of Poonch|\n|Mohi-ud-Din Islamic Medical College|\n|Women University of Azad Jammu and Kashmir Bagh|\n\n**Candidate column type:**\nAirport\nBaseballPlayer\nCompany\nCountry\nCurrency\nLake\nMammal\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"University\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test563"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|University|\n|---|\n|University of Bristol|\n|University of Kent|\n|University of Bedfordshire|\n|Aberystwyth University|\n|University of Nottingham|\n|University of Birmingham|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBuilding\nCity\nContinent\nFilm\nGenre\nLake\nMayor\nMonarch\nMountain\nPlant\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"University\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test564"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|University[1]|\n|---|\n|Central University of Karnataka|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nCountry\nFilm\nGenre\nLake\nLanguage\nMammal\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"University\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test565"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Vegetable|\n|---|\n|Amaranth|\n|Asparagus|\n|Beans|\n|snap|\n|Beet leaves|\n|Broccoli|\n|Brussels sprouts|\n|Cabbage|\n|Carrot|\n|Cassava|\n|Cauliflower|\n|Celery|\n|Chicory|\n|Chives|\n|Collards|\n|Coriander|\n|Corn|\n|sweet|\n|Cucumber|\n|Eggplant|\n|Endive|\n|Garlic|\n|Kale|\n|Lettuce|\n|Okra|\n|Onion|\n|Parsley|\n|Parsnip|\n|Pea|\n|Bell pepper|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBook\nCity\nCompany\nCurrency\nLake\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nSaint\nSportsTeam\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Plant\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test566"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Venue|\n|---|\n|Bishkek|\n|Kyrgyzstan|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBird\nBook\nBuilding\nCompany\nCountry\nGenre\nLake\nMammal\nMayor\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test567"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Venue|\n|---|\n|Nagoya|\n|Japan|\n|Singapore|\n|Bangkok|\n|Thailand|\n|Hong Kong|\n|Singapore|\n|Seoul|\n|South Korea|\n|Fukuoka|\n|Japan|\n|Kuala Lumpur|\n|Malaysia|\n|Manila|\n|Philippines|\n|Bangkok|\n|Thailand|\n|Chengdu|\n|China|\n|Shanghai|\n|China|\n|Brunei|\n|Kuwait City|\n|Kuwait|\n|Vigan|\n|Philippines|\n|Bangkok|\n|Thailand|\n|Bangkok|\n|Thailand|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBird\nBook\nBuilding\nCurrency\nMayor\nMonarch\nNewspaper\nPlant\nPoliticalParty\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test568"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Venue|\n|---|\n|Olympia Theatre|\n|Athens Concert Hall|\n|Athens Concert Hall|\n|Athens Concert Hall|\n|Odeon of Herodes Atticus|\n|Onassis Cultural Centre (in Greek)|\n|Apollon Theatre (Ermoupoli) (in Greek)|\n|Apollon Theatre (Patras)|\n|Piraeus Municipal Theatre|\n|Thessaloniki Concert Hall|\n|Thessaloniki Concert Hall|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nCurrency\nFilm\nGenre\nMammal\nMayor\nMonarch\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Building\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test569"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Building|\n|---|\n|Chester Masonic Lodge and Community Building|\n|Fort Smith Masonic Temple|\n|Knob School-Masonic Lodge|\n|Mount Moriah Masonic Lodge No. 18|\n|Elizabeth Hall|\n|Masonic Temple (Pine Bluff|\n|Arkansas)|\n\n**Candidate column type:**\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test57"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Venue|\n|---|\n|Szeged|\n|Hungary|\n|Maputo|\n|Mozambique|\n|Tehran|\n|Iran|\n|Guadalajara|\n|Mexico|\n|Penrith|\n|Australia|\n|Pozna\u00c5\\u0084|\n|Poland|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCurrency\nFilm\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test570"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|WPA PRESIDENT|\n|---|\n|Jean Delay (France)|\n|Jean Delay (France)|\n|D. Ewen Cameron (Canada)|\n|Juan J. L\u00c3\u00b3pez-Ibor (Spain)|\n|Howard Rome (USA)|\n|Pierre Pichot (France)|\n|Costas Stefanis (Greece)|\n|Jorge A. Costa e Silva (Brazil)|\n|Felice Lieh-Mak (Hong Kong)|\n|Norman Sartorius (Switzerland)|\n|Juan J. L\u00c3\u00b3pez-Ibor|\n|Jr. (Spain)|\n|Ahmed Okasha (Egypt)|\n|Juan Mezzich (Peru)|\n|Mario Maj (Italy)|\n|Pedro Ruiz (USA)|\n|Dinesh Bhugra (U.K.)|\n\n**Candidate column type:**\nAdministrativeRegion\nBird\nBook\nBuilding\nCompany\nCountry\nCurrency\nMammal\nMayor\nMonarch\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Scientist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test571"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Winner (wager)|\n|---|\n|Cerebro Negro (mask)|\n|Cerebro Negro (mask)|\n|Cerebro Negro (mask)|\n|Masada (hair)|\n|Cerebro Negro (hair)|\n|Cerebro Negro (hair)|\n|Cerebro Negro (hair)|\n|Cerebro Negro (hair)|\n|Cerebro Negro (hair)|\n|Cerebro Negro (hair)|\n|Cerebro Negro (hair)|\n|Black Terry (hair)|\n|Police Man (hair)|\n|Cerebro Negro and Dr. Cerebro (hair)|\n|Dr. Cerebro (hair)|\n|Gemelo Fantastico I (hair)|\n|Fantasma De La Opera (mask)|\n|Aeroboy (mask)|\n|Zumbi (mask)|\n|TBD (hair)|\n|Dr. Cerebro (hair)|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nCompany\nContinent\nCountry\nFilm\nGenre\nMammal\nMayor\nMountain\nPoliticalParty\nScientist\nSportsTeam\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test572"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Winner (wager)|\n|---|\n|Princesa Sujei (mask)|\n|Princesa Sujei (mask)|\n|Princesa Sujei (mask)|\n|Marcela (hair) and Princesa Sujei (mask)|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nMammal\nMayor\nNewspaper\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Wrestler\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test573"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Winner (wager)|\n|---|\n|Pr\u00c3\u00adncipe Azul (mask)|\n|Pr\u00c3\u00adncipe Azul (mask)|\n|Pr\u00c3\u00adncipe Azul (mask)|\n|El Canek (mask)|\n|El Canek (mask)|\n|El Canek (mask)|\n|El Canek (mask)|\n|El Canek (mask)|\n|El Canek (mask)|\n|El Canek (mask)|\n|El Canek (mask)|\n|El Canek (mask)|\n|El Canek (mask)|\n|El Canek (mask)|\n|El Canek (mask)|\n|El Canek (mask)|\n|El Canek (mask)|\n|El Canek (mask)|\n|El Canek (mask)|\n|El Canek (mask)|\n|El Canek (mask)|\n|El Canek (mask)|\n|El Canek (mask)|\n|El Canek (mask)|\n|El Canek (mask)|\n|El Canek (mask)|\n|El Canek (Championship)|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBird\nBook\nCity\nCompany\nContinent\nFilm\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test574"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Winner (wager)|\n|---|\n|X-Pac (hair)|\n|Sting (career)|\n|Jeff Jarrett (career)|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nCompany\nCountry\nCurrency\nFilm\nGenre\nLake\nMammal\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Wrestler\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test575"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Winner|\n|---|\n|Dennis Bray|\n|Giorgio Parisi|\n|Nicholas Ayache|\n|Peer Bork|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nCity\nContinent\nCountry\nCurrency\nLake\nMonarch\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Scientist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test576"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Winner|\n|---|\n|Larry Guth and Nets Katz|\n|Maryam Mirzakhani Peter Scholze|\n|Rahul Pandharipande|\n|Jeremy Kahn and Vladimir Markovic|\n|Yves Benoist and Jean-Fran\u00c3\u00a7ois Quint Jonathan Pila|\n|not awarded|\n|Jean-Loup Waldspurger Ian Agol|\n|Danny Calegari and David Gabai|\n|Clifford Taubes Claire Voisin|\n|Alex Eskin Christopher Hacon and Michael Harris James McKernan and Richard Taylor|\n|not awarded|\n|Manjul Bhargava Nils Dencker|\n|Ben Green G\u00c3\u00a9rard Laumon and Ng\u00c3\u00b4 B\u00e1\u00ba\u00a3o Ch\u00c3\u00a2u|\n|Richard Hamilton Terence Tao|\n|Oded Schramm Manindra Agrawal|\n|Edward Witten Stanislav Smirnov|\n|Alain Connes Laurent Lafforgue|\n|Andrew Wiles|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nLake\nLanguage\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Scientist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test577"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Winner|\n|---|\n|M. R. Bhattathiripad|\n|K. P. Narayana Pisharody|\n|A. P. Udhayabhanu|\n|P. C. Devassia|\n|Pala Narayanan Nair|\n|Mary John Koothattukulam|\n|M. N. Sathyaardhi|\n|Kadathanattu Madhavi Amma|\n|M. H. Sastrigal|\n|V. Anandakuttan Nair|\n|Nagavally R. S. Kurup|\n|K. Ravi Varma|\n|M. S. Menon|\n|Akkitham Achuthan Namboothiri|\n|Olappamanna Subramanian Namboothirippad|\n|K. T. Muhammed|\n|Vettoor Raman Nair|\n|G. Vivekanandan|\n|N. P. Mohammed|\n|Puthussery Ramachandran|\n|V. V. K. Valath|\n|Vaikom Chandrasekharan Nair|\n|Thirunalloor Karunakaran|\n|Pavanan|\n|M. Krishnan Nair|\n|Kunjunni Mash|\n|M. Achuthan|\n|Aymanam Krisha Kaimal|\n|M. K. Sanu|\n|Narendra Prasad|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBird\nBuilding\nCity\nCompany\nCountry\nFilm\nLake\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Writer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test578"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Winner|\n|---|\n|Pedro Morales|\n|Jack Brisco|\n|Bruno Sammartino|\n|Mr. Wrestling II|\n|Terry Funk|\n|Dusty Rhodes|\n|Dusty Rhodes|\n|Harley Race|\n|Bob Backlund|\n|Ric Flair|\n|Bob Backlund|\n|Harley Race|\n|Ric Flair|\n|Ric Flair|\n|Ric Flair|\n|Hulk Hogan|\n|Randy Savage|\n|Ric Flair|\n|Sting|\n|Hulk Hogan|\n|Ric Flair|\n|Big Van Vader|\n|Hulk Hogan|\n|Diesel|\n|The Giant|\n|Lex Luger|\n|Stone Cold Steve Austin|\n|Stone Cold Steve Austin|\n|The Rock|\n|Stone Cold Steve Austin|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Wrestler\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test579"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Building|\n|---|\n|G\u00c3\u00b6bekli Tepe|\n|Barnenez|\n|Tumulus of Bougon|\n|Tumulus Saint-Michel|\n|Monte d'Accoddi|\n|Knap of Howar|\n|\u00c4 gantija|\n|West Kennet Long Barrow|\n|Listoghil|\n|Sechin Bajo|\n|La Hougue Bie|\n|Midhowe Chambered Cairn|\n|Gavrinis passage tomb|\n|Wayland's Smithy|\n|Unstan Chambered Cairn|\n|Knowe of Yarso chambered cairn|\n|Quanterness chambered cairn|\n|Tarxien Temples|\n|Shahr-e Sukhteh|\n|Skara Brae|\n|Tomb of the Eagles|\n|Newgrange|\n|Dolmen de Bagneux|\n|Grey Cairns of Camster|\n|Hulbjerg J\u00c3\u00a6ttestue|\n|Maikop kurgans|\n|Taversoe Tuick chambered cairn|\n|Holm of Papa chambered cairn|\n|Barpa Langass|\n|Cuween Hill Chambered Cairn|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nFilm\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Building\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test58"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Winners|\n|---|\n|Shandong Luneng|\n|Tianjin Teda|\n|Wuhan Guanggu|\n|Not held|\n|Shandong Luneng|\n|Shandong Luneng|\n|Shandong Luneng|\n|Shandong Luneng|\n|Shandong Luneng|\n|Shandong Luneng|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"SportsTeam\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test580"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Wrestler|\n|---|\n|Layla|\n|Joy Giovanni|\n|Rosa Mendes|\n|Alicia Fox|\n|Sunny|\n|Torrie Wilson|\n|Jackie Gayda|\n|Maria|\n|Gail Kim|\n|Jillian Hall|\n|Eve Torres|\n|Tiffany|\n|Kelly Kelly|\n|Molly Holly|\n|Maryse|\n|Katie Lea Burchill|\n|Natalya|\n|Victoria|\n|Brie Bella|\n|Nikki Bella|\n|Mickie James|\n|Michelle McCool|\n|Melina|\n|Beth Phoenix|\n|Santina Marella|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nBook\nCity\nCompany\nCountry\nCurrency\nFilm\nLake\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test581"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Wrestler|\n|---|\n|Santino Marella|\n|The Warlord|\n|Mo|\n|Owen Hart|\n|Bushwhacker Luke|\n|Jerry Lawler|\n|Titus O'Neil|\n|The Godfather|\n|Gillberg|\n|The Miz|\n|Montel Vontavious Porter|\n|Tazz|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nMammal\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Wrestler\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test582"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Wrestler|\n|---|\n|The Iron Sheik|\n|Buzz Sawyer|\n|Adrian Adonis|\n|Dynamite Kid|\n|B. Brian Blair|\n|Bobby Eaton|\n|Bobby Eaton|\n|Brad Armstrong|\n|Tiger Mask II|\n|Dan Kroffat|\n|Bobby Eaton|\n|Terry Taylor|\n|Terry Taylor|\n|Bobby Eaton|\n|Brian Pillman|\n|Skip|\n|Leif Cassidy|\n|Flash Funk|\n|Chris Benoit|\n|Chris Jericho|\n|Chris Jericho|\n|Lance Storm|\n|Booker T|\n|\u00c3\\u009Altimo Drag\u00c3\u00b3n|\n|Paul London|\n|Shelton Benjamin|\n|Shelton Benjamin|\n|Shelton Benjamin|\n|Montel Vontavious Porter|\n|Evan Bourne|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMonarch\nNewspaper\nPlant\nPoliticalParty\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Wrestler\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test583"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Wrestler:|\n|---|\n|Adrian Adonis|\n|Scott Casey|\n|Title retired|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nCompany\nContinent\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMonarch\nNewspaper\nSaint\nScientist\nSportsTeam\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test584"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Wrestler:|\n|---|\n|Ron Wright|\n|Jack Donovan|\n|Whitey Caldwell|\n|Vacated|\n|Jerry Brisco|\n|Ron Fuller|\n|Ron Wright|\n|Ron Fuller|\n|Pepper Gomez|\n|Ron Wright|\n|Don Carson|\n|Ron Fuller|\n|Robert Fuller|\n|Toru Tanaka|\n|The Gladiator|\n|Mongolian Stomper|\n|Robert Fuller|\n|Mongolian Stomper|\n|Robert Fuller|\n|Ron Garvin|\n|Mongolian Stomper|\n|Ron Fuller|\n|Mongolian Stomper|\n|Robert Fuller|\n|Mongolian Stomper|\n|Ron Garvin|\n|Vacated|\n|Mongolian Stomper|\n|Robert Fuller|\n|Mongolian Stomper|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nFilm\nGenre\nLake\nLanguage\nMammal\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test585"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Wrestler:|\n|---|\n|Tyler Mane|\n\n**Candidate column type:**\nBaseballPlayer\nBird\nBook\nCity\nContinent\nCurrency\nGenre\nLanguage\nMammal\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Wrestler\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test586"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Wrestlers|\n|---|\n|Tommy Cairo|\n|Tony Stetson|\n|Retired|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nPlant\nRadioStation\nSaint\nSportsTeam\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test587"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Writer|\n|---|\n|Grae Cleugh|\n|Abi Morgan|\n|Simon Stephens|\n|Charlotte Eilenberg|\n|Christopher Shinn|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nLake\nLanguage\nMountain\nPlant\nRadioStation\nSaint\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test588"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|language|\n|---|\n|Khasi|\n|Garo|\n|Nepali|\n|Sylheti|\n|Hindi|\n|Marathi|\n|Assamese|\n|Maram|\n|Hajong|\n|Rabha|\n|Koch|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nCompany\nContinent\nCurrency\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nSaint\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Language\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test589"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Building|\n|---|\n|Helion Lodge|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nGenre\nLake\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Building\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test59"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|name|\n|---|\n|Lev|\n|Kuna|\n|Koruna|\n|Krone|\n|Forint|\n|Z\u00c5\\u0082oty|\n|Leu|\n|Krona|\n|Pound sterling|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nCountry\nCurrency\nGenre\nLake\nMayor\nMonarch\nNewspaper\nRadioStation\nSaint\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Currency\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test590"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|name|\n|---|\n|Suur-Saimaa (1)|\n|Saimaa|\n|P\u00c3\u00a4ij\u00c3\u00a4nne|\n|Inari|\n|Pielinen|\n|Ouluj\u00c3\u00a4rvi|\n|Pihlajavesi|\n|Orivesi|\n|Haukivesi|\n|Keitele|\n|Kallavesi|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCity\nContinent\nCurrency\nFilm\nGenre\nLake\nMammal\nMonarch\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Lake\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test591"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n| 2003 |\n|---|\n|Counter-Strike[14]|\n|Warcraft III: Reign of Chaos[15]|\n|Unreal Tournament 2003[16]|\n|Quake 3[15]|\n|Counter-Strike Female[17]|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nMammal\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"VideoGame\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test592"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n| Africa |\n|---|\n|Antarctica|\n|Asia|\n|Asia|\n|Europe|\n|North America|\n|Oceania (including Australia)|\n|South America|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBuilding\nContinent\nCountry\nCurrency\nGenre\nLanguage\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Continent\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test593"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n| Mark Haddon: \\The Gun\\\" in Granta Kristen Iskandrian: \\\"The Inheritors\\\" in Tin House Laura van den Berg: \\\"Opa-locka\\\" in The Southern Review\" |\n|---|\n|Deborah Eisenberg: \\Your Duck Is My Duck\\\" in Fence Kelly Link: \\\"The Summer People\\\" in Tin House Andrea Barrett: \\\"The Particles\\\" in Tin House\"|\n|Yiyun Li: \\Kindness\\\" in A Public Space Alice Munro: \\\"Corrie\\\" in The New Yorker\"|\n|Lynn Freed: \\Sunshine\\\" in Narrative Magazine Matthew Neill Null: \\\"Something You Can't Live Without\\\" in Oxford American Jim Shepard: \\\"Your Fate Hurtles Down at You\\\" in Electric Literature\"|\n|Daniyal Mueenuddin: \\A Spoiled Man\\\" in The New Yorker September 15|\n|Graham Joyce: \\An Ordinary Soldier of the Queen\\\" in The Paris Review Junot D\u00c3\u00adaz: \\\"Wildwood\\\" in The New Yorker\"|\n|Alexi Zentner: \\Touch\\\" in Tin House Alice Munro: \\\"What Do You Want To Know For?\\\" in The American Scholar William Trevor: \\\"Folie a Deux\\\" in The New Yorker\"|\n|Eddie Chuculate: \\Galveston Bay|\n|Edward P. Jones: \\Old Boys|\n|Ruth Prawer Jhabvala: \\Refuge in London\\\" in Zoetrope|\n|No edition|\n|Denis Johnson: \\Train Dreams\\\" in The Paris Review|\n|Kevin Brockmeier: \\The Ceiling\u00e2\\u0080\\u009D in McSweeney's|\n|Mary Swan: \\The Deep\u00e2\\u0080\\u009D in The Malahat Review|\n|John Edgar Wideman: \\Weight\u00e2\\u0080\\u009D in The Callaloo Journal|\n|Peter Baida: \\A Nurse's Story\u00e2\\u0080\\u009D in The Gettysburg Review|\n|Lorrie Moore: \\People Like That Are the Only People Here\u00e2\\u0080\\u009D in The New Yorker|\n|Mary Gordon: \\City Life\u00e2\\u0080\\u009D in Ploughshares|\n|Stephen King: \\The Man in the Black Suit\u00e2\\u0080\\u009D in The New Yorker|\n|Cornelia Nixon: \\The Women Come and Go\u00e2\\u0080\\u009D in New England Review|\n|Alison Baker: \\Better Be Ready 'Bout Half Past Eight\u00e2\\u0080\\u009D in The Atlantic Monthly|\n|Thom Jones: \\The Pugilist at Rest\u00e2\\u0080\\u009D in The New Yorker|\n|Cynthia Ozick: \\Puttermesser Paired\u00e2\\u0080\\u009D in The New Yorker|\n|John Updike: \\A Sandstone Farmhouse\u00e2\\u0080\\u009D in The New Yorker|\n|Leo E. Litwak: \\The Eleventh Edition\u00e2\\u0080\\u009D in TriQuarterly|\n|Ernest J. Finney: \\Peacocks\u00e2\\u0080\\u009D in The Sewanee Review|\n|Raymond Carver: \\Errand\u00e2\\u0080\\u009D in The New Yorker|\n|Louise Erdrich: \\Fleur\u00e2\\u0080\\u009D in Esquire|\n|Alice Walker: \\Kindred Spirits\u00e2\\u0080\\u009D in Esquire|\n|Stuart Dybek: \\Hot Ice\u00e2\\u0080\\u009D in Antaeus Jane Smiley: \\\"Lily\u00e2\\u0080\\u009D in The Atlantic Monthly\"|\n|Cynthia Ozick: \\Rosa\u00e2\\u0080\\u009D in The New Yorker|\n\n**Candidate column type:**\nAdministrativeRegion\nBird\nBuilding\nCompany\nContinent\nCountry\nFilm\nGenre\nLake\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Writer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test594"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Journal[3][9]|\n|Abacus|\n|Accounting and Business Research|\n|Accounting|\n|Auditing & Accountability Journal|\n|Accounting Horizons|\n|Accounting|\n|Organizations and Society|\n|The Accounting Review|\n|Accounting & Finance|\n|Asia-Pacific Journal of Accounting & Economics|\n|Auditing: A Journal of Practice & Theory|\n|Australian Accounting Review|\n|Australian Tax Forum|\n|Australian Tax Review|\n|British Accounting Review|\n|Behavioral Research in Accounting|\n|Contemporary Accounting Research|\n|European Accounting Review|\n|International Journal of Accounting|\n|Journal of Accountancy|\n|Journal of Accounting|\n|Auditing & Finance|\n|Journal of Accounting and Economics|\n|Journal of Accounting Literature|\n|Journal of Accounting and Public Policy|\n|Journal of Accounting Research|\n|Journal of the American Taxation Association|\n|Journal of Business Finance & Accounting|\n|Journal of International Financial Management and Accounting|\n\n**Candidate column type:**\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nMammal\nMayor\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test6"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Building|\n|---|\n|Jing'an Temple|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nContinent\nCountry\nFilm\nGenre\nLanguage\nMammal\nMountain\nPlant\nPoliticalParty\nSaint\nScientist\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Building\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test60"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Building|\n|---|\n|Ohel Leah Synagogue|\n|Former Kowloon British School|\n|Gate Lodge|\n|Old British Military Hospital|\n|Old Pathological Institute|\n|Western Market|\n|St. Andrew's Church (Kowloon)|\n|Old District Office North|\n|Signal Hill Tower|\n|Clock Tower|\n|Hong Kong|\n|Central Police Station \u00e2\\u0080\\u0093 HQ Block|\n|Blocks A-D|\n|University of Hong Kong Main Building|\n|Legislative Council Building|\n|Old Wan Chai Post Office|\n|Former Central Magistracy|\n|Elliot Hall|\n|University of Hong Kong|\n|Ex-Commodore's House|\n|Dr. Sun Yat-sen Museum|\n|May Hall|\n|University of Hong Kong|\n|The Main Building|\n|The Helena May|\n|Former French Mission Building|\n|Hung Hing Ying Building|\n|the University of Hong Kong|\n|North Block of St. Joseph's College|\n|Old Kowloon Fire Station|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nLake\nLanguage\nMonarch\nMountain\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Building\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test61"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Building|\n|---|\n|Palace of Culture and Science|\n|Sky Tower|\n|Warsaw Trade Tower|\n|Z\u00c5\\u0082ota 44|\n|Rondo 1|\n|Hotel Marriott|\n|Warsaw Financial Center|\n|InterContinental Warsaw|\n|Cosmopolitan Twarda 2\\\/4|\n|Oxford Tower|\n|Sea Towers|\n|Intraco I|\n|Spektrum|\n|Pazim|\n|Altus|\n|\u00c5\\u0081ucka City|\n|B\u00c5\\u0082\u00c4\\u0099kitny Wie\u00c5\u00bcowiec|\n|Millennium Plaza|\n|Novotel Warszawa Centrum|\n|Akademik Kredka|\n|Collegium Altum|\n|Z\u00c5\\u0082ote Tarasy|\n|Babka Tower|\n|Biurowiec Wojew\u00c3\u00b3dzki|\n|Cracovia Business Center|\n|Ilmet|\n|Andersia Tower|\n|Stalexport 1|\n|Organika Trade|\n|PZU Tower|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nLake\nMammal\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Building\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test62"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Building|\n|---|\n|Phoenix Masonic Temple|\n|Masonic Temple (Yuma|\n|Arizona)|\n\n**Candidate column type:**\nAcademicJournal\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nLanguage\nMayor\nMonarch\nNewspaper\nScientist\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Building\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test63"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Building|\n|---|\n|RSA Battle House Tower[1]|\n|Conoco-Phillips Building[2]|\n|Chase Tower[C][3]|\n|Simmons Tower[4]|\n|U.S. Bank Tower[5][6]|\n|Republic Plaza[7]|\n|City Place I[8]|\n|River Tower at Christina Landing [9]|\n|Basilica of the National Shrine of the Immaculate Conception|\n|Four Seasons Hotel & Tower[10]|\n|Bank of America Plaza[11]|\n|First Hawaiian Center[12]|\n|Zion's Bank Building[13]|\n|Willis Tower[14]|\n|Chase Tower[15]|\n|801 Grand (The Principal Building)[16]|\n|Epic Center[17][18]|\n|400 West Market[19][20]|\n|One Shell Square[21][22]|\n|Franklin Towers[D][23]|\n|Transamerica Tower[24]|\n|200 Clarendon[25]|\n|Renaissance Center[26]|\n|IDS Center[27]|\n|Beau Rivage Casino Hotel[28]|\n|One Kansas City Place[29]|\n|First Interstate Center[30]|\n|First National Bank Tower[31][32][33]|\n|The Palazzo[34]|\n|City Hall Plaza[35][36]|\n\n**Candidate column type:**\nAdministrativeRegion\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nLake\nMammal\nMayor\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Building\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test64"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|COMPANY NAME|\n|---|\n|Abacus Mining & Exploration Corporation|\n|Abcourt Mines Inc.|\n|ABE Resources Inc.|\n|Aben Resources Ltd.|\n|Abenteuer Resources Corp.|\n|Abington Resources Ltd.|\n|Abitibi Royalties Inc.|\n|Abzu Gold Ltd.|\n|Acasti Pharma Inc.|\n|Acceleware Ltd.|\n|Access International Education Ltd.|\n|Ackroo Inc.|\n|Acme Resources Inc.|\n|Acrex Ventures Ltd.|\n|ACT Aurora Control Technologies Corp.|\n|ACT360 Solutions Ltd.|\n|Active Control Technology Inc.|\n|Active Growth Capital Inc.|\n|Actus Minerals Corp.|\n|Adamera Minerals Corp.|\n|Adanac Molybdenum Corporation|\n|Adent Capital Corp.|\n|Adex Mining Inc.|\n|Adira Energy Ltd.|\n|Adriana Resources Inc.|\n|Adroit Resources Inc.|\n|Advance Gold Corp.|\n|Advanced Explorations Inc.|\n|Advanced Proteome Therapeutics Corporation|\n|Advent Wireless Inc.|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nCompany\nContinent\nCountry\nFilm\nGenre\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test65"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Call sign|\n|---|\n|CBCL-FM-1|\n|CKOT-FM|\n|CJDL-FM|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nFilm\nGenre\nLanguage\nMammal\nMayor\nMonarch\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"RadioStation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test66"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Call sign|\n|---|\n|KOPB-FM|\n|KETP|\n|KHRV|\n|KOAB-FM|\n|KOAC|\n|KOAC-FM|\n|KOAP|\n|KOBK|\n|KOBN|\n|KOGL-FM|\n|KOJD|\n|KOPB|\n|KOTD|\n|KRBM|\n|KTMK-FM|\n|KTVR-FM|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"RadioStation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test67"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Call sign|\n|---|\n|KQQJ|\n|KQQN|\n|KQQS|\n|KHSA-LP|\n|KJSA|\n|KSSQ-LP|\n|KJAT-LP|\n|KWHA|\n|KIHW-LP|\n|KJPN|\n|KSHM|\n|KJNN-LP|\n|KRSF|\n|KRSR|\n|KSJL|\n|WAPQ-LP|\n|WHMF|\n|WGSE-LP|\n|WJJD-LP|\n|WHHC-LP|\n|KQAR-LP|\n|KSDC-LP|\n|KZBN|\n|KMEA-LP|\n|KQQM|\n|KJIT-LP|\n|KJGS|\n|KIVE-LP|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"RadioStation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test68"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Call sign|\n|---|\n|W207C1 (WAYW)|\n|WSAA|\n|WOOP-LP|\n|WUSY|\n|W267BI|\n|WCLE-FM|\n|W290CA (WTSE)|\n|WBAC|\n|WCLE-AM|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nLake\nLanguage\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"RadioStation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test69"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Kolami|\n|Angami|\n|Kodagu|\n|Dogri|\n|Dimasa|\n|Lotha|\n|Mao|\n|Tibetan|\n|Kabui (Rongmei)|\n|Phom|\n\n**Candidate column type:**\nAirport\nBird\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMonarch\nMountain\nPoliticalParty\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Language\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test7"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Call sign|\n|---|\n|WABN|\n|WACL|\n|WAFX|\n|WAJL|\n|WAKG|\n|WAMM|\n|WAMV|\n|WARN|\n|WARV-FM|\n|WAVA|\n|WAVA-FM|\n|WAXM|\n|WAZR|\n|WBBC-FM|\n|WBBT-FM|\n|WBCM-LP|\n|WBLB|\n|WBLT|\n|WBNN-FM|\n|WBOP|\n|WBQB|\n|WBQK|\n|WBRF|\n|WBRG|\n|WBRW|\n|WBTJ|\n|WBTK|\n|WBTM|\n|WBTX|\n|WBVA|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBook\nCity\nCompany\nCountry\nCurrency\nLake\nLanguage\nMammal\nMayor\nMonarch\nPlant\nSportsTeam\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test70"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Call sign|\n|---|\n|WAGO|\n|WZGO|\n|WZRU|\n|WGXO|\n|WGXM|\n|WZRN|\n|WHGO|\n|WTGX|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBird\nBuilding\nCompany\nContinent\nCountry\nFilm\nGenre\nLake\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"RadioStation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test71"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Call sign|\n|---|\n|WBFR|\n|KPHF|\n|KFRB|\n|KHAP|\n|KFRJ|\n|KFRP|\n|KECR|\n|KFNO|\n|KEFR|\n|KFRN|\n|KEBR|\n|KEAR|\n|KFRS|\n|KPRA|\n|KFRY|\n|WCTF|\n|WMFL|\n|WJFR|\n|WWFR|\n|WFRP|\n|WFRC|\n|WJCH|\n|KDFR|\n|KYFR|\n|KPOR|\n|WBMD|\n|WFSI|\n|WOFR|\n|KFRD|\n|KFRW|\n\n**Candidate column type:**\nAdministrativeRegion\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMayor\nPoliticalParty\nRadioStation\nSaint\nScientist\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"RadioStation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test72"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Call sign|\n|---|\n|WHJL|\n|WMVM|\n|WPVM|\n|WYVM|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBird\nBook\nContinent\nCountry\nCurrency\nGenre\nLanguage\nMayor\nMonarch\nPlant\nPoliticalParty\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test73"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Call sign|\n|---|\n|WJTY|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test74"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Call sign|\n|---|\n|WKRC|\n|WLW|\n|WNOP|\n|WPFB|\n|WGRI|\n|WCVX|\n|WDBZ|\n|WCVG|\n|WSAI|\n|WMOH|\n|WDJO|\n|WCKY|\n|WCNW|\n|WAIF|\n|WJVS|\n|WMKV|\n|WMWX|\n|WKCX|\n|WNKU|\n|WJYC|\n|WGUC|\n|WVXU|\n|WOFX|\n|WAKW|\n|WNNF|\n|WREW|\n|WVQC-LP|\n|WFTK|\n|WYGY|\n|WOXY|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nBird\nBuilding\nCompany\nContinent\nCountry\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nNewspaper\nPlant\nSaint\nScientist\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test75"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Call sign|\n|---|\n|WVBH|\n|WXHM|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nLake\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"RadioStation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test76"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Callsign|\n|---|\n|DZCA|\n|DZYR|\n|DZAP|\n|DZYA|\n|DZTC|\n|DWLQ|\n|DWRL|\n|DZYM|\n|DYRL|\n|DYRB|\n|DYRM|\n|DXRH|\n|DXCO|\n|DXOW|\n|DXGS|\n|DXJM|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nMayor\nMonarch\nMountain\nNewspaper\nRadioStation\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"RadioStation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test77"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Callsign|\n|---|\n|WJR|\n|WFYC|\n|WRGZ|\n|WLBY|\n|WBCK|\n|WTOU|\n|WBRN|\n|W236BR|\n|W299BE|\n|WCKC|\n|WCHY|\n|WTVB|\n|WYKX|\n|WRSR|\n|WGFN|\n|WBFX|\n|WQON|\n|WCSR|\n|WCSR-FM|\n|WHTC|\n|WCCY|\n|WGLI|\n|WMIQ|\n|WIAN|\n|WIBM|\n|W270CJ|\n|WRKR|\n|WJIM|\n|WLDN|\n|WDMJ|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBuilding\nCity\nCountry\nCurrency\nFilm\nGenre\nMayor\nMonarch\nMountain\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test78"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Callsign|\n|---|\n|WVAB|\n|WVAL|\n|WVAM|\n|WVAR|\n|WVAX|\n|WVBE|\n|WVBF|\n|WVBG|\n|WVBS|\n|WVCB|\n|WVCC|\n|WVCD|\n|WVCH|\n|WVCV|\n|WVCY|\n|WVEI|\n|WVEL|\n|WVFN|\n|WVGB|\n|WVGG|\n|WVGM|\n|WVHF|\n|WVHI|\n|WVHU|\n|WVJP|\n|WVJS|\n|WVKO|\n|WVLD|\n|WVLG|\n|WVLK|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nBird\nBook\nCompany\nContinent\nCountry\nCurrency\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nNewspaper\nPoliticalParty\nRadioStation\nScientist\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"RadioStation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test79"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|2010 Barcelona|\n|---|\n|Estonia (EST)|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nFilm\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test8"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Caribbean|\n|---|\n|Anguilla[a][b][c]|\n|Antigua and Barbuda|\n|Aruba[a][f]|\n|Bahamas|\n|Barbados|\n|Belize|\n|British Virgin Islands[a][b][c]|\n|Cuba[e]|\n|Dominica|\n|Dominican Republic[f]|\n\n**Candidate column type:**\nAdministrativeRegion\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nNewspaper\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test80"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Category|\n|---|\n|Afro Fusion|\n|Asian Music|\n|Boomba Male|\n|Boomba Female|\n|Boomba Group|\n|Contemporary Gospel|\n|Eastern Benga|\n|Gospel Ensembles|\n|Hip hop|\n|R&B|\n|Ragga|\n|Reggae|\n|Traditional|\n|Western Benga|\n|Best Producer|\n|Best Song from Uganda|\n|Best Music Video from Uganda|\n|Best Song from Tanzania|\n|Best Video from Tanzania|\n|Best Collaboration|\n|Best Music Video from Kenya|\n|Best Song from Kenya|\n|Most Promising Artist|\n|Best Male Artist from Kenya|\n|Best Female Artist from Kenya|\n|Best Group from Kenya|\n|Social Responsibility|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nCompany\nCountry\nGenre\nLake\nMammal\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Genre\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test81"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Category|\n|---|\n|Afro Fusion|\n|Asian Music|\n|Boomba Rap|\n|Boomba Pop|\n|Contemporary Gospel|\n|Eastern Benga|\n|Gospel Ensembles|\n|Hip hop|\n|R&B|\n|Rap|\n|Reggae\\\/Ragga|\n|Traditional|\n|Best Artist\\\/Group from Tanzania|\n|Best Artist\\\/Group from Uganda|\n|Best Music Video from Uganda|\n|Western Benga|\n|Best Music Video from Kenya|\n|Best Song|\n|Best Collaboration|\n|Best Male Artist|\n|Best Female Artist|\n|Most Promising Artist|\n|Best Group|\n|Producer of the Year|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nMammal\nMayor\nMonarch\nNewspaper\nPlant\nRadioStation\nSaint\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Genre\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test82"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Charts (1977)|\n|---|\n|France (IFOP)[3]|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nMammal\nMayor\nMonarch\nNewspaper\nPoliticalParty\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test83"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Chronicles|\n|---|\n|Zatadawbon Yazawin|\n|Maha Yazawin|\n|Yazawin Thit and Hmannan Yazawin|\n|Hmannan adjusted|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCurrency\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test84"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Church Father|\n|---|\n|Adrian the monk of Antioch|\n|Alexander of Alexandria[2]|\n|Alexander of Lycopolis|\n|Ambrose of Milan|\n|Amphilochius of Iconium[1][2]|\n|Ananias of Shirak[2][3]|\n|Anastasius Sinaita[1][2]|\n|Andrew of Caesarea[1]|\n|Andrew of Crete[2]|\n|Anthony the Great[1]|\n|Aphraates|\n|Apollinaris of Hirapolis|\n|Apollinaris of Laodicea|\n|Apollonius of Ephesus|\n|Archelaus|\n|Aristides the Athenian[1][2]|\n|Aristo of Pella[1]|\n|Arnobius[1]|\n|Arsenius the Great|\n|Apringius of Beja|\n|Asterius of Amasea[2]|\n|Athanasius|\n|Athenagoras of Athens[1]|\n|Atticus[1]|\n|Augustine of Hippo|\n|Aurelius Prudentius[1][2]|\n|Ausonius|\n|Avitus of Vienne[1]|\n|Barnabas[2]|\n|Basil the Great of Caesarea|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMayor\nMountain\nNewspaper\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Saint\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test85"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Church Father|\n|---|\n|Athanasius the Athonite[2]|\n|Gregory Palamas[10]|\n|Innocent of Alaska|\n|Mark of Ephesus[8]|\n|Nicholas Cabasilas[8]|\n|Photius the Great[8][10]|\n|Symeon Metaphrastes[9]|\n|Symeon the New Theologian[10]|\n|Theodore the Studite|\n|Theophan the Recluse[9]|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMonarch\nNewspaper\nPlant\nPoliticalParty\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test86"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Cities represented|\n|---|\n|Altus|\n|Oklahoma|\n|Ardmore|\n|Oklahoma|\n|Bonham|\n|Texas|\n|Cleburne|\n|Texas|\n|Denison|\n|Texas|\n|Durant|\n|Oklahoma|\n|Gainesville|\n|Texas|\n|Greenville|\n|Texas|\n|Hugo|\n|Oklahoma|\n|Lawton|\n|Oklahoma|\n|McKinney|\n|Texas|\n|Paris|\n|Texas|\n|Sherman|\n|Texas|\n|Texarkana|\n|Texas|\n|Wichita Falls|\n|Texas|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nGenre\nLake\nMammal\nMayor\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test87"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|City|\n|---|\n|Canberra|\n|Brisbane|\n|Melbourne|\n|Sydney|\n|Suva|\n|Tarawa|\n|Majuro|\n|Yaren|\n|Wellington|\n|Auckland|\n|Koror|\n|Port Moresby|\n|Honiara|\n|Funafuti|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMayor\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test88"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|City|\n|---|\n|Jacksonvillea[\u00e2\\u0080\u00ba]|\n|Charlotte|\n|Memphis|\n|Washington|\n|Nashvillea[\u00e2\\u0080\u00ba]|\n|Baltimore|\n|Louisvillea[\u00e2\\u0080\u00ba]|\n|Virginia Beach|\n|Atlanta|\n|Raleigh|\n|Miami|\n|New Orleans|\n|Tampa|\n|Lexington|\n|Greensboro|\n|Orlando|\n|Saint Petersburg|\n|Norfolk|\n|Durham|\n|Winston-Salem|\n|Hialeah|\n|Chesapeake|\n|Birmingham|\n|Richmond|\n|Montgomery|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBook\nCompany\nCountry\nFilm\nGenre\nLake\nLanguage\nMayor\nMonarch\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test89"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|3rd|\n|---|\n|Hong Kong International Airport|\n|Narita International Airport|\n|Hong Kong International Airport|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nCity\nCompany\nContinent\nCurrency\nFilm\nLake\nLanguage\nMammal\nMonarch\nMountain\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Airport\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test9"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|City|\n|---|\n|New York|\n|Los Angeles|\n|Chicago|\n|Houston|\n|Philadelphia|\n|Phoenix|\n|San Antonio|\n|San Diego|\n|Dallas|\n|San Jose|\n|Jacksonville|\n|Indianapolis|\n|San Francisco|\n|Austin|\n|Columbus|\n|Fort Worth|\n|Charlotte|\n|Detroit|\n|El Paso|\n|Memphis|\n|Baltimore|\n|Boston|\n|Seattle|\n|Washington|\n|Nashville|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBird\nBook\nCompany\nContinent\nCountry\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test90"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|City|\n|---|\n|Sacramento|\n|California|\n|Long Beach|\n|California|\n|San Diego|\n|California|\n|Cleveland|\n|Ohio|\n|Providence|\n|Rhode Island|\n|Milwaukee|\n|Wisconsin|\n|Fort Wayne|\n|Indiana|\n|Dayton|\n|Ohio|\n|Louisville|\n|Kentucky|\n|Chicago|\n|Illinois|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPlant\nScientist\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test91"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|City|\n|---|\n|Seattle|\n|Spokane|\n|Tacoma|\n|Vancouver|\n|Bellevue|\n|Kent|\n|Everett|\n|Renton|\n|Federal Way|\n|Yakima|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nLanguage\nMayor\nMonarch\nMountain\nPlant\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test92"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|City|\n|---|\n|Toronto|\n|Surrey|\n|Regina|\n|Glace Bay|\n|Timmins|\n|Salaberry-de-Valleyfield|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCountry\nCurrency\nFilm\nGenre\nLanguage\nMayor\nMonarch\nMountain\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test93"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|City of license|\n|---|\n|Augusta|\n|Falmouth|\n|Louisa|\n\n**Candidate column type:**\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nGenre\nLake\nLanguage\nMammal\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test94"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Club|\n|---|\n|Blooming|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMayor\nMonarch\nMountain\nNewspaper\nPoliticalParty\nRadioStation\nScientist\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test95"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Club|\n|---|\n|Go Ahead Eagles|\n|NAC Breda|\n|SC Heracles|\n\n**Candidate column type:**\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCurrency\nGenre\nLake\nLanguage\nMonarch\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test96"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Club|\n|---|\n|Salgaocar|\n|Mohun Bagan|\n|Churchill Brothers|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nLake\nLanguage\nMammal\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"SportsTeam\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test97"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Code (ISO 4217)|\n|---|\n|ATS|\n|BEF|\n|CYP|\n|NLG|\n|EEK|\n|FIM|\n|FRF|\n|DEM|\n|GRD|\n|IEP|\n|ITL|\n|LVL|\n|LTL|\n|LUF|\n|MTL|\n|MCF|\n|PTE|\n|SML|\n|SKK|\n|SIT|\n|ESP|\n|VAL|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCountry\nFilm\nGenre\nLake\nMammal\nMountain\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test98"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Code|\n|---|\n|AED|\n|AFN|\n|ALL|\n|AMD|\n|ANG|\n|AOA|\n|ARS|\n|AUD|\n|AWG|\n|AZN|\n|BAM|\n|BBD|\n|BDT|\n|BGN|\n|BHD|\n|BIF|\n|BMD|\n|BND|\n|BOB|\n|BOV|\n|BRL|\n|BSD|\n|BTN|\n|BWP|\n|BYR|\n|BZD|\n|CAD|\n|CDF|\n|CHE|\n|CHF|\n\n**Candidate column type:**\nAdministrativeRegion\nBird\nBook\nCity\nCountry\nCurrency\nGenre\nLake\nMammal\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Currency\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"EfthymiouTest","table":"test99"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|. . . and Now Miguel|\n|Adam of the Road|\n|Caddie Woodlawn|\n|Call It Courage|\n|Carry on|\n|Mr . Bowditch|\n|Cat Who Went to Heaven|\n|The|\n|Dark Frigate|\n|The|\n|Doctor Doolittle series|\n|Door in the Wall|\n|The|\n|Gay - Neck|\n|the Story of a Pigeon|\n|Ginger Pye|\n|Hitty|\n|Her First Hundred Years|\n|Invincible Louisa|\n|King of the Wind|\n|Matchlock Gun|\n|The|\n|Miracles on Maple Hill|\n|Miss Hickory|\n|Onion John|\n|Rabbit Hill|\n|Rifles for Watie|\n|Secret of the Andes|\n|Story of Mankind|\n|The|\n\n**Candidate column type:**\nActor\nAutomobile\nBook\nCollege\nFilm\nHistoricPlace\nLetter\nMine\nMonarch\nNewspaper\nPerson\nPrimeMinister\nProtectedArea\nRoyalty\nSettlement\nSoftware\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test1"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Ad Extremas|\n|Adiutricem|\n|Affari Vos|\n|Annum Sacrum|\n|Augustissimae Virginis Mariae|\n|Au Milieu Des Sollicitudes|\n|Caritatis Studium|\n|Catholicae Ecclesiae|\n|Christi Nomen|\n|Constanti Hungarorum|\n|Cum Multa|\n|Custodi di quella Fede|\n|Diuturni Temporis|\n|Divinum Illud Munus|\n|Dum Multa|\n|Etsi Cunctas|\n|Etsi Nos|\n|Exeunte Iam Anno|\n|Fidentem Piumque Animum|\n|Fin dal Principio|\n|Gravissimas|\n|Iampridem|\n|In Amplissimo|\n|Inimica Vis|\n|In Ipso|\n|In Plurimis|\n|Insignes|\n|Iucunda Semper Expectatione|\n|Laetitiae Sanctae|\n|Licet Multa|\n\n**Candidate column type:**\nArtist\nAutomobile\nBook\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nPolitician\nPresident\nPrimeMinister\nRoyalty\nScientist\nSoftware\nTelevisionEpisode\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Letter\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test10"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|John Couch Adams|\n|Urbain Jean Joseph Le Verrier|\n|Anton van Leeuwenhoek|\n|Louis Daguerre|\n|Gregor Mendel|\n|Pierre - Simon Laplace|\n|Sigmund Freud|\n|Euclid|\n|Gerardus Mercator|\n|Benjamin Franklin|\n|Svante Arrhenius|\n|Alfred Nobel|\n|Pythagoras|\n|Leonardo Fibonacci of Pisa|\n|Antoine Lavoisier|\n|Stephen Jay Gould|\n|Hermann Minkowski|\n\n**Candidate column type:**\nActor\nAutomobile\nBird\nBook\nCollege\nInternationalOrganisation\nLetter\nMine\nMonarch\nOfficeHolder\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nSettlement\nTelevisionEpisode\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test100"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Joseph Had a Little Overcoat|\n|Snowflake Bentley|\n|Rapunzel|\n|Golem|\n|Officer Buckle and Gloria|\n|Smoky Night|\n|Grandfather&apos;s Journey|\n|Mirette on the High Wire|\n|Tuesday|\n|Black and White|\n|Lon Po Po : A Red - Riding Hood Story from China|\n|Song and Dance Man|\n|Owl Moon|\n|Hey|\n|Al|\n|The Polar Express|\n|Saint George and the Dragon|\n|The Glorious Flight : Across the Channel with Louis|\n|Shadow|\n|Jumanji|\n|Fables|\n|Ox - Cart Man|\n|The Girl Who Loved Wild Horses|\n|Noah&apos;s Ark|\n|Ashanti to Zulu : African Traditions|\n|Why Mosquitoes Buzz in People&apos;s Ears : A West African Tale|\n|Arrow to the Sun|\n|Duffy and the Devil|\n|The Funny Little Woman|\n|One Fine Day|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBook\nCollege\nHistoricPlace\nInternationalOrganisation\nMine\nMonarch\nNewspaper\nPresident\nPrimeMinister\nRoyalty\nSettlement\nSoftware\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test101"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Kabhi Alvida Na Kehna|\n|The Rising|\n|Paheli|\n|Bunty Aur Babli|\n|Black|\n|Veer - Zaara|\n|Hum Tum|\n|Yuva|\n|Kal Ho Naa Ho|\n|Chori Chori|\n|Calcutta Mail|\n|Chalte Chalte|\n|Saathiya|\n|Mujhse Dosti Karoge !|\n|Chalo Ishq Ladaaye|\n|Pyaar Diwana Hota Hai|\n|Kabhi Khushi Kabhie Gham|\n|Nayak|\n|Bas Itna Sa Khwaab Hai|\n|Chori Chori Chupke Chupke|\n|Kahin Pyaar Na Ho Jaaye|\n|Har Dil Jo Pyar Karega|\n|Bichhoo|\n|Hey ! Ram|\n|Badal|\n|Hello Brother|\n|Mann|\n|Mehndi|\n|Kuch Kuch Hota Hai|\n|Ghulam|\n\n**Candidate column type:**\nArtist\nBook\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPrimeMinister\nProtectedArea\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test102"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Kabhi Alvida Naa Kehna|\n|Veer - Zaara|\n|Kal Ho Naa Ho|\n|Chori Chori Chupke Chupke|\n|Har Dil Jo Pyar Karega|\n\n**Candidate column type:**\nActor\nAutomobile\nBook\nCollege\nFilm\nHistoricPlace\nLetter\nMine\nNewspaper\nPrimeMinister\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test103"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Kal Ho Naa Ho|\n|Kabhi Khushi Kabhie Gham|\n|Kuch Kuch Hota Hai|\n\n**Candidate column type:**\nActor\nAutomobile\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nTelevisionEpisode\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test104"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Kristin Chenoweth|\n\n**Candidate column type:**\nActor\nArtist\nBird\nBook\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOrganisation\nPresident\nPrimeMinister\nRoyalty\nScientist\nSettlement\nTelevisionEpisode\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Actor\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test105"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Kuch Kuch Hota Hai|\n|Kuch Kuch Hota Hai|\n|Har Dil Jo Pyaar Karega|\n|Saathiya|\n|Saathiya|\n|Saathiya|\n|Saathiya|\n|Hum Tum|\n|Yuva|\n|Hum Tum|\n|Hum Tum|\n|Yuva|\n|Hum Tum|\n|Veer - Zaara|\n|Hum Tum|\n|Yuva|\n|Hum Tum|\n|Hum Tum|\n|Veer - Zaara|\n|Hum Tum|\n|Yuva|\n\n**Candidate column type:**\nAutomobile\nBird\nBook\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPresident\nProtectedArea\nRoyalty\nSettlement\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test106"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Leopold I|\n|Leopold II|\n|Albert I|\n|Leopold III|\n|Baudouin I|\n|Albert II|\n\n**Candidate column type:**\nActor\nAutomobile\nBird\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nSettlement\nSoftware\nTelevisionEpisode\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Monarch\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test107"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Lief Ericson|\n|Christopher Columbus|\n|Vasco da Gama|\n|Marco Polo|\n|James Cook|\n|Walter Raleigh|\n|Abel Tasmin|\n|David Livingstone|\n|John Cabot|\n|Robert Peary|\n|Vasco Balboa|\n|John Speke|\n|Roland Amundsen|\n|Meriwether Lewis and William Clark|\n|Bartholmew Diaz|\n|Eric the Red|\n|Jacques Cartier|\n|Robert Burke and William Wills|\n|Ernest Shackleton|\n|Henry Stanley|\n|Richard Burton|\n|Francis Younghusband|\n|Henry Hudson|\n|Simon Champlain|\n|Vitus Bering|\n|Fabian von Bellinghausen|\n|Mungo Park|\n|Hernando de Soto|\n|Ponce De Leon|\n|Alexander Mackenzie|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBook\nCollege\nFilm\nHistoricPlace\nLetter\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Person\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test108"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Lisa&apos;s Riva l|\n|Bart of Darkness|\n|Another Simpsons Clip Show|\n|Itchy &amp; amp Scratchy Land|\n|Sideshow Bob Roberts|\n|Treehouse of Horror V|\n|Bart&apos;s Girlfriend|\n|Lisa on Ice|\n|Homer : Bad Man|\n|Grampa vs . Sexual Inadequacy|\n|Fear of Flying|\n|Homer the Great|\n|And Maggie Makes Three|\n|Bart&apos;s Comet|\n|Homie the Clown|\n|Bart vs . Australia|\n|Homer vs . Patty &amp; amp Selma|\n|A Star is Burns|\n|Lisa&apos;s Wedding|\n|Two Dozen and One Greyhounds|\n|The PTA Disbands|\n|&apos;Round Springfield|\n|The Springfield Connection|\n|Lemon of Troy|\n|Who Shot Mr . Burns ? ( Part One|\n\n**Candidate column type:**\nActor\nArtist\nBird\nBook\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nMine\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nScientist\nSettlement\nSoftware\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test109"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|African Union|\n|Arab League|\n|Association of Southeast Asian Nations|\n|Council of Europe|\n|European Union|\n|South American Community of Nations|\n|Asia - Pacific Economic Cooperation|\n|Commonwealth|\n|Commonwealth of Independent States|\n|East African Community|\n|European Economic Area|\n|European Free Trade Association|\n|Free Trade Area of the Americas|\n|GCC - Gulf Cooperation Council|\n|North American Free Trade Agreement|\n|North Atlantic Treaty Organization|\n|Organization for Security and Cooperation in Europe|\n|Organization of American States|\n|Southern African Development Community|\n|US - Canada Environmental Cooperation|\n|Western European Union|\n\n**Candidate column type:**\nArtist\nAutomobile\nCollege\nFilm\nHistoricPlace\nLetter\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPrimeMinister\nProtectedArea\nScientist\nSoftware\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Organisation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test11"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Lisa&apos;s Rival|\n|Bart of Darkness|\n|Another Simpsons Clip Show|\n|Itchy &amp; Scratchy Land|\n|Sideshow Bob Roberts|\n|Nightmare Cafeteria|\n|Bart&apos;s Girlfriend|\n|Lisa on Ice|\n|Homer : Bad Man|\n|Grampa vs . Sexual Inadequacy|\n|Fear of Flying|\n|Homer the Great|\n|A Star is Burns|\n|And Maggie Makes Three|\n|Bart&apos;s Comet|\n|Homie the Clown|\n|Bart vs . Australia|\n|Homer vs . Patty &amp; Selma|\n|Lisa&apos;s Wedding|\n|Two Dozen and One Greyhounds|\n|The PTA Disbands|\n|&apos;Round Springfield|\n|The Springfield Connection|\n|Lemon of Troy|\n|Who Shot Mr . Burns ? ( Part One )|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nCollege\nFilm\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPolitician\nPresident\nProtectedArea\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"TelevisionEpisode\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test110"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Lisa&apos;s Rival|\n|Bart of Darkness|\n|Another Simpsons Clip Show|\n|Itchy &amp; Scratchy Land|\n|Sideshow Bob Roberts|\n|Treehouse of Horror V|\n|Bart&apos;s Girlfriend|\n|Lisa on Ice|\n|Homer : Bad Man|\n|Grampa vs . Sexual Inadequacy|\n|Fear of Flying|\n|Homer the Great|\n|A Star is Burns|\n|And Maggie Makes Three|\n|Bart&apos;s Comet|\n|Homie the Clown|\n|Bart vs . Australia|\n|Homer vs . Patty &amp; Selma|\n|Lisa&apos;s Wedding|\n|Two Dozen and One Greyhounds|\n|The PTA Disbands|\n|&apos;Round Springfield|\n|The Springfield Connection|\n|Lemon of Troy|\n|Who Shot Mr . Burns ? ( Part One|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nCollege\nFilm\nInternationalOrganisation\nNewspaper\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nScientist\nSettlement\nSoftware\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test111"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Lisa&apos;s Rival|\n|Bart of Darkness|\n|Another Simpsons Clip Show|\n|Itchy &amp; amp Scratchy Land|\n|Sideshow Bob Roberts|\n|Treehouse of Horror V|\n|Bart&apos;s Girlfriend|\n|Lisa on Ice|\n|Homer : Bad Man|\n|Grampa vs . Sexual Inadequacy|\n|Fear of Flying|\n|Homer the Great|\n|And Maggie Makes Three|\n|Bart&apos;s Comet|\n|Homie the Clown|\n|Bart vs . Australia|\n|Homer vs . Patty &amp; amp Selma|\n|A Star is Burns|\n|Lisa&apos;s Wedding|\n|Two Dozen and One Greyhounds|\n|The PTA Disbands|\n|&apos;Round Springfield|\n|The Springfield Connection|\n|Lemon of Troy|\n|Who Shot Mr . Burns ? ( Part One )|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nMine\nMonarch\nNewspaper\nOrganisation\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"TelevisionEpisode\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test112"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Lisa&apos;s Rival|\n|Itchy &amp; Scratchyland|\n|Sideshow Bob Roberts|\n|Treehouse Of Horror V|\n|Homer : Bad Man|\n|Grandpa vs . Sexual Inadequacy|\n|Fear Of Flying|\n|Homer The Great|\n|And Maggie Makes Three|\n|The Springfield Connection|\n|Homie the Clown|\n|Bart vs . Australia|\n|Homer vs . Patty and Selma|\n|Lisa\u00c3\u00a2\u00c2\u0080\u00c2\u0099s Wedding|\n|The PTA Disbands|\n|Lemon Of Troy|\n|A Star is Burns|\n\n**Candidate column type:**\nAutomobile\nBook\nCollege\nFilm\nInternationalOrganisation\nMine\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPrimeMinister\nProtectedArea\nScientist\nSettlement\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test113"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Lord Adrian|\n|Francis Aston|\n|Charles Barkla|\n|Niels Bohr|\n|Lawrence Bragg|\n|William Henry Bragg|\n|Subrahmanyan Chandrasekhar|\n|Henry Dale|\n|Walter Gilbert|\n|A . V . Hill|\n|Alan Hodgkin|\n|Frederick Hopkins|\n|Andrew Huxley|\n|Brian Josephson|\n|Pyotr Kapitsa|\n|John Kendrew|\n|Aaron Klug|\n|John Pople|\n|Lord Rayleigh|\n|Owen Richardson|\n|Ernest Rutherford|\n|Martin Ryle|\n|Richard Synge|\n|George Paget Thomson|\n|J . J . Thomson|\n|Ernest Walton|\n\n**Candidate column type:**\nArtist\nAutomobile\nBird\nBook\nCollege\nFilm\nLetter\nMine\nMonarch\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPrimeMinister\nProtectedArea\nRoyalty\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test114"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Lord Rayleigh|\n|J . J . Thomson|\n|Ernest Rutherford|\n|William Bragg|\n|Lawrence Bragg|\n|Charles Barkla|\n|Niels Bohr|\n|Francis Aston|\n|Archibald Hill|\n|Austen Chamberlain|\n|Owen Richardson|\n|Frederick Hopkins|\n|Lord Adrian|\n|Henry Dale|\n|George Thomson|\n|Bertrand Russell|\n|Ernest Walton|\n|Richard Synge|\n|John Kendrew|\n|Alan Hodgkin|\n|Andrew Huxley|\n|Brian Josephson|\n|Martin Ryle|\n|James Meade|\n|Pyotr Kapitsa|\n|Walter Gilbert|\n|Aaron Klug|\n|Subrahmanyan Chandrasekhar|\n|James Mirrlees|\n|Amartya Sen|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nHistoricPlace\nInternationalOrganisation\nLetter\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test115"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Lord Rayleigh|\n|J . J . Thomson|\n|Lord Rutherford|\n|William Bragg|\n|Lawrence Bragg|\n|Charles Glover Barkla|\n|Niels Bohr|\n|Francis Aston|\n|Archibald V . Hill|\n|Sir Austen Chamberlain|\n|Owen Willans Richardson|\n|Sir Frederick Hopkins|\n|Edgar Douglas Adrian|\n|Sir Henry Dale|\n|George Paget Thomson|\n|Bertrand Russell|\n|Ernest Walton|\n|Richard Synge|\n|John Kendrew|\n|Alan Lloyd Hodgkin|\n|Andrew Huxley|\n|Brian David Josephson|\n|Martin Ryle|\n|James Meade|\n|Pyotr Kapitsa|\n|Walter Gilbert|\n|Aaron Klug|\n|Subrahmanyan Chandrasekhar|\n|James Mirrlees|\n|John Pople|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nHistoricPlace\nInternationalOrganisation\nNewspaper\nOrganisation\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nSoftware\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Person\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test116"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Louis Pasteur|\n|Blaise Pascal|\n|Henri Poincar\u00c3\u0083\u00c2\u00a9|\n|Simeon Poisson|\n|Michel Rolle|\n|Albert Soboul|\n|Jean - Pierre Vernant|\n|Pierre Vidal - Naquet|\n|Pierre Vilar|\n|Christophe Victor|\n|Paul - Emile Victor|\n\n**Candidate column type:**\nAutomobile\nBird\nBook\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nMine\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPresident\nRoyalty\nScientist\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Person\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test117"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Ludwig Bemelmans|\n|Virginia Lee Burton|\n|Ezra Jack Keats|\n|Robert Lawson|\n|Arnold Lobel|\n|David Macaulay|\n|David Macaulay|\n|Robert McCloskey|\n|David|\n|John|\n|Maurice Sendak|\n|William Steig|\n|Chris Van Allsburg|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nMine\nNewspaper\nOrganisation\nPresident\nPrimeMinister\nRoyalty\nScientist\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Writer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test118"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|L\u00c3\u0083\u00c2\u0083\u00c3\u0082\u00c2\u00a9opold I|\n|L\u00c3\u0083\u00c2\u0083\u00c3\u0082\u00c2\u00a9opold II|\n|Albert I|\n|L\u00c3\u0083\u00c2\u0083\u00c3\u0082\u00c2\u00a9opold III|\n|Baudouin I|\n|Albert II|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nPerson\nPolitician\nPrimeMinister\nRoyalty\nScientist\nTelevisionEpisode\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Monarch\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test119"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|African Union|\n|Association of Southeast Asian Nations|\n|Commonwealth of Independent States|\n|European Economic Area|\n|European Free Trade Association|\n\n**Candidate column type:**\nArtist\nBook\nCollege\nFilm\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nPerson\nPresident\nProtectedArea\nScientist\nSettlement\nSoftware\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"InternationalOrganisation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test12"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Make Way for Ducklings|\n|The Little House|\n|Many Moons|\n|Where the Wild Things Are|\n|Sylvester and the Magic Pebble|\n|Why Mosquitoes Buzz in People&apos;s Ears|\n|Lon Po Po : A Red - Riding Hood Story from China|\n|Rapunzel|\n\n**Candidate column type:**\nActor\nArtist\nBird\nBook\nCollege\nFilm\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nSettlement\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test120"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Martin Sheen|\n|Allison Janney|\n|Richard Schiff|\n|John Spencer|\n|Bradley Whitford|\n|Stockard Channing|\n|Janel Moloney|\n|Dule Hill|\n|Joshua Malina|\n|Alan Alda|\n|Jimmy Smits|\n|Kristin Chenoweth|\n|Mary McCormack|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBook\nCollege\nInternationalOrganisation\nLetter\nMonarch\nNewspaper\nOfficeHolder\nPerson\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nTelevisionEpisode\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Actor\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test121"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Martin Sheen|\n|Bradley Whitford|\n|Richard Schiff|\n|John Spencer|\n|Dule Hill|\n|Stockard Channing|\n|Jimmy Smits|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nCollege\nFilm\nHistoricPlace\nLetter\nMine\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Actor\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test122"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Martin Sheen|\n|Stockard Channing|\n|John Spencer|\n|Bradley Whitford|\n|Richard Schiff|\n|Rob Lowe|\n|Joshua Malina|\n|Allison Janney|\n|Janel Moloney|\n|Dul\u00c3\u0083\u00c2\u00a9 Hill|\n|Moira Kelly|\n|Mary McCormack|\n|Jimmy Smits|\n|Alan Alda|\n\n**Candidate column type:**\nAutomobile\nBird\nHistoricPlace\nInternationalOrganisation\nLetter\nMonarch\nNewspaper\nOrganisation\nPolitician\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSettlement\nSoftware\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test123"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Mary McCormack|\n|Kristin Chenoweth|\n\n**Candidate column type:**\nArtist\nBird\nBook\nCollege\nHistoricPlace\nInternationalOrganisation\nLetter\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPresident\nPrimeMinister\nProtectedArea\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test124"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|My Friend Rabbit|\n|The Three Pigs|\n|So You Want to Be President|\n|Joseph Had a Little Overcoat|\n|Snowflake Bentley|\n|Rapunzel|\n|Golem|\n|Officer Buckle and Gloria|\n|Smoky Night|\n|Grandfather&apos;s Journey|\n|Mirette on the High Wire|\n|Tuesday|\n|Black and White|\n|Lon Po Po : A Red - Riding Hood Story from China|\n|Song and Dance Man|\n|Owl Moon|\n|Hey|\n|Al|\n|The Polar Express|\n|Saint George and the Dragon|\n|The Glorious Flight : Across the Channel with Louis Bleriot|\n|Shadow|\n|Jumanji|\n|Fables|\n|Ox - Cart Man|\n|The Girl Who Loved Wild Horses|\n|Noah&apos;s Ark|\n|Ashanti to Zulu : African Traditions|\n|Why Mosquitoes Buzz in People&apos;s Ears|\n|Arrow to the Sun|\n\n**Candidate column type:**\nActor\nAutomobile\nFilm\nHistoricPlace\nInternationalOrganisation\nMonarch\nNewspaper\nOfficeHolder\nPerson\nPresident\nSettlement\nTelevisionEpisode\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test125"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|My Friend Rabbit|\n|The Three Pigs|\n|So You Want to Be President|\n|Joseph had a Little Overcoat|\n|Snowflake Bentley|\n|Rapunzel|\n|Golem|\n|Officer Buckle and Gloria|\n|Smokey Night|\n|Grandfather&apos;s Journey|\n|Mirette On the High Wire|\n|Tuesday|\n|Black and White|\n|Lon Po Po : A Red - Riding Hood Story from China|\n|Song and Dance Man|\n|Owl Moon|\n|Hey|\n|Al|\n|Polar Express|\n|Saint George and the Dragon|\n|The Glorious Flight|\n|Shadow|\n|Jumanji|\n|Fables|\n|Ox - Cart Man|\n|The Girl Who Loved Wild Horses|\n|Noah&apos;s Ark|\n|Traditions|\n|Why Mosquitoes Buzz in People&apos;s Ears|\n|Arrow to the Sun|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPresident\nPrimeMinister\nProtectedArea\nSettlement\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test126"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|NAFTA|\n|Association of Southeast Asian Nations|\n|Economic Cooperation|\n|European Free Trade Association|\n|European Union|\n\n**Candidate column type:**\nActor\nArtist\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMonarch\nNewspaper\nOrganisation\nPerson\nPresident\nProtectedArea\nScientist\nSettlement\nSoftware\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"InternationalOrganisation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test127"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|New Frontier|\n|The Captain&apos;s Table : Once Burned|\n|Double Helix : Double or Nothing|\n|Gateways : Cold Wars|\n|Gateways : What Lay Beyond|\n|Gods Above|\n|No Limits|\n|Stone and Anvil|\n\n**Candidate column type:**\nActor\nAutomobile\nBird\nHistoricPlace\nInternationalOrganisation\nLetter\nMonarch\nOrganisation\nPolitician\nPrimeMinister\nScientist\nSettlement\nSoftware\nTelevisionEpisode\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test128"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|New York Amsterdam News|\n|New York Post|\n|New York Times|\n|New Yorker Staats - Zeitung|\n|News India Times|\n|Norden|\n|Nordstjernan - Svea|\n|Noticias del Mundo|\n|Novoe Russkoe Slovo|\n|Nowy Dziennik|\n|Outreach|\n|People&apos;s Weekly World|\n|Russky Golos|\n|Segye Ilbo ( Sae Gae Times|\n|Shih Chieh Jih Pao ( World Journal|\n|Swiss American Review|\n|Ukrains&apos;ki Visti|\n|Vaba Eesti Sona|\n|Wall Street Journal ( Eastern Edition|\n|Democrat and Chronicle|\n|Syracuse Post - Standard|\n|White Plains Journal News|\n|The Staten Island Advance|\n|New York Daily News|\n|The New York Observer|\n|Newsday|\n\n**Candidate column type:**\nArtist\nAutomobile\nBird\nBook\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nMonarch\nNewspaper\nOrganisation\nPolitician\nPresident\nProtectedArea\nRoyalty\nScientist\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Newspaper\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test129"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Albany Times - Union|\n|Der Yid|\n|Jewish Press|\n|Laiks|\n|New Yorkin Uutiset|\n|Norway Times - Nordisk Tidende|\n|Tsaytung|\n|Buffalo News|\n|Newsday|\n|Tiesa|\n|Yated Ne&apos;eman ( English edition )|\n|Yated Ne&apos;eman ( Hebrew edition )|\n|Al - Hoda|\n|Algemeiner Journal|\n|Amerikai Magyar Szo|\n|Armenian Reporter International|\n|Chungang Ilbo|\n|Daily News|\n|El Diario - La Prensa|\n|Filipino Reporter|\n|Forward|\n|Hellenic Times|\n|Hua Mei Jih Pao ( China Tribune|\n|Irish Voice|\n|Journal of Commerce|\n|Lien Ho Jih Pao ( United Journal|\n|National Herald ( ETHNIKOS KERYX|\n|Natsional&apos;na Trybuna \/ Shliakh Peremohy|\n\n**Candidate column type:**\nArtist\nAutomobile\nBird\nBook\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nNewspaper\nOfficeHolder\nPerson\nPolitician\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Newspaper\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test13"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|One Flew Over the Cuckoo&apos;s Nest|\n|Throw Momma from the Train|\n|Tin Men|\n|Twins|\n|Batman Returns|\n|Hoffa|\n|Reality Bites|\n|Pulp Fiction|\n|Get Shorty|\n|Mars Attacks !|\n|Matilda|\n|L . A . Confidential|\n|Man On The Moon|\n|The Virgin Suicides|\n|Erin Brockovich|\n|Screwed|\n|Austin Powers in Goldmember|\n\n**Candidate column type:**\nActor\nBird\nFilm\nInternationalOrganisation\nMonarch\nNewspaper\nOrganisation\nPrimeMinister\nRoyalty\nScientist\nSettlement\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test130"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|One Flew Over the Cuckoo&apos;s Nest|\n|Throw Momma from the Train|\n|Tin Men|\n|Twins|\n|Batman Returns|\n|Hoffa|\n|Reality Bites|\n|Pulp Fiction|\n|Get Shorty|\n|Mars Attacks|\n|Matilda|\n|L . A . Confidential|\n|Man On The Moon|\n|The Virgin Suicides|\n|Erin Brockovich|\n|Screwed|\n|Austin Powers in Goldmember|\n\n**Candidate column type:**\nActor\nArtist\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nPerson\nPresident\nProtectedArea\nRoyalty\nSoftware\nTelevisionEpisode\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test131"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Pierre Savorgan de Brazza|\n|Vasco N\u00c3\u0083\u00c2\u00ba\u00c3\u0083\u00c2\u00b1ez de Balboa|\n|William Baffin|\n|Samuel Baker|\n|Heinrich Barth|\n|Willem Barents|\n|George Bass|\n|Abu Abdullah Muhammad Ibn Battuta|\n|Nicolas Baudin|\n|Fabian Gottlieb von Bellingshausen|\n|Moric Benovsky|\n|Vitus Bering|\n|Vittorio Bottego|\n|Saint Brendan|\n|James Bruce|\n|William Bruce|\n|Richard Francis Burton|\n|Richard E . Byrd|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nFilm\nHistoricPlace\nInternationalOrganisation\nMine\nMonarch\nNewspaper\nOrganisation\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nSettlement\nSoftware\nTelevisionEpisode\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Person\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test132"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|President|\n|Allison Janney|\n|John Spencer|\n|Bradley Whitford|\n|Janel Moloney|\n|Dul\u00c3\u0083\u00c2\u0083\u00c3\u0082\u00c2\u00a9 Hill|\n|Richard Schiff|\n|Rob Lowe|\n|Joshua Malina|\n|Moira Kelly|\n|Mary McCormack|\n|Santos|\n\n**Candidate column type:**\nActor\nArtist\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nMonarch\nNewspaper\nOfficeHolder\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSoftware\nTelevisionEpisode\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Actor\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test133"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Refugee|\n|The Final Prophecy|\n|The Unifying Force|\n\n**Candidate column type:**\nActor\nAutomobile\nBook\nCollege\nFilm\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPolitician\nProtectedArea\nSettlement\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test134"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Rosebud|\n|Homer the Vigilante|\n|Bart Gets Famous|\n|Bart Gets an Elephant|\n|The Boy Who Knew Too Much|\n\n**Candidate column type:**\nArtist\nAutomobile\nBird\nBook\nCollege\nFilm\nInternationalOrganisation\nMine\nMonarch\nOrganisation\nPerson\nPolitician\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSettlement\nSoftware\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test135"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Sebastian Cabot|\n|Lazare Carnot|\n|Peter Cartwright|\n|Sydney Chapman|\n|George Clinton|\n\n**Candidate column type:**\nActor\nAutomobile\nBird\nFilm\nHistoricPlace\nNewspaper\nOfficeHolder\nPerson\nPresident\nPrimeMinister\nProtectedArea\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Person\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test136"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Seguin|\n|Lalande|\n|Tresca|\n|Poncelet|\n|Bresse|\n|Lagrange|\n|Belanger|\n|Cuvier|\n|Laplace|\n|Dulong|\n|Chasles|\n|Lavoisier|\n|Ampere|\n|Chevreul|\n|Flachat|\n|Navier|\n|Legendre|\n|Chaptal|\n|Jamin|\n|Gay - Lussac|\n|Fizeau|\n|Schneider|\n|Le Chatelier|\n|Berthier|\n|Barral|\n|De Dion|\n|Go\u00c3\u0083\u00c2\u00bcin|\n|Jousselin|\n|Broca|\n|Becquerel|\n\n**Candidate column type:**\nArtist\nAutomobile\nBird\nCollege\nHistoricPlace\nInternationalOrganisation\nLetter\nMonarch\nNewspaper\nOfficeHolder\nPerson\nPolitician\nPresident\nPrimeMinister\nRoyalty\nScientist\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Scientist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test137"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Sharon Creech|\n|Christopher Paul Curtis|\n|Karen Cushman|\n|Paula Fox|\n|Russell Freedman|\n|Jean Craighead George|\n|Karen Hesse|\n|Harold Keith|\n|E . L . Konigsburg|\n|Madeleine L&apos;Engle|\n|Lois Lowry|\n|Robin McKinley|\n|Phyllis Reynolds Naylor|\n|Linda Sue Park|\n|Katherine Paterson|\n|Richard Peck|\n|Cynthia Rylant|\n|Louis Sachar|\n|Jerry Spinelli|\n|Mildred Taylor|\n|Cynthia Voigt|\n\n**Candidate column type:**\nArtist\nBird\nBook\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSettlement\nSoftware\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Writer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test138"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Snow White and the Seven Dwarfs|\n|Pinocchio|\n|Fantasia|\n|Dumbo|\n|Bambi|\n|Saludos Amigos|\n|The Three Caballeros|\n|Make Mine Music|\n|Fun and Fancy Free|\n|Melody Time|\n|The Adventures of Ichabod and Mr . Toad|\n|Cinderella|\n|Alice in Wonderland|\n|Peter Pan|\n|Lady and the Tramp|\n|Sleeping Beauty|\n|101 Dalmatians|\n|The Sword in the Stone|\n|The Jungle Book|\n|The Aristocats|\n|Robin Hood|\n|The Many Adventures of Winnie the Pooh|\n|The Rescuers|\n|The Fox and the Hound|\n|The Black Cauldron|\n|The Great Mouse Detective|\n|Oliver and Company|\n|The Little Mermaid|\n|The Rescuers Down Under|\n|Beauty and the Beast|\n\n**Candidate column type:**\nActor\nArtist\nBird\nBook\nCollege\nFilm\nInternationalOrganisation\nLetter\nMine\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPresident\nPrimeMinister\nRoyalty\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test139"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Albany Times - Union|\n|The Citizen|\n|The Daily News|\n|Der Yid|\n|Jewish Press|\n|Laiks|\n|New Yorkin Uutiset|\n|Norway Times - Nordisk Tidende|\n|Tsaytung|\n|The Buffalo News|\n|Daily Messenger|\n|Star Gazette|\n|The Finger Lakes Times|\n|Newsday|\n|Tiesa|\n|Yated Ne&apos;eman ( English edition )|\n|Yated Ne&apos;eman ( Hebrew edition )|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nCollege\nInternationalOrganisation\nMine\nMonarch\nNewspaper\nOfficeHolder\nRoyalty\nScientist\nSettlement\nSoftware\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Newspaper\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test14"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Snow White and the Seven Dwarfs|\n|Pinocchio|\n|Fantasia|\n|Dumbo|\n|The Reluctant Dragon|\n|Bambi|\n|Saludos Amigos|\n|Victory Through Air Power|\n|The Three Caballeros|\n|Song of the South|\n|So Dear to My Heart|\n|The Adventures of Ichabod and Mr . Toad|\n|Cinderella|\n|Alice in Wonderland|\n|Peter Pan|\n|Lady and the Tramp|\n|Sleeping Beauty|\n|One Hundred and One Dalmatians|\n|The Sword in the Stone|\n|Mary Poppins|\n\n**Candidate column type:**\nArtist\nAutomobile\nBird\nBook\nHistoricPlace\nInternationalOrganisation\nPolitician\nPresident\nProtectedArea\nScientist\nSettlement\nSoftware\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test140"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Snow White and the Seven Dwarfs|\n|Pinocchio|\n|Fantasia|\n|Dumbo|\n|The Reluctant Dragon|\n|Bambi|\n|Saludos Amigos|\n|Victory Through Air Power|\n|The Three Caballeros|\n|Song of the South|\n|The Adventures of Ichabod and Mr Toad|\n|Cinderella|\n|Alice in Wonderland|\n|Peter Pan|\n|Lady and the Tramp|\n|Sleeping Beauty|\n|One Hundred and One Dalmatians|\n|The Sword in the Stone|\n|Mary Poppins|\n\n**Candidate column type:**\nAutomobile\nBird\nBook\nCollege\nFilm\nInternationalOrganisation\nMine\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test141"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Snow White and the Seven Dwarfs|\n|Pinocchio|\n|Fantasia|\n|The Reluctant Dragon|\n|Bambi|\n|Saludos Amigos|\n|The Three Caballeros|\n|Make Mine Music|\n|Melody Time|\n|The Adventures of Ichabod and Mr . Toad|\n|Cinderella|\n|Alice in Wonderland|\n|Peter Pan|\n|20|\n|000 Leagues Under the Sea|\n|Sleeping Beauty|\n|101 Dalmatians|\n|Mary Poppins|\n|The Aristocats|\n|Bedknobs and Broomsticks|\n|Robin Hood|\n|The Rescuers|\n|The Fox and the Hound|\n|The Black Cauldron|\n|The Great Mouse Detective|\n|Who Framed Roger Rabbit|\n|Oliver &amp; Company|\n|The Little Mermaid|\n|The Rescuers Down Under|\n|Beauty and the Beast|\n\n**Candidate column type:**\nBird\nBook\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nNewspaper\nOfficeHolder\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nScientist\nSettlement\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test142"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Snowflake Bentley|\n|Rapunzel|\n|Golem|\n|Officer Buckle and Gloria|\n|Smoky Night|\n|Grandfather&apos;s Journey|\n|Mirette on the High Wire|\n|Tuesday|\n|Black and White|\n|Lon Po Po : A Red - Riding Hood Story from China|\n|Song and Dance Man|\n|Owl Moon|\n|Hey|\n|Al|\n|The Polar Express|\n|Saint George and the Dragon|\n|The Glorious Flight : Across the Channel with Louis|\n|Shadow|\n|Jumanji|\n|Fables|\n|Ox - Cart Man|\n|The Girl Who Loved Wild Horses|\n|Noah&apos;s Ark|\n|Ashanti to Zulu : African Traditions|\n|Why Mosquitoes Buzz in People&apos;s Ears : A West African Tale|\n|Arrow to the Sun|\n|Duffy and the Devil|\n|The Funny Little Woman|\n|One Fine Day|\n|A Story - - A Story|\n\n**Candidate column type:**\nArtist\nAutomobile\nBird\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nNewspaper\nOrganisation\nPerson\nPolitician\nPresident\nRoyalty\nScientist\nSettlement\nSoftware\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test143"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Spirited Away|\n|Toy Story 2|\n|Toy Story|\n|The Little Mermaid|\n|Bambi|\n|Dumbo|\n|Fantasia|\n|Pinocchio|\n|Snow White and the Seven Dwarfs|\n|Finding Nemo|\n|Beauty and the Beast|\n|Kiki&apos;s Delivery Service|\n|My Neighbor Totoro|\n|Winnie the Pooh and the Honey Tree|\n|Mary Poppins|\n|101 Dalmatians|\n|Lady and the Tramp|\n|Cinderella|\n|Song of the South|\n|The Incredibles|\n|Teacher&apos;s Pet|\n|Lilo &amp; Stitch|\n|Monsters|\n|Inc .|\n|A Bug&apos;s Life|\n\n**Candidate column type:**\nActor\nBird\nBook\nFilm\nHistoricPlace\nLetter\nNewspaper\nOrganisation\nPerson\nPolitician\nPresident\nProtectedArea\nSettlement\nSoftware\nTelevisionEpisode\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test144"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Supremi Apostolatus Officio|\n|Superiore Anno|\n|Vi E Ben Noto|\n|Octobri Mense|\n|Magnae Dei Matris|\n|Laetitiae Sanctae|\n|Iucunda Semper|\n\n**Candidate column type:**\nArtist\nAutomobile\nBird\nBook\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nPerson\nPolitician\nPresident\nPrimeMinister\nScientist\nSettlement\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Letter\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test145"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|The Giver|\n|Out of the Dust|\n|Lincoln : A Photobiography|\n|Number the Stars|\n|Joyful Noise : Poems for Two Voices|\n|A Wrinkle in Time|\n|Bridge to Terabithia|\n|Roll of Thunder|\n|Hear My Cry|\n|The View from Saturday|\n|The Midwife\u00c3\u0082\u00c2\u0092s Apprentice|\n|Sarah|\n|Plain and Tall|\n|A Single Shard|\n|The Tale of Despereaux|\n|Sounder|\n|The Westing Game|\n|Dicey&apos;s Song|\n|Mrs . Frisby and the Rats of NIMH|\n|Shadow of a Bull|\n|From the Mixed - Up Files of Mrs . Basil E . Frankweiler|\n|M . C . Higgins|\n|The Great|\n|A Year Down Yonder|\n|The Bronze Bow|\n|Crispin : The Cross of Lead|\n|The Whipping Boy|\n|Missing May|\n|Holes|\n|The Twenty - One Balloons|\n\n**Candidate column type:**\nArtist\nAutomobile\nBird\nBook\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPresident\nPrimeMinister\nProtectedArea\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test146"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|The Good Night|\n|Nobel Son|\n|The OH in Ohio|\n|Relative Strangers|\n|Be Cool|\n|Marilyn Hotchkiss&apos; Ballroom Dancing and Charm School|\n|Christmas in Love|\n|Big Fish|\n|Austin Powers in Goldmember|\n|Death to Smoochy|\n|Heist|\n|What&apos;s the Worst That Could Happen ?|\n|Screwed|\n|Drowning Mona|\n|Man on the Moon|\n|The Big Kahuna|\n|The Virgin Suicides|\n|Living Out Loud|\n|The Rainmaker|\n|Hercules|\n|L . A . Confidential|\n|Disney Sing - Along - Songs : Zero to Hero|\n|Hercules|\n|Mars Attacks|\n|Space Jam|\n|Matilda|\n|Get Shorty|\n|Junior|\n|Renaissance Man|\n|Jack the Bear|\n\n**Candidate column type:**\nArtist\nAutomobile\nBird\nCollege\nHistoricPlace\nMine\nMonarch\nOfficeHolder\nOrganisation\nPerson\nPresident\nScientist\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test147"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|The Little Mermaid|\n|Aristocats|\n|Atlantis|\n|101 Dalmatians|\n|Mulan|\n|The Lion King|\n|Toy Story|\n|Beauty and the Beast|\n|Peter Pan|\n|Ducktales|\n|Talespin|\n|Winnie the Pooh|\n|Hercules|\n|Robin Hood|\n|Aladdin|\n|Pinocchio|\n|Doug|\n|Pocahontas|\n|Alice in Wonderland|\n|Sleeping Beauty|\n|Dinosaurs|\n|Hunchback of Notre Dame|\n|Jungle Book|\n|Tarzan|\n|Dumbo|\n|Lilo and Stitch|\n|Cinderella|\n|Brother Bear|\n|The Fox and the Hound|\n|The Rescuers|\n\n**Candidate column type:**\nArtist\nFilm\nInternationalOrganisation\nMonarch\nNewspaper\nOfficeHolder\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test148"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|The Man Who Walked Between the Towers|\n|My Friend Rabbit|\n|The Three Pigs|\n|So You Want to Be President|\n|Joseph Had a Little Overcoat|\n|Snowflake Bentley|\n|Rapunzel|\n|Golem|\n|Officer Buckle and Gloria|\n|Smoky Night|\n|Grandfather&apos;s Journey|\n|Mirette on the High Wire|\n|Tuesday|\n|Black and White|\n|Lon Po Po : A Red - Riding Hood Story from China|\n|Song and Dance Man|\n|Owl Moon|\n|Hey|\n|Al|\n|The Polar Express|\n|Saint George and the Dragon|\n|The Glorious Flight : Across the Channel with Louis Bleriot|\n|Shadow|\n|Jumanji|\n|Fables|\n|Ox - Cart Man|\n|The Girl Who Loved Wild Horses|\n|Noah&apos;s Ark|\n|Ashanti to Zulu : African Traditions|\n|Why Mosquitoes Buzz in People&apos;s Ears|\n\n**Candidate column type:**\nActor\nArtist\nBook\nCollege\nFilm\nMine\nOrganisation\nPerson\nPolitician\nPrimeMinister\nRoyalty\nScientist\nSettlement\nTelevisionEpisode\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test149"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Albany Times Union|\n|Baldwin Herald|\n|Bellmore Herald|\n|Buffalo News|\n|The|\n|Business First of Buffalo|\n|Business Travel News|\n|Canandaigua Messenger|\n|Capital District Business Review|\n|Carnarsie Courier|\n|Citizen|\n|Community Trader|\n|CoopersTown Crier|\n|Courier - Gazette|\n|The|\n|Crain&apos;s New York Business|\n|Daily Gazette|\n|The|\n|Daily Deal|\n|The|\n|Daily News|\n|Daily News|\n|The|\n|Daily Sentinel|\n|Daily Star|\n|The|\n|Dan&apos;s Papers|\n|Democrat and Chronicle|\n|East Hampton Star|\n|Evening Sun|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nFilm\nHistoricPlace\nInternationalOrganisation\nMine\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSettlement\nTelevisionEpisode\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Newspaper\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test15"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|The Rising|\n|Black|\n|Veer - Zaara|\n|Hum Tum|\n|Yuva|\n|LOC Kargil|\n|Kal Ho Naa Ho|\n|Chori Chori|\n|Calcutta Mail|\n|Chalte Chalte|\n|Saathiya|\n|Mujhse Dosti Karoge !|\n|Chalo Ishq Ladaaye|\n|Pyaar Diwana Hota Hai|\n|Kabhi Khushi Kabhie Gham|\n|Nayak|\n|Bas Itna Sa Khwaab Hai|\n|Chori Chori Chupke Chupke|\n|Kahin Pyaar Na Ho Jaaye|\n|Har Dil Jo Pyar Karega|\n|Bichhoo|\n|Hadh Kardi Aapne|\n|Hey ! Ram|\n|Badal|\n|Hello Brother|\n|Mann|\n|Mehndi|\n|Kuch Kuch Hota Hai|\n|Ghulam|\n|Raja Ki Aayegi Baraat|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBook\nCollege\nFilm\nHistoricPlace\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPolitician\nRoyalty\nScientist\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test150"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|The Rising|\n|Paheli|\n|Black|\n|Veer Zaara|\n|Hum Tum|\n|Yuva|\n|LOC : Kargil|\n|Chalte Chalte|\n|Sathiya|\n|Mujhse Dosti Karoge|\n|Nayak|\n|Chori Chori Chupke Chupke|\n|Bas Itna sa Khawab Hai|\n|Pyar Deewana Hota Hai|\n|Kahin Pyar Na Ho Jaye|\n|HAr Dil Jo Pyar Karega|\n|Hey Ram|\n|Hadh Kar Di Aapne|\n|Chalo Ishq LAdayen|\n|Bichhoo|\n|Baadal|\n|Mann|\n|Hello Brother|\n|Mehandi|\n|Kuch Kuch Hota Hai|\n|Ghulam|\n|Raja Ki Ayegi Baraat|\n\n**Candidate column type:**\nArtist\nBird\nBook\nCollege\nMine\nMonarch\nNewspaper\nOfficeHolder\nPolitician\nPresident\nProtectedArea\nScientist\nSettlement\nSoftware\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test151"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|The Secret of the Old Clock|\n|The Hidden Staircase|\n|The Bungalow Mystery|\n|The Mystery at Lilac Inn|\n|The Secret at Shadow Ranch|\n|The Secret of Red Gate Farm|\n|The Clue in the Diary|\n|The Clue of the Broken Locket|\n|The Message in the Hollow Oak|\n|The Mystery of the Ivory Charm|\n|The Whispering Statue|\n|The Haunted Bridge|\n|The Clue of the Tapping Heels|\n|The Mystery of the Brass Bound Trunk|\n|The Mystery at the Moss - Covered Mansion|\n|The Quest of the Missing Map|\n|The Clue in the Jewel Box|\n|The Secret in the Old Attic|\n|The Clue in the Crumbling Wall|\n|The Mystery of the Tolling Bell|\n|The Clue in the Old Album|\n|The Ghost of Blackwood Hall|\n|The Clue of the Velvet Mask|\n\n**Candidate column type:**\nArtist\nAutomobile\nBird\nBook\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nOrganisation\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSettlement\nSoftware\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test152"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|The Story of Mankind|\n|The Voyages of Dr . Dolittle|\n|The Dark Frigate|\n|Tales from Silver Lands|\n|Shen of the Sea|\n|Smoky the Cow Horse|\n|Gayneck|\n|the Story of a Pigeon|\n|The Trumpeter of Krakow|\n|Hetty|\n|Her First Hundred Years|\n|The Cat Who Went to Heaven|\n|Waterless Mountain|\n|Young Fu of the Upper Yangtze|\n|Invincible Louisa|\n|Dobry|\n|Caddie Woodlawn|\n|Roller Skates|\n|The White Stag|\n|Thimble Summer|\n|Daniel Boone|\n|Call It Courage|\n|The Matchlock Gun|\n|Adam of the Road|\n|Johnny Tremain|\n|Rabbit Hill|\n|Strawberry Girl|\n|Miss Hickory|\n|The Twenty - One Balloons|\n|King of the Wind|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nCollege\nFilm\nHistoricPlace\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSettlement\nSoftware\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test153"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|The Story of Mankind|\n|The Voyages of Dr . Dolittle|\n|The Dark Frigate|\n|Tales from Silver Lands|\n|Shen of the Sea|\n|Smoky the Cow Horse|\n|Gayneck|\n|the Story of a Pigeon|\n|The Trumpeter of Krakow|\n|Hitty|\n|Her First Hundred Years|\n|The Cat Who Went to Heaven|\n|Waterless Mountain|\n|Young Fu of the Upper Yangtze|\n|Invincible Louisa|\n|Dobry|\n|Caddie Woodlawn|\n|Roller Skates|\n|The White Stag|\n|Thimble Summer|\n|Daniel Boone|\n|Call It Courage|\n|The Matchlock Gun|\n|Adam of the Road|\n|Johnny Tremain|\n|Rabbit Hill|\n|Strawberry Girl|\n|Miss Hickory|\n|The Twenty - One Balloons|\n|King of the Wind|\n\n**Candidate column type:**\nArtist\nAutomobile\nBird\nBook\nInternationalOrganisation\nLetter\nMine\nMonarch\nOfficeHolder\nPerson\nPolitician\nPresident\nPrimeMinister\nRoyalty\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test154"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|The Story of Mankind|\n|Voyages of Dr . Dolittle|\n|The Dark Frigate|\n|Tales from Silver Lands|\n|Shen of the Sea|\n|Smoky the Cow Horse|\n|Gayneck|\n|the Story of a Pigeon|\n|The Trumpeter of Krakow|\n|Hitty|\n|Her First Hundred Years|\n|The Cat Who Went to Heaven|\n|Waterless Mountain|\n|Young Fu of the Upper Yangtze|\n|Invincible Louisa|\n|Dobry|\n|Caddie Woodlawn|\n|Roller Skates|\n|The White Stag|\n|Thimble Summer|\n|Daniel Boone|\n|Call It Courage|\n|The Matchlock Gun|\n|Adam of the Road|\n|Johnny Tremain|\n|Rabbit Hill|\n|Strawberry Girl|\n|Miss Hickory|\n|The Twenty - One Balloons|\n|King of the Wind|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nCollege\nFilm\nInternationalOrganisation\nLetter\nMine\nMonarch\nPerson\nPolitician\nPresident\nRoyalty\nScientist\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test155"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|The Village Voice|\n|Wall Street Journal \/ Money &amp; Investing Update|\n|Wall Street Journal \/ Personal Technology|\n|Wall Street Journal \/ AdNet|\n|Computer News Daily \/ New York Times Syndicate|\n|New York Post|\n|New York Daily News|\n|New York Press|\n|New York Times|\n|Full Edition|\n|New York Times|\n|Internet Edition|\n|Newsday|\n|Staten Island Advance|\n|Adirondack Daily Enterprise|\n|Albany Electric Times Union|\n|Anton Community Newspapers|\n|Artvioce|\n|Bee Newspapers|\n|The|\n|Buffalo Beat|\n|Buffalo News|\n|The|\n|Business First|\n|Business Strategies Newspaper|\n|Capital District Business Review|\n|Citizen|\n|The|\n|Community News|\n|Cooperstown Crier|\n\n**Candidate column type:**\nArtist\nAutomobile\nBird\nBook\nCollege\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nPerson\nPresident\nPrimeMinister\nRoyalty\nSoftware\nTelevisionEpisode\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Newspaper\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test156"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Toy Story \/ Toy Story 2|\n|The Lion King|\n|Spirited Away|\n|The Incredibles|\n|Finding Nemo|\n|Aladdin|\n|Who Framed Roger Rabbit ?|\n|Monsters|\n|Inc .|\n|Pinnochio|\n|Beauty and the Beast|\n|101 Dalmations|\n|The Little Mermaid|\n|Fantasia|\n|Winnie the Pooh|\n|The Jungle Book|\n|Snow White and the Seven Dwarfs|\n|Bambi|\n|A Bug&apos;s Life|\n|Alice in Wonderland|\n|Lady and the Tramp|\n|Peter Pan|\n|Dumbo|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nCollege\nFilm\nHistoricPlace\nLetter\nMine\nMonarch\nNewspaper\nPerson\nPolitician\nPresident\nRoyalty\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test157"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Tunku Bahiyah binti Almarhum Tuanku Abdul Rahman|\n|Tengku Zanariah binti Tengku Panglima Raja Ahmad|\n|Raja|\n|Tengku|\n\n**Candidate column type:**\nArtist\nAutomobile\nBird\nBook\nCollege\nHistoricPlace\nNewspaper\nOrganisation\nPerson\nPolitician\nRoyalty\nScientist\nSettlement\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Royalty\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test158"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Tunku Kurshiah binti Almarhum Tunku Besar Burhanuddin|\n|Raja Jemaah bintiAlmarhum Raja Ahmad|\n|Tengku Budriah binti TengkuIsmail|\n|Tengku Intan Zaharah binti Tengku Omar|\n|Tunku Bahiyah binti Almarhum Tuanku Abdul Rahman|\n|TengkuZainab II binti Tengku Muhammad Petra|\n|Tengku Hajjah Afzan binti Tengku Panglima Perang Muhammad|\n|Tengku Zanariah binti Tengku Panglima Raja Ahmad|\n|Tuanku Bainun binti Mohamad Ali|\n|Tunku Najihah binti Almarhum Tunku Besar Burhanuddin|\n|Tuanku Siti Aishah|\n|Tengku Fauziah binti Almarhum Tengku Abdul Rashid|\n\n**Candidate column type:**\nActor\nAutomobile\nBird\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nMine\nMonarch\nNewspaper\nOfficeHolder\nPerson\nPolitician\nPresident\nProtectedArea\nRoyalty\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Royalty\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test159"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Alberta College of Art &amp; Design|\n|Athabasca University|\n|Augustana University College|\n|Concordia University College of Alberta|\n|Grande Prairie Regional College|\n|Grant MacEwan Community College|\n|Keyano College|\n|Lethbridge Community College|\n|Medicine Hat College|\n|Mount Royal College|\n|Northern Alberta Institute of Technology|\n|St . Mary\u00c3\u00a2\u00c2\u0080\u00c2\u0099s College|\n|Southern Alberta Institute of Technology|\n|University of Alberta|\n|University of Calgary|\n|University of Lethbridge|\n\n**Candidate column type:**\nArtist\nAutomobile\nBook\nCollege\nFilm\nHistoricPlace\nMonarch\nNewspaper\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nSoftware\nTelevisionEpisode\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test16"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Vasco Nunez de Balboa|\n|William Baffin|\n|Willem Barents|\n|Nicholas Baudin|\n|Richard Francis Burton|\n|Richard E . Byrd|\n\n**Candidate column type:**\nArtist\nBird\nBook\nCollege\nFilm\nInternationalOrganisation\nLetter\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test160"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Vector Prime|\n|Dark Tide : Onslaught|\n|Dark Tide : Ruin|\n|Agents of Chaos : Hero&apos;s Trial|\n|Agents of Chaos : Jedi Eclipse|\n|Balance Point|\n|Recovery|\n|Edge of Victory : Conquest|\n|Edge of Victory : Rebirth|\n|Emissaries of the Void|\n|Star by Star|\n|Dark Journey|\n|The Apprentice|\n|Enemy Lines : Rebel Dream|\n|Enemy Lines : Rebel Stand|\n|Traitor|\n|Destiny&apos;s Way|\n|Ylesia|\n|Force Heretic : Remnant|\n|Force Heretic : Refugee|\n|Force Heretic : Reunion|\n|The Final Prophecy|\n|The Unifying Force|\n\n**Candidate column type:**\nActor\nArtist\nCollege\nHistoricPlace\nInternationalOrganisation\nLetter\nMonarch\nOfficeHolder\nOrganisation\nPerson\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSettlement\nTelevisionEpisode\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test161"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Vector Prime|\n|Dark Tide I - Onslaught|\n|Dark Tide II - Ruin|\n|Hero&apos;s Trial - Agents of Chaos I|\n|Jedi Eclipse - Agents of Chaos II by|\n|Balance Point|\n|Conquest - Edge of Victory 1|\n|Rebirth - Edge of Victory II|\n|Star by Star -|\n|Dark Journey|\n|Rebel Dream - Enemy Lines I|\n|Rebel Stand - Enemy Lines II|\n|Traitor|\n\n**Candidate column type:**\nArtist\nAutomobile\nBook\nCollege\nFilm\nInternationalOrganisation\nLetter\nMine\nNewspaper\nOfficeHolder\nOrganisation\nPolitician\nPresident\nProtectedArea\nRoyalty\nScientist\nSettlement\nTelevisionEpisode\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test162"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Vector Prime|\n|Dark Tide I : Onslaugh|\n|Dark Tide II : Ruin|\n|Agents of Chaos I : Hero&apos;s|\n|Agents of Choas II : JEDI ECLIPSE|\n|Balance Point|\n|STAR BY STAR|\n|Edge of Victory I : Conquest|\n|Edge of Victory II : Rebirth|\n|Star by Sta r|\n|Dark Journey|\n\n**Candidate column type:**\nActor\nBird\nCollege\nHistoricPlace\nLetter\nMine\nNewspaper\nOrganisation\nPolitician\nPresident\nPrimeMinister\nSoftware\nTelevisionEpisode\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test163"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Vector Prime|\n|Dark Tide I : Onslaught|\n|Dark Tide : Siege|\n|Dark Tide II : Ruin|\n|Agents of Chaos : Hero&apos;s Trial|\n|Agents of Chaos : Jedi Eclipse|\n|Knightfall I : Jedi Storm|\n|Knightfall II : Jedi Blood|\n|Knightfall III : Jedi Fire|\n|Balance Point|\n|Recovery|\n|Edge of Victory : Conquest|\n|Edge of Victory : Rebirth|\n|Emissaries of the Void|\n|Star by Star|\n|Red Sky|\n|Blue Flame|\n|Dark Journey|\n|The Apprentice|\n|Enemy Lines : Rebel Dream|\n|Enemy Lines : Rebel Stand|\n|Traitor|\n|Destiny&apos;s Way|\n|Ylesia|\n|Force Heretic : Remnant|\n|Force Heretic : Refugee|\n|Force Heretic : Reunion|\n|The Final Prophecy|\n|The Unifying Force|\n\n**Candidate column type:**\nArtist\nAutomobile\nBook\nFilm\nInternationalOrganisation\nMine\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test164"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Vector Prime|\n|Dark Tide I : Onslaught|\n|Dark Tide II : Ruin|\n|Agents of Chaos I : Hero&apos;s Trial|\n|Agents of Chaos II : Jedi Eclipse|\n|Balance Point|\n|Edge of Victory I : Conquest|\n|Edge of Victory II : Rebirth|\n|Star by Star|\n|Dark Journey|\n|Enemy Lines I : Rebel Dream|\n|Enemy Lines II : Rebel Stand|\n|Traitor|\n|Destiny&apos;s Way|\n|Force Heretic I : Remnant|\n|Force Heretic II : Refugee|\n|Force Heretic III : Reunion|\n|The Final Prophecy|\n|The Unifying Force|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nNewspaper\nOfficeHolder\nOrganisation\nPrimeMinister\nProtectedArea\nRoyalty\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test165"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Vector Prime|\n|Dark Tide I : Onslaught|\n|Dark Tide II : Ruin|\n|Agents of Chaos I : Hero&apos;s Trial|\n|Agents of Chaos II : Jedi Eclipse|\n|Balance Point|\n|Recovery|\n|Edge of Victory I : Conquest|\n|Edge of Victory II : Rebirth|\n|Emissaries of the Void|\n|Star by Star|\n|Dark Journey|\n|The Apprentice|\n|Enemy Lines I : Rebel Dream|\n|Enemy Lines II : Rebel Stand|\n|Traitor|\n|Destiny&apos;s Way|\n|Ylesia|\n|Force Heretic I : Remnant|\n|Force Heretic II : Refugee|\n|Force Heretic III : Reunion|\n|The Final Prophecy|\n|The Unifying Force|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nOfficeHolder\nOrganisation\nPerson\nProtectedArea\nRoyalty\nScientist\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test166"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Vector Prime|\n|Dark Tide I : Onslaught|\n|Dark Tide II : Ruin|\n|Agents of Chaos I : Hero&apos;s Trial|\n|Agents of Chaos II : Jedi Eclipse|\n|Balance Point|\n|Recovery|\n|Edge of Victory I : Conquest|\n|Edge of Victory II : Rebirth|\n|Star by Star|\n|Dark Journey|\n|Enemy Lines I : Rebel Dream|\n|Enemy Lines II : Rebel Stand|\n|Traitor|\n\n**Candidate column type:**\nArtist\nAutomobile\nBird\nBook\nCollege\nFilm\nHistoricPlace\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test167"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Vector Prime|\n|Dark Tide I : Onslaught|\n|Dark Tide II : Ruin|\n|Agents of Chaos I|\n|Agents of Chaos II|\n|Balance Point|\n|Edge of Victory I : Conquest|\n|Edge of Victory II : Rebirth|\n|Star by Star|\n|Dark Journey|\n|Enemy Lines I : Rebel Dream|\n|Enemy Lines II : Rebel Stand|\n|Traitor|\n|Destiny&apos;s Way|\n|Force Heretic I : Remnant|\n|Force Heretic II : Refugee|\n|Force Heretic III : Reunion|\n|The Final Prophecy|\n|The Unifying Force|\n\n**Candidate column type:**\nAutomobile\nBird\nBook\nHistoricPlace\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nScientist\nSettlement\nSoftware\nTelevisionEpisode\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test168"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Vector Prime|\n|Onslaught|\n|Jedi Eclipse|\n|Balance Point|\n|Recovery|\n|: Edge of Victory series Conquest|\n|Star by Star|\n|Dark Journey|\n|Enemy Lines series Rebel Dream|\n|Traitor|\n|Destiny&apos;s Way|\n|Ylesia|\n|: Force Heretic series by Remnant|\n|The Final Prophecy|\n|The Unifying Force|\n\n**Candidate column type:**\nActor\nBird\nBook\nHistoricPlace\nMine\nMonarch\nOfficeHolder\nOrganisation\nPresident\nPrimeMinister\nRoyalty\nScientist\nSettlement\nSoftware\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test169"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Alexander Campbell|\n|Luc Letellier de St - Just|\n|Sir Richard William Scott|\n|Alexander Campbell|\n|Sir John Joseph Caldwell Abbott|\n|Sir Mackenzie Bowell|\n|Sir Oliver Mowat|\n|David Mills|\n|Sir Richard William Scott|\n|Sir Richard John Cartwright|\n|Sir James Alexander Lougheed|\n|Raoul Dandurand|\n|William Benjamin Ross***|\n|Raoul Dandurand|\n|Wellington Bartley Willoughby|\n|Arthur Meighen|\n|Raoul Dandurand|\n|James Horace King|\n|Wishart McLea Robertson|\n|William Ross MacDonald|\n|John Thomas Haig|\n|Alfred Johnson Brooks|\n|William Ross MacDonald|\n|John Joseph Connolly|\n|Paul Joseph James Martin|\n\n**Candidate column type:**\nActor\nFilm\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOrganisation\nPolitician\nPresident\nPrimeMinister\nRoyalty\nSettlement\nTelevisionEpisode\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test17"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Watch on the Rhine|\n|Wilson|\n|The Lost Weekend|\n|The Yearling|\n|A Double Life|\n|Hamlet|\n|All the King&apos;s Men|\n|Cyrano de Bergerac|\n|Death of a Salesman|\n|High Noon|\n|The Actress|\n|On the Waterfront|\n|Marty|\n|Lust for Life|\n|The Bridge on the River Kwai|\n|Separate Tables|\n|Career|\n|Elmer Gantry|\n|Judgment at Nuremberg|\n|To Kill a Mockingbird|\n|Lilies of the Field|\n|Becket|\n|Doctor Zhivago|\n|A Man for All Seasons|\n|In the Heat of the Night|\n|The Lion in Winter|\n|True Grit|\n|Patton|\n|The French Connection|\n|The Godfather|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBook\nCollege\nFilm\nInternationalOrganisation\nMine\nMonarch\nNewspaper\nOfficeHolder\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nScientist\nSettlement\nTelevisionEpisode\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test170"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Windows 1 . 0|\n|Windows 2 . 0|\n|Windows 3 . 0|\n|Windows 3 . 1|\n|Windows for Workgroups 3 . 1|\n|Windows for Workgroups 3 . 11|\n|Windows 95|\n|Windows Nashville|\n|Windows 98|\n|Windows 98 Second Edition|\n|Windows Millennium Edition ( Me )|\n\n**Candidate column type:**\nArtist\nBird\nBook\nCollege\nHistoricPlace\nInternationalOrganisation\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSettlement\nSoftware\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Software\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test171"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Windows NT 3 . 1|\n|Windows NT 3 . 5|\n|Windows NT 3 . 51|\n|Windows NT 4 . 0|\n|Windows 2000|\n|Windows XP|\n|Windows Server 2003|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nFilm\nHistoricPlace\nInternationalOrganisation\nMine\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPresident\nPrimeMinister\nRoyalty\nScientist\nSoftware\nTelevisionEpisode\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Software\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test172"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Windows version 1 . 0|\n|Windows version 2 . 0|\n|Windows version 3 . 0|\n|Windows version 3 . 1|\n|Windows 95|\n|Windows 98|\n|Windows 98 SE|\n|Windows ME|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nFilm\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOrganisation\nPerson\nPolitician\nPrimeMinister\nProtectedArea\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Software\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test173"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|World|\n|Arab League|\n|Association of Southeast Asian Nations|\n|European Union|\n|NAFTA|\n|Mercosur|\n|NATO|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nCollege\nFilm\nInternationalOrganisation\nMine\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPrimeMinister\nProtectedArea\nRoyalty\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"InternationalOrganisation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test174"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Alexander Mackenzie|\n|Arthur Meighen|\n|Brian Mulroney|\n|Charles Tupper|\n|Jean Chr\u00c3\u0083\u00c2\u0083\u00c3\u0082\u00c2\u00a9tien|\n|Joe Clark|\n|John A . Macdonald|\n|John George Diefenbaker|\n|John Joseph Caldwell Abbott|\n|John Napier Turner|\n|John Sparrow David Thompson|\n|Kim Campbell|\n|Lester Bowles Pearson|\n|Louis Stephen St . Laurent|\n|Mackenzie Bowell|\n|Paul Martin|\n|Pierre Trudeau|\n|Richard Bedford Bennett|\n|Robert Laird Borden|\n\n**Candidate column type:**\nActor\nArtist\nBook\nCollege\nFilm\nMonarch\nNewspaper\nOrganisation\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nScientist\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"PrimeMinister\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test18"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Alexander Mackenzie|\n|Wilfrid Laurier|\n|William Lyon Mackenzie King|\n|Louis St . Laurent|\n|Lester B . Pearson|\n|Pierre Trudeau|\n|John Turner|\n|Jean Chr\u00c3\u0083\u00c2\u00a9tien|\n|Paul Martin|\n\n**Candidate column type:**\nActor\nCollege\nFilm\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nPerson\nPolitician\nPrimeMinister\nProtectedArea\nScientist\nSettlement\nTelevisionEpisode\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"PrimeMinister\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test19"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1 The Secret of the Old Clock|\n|2 The Hidden Staircase|\n|3 The Bungalow Mystery|\n|4 The Mystery at Lilac Inn|\n|5 The Secret at Shadow Ranch|\n|6 The Secret of Red Gate Farm|\n|7 The Clue in the Diary|\n|8 Nancy&apos;s Mysterious Letter|\n|9 The Sign of the Twisted Candles|\n|10 The Password to Larkspur Lane|\n|11 The Clue of the Broken Locket|\n|12 The Message in the Hollow Oak|\n|13 The Mystery of the Ivory Charm|\n|14 The Whispering Statue|\n|15 The Haunted Bridge|\n|16 The Clue of the Tapping Heels|\n|17 The Mystery of the Brass - Bound Trunk|\n|18 The Mystery at the Moss - Covered Mansion|\n|19 The Quest of the Missing Map|\n|20 The Clue in the Jewel Box|\n|21 The Secret in the Old Attic|\n|22 The Clue in the Crumbling Wall|\n|23 The Mystery of the Tolling Bell|\n|24 The Clue in the Old Album|\n|25 The Ghost of Blackwood Hall|\n|26 The Clue of the Leaning Chimney|\n|27 The Secret of the Wooden lady|\n|28 The Clue of the Black Keys|\n|29 The Mystery at the Ski Jump|\n|30 The Clue of the Velvet Mask|\n\n**Candidate column type:**\nActor\nBird\nBook\nCollege\nMine\nMonarch\nOfficeHolder\nOrganisation\nPerson\nPresident\nProtectedArea\nRoyalty\nScientist\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test2"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|All Souls College|\n|Balliol College|\n|Blackfriars|\n|Brasenose College|\n|Campion Hall|\n|Christ Church|\n|Corpus Christi College|\n|Exeter College|\n|Green College|\n|Greyfriars|\n|Harris Manchester College|\n|Hertford College|\n|Jesus College|\n|Keble College|\n|Kellogg College|\n|Lady Margaret Hall|\n|Linacre College|\n|Lincoln College|\n|Magdalen College|\n|Mansfield College|\n|Merton College|\n|New College|\n|Nuffield College|\n|Oriel College|\n|Pembroke College|\n|The Queen&apos;s College|\n|Regent&apos;s Park College|\n|St Anne&apos;s College|\n|St Antony&apos;s College|\n|St Benet&apos;s Hall|\n\n**Candidate column type:**\nActor\nArtist\nBird\nBook\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nNewspaper\nOfficeHolder\nOrganisation\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSettlement\nTelevisionEpisode\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"College\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test20"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|All Souls College|\n|Balliol College|\n|Brasenose College|\n|Christ Church|\n|Corpus Christi College|\n|Exeter College|\n|Green College|\n|Harris Manchester College|\n|Hertford College|\n|Jesus College|\n|Keble College|\n|Kellogg College|\n|Lady Margaret Hall|\n|Linacre College|\n|Lincoln College|\n|Magdalen College|\n|Mansfield College|\n|Merton College|\n|New College|\n|Nuffield College|\n|Oriel College|\n|Pembroke College|\n|The Queen&apos;s College|\n|St Anne&apos;s College|\n|St Antony&apos;s College|\n|St Catherine&apos;s College|\n|St Cross College|\n|St Edmund Hall|\n|St Hilda&apos;s College|\n|St Hugh&apos;s College|\n\n**Candidate column type:**\nActor\nAutomobile\nBird\nBook\nCollege\nFilm\nHistoricPlace\nMine\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPresident\nPrimeMinister\nRoyalty\nSettlement\nSoftware\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"College\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test21"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Amsterdam News|\n|Financial Times|\n|Wall Street Journal \/ Money &amp; Investing Update|\n|Wall Street Journal \/ Personal Technology|\n|New York Post|\n|New York Daily News|\n|New York Observer|\n|New York Times|\n|Full Edition|\n|Staten Island Advance|\n|The Village Voice|\n|Albany Times Union|\n|Buffalo News|\n|The|\n|Business First|\n|Business Strategies Newspaper|\n|Carnarsie Courier|\n|Citizen|\n|The|\n|Daily Freeman|\n|The|\n|Daily Gazette|\n|The|\n|Daily Sentinel|\n|Daily Star|\n|The|\n|Democrat and Chronicle|\n|Dunkirk Observer|\n|Evening Sun|\n|The|\n\n**Candidate column type:**\nActor\nAutomobile\nBird\nBook\nCollege\nFilm\nInternationalOrganisation\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Newspaper\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test22"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Andean Community|\n|Asia - Pacific Economic Cooperation|\n|Association of Southeast Asian Nations|\n|ASEAN + 1 ( Mainland China ) Free Trade Area|\n|Caribbean Community and Common Market|\n|Central European Free Trade Agreement|\n|East African Economic Community|\n|Economic Community of West African States|\n|European Economic Area|\n|European Free Trade Association|\n|European Union|\n|Mercado Comun del Sur|\n|Mercado Comun Centro Americano|\n|North American Free Trade Agreement|\n|South Asian Association for Regional Cooperation|\n|Southern African Development Community|\n\n**Candidate column type:**\nArtist\nBird\nBook\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nOfficeHolder\nPerson\nPolitician\nPrimeMinister\nRoyalty\nScientist\nSettlement\nSoftware\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"InternationalOrganisation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test23"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Andean Community|\n|Asia - Pacific Economic Cooperation|\n|Association of Southeast Asian Nations|\n|ASEAN + 1 ( Mainland China ) Free Trade Area|\n|Caribbean Community|\n|Central European Free Trade Agreement|\n|Closer Economic Partnership Arrangement|\n|East African Economic Community|\n|Economic Community of West African States|\n|Eurasian Economic Community|\n|European Economic Area|\n|European Free Trade Association|\n|European Union|\n|Gulf Cooperation Council|\n|Mercado Comun del Sur|\n|Mercado Comun Centro Americano|\n|North American Free Trade Agreement|\n|South American Community of Nations|\n|South Asian Association for Regional Cooperation|\n|Southern African Development Community|\n\n**Candidate column type:**\nArtist\nBird\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nOfficeHolder\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSoftware\nTelevisionEpisode\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"InternationalOrganisation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test24"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Andr\u00c3\u0083\u00c2\u00a9 - Marie Amp\u00c3\u0083\u00c2\u00a8re|\n|Fran\u00c3\u0083\u00c2\u00a7ois Arago|\n|Jean - Charles de Borda|\n|Augustin Louis Cauchy|\n|Charles - Augustin de Coulomb|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nCollege\nFilm\nMine\nMonarch\nOrganisation\nPolitician\nPresident\nProtectedArea\nScientist\nTelevisionEpisode\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test25"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Andr\u00c3\u0083\u00c2\u00a9 - Marie Amp\u00c3\u0083\u00c2\u00a8re|\n|Fran\u00c3\u0083\u00c2\u00a7ois Arago|\n|Jean - Charles de Borda|\n|Augustin Louis Cauchy|\n|Charles - Augustin de Coulomb|\n|Pierre - Simon Laplace|\n\n**Candidate column type:**\nActor\nAutomobile\nBird\nBook\nCollege\nHistoricPlace\nInternationalOrganisation\nMine\nMonarch\nOfficeHolder\nPerson\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Person\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test26"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Andr\u00c3\u0083\u00c2\u00a9 - Marie Amp\u00c3\u0083\u00c2\u00a8re|\n|Jean - Charles de Borda|\n|Augustin Louis Cauchy|\n|Charles - Augustin de Coulomb|\n|Pierre - Simon Laplace|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOrganisation\nPerson\nPolitician\nPresident\nSettlement\nTelevisionEpisode\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test27"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Animals of the Bible|\n|Mei Li|\n|Abraham Lincoln|\n|They Were Strong and Good|\n|Make Way for Ducklings|\n|The Little House|\n|Many Moons|\n|Prayer for a Child|\n|The Rooster Crows|\n|The Little Island|\n|White Snow|\n|Bright Snow|\n|The Big Snow|\n|Song of the Swallows|\n|The Egg Tree|\n|Finders Keepers|\n|The Biggest Bear|\n|Madeline&apos;s Rescue|\n|or the Little Glass Slipper|\n|Frog Went A - Courtin&apos;|\n|A Tree Is Nice|\n|Time of Wonder|\n|Chanticleer and the Fox|\n|Nine Days to Christmas|\n|Baboushka and the Three Kings|\n|Once a Mouse|\n|The Snowy Day|\n|Where the Wild Things Are|\n|May I Bring a Friend|\n|Always Room for One More|\n\n**Candidate column type:**\nActor\nAutomobile\nBird\nBook\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nNewspaper\nPerson\nPresident\nProtectedArea\nRoyalty\nScientist\nSettlement\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test28"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Aquae Sulis|\n|Isca|\n|Venta Silurum|\n|Venta Icenorum|\n|Durovernum Cantiacorum|\n|Moridunum|\n|Deva|\n|Noviomagus Regneses|\n|Corinium Dobunnorum|\n|Camulodunum|\n|Durnovaria|\n|Dubris|\n|Isca Dumnonnorum|\n|Glevum|\n|Lindinis|\n|Ratae Corieltauvum|\n|Londinium|\n|Calleva Atrebatum|\n|Verulamium|\n|Venta Belgarum|\n|Viriconium Cornoviorum|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nFilm\nInternationalOrganisation\nLetter\nNewspaper\nOrganisation\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSettlement\nSoftware\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test29"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1 The Secret of the Old Clock|\n|2 The Hidden Staircase|\n|3 The Bungalow Mystery|\n|4 The Mystery at Lilac Inn|\n|5 The Secret at Shadow Ranch|\n|6 The Secret of Red Gate Farm|\n|7 The Clue in the Diary|\n|8 Nancy&apos;s Mysterious Letter|\n|9 The Sign of the Twisted Candles|\n|10 The Password to Larkspur Lane|\n|11 The Clue of the Broken Locket|\n|12 The Message in the Hollow Oak|\n|13 The Mystery of the Ivory Charm|\n|14 The Whispering Statue|\n|15 The Haunted Bridge|\n|16 The Clue of the Tapping Heels|\n|17 The Mystery of the Brass - Bound Trunk|\n|18 The Mystery at the Moss - Covered Mansion|\n|19 The Quest of the Missing Map|\n|20 The Clue in the Jewel Box|\n|21 The Secret in the Old Attic|\n|22 The Clue in the Crumbling Wall|\n|23 The Mystery of the Tolling Bell|\n|24 The Clue in the Old Album|\n|25 The Ghost of Blackwood Hall|\n|26 The Clue of the Leaning Chimney|\n|27 The Secret of the Wooden lady|\n|28 The Clue of the Black Keys|\n|29 The Mystery at the Ski Jump|\n|30 The Clue of the Velvet Mask|\n\n**Candidate column type:**\nArtist\nAutomobile\nBird\nBook\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nNewspaper\nOfficeHolder\nOrganisation\nPolitician\nPresident\nProtectedArea\nScientist\nSettlement\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test3"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Aquae Sulis|\n|Venta silurum|\n|Durovernum|\n|Moridunum|\n|Camulodonum|\n|Noviomagus|\n|Deva|\n|Corinium|\n|Dubris|\n|Durnovaria|\n|Isca Dumnoniorum|\n|Glevum|\n|Ratae Coritanorum|\n|Londinium|\n|Lindum|\n|Mamucium|\n|Verulamium|\n|Lactodorum|\n|Venta Belgarum|\n|Eboracum|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nCollege\nLetter\nMine\nMonarch\nNewspaper\nOrganisation\nPerson\nPolitician\nPresident\nProtectedArea\nScientist\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test30"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Arab League|\n|Association of Southeast Asian Nations|\n|Commonwealth of Independent States|\n|Commonwealth of Nations|\n|European Free Trade Association|\n|European Union|\n|NATO|\n|World|\n\n**Candidate column type:**\nActor\nAutomobile\nBird\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOrganisation\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSettlement\nTelevisionEpisode\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"InternationalOrganisation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test31"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Assateague Island State Park|\n|Big Run State Park|\n|Calvert Cliffs State Park|\n|Casselman River Bridge State Park|\n|Choptank River Fishing Piers|\n|Cunningham Falls State Park|\n|Dans Mountain State Park|\n|Deep Creek Lake State Park|\n|Elk Neck State Park|\n|Fort Frederick State Park|\n|Gambrill State Park|\n|Gathland State Park|\n|Greenbrier State Park|\n|Greenwell State Park|\n|Gunpowder Falls State Park|\n|Hart - Miller Island State Park|\n|Herrington Manor State Park|\n|Janes Island State Park|\n|Martinak State Park|\n|Morgan Run Natural Environment Area|\n|New Germany State Park|\n|Patapsco Valley State Park|\n|Patuxent River State Park|\n|Point Lookout State Park|\n|Pocomoke River State Park|\n|Rocks State Park|\n|Rocky Gap State Park|\n|St . Clements Island State Park|\n|St . Mary&apos;s River State Park|\n|Sandy Point State Park|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBook\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nNewspaper\nOrganisation\nPerson\nPresident\nPrimeMinister\nProtectedArea\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"ProtectedArea\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test32"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Assateague State Park|\n|Big Run State Park|\n|Cunningham Falls State Park|\n|Deep Creek State Park|\n|Elk Neck State Park|\n|Fort Frederick State Park|\n|Gambrill State Park|\n|Greenbrier State Park|\n|Herrington Manor State Park|\n|Janes Island State Park|\n|Martinak State Park|\n|New Germany State Park|\n|Patapsco Valley State Park|\n|Pocomoke State Park|\n|Point Lookout State Park|\n|Rocky Gap State Park|\n|Smallwood State Park|\n|Susquehanna State Park|\n|Swallow Falls State Park|\n|Tuckahoe State Park|\n\n**Candidate column type:**\nArtist\nAutomobile\nBird\nBook\nMine\nNewspaper\nOfficeHolder\nPerson\nPolitician\nSettlement\nSoftware\nTelevisionEpisode\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test33"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Assateague State Park|\n|Cedarville State Forest|\n|Cunningham Falls State Park|\n|Dans Mountain State Park|\n|Deep Creek Lake State Park|\n|Elk Neck State Park|\n|Greenbrier State Park|\n|Green Ridge State Forest|\n|Greenwell State Park|\n|Gunpowder Falls State Park|\n|Herrington Manor State Park|\n|Janes Island State Park|\n|Martinak State Park|\n|Patapsco Valley State Park|\n|Pocomoke River State Park|\n|Point Lookout State Park|\n|Rocks State Park|\n|Sandy Point State Park|\n|Seneca Creek State Park|\n|Smallwood State Park|\n|Swallow Falls State Park|\n|Tuckahoe State Park|\n|Washington Monument State Park|\n|Wye Oak State Park|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nCollege\nFilm\nHistoricPlace\nMine\nMonarch\nNewspaper\nOrganisation\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"ProtectedArea\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test34"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Assateague State Park|\n|Deep Creek State Park|\n|Gunpowder Falls State Park|\n|Pocomoke River State Park|\n|Point Lookout State Park|\n|Rocky Gap State Park|\n|St . Mary&apos;s River State Park|\n|Seneca Creek State Park|\n|Susquehanna State Park|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nCollege\nFilm\nInternationalOrganisation\nLetter\nMine\nMonarch\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPresident\nProtectedArea\nRoyalty\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"ProtectedArea\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test35"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Association of Southeast Asian Nations|\n|Central European Free Trade Agreement|\n|European Economic Area|\n|European Free Trade Association|\n|European Union|\n|NAFTA|\n|South Asian Association for Regional Cooperation|\n\n**Candidate column type:**\nActor\nArtist\nBird\nBook\nCollege\nFilm\nHistoricPlace\nLetter\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPolitician\nPresident\nProtectedArea\nRoyalty\nScientist\nSettlement\nSoftware\nTelevisionEpisode\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test36"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Aston Martin DB - 5|\n|Aston Martin|\n|Jaguar XKR|\n|Mustang Mach 1|\n|Chevrolet Corvette|\n|Lotus Esprit|\n\n**Candidate column type:**\nArtist\nAutomobile\nBird\nBook\nCollege\nFilm\nHistoricPlace\nLetter\nMine\nOfficeHolder\nOrganisation\nPolitician\nPresident\nProtectedArea\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Automobile\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test37"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Athabasca University|\n|CDI College of Business and Technology|\n|Concordia University College of Alberta|\n|DeVry Institute of Technology|\n|Grande Prairie Regional College|\n|Grant MacEwan College|\n|HCC Computer Training Centre and Computer Career College|\n|The King&apos;s University College|\n|Lakeland College|\n|Lethbridge Community College|\n|Medicine Hat College|\n|Mount Royal College|\n|Network Learning Masters|\n|NorQuest College|\n|Northern Alberta Institute of Technology|\n|Prestwick College|\n|Red Deer College|\n|Southern Alberta Institute of Technology|\n|the University of Alberta|\n|the University of Calgary|\n|the University of Lethbridge|\n\n**Candidate column type:**\nActor\nAutomobile\nBird\nBook\nHistoricPlace\nInternationalOrganisation\nMine\nNewspaper\nOfficeHolder\nOrganisation\nPolitician\nPresident\nPrimeMinister\nRoyalty\nScientist\nSettlement\nTelevisionEpisode\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test38"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Augustin Louis Cauchy|\n|Emile Clapeyron|\n|Coriolis|\n|Fresnel|\n|Louis Marie Henri Navier|\n|de Prony|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMonarch\nPerson\nPolitician\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Scientist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test39"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|101 Dalmatians|\n|Aladdin|\n|Alice in Wonderland|\n|Aristocats|\n|The|\n|Atlantis - The Lost Empire|\n|Bambi|\n|Beauty &amp; the Beast|\n|Black Cauldron|\n|The|\n|Brave Little Toaster|\n|The|\n|Brother Bear|\n|Bug&apos;s Life|\n|A|\n|Cinderella|\n|Dinosaur|\n|Doug&apos;s 1st Movie|\n|Finding Nemo|\n|Goofy Movie|\n|A (|\n|Great Mouse Detective|\n|The|\n|Hercules - 1997|\n|Home on the Range|\n|Hunchback of Notre Dame|\n|The|\n|Incredibles|\n|The|\n|James &amp; the Giant Peach|\n\n**Candidate column type:**\nArtist\nAutomobile\nBird\nBook\nCollege\nLetter\nMine\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test4"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Balliol College|\n|Brasenose College|\n|Christ Church|\n|Corpus Christi College|\n|Exeter College|\n|Green College|\n|Harris Manchester College|\n|Hertford College|\n|Jesus College|\n|Keble College|\n|Kellogg College|\n|Lady Margaret Hall|\n|Linacre College|\n|Lincoln College|\n|Magdalen College|\n|Mansfield College|\n|Merton College|\n|New College|\n|Nuffield College|\n|Oriel College|\n|Pembroke College|\n|The Queen&apos;s College|\n|St Anne&apos;s College|\n|St Antony&apos;s College|\n|St Catherine&apos;s College|\n|St Cross College|\n|St Edmund Hall|\n|St Hilda&apos;s College|\n|St Hugh&apos;s College|\n|St John&apos;s College|\n\n**Candidate column type:**\nArtist\nAutomobile\nBird\nBook\nHistoricPlace\nLetter\nMine\nMonarch\nNewspaper\nOrganisation\nPerson\nPolitician\nPresident\nRoyalty\nSettlement\nSoftware\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test40"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Bart of Darkness|\n|Lisa&apos;s Rival|\n|Another Simpson Clip Show|\n|Itchy &amp; Scratchy Land|\n|Sideshow Bob Roberts|\n|Treehouse of Horror V|\n|Bart&apos;s Girlfriend|\n|Lisa on Ice|\n|Homer Badman|\n|Grampa Vs . Sexual Inadequacy|\n|Fear of Flying|\n|Homer the Great|\n|And Maggie Makes Three|\n|Bart&apos;s Comet|\n|Homie the Clown|\n|Bart Vs . Australia|\n|Homer Vs . Patty and Selma|\n|A Star is Burns|\n|Lisa&apos;s Wedding|\n|Two Dozen and One Greyhounds|\n|The PTA Disbands|\n|&apos;Round Springfield|\n|The Springfield Connection|\n|Lemon of Troy|\n|Who Shot Mr . Burns ( Part One )|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nProtectedArea\nRoyalty\nSettlement\nTelevisionEpisode\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"TelevisionEpisode\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test41"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Be Cool|\n|Camp|\n|How High|\n|Erin Brockovich|\n|Drowning Mona|\n|Living Out Loud|\n|Gattaca|\n|Matilda|\n|Get Shorty|\n|Pulp Fiction|\n|Reality Bites|\n|Hoffa|\n\n**Candidate column type:**\nActor\nAutomobile\nBird\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPresident\nProtectedArea\nRoyalty\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test42"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Bill Martin|\n|Peggy Rathmann|\n|William Steig|\n|Kevin Henkes|\n|Eric Rohmann|\n|Kevin Henkes|\n|Chris Van Allsburg|\n|Ezra Jack Keats|\n|David Wiesner|\n|David Wiesner|\n|Maurice Sendak|\n\n**Candidate column type:**\nActor\nAutomobile\nBird\nBook\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMonarch\nOfficeHolder\nOrganisation\nPolitician\nPresident\nProtectedArea\nRoyalty\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Writer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test43"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Bradley Whitford|\n|Richard Schiff|\n\n**Candidate column type:**\nArtist\nBird\nCollege\nFilm\nMonarch\nNewspaper\nOrganisation\nPolitician\nPresident\nPrimeMinister\nRoyalty\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test44"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Bradley Whitford|\n|Richard Schiff|\n|Mary McCormack|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nCollege\nHistoricPlace\nInternationalOrganisation\nMine\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Actor\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test45"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Brock University|\n|Carleton University|\n|Lakehead University|\n|Laurentian University|\n|McMaster University|\n|Nipissing University|\n|Ontario College of Art &amp; Design|\n|Queen&apos;s University|\n|Royal Military College of Canada|\n|Ryerson University|\n|Trent University|\n|University of Guelph|\n|University of Ontario Institute of Technology|\n|University of Ottawa|\n|University of Toronto|\n|University of Waterloo|\n|University of Western Ontario|\n|University of Windsor|\n|Wilfrid Laurier University|\n|York University|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nMonarch\nNewspaper\nOrganisation\nPolitician\nPresident\nProtectedArea\nRoyalty\nSettlement\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"University\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test46"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Brock University|\n|Carleton University|\n|Lakehead University|\n|Laurentian University|\n|McMaster University|\n|Nipissing University|\n|Ontario College of Art &amp; Design|\n|Queen&apos;s University|\n|Royal Military College ofCanada|\n|Ryerson University|\n|Trent University|\n|University of Guelph|\n|University of Ontario Institute of Technology|\n|University of Ottawa|\n|University of Toronto|\n|University of Waterloo|\n|University of Western Ontario|\n|University of Windsor|\n|Wilfrid Laurier University|\n|York University|\n\n**Candidate column type:**\nActor\nArtist\nBird\nBook\nFilm\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOrganisation\nPresident\nPrimeMinister\nScientist\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"University\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test47"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Brock University|\n|Carleton University|\n|Lakehead University|\n|Laurentian University|\n|McMaster University|\n|Nipissing University|\n|Queen&apos;s University|\n|Royal Military College of Canada|\n|Ryerson University|\n|Trent University|\n|University of Guelph|\n|University of Ontario Institute of Technology|\n|University of Ottawa|\n|University of Toronto|\n|University of Waterloo|\n|University of Western Ontario|\n|University of Windsor|\n|Wilfrid Laurier University|\n|York University|\n\n**Candidate column type:**\nArtist\nBird\nBook\nCollege\nFilm\nInternationalOrganisation\nLetter\nMine\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPresident\nProtectedArea\nRoyalty\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"University\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test48"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Brock University|\n|Carleton University|\n|Lakehead University|\n|Laurentian University|\n|McMaster University|\n|Queen&apos;s University|\n|Royal Military College|\n|University of Guelph|\n|University of Ottawa|\n|University of Toronto|\n|University of Western Ontario|\n|University of Windsor|\n|Wilfrid Laurier University|\n|York University|\n\n**Candidate column type:**\nArtist\nAutomobile\nCollege\nHistoricPlace\nLetter\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test49"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|AM New York|\n|El Diario La Prensa|\n|New York Daily News|\n|New York Metro|\n|New York Observer|\n|New York Post|\n|New York Press|\n|New York Sun|\n|New York Times|\n|Newsday|\n|Queens Tribune|\n|Staten Island Advance|\n|The Forward|\n|The New Yorker|\n|Time Out NY|\n|Village Voice|\n\n**Candidate column type:**\nArtist\nAutomobile\nBird\nCollege\nFilm\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPresident\nPrimeMinister\nRoyalty\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Newspaper\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test5"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Buddha Yodfa Chulalok ( Rama I ) the Great|\n|Buddha Loetla Nabhalai ( Rama II )|\n|Nangklao ( Rama III )|\n|Mongkut ( Rama IV )|\n|Vajiravudh ( Rama VI )|\n|Prajadhipok ( Rama VII|\n|Ananda Mahidol ( Rama VIII )|\n|Bhumibol Adulyadej ( Rama IX ) the Great|\n\n**Candidate column type:**\nArtist\nAutomobile\nBird\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPresident\nPrimeMinister\nProtectedArea\nSettlement\nSoftware\nTelevisionEpisode\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Monarch\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test50"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Buddha Yodfa Chulaloke ( Rama I ) the Great|\n|Buddha Loetla Nabhalai ( Rama II|\n|Nangklao ( Rama III|\n|Mongkut ( Rama IV|\n|Vajiravudh ( Rama VI|\n|Prajadhipok ( Rama VII|\n|Ananda Mahidol ( Rama VIII|\n|Bhumibol Adulyadej ( Rama IX ) the Great|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSoftware\nTelevisionEpisode\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Monarch\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test51"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Calleva Atrebatum|\n|Venta Belgarum|\n|Isurium Brigantum|\n|Durovernum Cantiacorum|\n|Ratae Coritanorum|\n|Viroconium Cornoviorum|\n|Corinium Dobunnorum|\n|Isca Dumnoniorum|\n|Venta Icenorum|\n|Noviomagus Regnensium|\n|Venta Silurum|\n\n**Candidate column type:**\nActor\nArtist\nBird\nBook\nCollege\nHistoricPlace\nMine\nNewspaper\nOfficeHolder\nPolitician\nPrimeMinister\nScientist\nSoftware\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test52"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Cape Feare ( Sideshow Bob Returns )|\n|Rosebud|\n|Homer Goes to College|\n|Marge on the Lam|\n|Count Burns|\n|Bart&apos;s Inner Child|\n|Boy - Scoutz &apos;N The Hood|\n|The Last Temptation of Homer|\n|$pringfield|\n|Homer the Vigilante|\n|Homer and Apu|\n|Bart Gets Famous|\n|Lisa vs . Malibu Stacy|\n|Deep Space Homer|\n|Homer Loves Flanders|\n|Bart Gets an Elephant|\n|Burns&apos;s Heir|\n|Sweet Seymour Skinner&apos;s Bad - ass Song|\n|Secrets of a Successful Marriage|\n|Lady Bouvier&apos;s Lover|\n\n**Candidate column type:**\nArtist\nAutomobile\nBird\nBook\nCollege\nFilm\nLetter\nMonarch\nOfficeHolder\nPerson\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"TelevisionEpisode\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test53"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Cape Feare ( Sideshow Bob Returns )|\n|Rosebud|\n|Homer Goes to College|\n|Marge on the Lam|\n|Count Burns|\n|Bart&apos;s Inner Child|\n|Boy - Scoutz &apos;N The Hood|\n|The Last Temptation of Homer|\n|$pringfield|\n|Homer the Vigilante|\n|Homer and Apu|\n|Bart Gets Famous|\n|Lisa vs . Malibu Stacy|\n|Deep Space Homer|\n|Homer Loves Flanders|\n|Bart Gets an Elephant|\n|Burns&apos;s Heir|\n|Sweet Seymour Skinner&apos;s Bad - ass Song|\n|The Boy Who Knew Too Much|\n|Secrets of a Successful Marriage|\n|Lady Bouvier&apos;s Lover|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPolitician\nProtectedArea\nScientist\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"TelevisionEpisode\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test54"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Cape Feare ( Sideshow Bob Returns )|\n|Rosebud|\n|Homer Goes to College|\n|Marge on the Lam|\n|Treehouse of Horror IV|\n|Bart&apos;s Inner Child|\n|Boy - Scoutz &apos;N The Hood|\n|The Last Temptation of Homer|\n|$pringfield|\n|Homer the Vigilante|\n|Homer and Apu|\n|Bart Gets Famous|\n|Lisa vs . Malibu Stacy|\n|Deep Space Homer|\n|Homer Loves Flanders|\n|Bart Gets an Elephant|\n|Burns&apos;s Heir|\n|Sweet Seymour Skinner&apos;s Bad - ass Song|\n|The Boy Who Knew Too Much|\n|Secrets of a Successful Marriage|\n|Lady Bouvier&apos;s Lover|\n\n**Candidate column type:**\nActor\nAutomobile\nBird\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nMine\nOfficeHolder\nOrganisation\nPolitician\nPrimeMinister\nRoyalty\nSettlement\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test55"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Cape Feare|\n|Rosebud|\n|Homer Goes to College|\n|Marge on the Lam|\n|Treehouse of Horror IV|\n|Bart&apos;s Inner Child|\n|Boy - Scoutz &apos;N The Hood|\n|The Last Temptation of Homer|\n|$pringfield|\n|Homer the Vigilante|\n|Homer and Apu|\n|Bart Gets Famous|\n|Lisa vs . Malibu Stacy|\n|Deep Space Homer|\n|Homer Loves Flanders|\n|Bart Gets an Elephant|\n|Burns&apos;s Heir|\n|Sweet Seymour Skinner&apos;s Bad - ass Song|\n|Secrets of a Successful Marriage|\n|Lady Bouvier&apos;s Lover|\n\n**Candidate column type:**\nArtist\nBird\nBook\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nMonarch\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nScientist\nSoftware\nTelevisionEpisode\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"TelevisionEpisode\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test56"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Cape Feare|\n|Rosebud|\n|Homer&apos;s Barbershop Quartet|\n|Deep Space Homer|\n|Boy - Scoutz N The Hood|\n|Homer The Vigilante|\n|Treehouse of Horror IV|\n|The Last Temptation of Homer|\n|Secrets of a Successful Marriage|\n|The Boy Who Knew Too Much|\n|$pringfield ( Or|\n|How I Learned to Stop Worrying and Love Legalized Gambling|\n|Homer Loves Flanders|\n\n**Candidate column type:**\nArtist\nAutomobile\nBird\nFilm\nInternationalOrganisation\nMine\nMonarch\nNewspaper\nOrganisation\nPolitician\nPresident\nProtectedArea\nRoyalty\nSoftware\nTelevisionEpisode\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"TelevisionEpisode\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test57"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Casino Royale|\n|Live and Let Die|\n|Moonraker|\n|Diamonds Are Forever|\n|From Russia with Love|\n|Dr . No|\n|Goldfinger|\n|For Your Eyes Only|\n|Thunderball|\n|The Spy Who Loved Me|\n|On Her Majesty&apos;s Secret Service|\n|You Only Live Twice|\n|The Man With The Golden Gun|\n\n**Candidate column type:**\nActor\nArtist\nBird\nCollege\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test58"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Casino Royale|\n|Live and Let Die|\n|Moonraker|\n|Diamonds Are Forever|\n|From Russia with Love|\n|Dr . No|\n|Goldfinger|\n|For Your Eyes Only|\n|Thunderball|\n|The Spy Who Loved Me|\n|On Her Majesty&apos;s Secret Service|\n|You Only Live Twice|\n|The Man With The Golden Gun|\n|Octopussy and The Living Daylights|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nCollege\nFilm\nLetter\nMine\nMonarch\nNewspaper\nOrganisation\nPerson\nProtectedArea\nRoyalty\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test59"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|AM New York|\n|El Diario La Prensa|\n|New York Daily News|\n|New York Metro|\n|New York Observer|\n|New York Post|\n|New York Press|\n|New York Sun|\n|New York Times|\n|Newsday|\n|Queens Tribune|\n|Staten Island Advance|\n|The New Yorker|\n|Time Out NY|\n|Village Voice|\n\n**Candidate column type:**\nActor\nAutomobile\nBird\nBook\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nMonarch\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSettlement\nSoftware\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test6"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Casino Royale|\n|Live and Let Die|\n|Moonraker|\n|Diamonds Are Forever|\n|From Russia with Love|\n|Dr . No|\n|Goldfinger|\n|For Your Eyes Only|\n|Thunderball|\n|The Spy Who Loved Me|\n|On Her Majesty&apos;s Secret Service|\n|You Only Live Twice|\n|The Man with the Golden Gun|\n|Octopussy and The Living Daylights|\n\n**Candidate column type:**\nActor\nAutomobile\nBird\nBook\nCollege\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nMonarch\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPresident\nRoyalty\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test60"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Casino Royale|\n|Live and Let Die|\n|Moonraker|\n|Diamonds are Forever|\n|From Russia|\n|With Love|\n|Dr No|\n|Goldfinger|\n|For Your Eyes Only|\n|Thunderball|\n|On Her Majesty&apos;s Secret Service|\n|You Only Live Twice|\n|The Man With the Golden Gun|\n|The Spy Who Loved Me|\n|Octopussy|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMonarch\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nSettlement\nSoftware\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test61"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Challenge = Desafio (|\n|Ethnikos Keryx = National Herald (|\n|The Militant (|\n|New York Amsterdam News (|\n|The New York|\n|The Village Voice (|\n|The Wall Street Journal (|\n\n**Candidate column type:**\nBird\nBook\nCollege\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOrganisation\nPresident\nPrimeMinister\nScientist\nSettlement\nTelevisionEpisode\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Newspaper\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test62"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Christ&apos;s College|\n|Churchill College|\n|Clare College|\n|Clare Hall|\n|Corpus Christi College|\n|Darwin College|\n|Downing College|\n|Emmanuel College|\n|Fitzwilliam College|\n|Girton College|\n|Gonville and Caius College|\n|Homerton College|\n|Hughes Hall|\n|Jesus College|\n|King&apos;s College|\n|Lucy Cavendish College|\n|Magdalene College|\n|New Hall|\n|Newnham College|\n|Pembroke College|\n|Peterhouse|\n|Queens&apos; College|\n|Robinson College|\n|St Catharine&apos;s College|\n|St Edmund&apos;s College|\n|St John&apos;s College|\n|Selwyn College|\n|Sidney Sussex College|\n|Trinity College|\n|Trinity Hall|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMonarch\nOfficeHolder\nOrganisation\nPerson\nPresident\nRoyalty\nScientist\nSettlement\nSoftware\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"University\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test63"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Con Mine|\n|Giant Mine|\n|Ptarmigan and Tom Mine|\n|Negus Mine|\n|Burwash Mine|\n|Thompson - Lundmark Mine|\n|Discovery Mine|\n|Camlaren Mine|\n|Beaulieu Mine|\n|Outpost Island Mine|\n|Ruth Mine|\n\n**Candidate column type:**\nActor\nAutomobile\nBird\nBook\nCollege\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPolitician\nPresident\nPrimeMinister\nRoyalty\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mine\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test64"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Con Mine|\n|Giant Mine|\n|Ptarmigan and Tom Mine|\n|Negus Mine|\n|Thompson - Lundmark Mine|\n|Discovery Mine|\n|Camlaren Mine|\n|Eldorado Mine|\n|Echo Bay Mine|\n|Ekati Diamond Mine|\n|Diavik Diamond Mine|\n|Pine Point Mine|\n|Cantung Mine|\n|Rayrock Mine|\n|Terra Mine|\n|Tundra Mine|\n|Salmita Mine|\n|Colomac Mine|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPrimeMinister\nProtectedArea\nRoyalty\nTelevisionEpisode\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mine\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test65"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Cornell University|\n|Dow Chemical Company|\n|General Electric Company|\n|Idaho State University|\n|Kansas State University|\n|Massachusetts Institute of Technology|\n|National Institute of Standards and Technology|\n|North Carolina State University|\n|Ohio State University|\n|Oregon State University|\n|Penn State University|\n|Purdue University|\n|Reed College|\n|Rensselaer Polytechnic Institute|\n|Texas A &amp; M University|\n|University of Arizona|\n|University of California - Davis|\n|University of California Irvine|\n|University of Florida|\n|University of Maryland|\n|College Park|\n|University of Massachusetts|\n|University of Michigan|\n|University of Missouri|\n|University of Missouri|\n|University of New Mexico|\n|University of Texas|\n|University of Utah|\n|University of Wisconsin|\n|U . S . Geological Survey|\n\n**Candidate column type:**\nActor\nAutomobile\nBird\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nMine\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPolitician\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Organisation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test66"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Crispin : The Cross of Lead|\n|A Single Shard|\n|A Year Down Yonder|\n|Bud|\n|Not Buddy|\n|Holes|\n|Out of the Dust|\n|The View from Saturday|\n|The Midwife&apos;s Apprentice|\n|Walk Two Moons|\n|The Giver|\n|Missing May|\n|Shiloh|\n|Maniac Magee|\n|Number the Stars|\n|Joyful Noise : Poems for Two Voices|\n|Lincoln : A Photobiography|\n|The Whipping Boy|\n|Sarah|\n|Plain and Tall|\n|The Hero and the Crown|\n|Dear Mr . Henshaw|\n|Dicey&apos;s Song|\n|A Visit to William Blake&apos;s Inn|\n|Jacob Have I Loved|\n|A Gathering of Days : A New England Girl&apos;s Journal|\n|The Westing Game|\n|Bridge to Terabithia|\n|Roll of Thunder|\n|Hear My Cry|\n\n**Candidate column type:**\nArtist\nAutomobile\nBird\nBook\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOrganisation\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test67"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Cyrano de Bergerac|\n|Death of a Salesman|\n|High Noon|\n|On the Waterfront|\n|Marty|\n|Lust for Life|\n|The Bridge on the River Kwai|\n|Separate Tables|\n|Career|\n|Elmer Gantry|\n|Judgment at Nuremberg|\n|To Kill a Mockingbird|\n|Lilies of the Field|\n|Becket|\n|Doctor Zhivago|\n|A Man for All Seasons|\n|In the Heat of the Night|\n|The Lion in Winter|\n|True Grit|\n|Patton|\n|The French Connection|\n|The Godfather|\n|Serpico|\n|Chinatown|\n|One Flew Over the Cuckoo&apos;s Nest|\n|Network|\n|Equus|\n|Coming Home|\n|Kramer vs . Kramer|\n|Raging Bull|\n\n**Candidate column type:**\nArtist\nAutomobile\nBird\nBook\nCollege\nFilm\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPrimeMinister\nProtectedArea\nRoyalty\nSettlement\nTelevisionEpisode\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test68"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|DOS \/ Windows 1 . 0|\n|DOS \/ Windows 1 . 01|\n|DOS \/ Windows 1 . 03|\n|DOS \/ Windows 2 . 0|\n|DOS \/ Windows \/ 286 2 . 1|\n|DOS \/ Windows 3 . 0|\n|DOS \/ Windows 3 . 0 ( Multimedia )|\n|DOS \/ Windows 3 . 1|\n|DOS \/ Windows 95|\n|DOS \/ Windows Service Pack 1|\n|DOS \/ Windows 95A OSR1|\n|DOS \/ Windows 95B OSR2|\n|DOS \/ Windows 95B OSR2 . 1|\n|DOS \/ Windows 95c OSR2 . 5|\n|DOS \/ Windows 98|\n|DOS \/ Windows 98 2nd Edition|\n|DOS \/ Windows 98 SPI|\n|DOS \/ Windows ME Edition beta 2|\n|DOS \/ Windows ME beta 3|\n|DOS \/ Windows ME final release|\n|DOS \/ Windows ME|\n|DOS \/ Windows ME|\n|DOS \/ Windows \/ 386|\n|DOS \/ Windows \/ 286 2 . 0|\n|DOS \/ Windows Workgroups 3 . 11|\n|Windows CE 1 . 1|\n|Windows CE 2 . 0|\n|Windows CE 2 . 1|\n|Windows CE 2 . 1 1|\n|Windows NET ( Whistler )|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nCollege\nFilm\nHistoricPlace\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPresident\nPrimeMinister\nRoyalty\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Software\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test69"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Academy of Learning|\n|Computer &amp; Business Skills Training|\n|Alberta Bible College|\n|Alberta College of Art and Design|\n|Athabasca University|\n|Augustana University College|\n|Bow Valley College|\n|Canadian Southern Baptist Seminary|\n|Canadian University College|\n|CDI College|\n|College of Welding|\n|Concordia Lutheran Seminary|\n|DeVry Institute of Technology|\n|Evangel Bible College|\n|Fairview College|\n|Gardner College|\n|Grande Prairie Regional College|\n|Grant MacEwan College|\n|Keyano College|\n|Lakeland College|\n|Lethbridge Community College|\n|Martech College of Marketing and Management|\n|Medicine Hat College|\n|Mount Carmel Bible School|\n|Mount Royal College|\n|Norquest College|\n|Northern Alberta Institute of Technology|\n|Northern Lakes College|\n|PBSC Computer Training|\n|Prairie Bible Institute|\n\n**Candidate column type:**\nAutomobile\nBird\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nScientist\nSoftware\nTelevisionEpisode\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test7"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Devika Rani|\n|B . N . Sircar|\n|Prithviraj Kapoor|\n|Pankaj Mullick|\n|Sulochana|\n|V . N . Reddi|\n|Dhiren Ganguly|\n|Kanan Devi|\n|Nitin Bose|\n|R . C . Boral|\n|Sohrab Modi|\n|Jairaj|\n|Naushad|\n|L . V . Prasad|\n|Durga Khote|\n|Satyajit Ray|\n|V . Shantaram|\n|B . Nagi Reddi|\n|Raj Kapoor|\n|Ashok Kumar|\n|Lata Mangeshkar|\n|A . Nageswara Rao|\n|Bhalji Pendharkar|\n|Bhupen Hazarika|\n|Majrooh Sultanpuri|\n|Dilip Kumar|\n|Raj Kumar|\n|Sivaji Ganesan|\n|Pradeep|\n|B . R . Chopra|\n\n**Candidate column type:**\nActor\nAutomobile\nBird\nBook\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPresident\nPrimeMinister\nRoyalty\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test70"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Dr . No|\n|From Russia With Love|\n|Goldfinger|\n|Thunderball|\n|You Only Live Twice|\n|On Her Majesty&apos;s Secret Service|\n|Diamonds Are Forever|\n|Live And Let Die|\n|Man With The Golden Gun|\n|The Spy Who Loved Me|\n|Moonraker|\n|For Your Eyes Only|\n|Octopussy|\n|The Living Daylights|\n|Licence To Kill|\n|GoldenEye|\n|Tomorrow Never Dies|\n|The World Is Not Enough|\n|Die Another Day|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nSoftware\nTelevisionEpisode\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test71"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Dwight D . Eisenhower|\n|Franklin D . Roosevelt|\n|George Bush|\n|Gerald R . Ford|\n|Harry S . Truman|\n|Herbert Hoover|\n|Jimmy Carter|\n|John F . Kennedy|\n|Lyndon Baines Johnson|\n|Ronald Reagan|\n\n**Candidate column type:**\nArtist\nBird\nBook\nCollege\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPresident\nPrimeMinister\nRoyalty\nScientist\nSettlement\nTelevisionEpisode\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"President\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test72"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|E . L . Konigsburg|\n|Karen Cushman|\n|Sharon Creech|\n|Phyllis Reynolds Naylor|\n|Carolyn Meyer|\n|Lois Lowry|\n|Lois Lowry|\n|Michael Dorris|\n|Katherine Paterson|\n|Phyllis Reynolds Naylor|\n|Avi|\n|Virginia Hamilton|\n|Jerry Spinelli|\n|Avi|\n|Phyllis Reynolds Naylor|\n|Lois Lowry|\n|Lois Lowry|\n|Scott O&apos;Dell|\n|Betsy Byars|\n|Phyllis Reynolds Naylor|\n|Betsy Byars|\n|Louis Sachar|\n|Jane Leslie Conly|\n|Betsy Byars|\n|Betsy Byars|\n|Sid Fleischman|\n|E . L . Konigsburg|\n|Lois Lowry|\n|Katherine Paterson|\n|Betsy Byars|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nCollege\nHistoricPlace\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPresident\nProtectedArea\nSettlement\nSoftware\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test73"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Economic Cooperation Organization|\n|European Free Trade Association|\n|NAFTA|\n\n**Candidate column type:**\nBird\nBook\nFilm\nLetter\nMine\nNewspaper\nOfficeHolder\nPerson\nPolitician\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test74"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Edouard Daladier|\n|Jacques Louis David|\n|Eug\u00c3\u0083\u00c2\u00a8ne Delacroix|\n|Gustave Dor\u00c3\u0083\u00c2\u00a9|\n|Michel Drach|\n|Marie Dubas|\n|Paul Dukas|\n|Isadora Duncan|\n|Paul Eluard|\n|Max Ernst|\n|Alexandre Falgui\u00c3\u0083\u00c2\u00a8re|\n|Jean de la Fontaine|\n|Loie Fuller|\n|Antonio de La Gandara|\n|Th\u00c3\u0083\u00c2\u00a9odore G\u00c3\u0083\u00c2\u00a9ricault|\n|Stephane Grappelli|\n|Yvette Guilbert|\n|Samuel Hahnemann|\n|Sadegh Hedayat|\n|Jean Auguste Dominique Ingres|\n|Jean - Baptiste Isabey|\n|L\u00c3\u0083\u00c2\u00a9on Jouhaux|\n|Rodolphe Kreutzer|\n|Rene Lalique|\n|Jean - Fran\u00c3\u0083\u00c2\u00a7ois Lyotard|\n|Etienne Macdonald|\n|Nestor Makhno|\n|Constance Mayer - Lamartini\u00c3\u0083\u00c2\u00a8re|\n|Maurice Merleau - Ponty|\n|Georges M\u00c3\u0083\u00c2\u00a9li\u00c3\u0083\u00c2\u00a8s|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nNewspaper\nOfficeHolder\nOrganisation\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test75"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Enemy Lines I : Rebel Dream|\n|Enemy Lines II : Rebel Stand|\n|Traitor|\n|Destiny&apos;s Way|\n|Ylesia|\n|Remnant|\n|Force Heretic II Refugee|\n\n**Candidate column type:**\nActor\nArtist\nBird\nCollege\nFilm\nInternationalOrganisation\nLetter\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPrimeMinister\nRoyalty\nSettlement\nTelevisionEpisode\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test76"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Eurasian Woodcock|\n|Amami Woodcock|\n|Dusky Woodcock|\n|Sulawesi Woodcock|\n|Moluccan Woodcock|\n|American Woodcock|\n|Chatham Snipe|\n|Subantarctic Snipe|\n|Jack Snipe|\n|Solitary Snipe|\n|Latham&apos;s Snipe|\n|Wood Snipe|\n|Pintail Snipe|\n|Swinhoe&apos;s Snipe|\n|African Snipe|\n|Madagascar Snipe|\n|Great Snipe|\n|Common Snipe|\n|South American Snipe|\n|Noble Snipe|\n|Giant Snipe|\n|Fuegian Snipe|\n|Andean Snipe|\n|Imperial Snipe|\n|Short - billed Dowitcher|\n|Long - billed Dowitcher|\n|Asiatic Dowitcher|\n|Black - tailed Godwit|\n|Hudsonian Godwit|\n|Bar - tailed Godwit|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nCollege\nHistoricPlace\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nPerson\nPresident\nProtectedArea\nScientist\nSettlement\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Bird\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test77"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|European Union|\n|Mercosur|\n|NAFTA|\n|World|\n\n**Candidate column type:**\nActor\nBird\nBook\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPolitician\nPrimeMinister\nProtectedArea\nRoyalty\nSoftware\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"InternationalOrganisation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test78"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Excalibur : Requiem|\n|Excalibur Renaissance|\n|Excalibur : Restoration|\n|Being Human|\n|Gods Above|\n|Stone and Anvil|\n|No Limits|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMonarch\nOfficeHolder\nOrganisation\nPerson\nPolitician\nProtectedArea\nRoyalty\nSettlement\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test79"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Ad Extremas|\n|Adiutricem|\n|Aeterni Patris|\n|Affari Vos|\n|Annum Sacrum|\n|Apostolicae Curae|\n|Arcanum|\n|Au Milieu Des Sollicitudes|\n|Augustissimae Virginis Mariae|\n|Auspicato Concessum|\n|Caritatis Studium|\n|Catholicae Ecclesiae|\n|Christi Nomen|\n|Constanti Hungarorum|\n|Cum Multa|\n|Custodi Di Quella Fede|\n|Dall&apos;alto Dell&apos;apostolico Seggio|\n|Depuis Le Jour|\n|Diuturni Temporis|\n|Diuturnum|\n|Divinum Illud Munus|\n|Dum Multa|\n|Etsi Cunctas|\n|Etsi Nos|\n|Exeunte Iam Anno|\n|Fidentem Piumque Animum|\n|Fin Dal Principio|\n|Grande Munus|\n|Graves De Communi Re|\n|Gravissimas|\n\n**Candidate column type:**\nAutomobile\nBird\nCollege\nFilm\nHistoricPlace\nMine\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nSettlement\nSoftware\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test8"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Financial Times|\n|The Village Voice|\n|Wall Street Journal \/ Money &amp; Investing Update|\n|Wall Street Journal \/ Personal Technology|\n|New York Post|\n|New York Daily News|\n|New York Observer|\n|New York Times|\n|Full Edition|\n|Staten Island Advance|\n|Artvioce|\n|Baldwin Herald|\n|Bellmore Herald|\n|Bee Newspapers|\n|The|\n|Buffalo News|\n|The|\n|Business First|\n|Business Strategies Newspaper|\n|Carnarsie Courier|\n|Capital District Business Review|\n|Citizen|\n|The|\n|Community Trader|\n|CoopersTown Crier|\n|Crain&apos;s New York Business|\n|Daily Freeman|\n|The|\n|Daily Gazette|\n|The|\n\n**Candidate column type:**\nActor\nArtist\nBird\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nMine\nOfficeHolder\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nSoftware\nTelevisionEpisode\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test80"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Force Heretic I Remnant|\n|Force Heretic II Refugee|\n|Reunion|\n|Destiny&apos;s Way|\n|The Final Prophecy|\n|The Unifying Force|\n|The Unifying Force|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPresident\nScientist\nSoftware\nTelevisionEpisode\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test81"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|George Bush|\n|Jimmy Carter|\n|Dwight D . Eisenhower|\n|Gerald Ford|\n|Rutherford B . Hayes|\n|Herbert Hoover|\n|Lyndon B . Johnson|\n|John F . Kennedy|\n|Richard Nixon|\n|Ronald Reagan|\n|Franklin D . Roosevelt|\n|Harry S . Truman|\n\n**Candidate column type:**\nArtist\nAutomobile\nBird\nBook\nFilm\nHistoricPlace\nInternationalOrganisation\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPolitician\nPrimeMinister\nProtectedArea\nRoyalty\nSettlement\nTelevisionEpisode\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test82"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Greater Yellowlegs|\n|Lesser Yellowlegs|\n|Spotted Redshank|\n|Solitary Sandpiper|\n|Willet|\n|Wandering Tattler|\n|Spotted Sandpiper|\n|Upland Sandpiper|\n|Eskimo Curlew|\n|Whimbrel|\n|Long - billed Curlew|\n|Hudsonian Godwit|\n|Marbled Godwit|\n|Ruddy Turnstone|\n|Black Turnstone|\n|Red Knot|\n|Sanderling|\n|Semipalmated Sandpiper|\n|Western Sandpiper|\n|Red - necked Stint|\n|Little Stint|\n|Least Sandpiper|\n|White - rumped Sandpiper|\n|Baird&apos;s Sandpiper|\n|Pectoral Sandpiper|\n|Sharp - tailed Sandpiper|\n|Curlew Sandpiper|\n|Stilt Sandpiper|\n|Buff - breasted Sandpiper|\n|Ruff|\n\n**Candidate column type:**\nActor\nBird\nBook\nCollege\nHistoricPlace\nLetter\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPrimeMinister\nScientist\nSettlement\nTelevisionEpisode\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Bird\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test83"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Greater Yellowlegs|\n|Lesser Yellowlegs|\n|Spotted Redshank|\n|Solitary Sandpiper|\n|Willet|\n|Wandering Tattler|\n|Spotted Sandpiper|\n|Upland Sandpiper|\n|Eskimo Curlew|\n|Whimbrel|\n|Long - billed Curlew|\n|Hudsonian Godwit|\n|Marbled Godwit|\n|Ruddy Turnstone|\n|Black Turnstone|\n|Red Knot|\n|Sanderling|\n|Semipalmated Sandpiper|\n|Western Sandpiper|\n|Red - necked Stint|\n|Little Stint|\n|Least Sandpiper|\n|White - rumped Sandpiper|\n|Baird&apos;s Sandpiper|\n|Pectoral Sandpiper|\n|Sharp - tailed Sandpiper|\n|Curlew Sandpiper|\n|Stilt Sandpiper|\n|Spoonbilleded Sandpiper|\n|Buff - breasted Sandpiper|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nCollege\nFilm\nMine\nMonarch\nNewspaper\nOfficeHolder\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Bird\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test84"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Greater Yellowlegs|\n|Lesser Yellowlegs|\n|Spotted Redshank|\n|Solitary Sandpiper|\n|Willet|\n|Wandering Tattler|\n|Spotted Sandpiper|\n|Upland Sandpiper|\n|Eskimo Curlew|\n|Whimbrel|\n|Long - billed Curlew|\n|Hudsonian Godwit|\n|Marbled Godwit|\n|Ruddy Turnstone|\n|Black Turnstone|\n|Red Knot|\n|Sanderling|\n|Semipalmated Sandpiper|\n|Western Sandpiper|\n|Red - necked Stint|\n|Little Stint|\n|Least Sandpiper|\n|White - rumped Sandpiper|\n|Baird&apos;s Sandpiper|\n|Sharp - tailed Sandpiper|\n|Curlew Sandpiper|\n|Stilt Sandpiper|\n|Spoonbilleded Sandpiper|\n|Buff - breasted Sandpiper|\n|Ruff|\n\n**Candidate column type:**\nAutomobile\nBook\nHistoricPlace\nLetter\nMine\nMonarch\nNewspaper\nOrganisation\nPerson\nPolitician\nPresident\nPrimeMinister\nScientist\nSettlement\nSoftware\nTelevisionEpisode\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test85"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Greater Yellowlegs|\n|Lesser Yellowlegs|\n|Spotted Redshank|\n|Solitary Sandpiper|\n|Willet|\n|Wandering Tattler|\n|Spotted Sandpiper|\n|Upland Sandpiper|\n|Eskimo Curlew|\n|Whimbrel|\n|Long - billed Curlew|\n|Hudsonian Godwit|\n|Marbled Godwit|\n|Ruddy Turnstone|\n|Black Turnstone|\n|Red Knot|\n|Sanderling|\n|Semipalmated Sandpiper|\n|Western Sandpiper|\n|Red - necked Stint|\n|Little Stint|\n|White - rumped Sandpiper|\n|Baird&apos;s Sandpiper|\n|Pectoral Sandpiper|\n|Sharp - tailed Sandpiper|\n|Curlew Sandpiper|\n|Stilt Sandpiper|\n|Spoonbilleded Sandpiper|\n|Buff - breasted Sandpiper|\n|Ruff|\n\n**Candidate column type:**\nArtist\nFilm\nHistoricPlace\nInternationalOrganisation\nMine\nMonarch\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPresident\nPrimeMinister\nRoyalty\nScientist\nSettlement\nSoftware\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test86"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Greater Yellowlegs|\n|Lesser Yellowlegs|\n|Spotted Redshank|\n|Solitary Sandpiper|\n|Willet|\n|Wandering Tattler|\n|Spotted Sandpiper|\n|Upland Sandpiper|\n|Eskimo Curlew|\n|Whimbrel|\n|Long - billed Curlew|\n|Hudsonian Godwit|\n|Marbled Godwit|\n|Ruddy Turnstone|\n|Black Turnstone|\n|Surfbird|\n|Sanderling|\n|Semipalmated Sandpiper|\n|Western Sandpiper|\n|Red - necked Stint|\n|Little Stint|\n|Least Sandpiper|\n|White - rumped Sandpiper|\n|Baird&apos;s Sandpiper|\n|Pectoral Sandpiper|\n|Sharp - tailed Sandpiper|\n|Dunlin|\n|Curlew Sandpiper|\n|Stilt Sandpiper|\n|Spoonbilleded Sandpiper|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nHistoricPlace\nInternationalOrganisation\nMine\nMonarch\nNewspaper\nPerson\nPolitician\nPrimeMinister\nRoyalty\nSettlement\nSoftware\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Bird\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test87"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Greater Yellowlegs|\n|Lesser Yellowlegs|\n|Spotted Redshank|\n|Solitary Sandpiper|\n|Willet|\n|Wandering Tattler|\n|Spotted Sandpiper|\n|Upland Sandpiper|\n|Eskimo Curlew|\n|Whimbrel|\n|Long - billed Curlew|\n|Hudsonian Godwit|\n|Marbled Godwit|\n|Ruddy Turnstone|\n|Red Knot|\n|Sanderling|\n|Semipalmated Sandpiper|\n|Western Sandpiper|\n|Red - necked Stint|\n|Little Stint|\n|Least Sandpiper|\n|White - rumped Sandpiper|\n|Baird&apos;s Sandpiper|\n|Pectoral Sandpiper|\n|Sharp - tailed Sandpiper|\n|Curlew Sandpiper|\n|Stilt Sandpiper|\n|Spoonbilleded Sandpiper|\n|Buff - breasted Sandpiper|\n|Ruff|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nMine\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPresident\nPrimeMinister\nProtectedArea\nScientist\nSettlement\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Bird\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test88"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Guillaume Delisle|\n|Ren\u00c3\u0083\u00c2\u00a9 Descartes|\n|Girard Desargues|\n|Georges Duby|\n|Pierre de Fermat|\n|Joseph Fourier|\n|Pierre Gassendi|\n|Pierre - Gilles de Gennes|\n|Evariste Galois|\n|Fr\u00c3\u0083\u00c2\u00a9d\u00c3\u0083\u00c2\u00a9ric Joliot|\n|Joseph Louis Lagrange|\n|Pierre - Simon Laplace|\n|Jean - Marie Lehn|\n|Claude L\u00c3\u0083\u00c2\u00a9vi - Strauss|\n|Antoine L\u00c3\u0083\u00c2\u00a9vi - Leblond|\n|Albert Mathiez|\n|Andr\u00c3\u0083\u00c2\u00a9 Michaux|\n|Jules Michelet|\n|Abraham de Moivre|\n|Theodore Monod|\n|Claude Moss\u00c3\u0083\u00c2\u00a9|\n\n**Candidate column type:**\nActor\nArtist\nBird\nBook\nFilm\nHistoricPlace\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nOrganisation\nPresident\nProtectedArea\nRoyalty\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test89"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Ad Extremas|\n|Adiutricem|\n|Aeterni Patris|\n|Affari Vos|\n|Annum Sacrum|\n|Arcanum Divinae|\n|Au Millieu Des Sollicitudes|\n|Augustissimae Virginis Mariae|\n|Auspicato Concessum|\n|Caritatis Studium|\n|Catholicae Ecclesiae|\n|Christi Nomen|\n|Constanti Hungarorum|\n|Cum Multa|\n|Custodi Di Quella Fede|\n|Dall&apos;alto Dell&apos;apostolico Seggio|\n|Depuis Le Jour|\n|Diuturni Temporis|\n|Diuturnum|\n|Divinum Illud Munus|\n|Dum Multa|\n|Etsi Cunctas|\n|Etsi Nos|\n|Exeunte Lam Anno|\n|Fidentem Piumque Animum|\n|Fin Dal Principio|\n|Grande Munus|\n|Graves De Communi Re|\n|Gravissimas|\n|Humanum Genus|\n\n**Candidate column type:**\nArtist\nAutomobile\nBird\nBook\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nNewspaper\nOrganisation\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSettlement\nTelevisionEpisode\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Letter\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test9"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Henri Becquerel|\n|Louis le Chatelier|\n|Emile Clapeyron|\n|Michel Chasles|\n|Gustave Coriolis|\n|Augustin Louis Cauchy|\n|Augustin Fresnel|\n|Claude - Louis Navier|\n|Poisson|\n|Joseph - Louis Gay - Lussac|\n|\u00c3\u0083\u00c2\u0089tienne - Louis Malus|\n\n**Candidate column type:**\nActor\nBird\nCollege\nFilm\nLetter\nMine\nNewspaper\nOfficeHolder\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nScientist\nSettlement\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Scientist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test90"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Herbert Hoover|\n|Franklin D . Roosevelt|\n|Harry S . Truman|\n|Dwight D . Eisenhower|\n|John Fitzgerald|\n|Lyndon B . Johnson|\n|Gerald R . Ford|\n|Jimmy Carter|\n|Ronald Reagan|\n|George Bush|\n|William J . Clinton|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBook\nCollege\nFilm\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nMonarch\nOfficeHolder\nOrganisation\nPolitician\nPresident\nProtectedArea\nRoyalty\nScientist\nSoftware\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"OfficeHolder\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test91"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Homer&apos;s Barbershop Quartet|\n|Cape Feare|\n|Rosebud|\n|Homer Goes To College|\n|Marge on the Lam|\n|Tree House of Horror IV : The Simpson&apos;s Halloween Special IV|\n|Bart&apos;s Inner Child|\n|Boy Scoutz N the Hood|\n|The Last Temptation of Homer|\n|$pringfield ( or How I Learned to Stop Worrying and Love Legalized Gambling )|\n|Homer the Vigilante|\n|Homer and Apu|\n|Bart Gets Famous|\n|Lisa vs . Mailbu Stacy|\n|Deep Space Homer|\n|Homer Loves Flanders|\n|Barts Gets an Elephant|\n|Burns Heir|\n|Sweet Seymour Skinner&apos;s Baadasssss Song|\n|The Boy Who Knew Too Much|\n|Secrets of a Successful Marriage|\n|Lady Bouvier&apos;s Lover|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nCollege\nMine\nNewspaper\nOfficeHolder\nOrganisation\nPerson\nPolitician\nPrimeMinister\nProtectedArea\nRoyalty\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"TelevisionEpisode\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test92"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|House of Cards|\n|Into the Void|\n|The Two - Front War|\n|End Game|\n|Martyr|\n|Fire on High|\n|The Quiet Place|\n|Dark Allies|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nHistoricPlace\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nPerson\nPolitician\nPresident\nPrimeMinister\nRoyalty\nScientist\nSettlement\nSoftware\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test93"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|House of Cards|\n|Into the Void|\n|The Two - Front War|\n|End Game|\n|Martyr|\n|Fire on High|\n|The Quiet Place|\n|Dark Allies|\n|Excalibur : Requiem|\n|Excalibur : Renaissance|\n|Excalibur : Restoration|\n|Being Human|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBook\nCollege\nFilm\nInternationalOrganisation\nLetter\nMine\nMonarch\nNewspaper\nOfficeHolder\nPerson\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSettlement\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test94"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Hu Jintao|\n|Wu Bangguo|\n|Wen Jiabao|\n|Jia Qinglin|\n|Zeng Qinghong|\n|Huang Ju|\n|Wu Guanzheng|\n|Li Changchun|\n|Luo Gan|\n\n**Candidate column type:**\nActor\nArtist\nAutomobile\nBird\nBook\nCollege\nFilm\nMine\nMonarch\nNewspaper\nOfficeHolder\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Politician\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test95"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Inscrutabili Dei Consilio|\n|Apostolic Muneris|\n|Aeterni Patris|\n|Grande Munus|\n|Sancta Dei Civitas|\n|Diuturnum|\n|Licet Multa|\n|Etsi Nos|\n|Auspicato Concessum|\n|Cum Multa|\n|Supremi Apostolatus Officio|\n|Nobilissima Gallorum Gens|\n|Humanum Genus|\n|Superiore Anno|\n|Immortale Dei|\n|Spectata Fides|\n|Quod Auctoritate|\n|Iampridem|\n|Quod Multum|\n|Pergrata|\n|Vi E Ben Noto|\n|Officio Sanctissimo|\n|Quod Anniversarius|\n|In Plurimism|\n|Libertas|\n|Saepe Nos|\n|Quam Aerumnosa|\n|Etsi Cunctas|\n|Exeunte Lam Anno|\n|Magni Nobis|\n\n**Candidate column type:**\nActor\nArtist\nBird\nBook\nCollege\nHistoricPlace\nInternationalOrganisation\nMine\nMonarch\nOfficeHolder\nOrganisation\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nScientist\nSoftware\nTelevisionEpisode\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test96"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|James Bond Theme|\n|From Russia with Love|\n|Goldfinger|\n|Thunderball|\n|The Look of Love|\n|You Only Live Twice|\n|On Her Majesty&apos;s Secret Service|\n|Diamonds Are Forever|\n|Live &amp; Let Die|\n|The Man with the Golden Gun|\n|Nobody Does It Better|\n|Moonraker|\n|For Your Eyes Only|\n|Octopussy|\n|A View to a Kill|\n|The Living Daylights|\n|Licence to Kill|\n|Goldeneye|\n|Tomorrow Never Dies|\n|The World Is Not Enough|\n|Die Another Day|\n\n**Candidate column type:**\nArtist\nAutomobile\nBook\nCollege\nInternationalOrganisation\nLetter\nMonarch\nPerson\nPresident\nPrimeMinister\nProtectedArea\nRoyalty\nSettlement\nSoftware\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test97"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Jean Lorrah|\n|David Gerrold|\n|Peter David|\n|Michael Jan Friedman|\n|Michael Jan Friedman|\n|Diane Carey|\n|Carmen Carter|\n|Michael Jan Friedman|\n|Diane Duane|\n|Peter David|\n|Michael Jan Friedman|\n|Michael Jan Friedman|\n|Diane Carey|\n|Susan Wright|\n|Michael Jan Friedman|\n|Peter David|\n|John Vornholt|\n|John Vornholt|\n|John De Lancie|\n|Peter David|\n|Peter David|\n|Susan Wright|\n|Susan Wright|\n|John Vornholt|\n|John De Lancie|\n|Peter David|\n|Kevin J . Anderson|\n|Rebecca Moesta|\n|Jeff Mariotte|\n|John Vornholt|\n\n**Candidate column type:**\nActor\nBird\nBook\nCollege\nFilm\nHistoricPlace\nLetter\nNewspaper\nOfficeHolder\nPerson\nPolitician\nPresident\nPrimeMinister\nProtectedArea\nScientist\nSettlement\nSoftware\nTelevisionEpisode\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test98"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Jimmy Smits|\n|Alan Alda|\n\n**Candidate column type:**\nArtist\nAutomobile\nBird\nBook\nHistoricPlace\nInternationalOrganisation\nMine\nOfficeHolder\nOrganisation\nPolitician\nPresident\nProtectedArea\nRoyalty\nSettlement\nTelevisionEpisode\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"LimayeTest","table":"test99"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Mr N J Brereton|\n|Mr D Hicken|\n|Mr C Parker +|\n|Mr T Rowley|\n|Mr J G Hurst +|\n|Mr J A Burton +|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"owner\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test100176"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|iPhones sold|\n|iPads sold|\n|Macs sold|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"product\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test100342"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Corrothane AP1|\n|Epoxy Injection Grout & Resin|\n|Galvcoat|\n|Genmend|\n|Plasmet AR3|\n|Plasmet AR3 Screed|\n|Plasmet ECP|\n|Plasmet HTE|\n|Plasmet Masonry Guard|\n|Plasmet R|\n|Plasmet SB1|\n|Plasmet T|\n|Plasmet WR|\n|Plasmet ZE|\n|Plasmet ZF|\n|Plasmet ZX|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"product\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test100363"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|American|\n|American|\n|American|\n|American|\n|American|\n|American|\n|American|\n|American|\n|American|\n|American|\n|Japanese|\n|Japanese|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"origin\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test100378"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|0\/3M|\n|3\/6M|\n|6\/9M|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test100411"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Wireless Network Extender|\n|Wireless Network Extender|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"product\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test100457"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|E01003888|\n|Teddington|\n|Richmond upon Thames|\n|MPS|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"area\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test100518"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|5|\n|5|\n|6|\n|4|\n|6|\n|6|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test10059"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|FA|\n|FA|\n|As|\n|A|\n|M|\n|FA|\n|A|\n|As|\n|A|\n|D15|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"status\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test10087"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"sex\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test1009"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Christophe Dehens|\n|Barry McHugh|\n|D C Costello|\n|Mr K Wood (5)|\n|Mr K Wood|\n|Laura Barry (2)|\n|Barry McHugh|\n|Barry McHugh|\n|Barry McHugh|\n|Laura Barry (7)|\n|Barry McHugh|\n|Barry McHugh|\n|Barry McHugh|\n|P McDonald|\n|Barry McHugh|\n|Laura Barry (7)|\n|Laura Barry (5)|\n|Barry McHugh|\n|Barry McHugh|\n|M O'connell|\n|Barry McHugh|\n|G Lee|\n|Barry McHugh|\n|Barry McHugh|\n|Barry McHugh|\n|Barry McHugh|\n|Barry McHugh|\n|Barry McHugh|\n|Barry McHugh|\n|Barry McHugh|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"jockey\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test100936"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|audio\/mpeg|\n|application\/octet-stream|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"format\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test100938"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|B|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"type\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test10098"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Australia|\n|Canada|\n|China|\n|Czech Republic|\n|France|\n|Germany|\n|Italy|\n|Norway|\n|Russian Federation|\n|United Kingdom|\n|United States Of America|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test101442"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|18|\n|19|\n|20|\n|21|\n|22|\n|23|\n|24|\n|25|\n|26|\n|27|\n|28|\n|29|\n|30|\n|31|\n|32|\n|33|\n|35|\n|36|\n|37|\n|38|\n|39|\n|40|\n|41|\n|42|\n|43|\n|44|\n|46|\n|47|\n|48|\n|49|\n|50|\n|51|\n|52|\n|53|\n|54|\n|55|\n|56|\n|57|\n|59|\n|60|\n|62|\n|65|\n|66|\n|68|\n|69|\n|79|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test101889"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Loss|\n|Loss|\n|Win|\n|Win|\n|Loss|\n|Win|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"result\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test101956"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Monday|\n|Tuesday|\n|Wednesday|\n|Thursday|\n|Friday|\n|Saturday|\n|Sunday|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"day\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test102126"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Pushups|\n|Situps|\n|Abdominal|\n|Aerobic|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"component\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test102130"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Crosley Field|\n|Crosley Field|\n|Crosley Field|\n|Crosley Field|\n|Crosley Field|\n|Crosley Field|\n|Crosley Field|\n|Crosley Field|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Connie Mack Stadium|\n|Connie Mack Stadium|\n|Connie Mack Stadium|\n|Connie Mack Stadium|\n|Connie Mack Stadium|\n|Connie Mack Stadium|\n|Connie Mack Stadium|\n|Connie Mack Stadium|\n|Connie Mack Stadium|\n|Connie Mack Stadium|\n|Connie Mack Stadium|\n|Connie Mack Stadium|\n|Connie Mack Stadium|\n|Connie Mack Stadium|\n|Connie Mack Stadium|\n|Connie Mack Stadium|\n|Connie Mack Stadium|\n|Connie Mack Stadium|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|County Stadium|\n|County Stadium|\n|County Stadium|\n|County Stadium|\n|County Stadium|\n|County Stadium|\n|County Stadium|\n|County Stadium|\n|County Stadium|\n|County Stadium|\n|County Stadium|\n|County Stadium|\n|County Stadium|\n|Dodger Stadium|\n|Dodger Stadium|\n|Dodger Stadium|\n|Dodger Stadium|\n|Dodger Stadium|\n|Dodger Stadium|\n|Dodger Stadium|\n|Dodger Stadium|\n|Candlestick Park|\n|Candlestick Park|\n|Candlestick Park|\n|Candlestick Park|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Connie Mack Stadium|\n|Wrigley Field|\n|Wrigley Field|\n|Wrigley Field|\n|Wrigley Field|\n|Wrigley Field|\n|Wrigley Field|\n|Wrigley Field|\n|Wrigley Field|\n|Wrigley Field|\n|Wrigley Field|\n|Wrigley Field|\n|Wrigley Field|\n|Wrigley Field|\n|Wrigley Field|\n|Wrigley Field|\n|Wrigley Field|\n|Wrigley Field|\n|Wrigley Field|\n|Colt Stadium|\n|Colt Stadium|\n|Colt Stadium|\n|Colt Stadium|\n|Colt Stadium|\n|Colt Stadium|\n|Colt Stadium|\n|Colt Stadium|\n|Colt Stadium|\n|Colt Stadium|\n|Colt Stadium|\n|Colt Stadium|\n|Colt Stadium|\n|Colt Stadium|\n|Colt Stadium|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Polo Grounds|\n|Forbes Field|\n|Forbes Field|\n|Forbes Field|\n|Forbes Field|\n|Forbes Field|\n|Forbes Field|\n|Forbes Field|\n|Candlestick Park|\n|Candlestick Park|\n|Candlestick Park|\n|Candlestick Park|\n|Candlestick Park|\n|Candlestick Park|\n|Candlestick Park|\n|Candlestick Park|\n|Candlestick Park|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"location\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test102261"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|24|\n|368|\n|384|\n|397|\n|401|\n|426|\n|445|\n|494|\n|503|\n|510|\n|825|\n|870|\n|1052|\n|1123|\n|1331|\n|1412|\n|1623|\n|1623|\n|1660|\n|1764|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"region\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test102274"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Zoo Games|\n|Deep Silver|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"publisher\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test102318"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1|\n|2|\n|3|\n|4|\n|5|\n|6|\n|7|\n|8|\n|9|\n|10|\n|11|\n|12|\n|13|\n|14|\n|15|\n|16|\n|17|\n|18|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"rank\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test102436"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Afghanistan|\n|Albania|\n|Algeria|\n|Andorra|\n|Angola|\n|Argentina|\n|Armenia|\n|Aruba|\n|Australia|\n|Austria|\n|Bahamas|\n|Bahrain|\n|Bangladesh|\n|Belarus|\n|Belgium|\n|Benin|\n|Bhutan|\n|Bolivia|\n|Bosnia-Herzegovina|\n|Botswana|\n|Brazil|\n|Bulgaria|\n|Burkina Faso|\n|Cambodia|\n|Cameroon|\n|Canada|\n|Cape Verde|\n|Central African Republic|\n|Chad|\n|Chile|\n|China|\n|Colombia|\n|Costa Rica|\n|Croatia|\n|Cuba|\n|Cyprus|\n|Czech Republic|\n|Czechoslovakia|\n|Democratic Republic of Congo|\n|Denmark|\n|Dominican Republic|\n|East Germany|\n|Ecuador|\n|Egypt|\n|Estonia|\n|Federal Republic of Yugoslavia|\n|Fiji|\n|Finland|\n|France|\n|Gabon|\n|Georgia|\n|Germany|\n|Ghana|\n|Greece|\n|Greenland|\n|Guatemala|\n|Guinea|\n|Guinea-Bissau|\n|Guyana|\n|Haiti|\n|Hong Kong|\n|Hungary|\n|Iceland|\n|India|\n|Indonesia|\n|Iran|\n|Iraq|\n|Ireland|\n|Israel|\n|Italy|\n|Ivory Coast|\n|Jamaica|\n|Japan|\n|Jordan|\n|Kazakhstan|\n|Kenya|\n|Kosovo|\n|Kuwait|\n|Kyrgyzstan|\n|Latvia|\n|Lebanon|\n|Libya|\n|Liechtenstein|\n|Lithuania|\n|Luxembourg|\n|Macau|\n|Malaysia|\n|Mali|\n|Malta|\n|Martinique|\n|Mauritania|\n|Mexico|\n|Moldova|\n|Monaco|\n|Mongolia|\n|Morocco|\n|Mozambique|\n|Namibia|\n|Nepal|\n|Netherlands|\n|New Zealand|\n|Nicaragua|\n|Niger|\n|Nigeria|\n|North Korea|\n|Norway|\n|Pakistan|\n|Palestine|\n|Panama|\n|Papua New Guinea|\n|Paraguay|\n|Peru|\n|Philippines|\n|Poland|\n|Portugal|\n|Puerto Rico|\n|Republic of Macedonia|\n|Romania|\n|Russia|\n|Rwanda|\n|Saudi Arabia|\n|Senegal|\n|Serbia|\n|Serbia and Montenegro|\n|Singapore|\n|Slovakia|\n|Slovenia|\n|South Africa|\n|South Korea|\n|Soviet Union|\n|Spain|\n|Sri Lanka|\n|Suriname|\n|Sweden|\n|Switzerland|\n|Syria|\n|Taiwan|\n|Tajikistan|\n|Tanzania|\n|Thailand|\n|Trinidad And Tobago|\n|Tunisia|\n|Turkey|\n|UK|\n|USA|\n|Uganda|\n|Ukraine|\n|United Arab Emirates|\n|Uruguay|\n|Uzbekistan|\n|Venezuela|\n|Vietnam|\n|West Germany|\n|Yemen|\n|Yugoslavia|\n|Zaire|\n|Zambia|\n|Zimbabwe|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test102516"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|8|\n|5|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test102569"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|62.2|\n|62.2|\n|62.0|\n|62.1|\n|62.2|\n|62.4|\n|62.3|\n|62.3|\n|62.2|\n|61.9|\n|62.0|\n|62.2|\n|62.0|\n|62.1|\n|62.3|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"depth\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test102653"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|NEM|\n|DCM|\n|SMMM|\n|RMM|\n|LOL|\n|MICH|\n|MESC|\n|RINC|\n|TARH|\n|PNA|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"club\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test102766"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|2009|\n|2010|\n|2011|\n|2012e|\n|2013e|\n|2014e|\n|2015e|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"year\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test102787"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Sun|\n|Thu|\n|Sat|\n|Sat|\n|Sat|\n|Sat|\n|Sat|\n|Sat|\n|Sat|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"day\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test102896"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|10.0|\n|nan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"position\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test102929"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Monday|\n|Tuesday|\n|Wednesday|\n|Thursday|\n|Friday|\n|Saturday|\n|Sunday|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"day\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test103166"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Sat|\n|Sun|\n|Sat|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"day\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test103380"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Nephtys|\n|Nephtys|\n|Nephtys|\n|Nephtys|\n|Nephtys|\n|Nephtys|\n|Nephtys|\n|Nephtys|\n|Nephtys|\n|Tellina fabula|\n|Crossaster papposus|\n|Malacoceros tetracerus|\n|Malacoceros tetracerus|\n|Nudibranchia|\n|Nudibranchia|\n|Atelecyclus rotundatus|\n|Mediomastus fragilis|\n|Mediomastus fragilis|\n|Mediomastus fragilis|\n|Mediomastus fragilis|\n|Mediomastus fragilis|\n|Mediomastus fragilis|\n|Mediomastus fragilis|\n|Mediomastus fragilis|\n|Mediomastus fragilis|\n|Pholoe inornata|\n|Pholoe inornata|\n|Pholoe inornata|\n|Pholoe inornata|\n|Pholoe inornata|\n|Eusyllis blomstrandi|\n|Eusyllis blomstrandi|\n|Eusyllis blomstrandi|\n|Syllidae|\n|Syllidae|\n|Siriella|\n|Siriella|\n|Siriella|\n|Nematoda|\n|Nematoda|\n|Corystes cassivelaunus|\n|Corystes cassivelaunus|\n|Harpinia antennaria|\n|Harpinia antennaria|\n|Gammarellus homari|\n|Gammarellus homari|\n|Pygospio elegans|\n|Pygospio elegans|\n|Phyllodoce groenlandica|\n|Lepidonotus squamatus|\n|Lepidonotus squamatus|\n|Lepidonotus squamatus|\n|Lepidonotus squamatus|\n|Phyllodoce maculata|\n|Phyllodoce mucosa|\n|Sabellaria spinulosa|\n|Sabellaria spinulosa|\n|Sabellaria spinulosa|\n|Sabellaria spinulosa|\n|Sabellaria spinulosa|\n|Sabellaria spinulosa|\n|Sabellaria spinulosa|\n|Sabellaria spinulosa|\n|Sabellaria spinulosa|\n|Sabellaria spinulosa|\n|Sabellaria spinulosa|\n|Sabellaria spinulosa|\n|Sabellaria spinulosa|\n|Sabellaria spinulosa|\n|Scoloplos (Scoloplos) armiger|\n|Scoloplos (Scoloplos) armiger|\n|Scoloplos (Scoloplos) armiger|\n|Spio armata|\n|Spio armata|\n|Spio armata|\n|Spio armata|\n|Spio armata|\n|Spio armata|\n|Spio armata|\n|Spio armata|\n|Spio armata|\n|Spio armata|\n|Polycirrus|\n|Nephtys caeca|\n|Nephtys caeca|\n|Nephtys caeca|\n|Atylus vedlomensis|\n|Ampharete baltica|\n|Bodotria scorpioides|\n|Bodotria scorpioides|\n|Bodotria scorpioides|\n|Spiophanes bombyx|\n|Spiophanes bombyx|\n|Spiophanes bombyx|\n|Spiophanes bombyx|\n|Spiophanes bombyx|\n|Spiophanes bombyx|\n|Spiophanes bombyx|\n|Spiophanes bombyx|\n|Spiophanes bombyx|\n|Spiophanes bombyx|\n|Spiophanes bombyx|\n|Neptunea antiqua|\n|Modiolus modiolus|\n|Modiolus modiolus|\n|Modiolus modiolus|\n|Nephtys cirrosa|\n|Nephtys cirrosa|\n|Nephtys cirrosa|\n|Nephtys cirrosa|\n|Nephtys cirrosa|\n|Nephtys cirrosa|\n|Nymphon brevirostre|\n|Atylidae|\n|Mytiloidea|\n|Mytiloidea|\n|Mytiloidea|\n|Mytiloidea|\n|Mytiloidea|\n|Mytiloidea|\n|Mytiloidea|\n|Eteone longa|\n|Eteone longa|\n|Eteone longa|\n|Nephtys hombergii|\n|Isopoda|\n|Nymphonidae|\n|Phaxas pellucidus|\n|Phaxas pellucidus|\n|Phaxas pellucidus|\n|Protodorvillea kefersteini|\n|Protodorvillea kefersteini|\n|Protodorvillea kefersteini|\n|Mytilus edulis|\n|Mytilus edulis|\n|Mytilus edulis|\n|Nephtys longosetosa|\n|Nephtys longosetosa|\n|Nephtys longosetosa|\n|Nephtys longosetosa|\n|Nephtys longosetosa|\n|Nephtys longosetosa|\n|Nephtys longosetosa|\n|Tritaeta gibbosa|\n|Pagurus bernhardus|\n|Eulalia bilineata|\n|Pontocrates altamarinus|\n|Trypanosyllis zebra|\n|Trypanosyllis zebra|\n|Eualus cranchii|\n|Myrianida|\n|Myrianida|\n|Hiatella arctica|\n|Gibbula cineraria|\n|Gibbula cineraria|\n|Gibbula cineraria|\n|Capitella|\n|Capitella|\n|Capitella|\n|Siphonostomatoida|\n|Philocheras trispinosus|\n|Diastylis|\n|Diastylis|\n|Diastylis|\n|Diastylis|\n|Eunereis longissima|\n|Galathowenia oculata|\n|Barnea candida|\n|Barnea candida|\n|Barnea candida|\n|Nereimyra punctata|\n|Eupolymnia nebulosa|\n|Eupolymnia nebulosa|\n|Lagis koreni|\n|Lagis koreni|\n|Lagis koreni|\n|Lagis koreni|\n|Terebellidae|\n|Terebellidae|\n|Terebellidae|\n|Terebellidae|\n|Terebellidae|\n|Terebellidae|\n|Terebellidae|\n|Terebellidae|\n|Ampharete|\n|Myrianida prolifera|\n|Myrianida prolifera|\n|Myrianida prolifera|\n|Myrianida prolifera|\n|Spinther citrinus|\n|Aonides oxycephala|\n|Myrianida rubropunctata|\n|Lanice conchilega|\n|Lanice conchilega|\n|Lanice conchilega|\n|Bathyporeia guilliamsoniana|\n|Eualus pusiolus|\n|Eualus pusiolus|\n|Diastylis bradyi|\n|Diastylis bradyi|\n|Diastylis bradyi|\n|Diastylis bradyi|\n|Diastylis bradyi|\n|Diastylis bradyi|\n|Harmothoe impar|\n|Harmothoe impar|\n|Harmothoe impar|\n|Harmothoe impar|\n|Harmothoe impar|\n|Harmothoe impar|\n|Harmothoe impar|\n|Harmothoe impar|\n|Harmothoe impar|\n|Harmothoe impar|\n|Harmothoe impar|\n|Arenicola marina|\n|Arenicola marina|\n|Arenicola marina|\n|Anomura|\n|Anomura|\n|Levinsenia gracilis|\n|Sphaerosyllis|\n|Eumida sanguinea|\n|Eumida sanguinea|\n|Eumida sanguinea|\n|Eurydice pulchra|\n|Paguridae|\n|Achelia echinata|\n|Achelia echinata|\n|Achelia echinata|\n|Paraspio decorata|\n|Schistomysis spiritus|\n|Schistomysis spiritus|\n|Malacoceros|\n|Malacoceros|\n|Abra alba|\n|Abra alba|\n|Abra alba|\n|Abra alba|\n|Abra alba|\n|Abra alba|\n|Abra alba|\n|Abra alba|\n|Abra alba|\n|Abra alba|\n|Abra alba|\n|Abra alba|\n|Bathyporeia pilosa|\n|Mysidae|\n|Abra prismatica|\n|Nemertea|\n|Nemertea|\n|Nemertea|\n|Nemertea|\n|Ophiocten affinis|\n|Malacoceros fuliginosus|\n|Malacoceros fuliginosus|\n|Malacoceros fuliginosus|\n|Malacoceros fuliginosus|\n|Parapleustes bicuspis|\n|Caulleriella alata|\n|Caulleriella alata|\n|Orchestia gammarellus|\n|Ampharete grubei|\n|Ampharete grubei|\n|Ampharete grubei|\n|Ampharete grubei|\n|Scolelepis|\n|Liocarcinus pusillus|\n|Polydora ciliata|\n|Spio|\n|Spio|\n|Spio|\n|Anomia ephippium|\n|Anomia ephippium|\n|Magelona mirabilis|\n|Magelona mirabilis|\n|Magelona mirabilis|\n|Magelona mirabilis|\n|Magelona mirabilis|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"species\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test103447"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|C|\n|2-3|\n|C|\n|4-5|\n|1-2|\n|PF|\n|PG|\n|SF|\n|SF|\n|SF|\n|PF|\n|1-2|\n|4-5|\n|PG|\n|C|\n|SF|\n|3-4|\n|SF|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"position\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test103627"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Free on all orders|\n|Order by 12pm|\n|Order by 12pm|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"notes\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test10377"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|NY|\n|NY|\n|CA|\n|CA|\n|CA|\n|TX|\n|TX|\n|CA|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"state\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test10380"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Amanda Muliawan|\n|Emily Hahn|\n|Sarah Cen|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"name\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test103931"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Notre Dame 2, Maryland Terrapins 1|\n|Maryland Terrapins 2, Virginia 1|\n|Maryland Terrapins 2, California 1|\n|Maryland Terrapins 1, UC Irvine 0|\n|Maryland Terrapins 3, Providence College 1|\n|Maryland Terrapins 1, Virginia 0|\n|Maryland Terrapins 1, Clemson 0 (OT)|\n|Maryland Terrapins 2, Boston College 0|\n|Maryland Terrapins 2, Virginia Tech 1 (OT)|\n|Maryland Terrapins 2, NC State 1|\n|Maryland Terrapins 1, Syracuse 0|\n|Maryland Terrapins 1, DREXEL 0|\n|Wake Forest 4, Maryland Terrapins 3|\n|Maryland Terrapins 5, MARSHALL 0|\n|Maryland Terrapins 3, Virginia 3 (2OT)|\n|Maryland Terrapins 1, Notre Dame 1 (2OT)|\n|Maryland Terrapins 2, Boston College 1|\n|Maryland Terrapins 2, Tulsa 1|\n|Maryland Terrapins 2, Pittsburgh 0|\n|Old Dominion 1, Maryland Terrapins 1 (2OT)|\n|Maryland Terrapins 3, Clemson 1|\n|Maryland Terrapins 2, North Carolina 2 (2OT)|\n|VCU 3, Maryland Terrapins 2|\n|Maryland Terrapins 3, DUKE 1|\n|California 3, Maryland Terrapins 2 (OT)|\n|Maryland Terrapins 3, Stanford 3 (2OT)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"result\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test103937"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"sex\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test103967"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|2015|\n|2014|\n|2013|\n|2012|\n|2011|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"year\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test103980"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Netherlands|\n|Netherlands|\n|Netherlands|\n|Netherlands|\n|Netherlands|\n|Netherlands|\n|Netherlands|\n|Netherlands|\n|Netherlands|\n|Netherlands|\n|Netherlands|\n|Netherlands|\n|Netherlands|\n|Netherlands|\n|Netherlands|\n|Netherlands|\n|Netherlands|\n|Netherlands|\n|Netherlands|\n|Netherlands|\n|Netherlands|\n|Netherlands|\n|Netherlands|\n|Netherlands|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test104006"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Dark Day + Live In Verona|\n|At Canterbury|\n|Wayfare|\n|Into the Woodwork|\n|Ache & Flutter|\n|Dr. Chicago|\n|That's Nice|\n|Paris Blues|\n|Grit-Gittin' Feelin'|\n|The Red Norvo Trio With Tal Farlow And Charles Mingus|\n|When There Is Love|\n|Love Letters to a Rat Free Capital|\n|Heavy Artillery|\n|Lipsomuch|\n|Triologue|\n|Hef|\n|Star Garden|\n|Chicago Tenor Duets|\n|Enigma|\n|Tricotism|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"album\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test104176"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Win|\n|Win|\n|Loss|\n|Loss|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"result\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test10421"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|49.0|\n|11.0|\n|2.0|\n|6.0|\n|14.0|\n|16.0|\n|nan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"position\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test104346"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Samford 7, Chattanooga 1|\n|UNCG 5, Chattanooga 0|\n|Elon 3, Chattanooga 0|\n|The Citadel 3, Chattanooga 1|\n|Chattanooga 3, Francis Marion 2|\n|Western Carolina 1, Chattanooga 0 (OT)|\n|Appalachian State 5, Chattanooga 0|\n|Wofford 5, Chattanooga 1|\n|Furman 9, Chattanooga 0|\n|Georgia Southern 2, Chattanooga 1|\n|Davidson 3, Chattanooga 2|\n|Chattanooga 2, Tennessee Tech 1|\n|Chattanooga 5, South Carolina State 1|\n|Gardner-Webb 3, Chattanooga 0|\n|Chattanooga 2, UNC Asheville 1|\n|Alabama State 3, Chattanooga 2|\n|Chattanooga 5, Tennessee Temple 0|\n|Austin Peay 4, Chattanooga 0|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"result\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test10438"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|PGT INC|\n|CALAVO GROW\u00e2\u20ac\u00a6|\n|ZOE'S KITCH\u00e2\u20ac\u00a6|\n|ORION ENGIN\u00e2\u20ac\u00a6|\n|DOT HILL SY\u00e2\u20ac\u00a6|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test104489"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Pro-Israel|\n|Real Estate|\n|Lawyers\/Law Firms|\n|Telephone Utilities|\n|Building Trade Unions|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"industry\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test104514"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|26.9|\n|26.8|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"weight\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test104598"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|2015|\n|2014|\n|2013|\n|2012|\n|2011|\n|2010|\n|2009|\n|2008|\n|2007|\n|2006|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"year\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test104632"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|2|\n|4|\n|3|\n|5|\n|9|\n|13|\n|19|\n|19|\n|23|\n|22|\n|22|\n|22|\n|26|\n|25|\n|24|\n|24|\n|28|\n|38|\n|43|\n|48|\n|57|\n|60|\n|63|\n|56|\n|84|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"rank\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test105367"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Leicester Tigers|\n|Wasps|\n|Sale Sharks|\n|Bath Rugby|\n|Saracens|\n|Gloucester Rugby|\n|Newcastle Falcons|\n|Harlequins|\n|London Irish|\n|Worcester Warriors|\n|Northampton Saints|\n|Yorkshire Carnegie|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test105382"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|7.780440208|\n|11.3078039|\n|11.31675662|\n|4.394514782|\n|15.93290187|\n|22.51790879|\n|5.501768492|\n|7.620635129|\n|23.40705317|\n|14.34109216|\n|19.95208464|\n|14.01305109|\n|8.431561764|\n|15.7393547|\n|12.78953383|\n|11.88432847|\n|5.623830879|\n|6.309725403|\n|11.94439766|\n|19.16669254|\n|16.95848593|\n|23.72107564|\n|33.84306475|\n|22.66351459|\n|24.83109092|\n|3.237834323|\n|9.984032313|\n|19.19123387|\n|14.13429555|\n|18.86797754|\n|18.8201903|\n|17.79811969|\n|16.29885958|\n|16.49759988|\n|9.208913556|\n|23.31938435|\n|24.83395725|\n|9.206764216|\n|2.648970187|\n|14.27466568|\n|22.31438506|\n|24.86047269|\n|14.64386366|\n|22.71709581|\n|9.813061399|\n|9.597658195|\n|7.571340977|\n|20.66020847|\n|8.32076189|\n|15.02590881|\n|20.65863919|\n|8.132686705|\n|14.53619755|\n|24.46384695|\n|13.87882968|\n|10.26675046|\n|14.94037105|\n|14.03796022|\n|20.04100912|\n|17.8962593|\n|19.34375805|\n|9.21995751|\n|20.3257493|\n|9.662427867|\n|13.20644244|\n|6.643760426|\n|9.170589703|\n|22.80987001|\n|23.24780561|\n|9.908063816|\n|13.13595075|\n|18.32827664|\n|11.33928269|\n|25.91639787|\n|14.3025005|\n|18.95461579|\n|25.66912565|\n|24.95518637|\n|8.812008089|\n|14.07041712|\n|12.55206424|\n|15.75232498|\n|21.07698952|\n|14.11677115|\n|11.28023404|\n|16.01365119|\n|7.076472155|\n|7.576655502|\n|5.406203925|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"education\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test105434"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|40|\n|41|\n|42|\n|42|\n|40|\n|43|\n|43|\n|41|\n|40|\n|44|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test105566"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|right-center field triple,|\n|strikeout|\n|out, second base|\n|double, center field|\n|single, center field|\n|third base to first base|\n|strikeout|\n|strikeout, C|\n|third base to first base, ground ball double play|\n|out, left field|\n|single, right field|\n|out, center field|\n|strikeout|\n|strikeout, catcher to first|\n|out, right field|\n|first base to second base, sacrifice hit|\n|left-center field triple, center field|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"result\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test106419"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Completed Wed, 4\/21\/2010|\n|10% complete|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"status\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test106491"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Ba Power|\n|Ba Power|\n|Tassoumakan|\n|Electric Griot Land|\n|Nimissa|\n|I Speak Fula|\n|Tassoumakan|\n|Timbuktu|\n|Segu Blue|\n|Nimissa|\n|Ba Power|\n|Sabolan|\n|Mali Koura|\n|Africa Express Presents ... Terry Riley's In C Mali|\n|Sya|\n|Nimissa|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"album\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test1065"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Guard|\n|Guard|\n|Guard|\n|Guard|\n|Guard|\n|Guard|\n|Wing|\n|Guard|\n|Wing|\n|Guard|\n|Guard|\n|Guard|\n|Wing|\n|Wing|\n|Guard|\n|Forward|\n|Wing|\n|Guard|\n|Wing|\n|Wing|\n|Guard|\n|Wing|\n|Guard|\n|Guard|\n|Forward|\n|Center|\n|Forward|\n|Guard|\n|Center|\n|Forward|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"position\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test10651"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|8.0|\n|0.0|\n|0.0|\n|7.6|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"elevation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test107423"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Monday|\n|Tuesday|\n|Wednesday|\n|Thursday|\n|Friday|\n|Weekends and Holidays|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"day\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test107477"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|GermanEnglishSpanishFrenchItalian|\n|GermanEnglishSpanishFrenchItalian|\n|GermanEnglishSpanishFrenchItalian|\n|English|\n|English|\n|GermanEnglish|\n|EnglishFrenchItalian|\n|English|\n|GermanEnglish|\n|English|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"language\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test107566"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Fr|\n|So|\n|Jr|\n|Sr|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"class\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test107640"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Highest Average Fares|\n|Cincinnati, OH|\n|Huntsville, AL|\n|Memphis, TN|\n|Houston Bush, TX|\n|Washington Dulles|\n|Average Fare at All Airports|\n|Lowest Average Fares|\n|Atlantic City, NJ|\n|Long Beach, CA|\n|Bellingham, WA|\n|Ft. Lauderdale, FL|\n|Orlando, FL|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"origin\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test107681"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|DOMOutputter|\n|Format|\n|SAXOutputter|\n|StAXEventOutputter|\n|StAXStreamOutputter|\n|XMLOutputter|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"class\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test107705"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|12|\n|12|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"sales\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test107793"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|AS|\n|AS|\n|REMI|\n|LAPS|\n|FP|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"code\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test10782"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|15.0|\n|nan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"position\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test107965"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|12|\n|159|\n|152|\n|85|\n|246|\n|178|\n|155|\n|162|\n|158|\n|241|\n|119|\n|149|\n|144|\n|198|\n|371|\n|131|\n|219|\n|278|\n|221|\n|135|\n|119|\n|184|\n|60|\n|171|\n|236|\n|206|\n|168|\n|237|\n|99|\n|48|\n|120|\n|49|\n|90|\n|209|\n|147|\n|67|\n|284|\n|40|\n|72|\n|68|\n|173|\n|136|\n|114|\n|414|\n|228|\n|211|\n|214|\n|353|\n|257|\n|487|\n|153|\n|286|\n|170|\n|101|\n|279|\n|104|\n|233|\n|249|\n|486|\n|143|\n|174|\n|112|\n|109|\n|155|\n|88|\n|268|\n|157|\n|164|\n|336|\n|94|\n|165|\n|90|\n|205|\n|119|\n|193|\n|48|\n|241|\n|220|\n|109|\n|175|\n|128|\n|143|\n|72|\n|256|\n|107|\n|22|\n|184|\n|92|\n|43|\n|31|\n|122|\n|87|\n|196|\n|75|\n|132|\n|176|\n|92|\n|78|\n|66|\n|441|\n|144|\n|30|\n|216|\n|158|\n|242|\n|128|\n|201|\n|119|\n|142|\n|81|\n|71|\n|33|\n|480|\n|62|\n|108|\n|376|\n|169|\n|294|\n|45|\n|241|\n|165|\n|50|\n|324|\n|295|\n|408|\n|291|\n|160|\n|458|\n|254|\n|47|\n|106|\n|96|\n|185|\n|149|\n|72|\n|52|\n|76|\n|361|\n|12|\n|29|\n|270|\n|165|\n|71|\n|138|\n|203|\n|213|\n|74|\n|108|\n|132|\n|142|\n|109|\n|169|\n|123|\n|443|\n|155|\n|8|\n|21|\n|36|\n|12|\n|136|\n|302|\n|149|\n|6|\n|186|\n|366|\n|162|\n|186|\n|168|\n|6|\n|47|\n|98|\n|49|\n|97|\n|26|\n|32|\n|121|\n|51|\n|189|\n|10|\n|84|\n|2|\n|19|\n|6|\n|146|\n|25|\n|122|\n|218|\n|76|\n|28|\n|23|\n|12|\n|31|\n|38|\n|116|\n|62|\n|179|\n|100|\n|31|\n|165|\n|41|\n|12|\n|18|\n|18|\n|91|\n|21|\n|101|\n|25|\n|25|\n|133|\n|98|\n|267|\n|19|\n|3|\n|94|\n|56|\n|70|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"weight\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test108213"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Mon|\n|Tues|\n|Wed|\n|Thurs|\n|Fri|\n|Sat|\n|Sun|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"order\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test108219"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|2013 - 2014|\n|2011 - 2011|\n|2009 - 2011|\n|2009 - 2009|\n|2008 - 2009|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"duration\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test108287"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Abu Dhabi|\n|Andorra|\n|Argentina|\n|Aruba\u00a0|\n|Australia|\n|Austria|\n|Bahamas|\n|Bahrain|\n|Barbados\u00a0|\n|Belarus|\n|Belgium|\n|Belize\u00a0|\n|Benin|\n|Bermuda\u00a0|\n|Bolivia|\n|Botswana|\n|Brazil|\n|Bulgaria|\n|Burkina Faso\u00a0|\n|Cambodia|\n|Cameroon|\n|Canada\u00a0|\n|Chile|\n|China|\n|Colombia|\n|Cook Islands\u00a0|\n|Costa Rica|\n|Croatia|\n|Cyprus|\n|Czech Republic\u00a0|\n|Denmark|\n|Dominican Republic\u00a0|\n|Ecuador|\n|Egypt|\n|El Salvador|\n|Emirate of Ras Al Khaimah\u00a0|\n|Estonia|\n|Fiji|\n|Finland|\n|France|\n|Gabon|\n|Georgia|\n|Germany|\n|Ghana|\n|Greece|\n|Grenada\u00a0|\n|Guatemala|\n|Honduras|\n|Hong Kong|\n|Hungary|\n|Iceland|\n|India|\n|Indonesia|\n|Ireland|\n|Isle of Man\u00a0|\n|Israel|\n|Italy|\n|Jamaica\u00a0|\n|Japan\u00a0|\n|Jordan|\n|Kazakhstan|\n|Kenya|\n|Korea|\n|Kuwait|\n|Latvia|\n|Lebanon|\n|Liechtenstein|\n|Lithuania|\n|Luxembourg|\n|Macedonia|\n|Madagascar|\n|Malaysia\u00a0|\n|Malta|\n|Mongolia\u00a0|\n|Montenegro|\n|Montserrat\u00a0|\n|Morocco|\n|Mozambique|\n|Netherlands|\n|New Zealand\u00a0|\n|Nigeria|\n|Norway|\n|Oman|\n|Pakistan|\n|Panama|\n|Papua New Guinea|\n|Paraguay|\n|Peru|\n|Philippines|\n|Poland|\n|Portugal|\n|Qatar|\n|Romania|\n|Russia|\n|Saudi Arabia|\n|Senegal|\n|Serbia|\n|Seychelles|\n|Singapore|\n|Slovakia|\n|Slovenia|\n|South Africa|\n|Spain|\n|Sri Lanka|\n|Suriname|\n|Sweden|\n|Switzerland|\n|Taiwan|\n|Thailand|\n|Trinidad and Tobago|\n|Tunisia|\n|Turkey|\n|Ukraine\u00a0|\n|United Kingdom|\n|Mexico|\n|USA|\n|Uruguay|\n|Venezuela|\n|Vietnam|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test108384"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"club\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test108523"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Catholic|\n|Evangelical Protestant|\n|Mainline Protestant|\n|nan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"religion\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test108566"}}
{"prompt":null,"completion":"{\"chosen_semantic_type\": \"country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test108678"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|4:51|\n|3:56|\n|0:50|\n|1:04|\n|3:16|\n|3:24|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"duration\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test108778"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|14 Chevrolet|\n|14 Chevrolet|\n|14 Chevrolet|\n|14 Chevrolet|\n|14 Chevrolet|\n|14 Ford|\n|14 Chevrolet|\n|14 Chevrolet|\n|14 Toyota|\n|14 Toyota|\n|14 Toyota|\n|14 Toyota|\n|14 Ford|\n|14 Dodge|\n|14 Toyota|\n|14 Toyota|\n|14 Ford|\n|14 Chevrolet|\n|14 Toyota|\n|13 Dodge|\n|14 Toyota|\n|14 Chevrolet|\n|14 Chevrolet|\n|14 Chevrolet|\n|14 Chevrolet|\n|14 Chevrolet|\n|14 Ford|\n|14 Toyota|\n|14 Chevrolet|\n|14 Chevrolet|\n|14 Chevrolet|\n|14 Toyota|\n|14 Chevrolet|\n|14 Ford|\n|14 Chevrolet|\n|14 Chevrolet|\n|12 Chevrolet|\n|14 Chevrolet|\n|14 Ford|\n|14 Chevrolet|\n|14 Chevrolet|\n|14 Toyota|\n|13 Dodge|\n|14 Toyota|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"manufacturer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test108955"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Over 16 years old Ruler Not charitable Not incapable Wealth less than 200.0|\n|Over 16 years old Not a prisoner Not a councillor Not independent Not female Not incapable|\n|Over 16 years old Not a prisoner Not a councillor Not independent Not female Not incapable|\n|Over 16 years old Not a prisoner Not a councillor Not independent Not female Not incapable|\n|Over 16 years old Not a prisoner Not a councillor Not independent Not incapable|\n|Over 16 years old Not a prisoner Not a councillor Not independent Not female Not incapable Religious education (muslims only)|\n|Over 16 years old Prestige less than 200.0 Ruler Not content Not humble Not incapable|\n|Over 16 years old Piety less than 100.0 Ruler Not cruel Not impaler Not incapable|\n|Over 16 years old Not a prisoner Not primary heir Not incapable Liege is parent Primary heir has certain negative traits|\n|Over 16 years old Not a prisoner Not female Not a ruler Not incapable Liege is a close relative and has extra landed titles|\n|Over 16 years old Not a prisoner Not married or betrothed Not a priest Can marry Not the Pope Not celibate Not incapable Not a eunuch Not a female over 40|\n|Over 16 years old Not a prisoner Married No daughters Not a female over 45 No more than 2 children Not celibate Not incapable|\n|Over 16 years old Not a prisoner Married Not female No sons No more than 2 children Younger than 75 Not celibate Not incapable|\n|Over 16 years old Ruler Diplomacy less than 8 Not incapable Not Slothful|\n|Over 16 years old Ruler Intrigue less than 8 Not incapable Not Slothful|\n|Over 16 years old Ruler Learning less than 8 Not incapable Not Slothful|\n|Over 16 years old Ruler Martial less than 8 Not incapable Not Slothful|\n|Over 16 years old Ruler Stewardship less than 8 Not incapable Not Slothful|\n|Over 16 years old Ruler Muslim Decadence higher than 60.0% Not incapable|\n|Over 16 years old Not a prisoner Not married Can marry Not celibate Not Incapable Not a female over 45 Father has a title higher than count|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"requirement\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test108982"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|BAC|\n|FCX|\n|SIRI|\n|T|\n|S|\n|F|\n|AAPL|\n|INTC|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test108996"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Building finishing contractors|\n|Home furnishings stores|\n|Furniture stores|\n|Residential building construction|\n|Building material and supplies dealers|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"industry\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test109008"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Franklin & Marshall 10, York (Pa.) 9|\n|York (Pa.) 13, Washington & Lee 6|\n|Salisbury 13, York (Pa.) 5|\n|York (Pa.) 12, Mary Washington 5|\n|York (Pa.) 16, Wesley 6|\n|Salisbury 16, York (Pa.) 7|\n|York (Pa.) 10, Haverford 7|\n|York (Pa.) 23, Frostburg St. 1|\n|York (Pa.) 18, Mary Washington 9|\n|York (Pa.) 22, Marymount (Va.) 4|\n|Messiah 17, York (Pa.) 15|\n|York (Pa.) 14, St. Mary's (Md.) 5|\n|York (Pa.) 9, Dickinson 4|\n|York (Pa.) 11, Stevens 5|\n|York (Pa.) 13, Catholic 8|\n|York (Pa.) 12, Ursinus 4|\n|York (Pa.) 16, Alvernia 2|\n|Franklin & Marshall 13, York (Pa.) 6|\n|York (Pa.) 18, Goucher 10|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"result\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test109009"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Cerulean Cave (1f)|\n|Cerulean Cave (B1f)|\n|Route 23|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"area\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test109461"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|TOC|\n|SBSC|\n|WCM|\n|OREG|\n|REDD|\n|STR|\n|LONE|\n|STR|\n|WSM|\n|NEM|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"club\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test109595"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Claiborne|\n|Knox|\n|Shelby|\n|Shelby|\n|Houston|\n|Montgomery|\n|Shelby|\n|Shelby|\n|Johnson|\n|Shelby|\n|Shelby|\n|Gibson|\n|Carroll|\n|Rutherford|\n|Johnson|\n|Haywood|\n|Lawrence|\n|Stewart|\n|Shelby|\n|Shelby|\n|Fayette|\n|Henry|\n|Shelby|\n|Davidson|\n|Marshall|\n|Dyer|\n|Hickman|\n|Henry|\n|Davidson|\n|Knox|\n|Henry|\n|Knox|\n|White|\n|Montgomery|\n|Rutherford|\n|Shelby|\n|Perry|\n|Knox|\n|Shelby|\n|Davidson|\n|Gibson|\n|Hardeman|\n|Crockett|\n|Shelby|\n|Dickson|\n|Hamilton|\n|Shelby|\n|Shelby|\n|Haywood|\n|Cocke|\n|Trousdale|\n|Davidson|\n|Fayette|\n|Shelby|\n|Davidson|\n|Knox|\n|Dickson|\n|Shelby|\n|McNairy|\n|Davidson|\n|Lauderdale|\n|Obion|\n|Shelby|\n|Knox|\n|Shelby|\n|Hamilton|\n|Giles|\n|Stewart|\n|Crockett|\n|Stewart|\n|Shelby|\n|Shelby|\n|Knox|\n|Shelby|\n|Cocke|\n|Roane|\n|Gibson|\n|Davidson|\n|Hardin|\n|Henry|\n|Knox|\n|Shelby|\n|Lake|\n|Shelby|\n|Davidson|\n|Hamilton|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"county\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test109945"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2009|\n|2011|\n|2009|\n|2011|\n|2009|\n|2011|\n|2011|\n|2009|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2010|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2009|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"year\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test110083"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|AirForce Talon SS PCP Air Rifle, Spin-Loc Tank Estimated in-stock date: 08-07-2015|\n|AirForce 1\" Rings, High, 9.5-13.5mm Dovetail, See-Thru Estimated in-stock date: 07-31-2015|\n|AirForce 4-16x50 AO Rifle Scope, Mil-Dot Reticle, 1\/4 MOA, 1\" Tube|\n|AirForce PCP Hand Pump, for AirForce Rifles, Incl. Hose + Adapter, Pumps up to 3600 psi Estimated in-stock date: 08-10-2015|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"product\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test11010"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|2000|\n|2001|\n|2002|\n|2003|\n|2004|\n|2005|\n|2006|\n|2007|\n|2008|\n|2009|\n|2010|\n|2011|\n|2012|\n|2013|\n|2014|\n|2015|\n|2016|\n|2017|\n|2018|\n|2019|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"year\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test110207"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Youth Only|\n|Youth Only|\n|Youth Only|\n|Youth Only|\n|Youth Only|\n|Youth Only|\n|Youth Only|\n|Youth Only|\n|National B|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"classification\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test110244"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Sry|\n|Cardiff|\n|Warwickshire|\n|Glg|\n|Lancashire|\n|London|\n|TX|\n|WA|\n|Vic|\n|OK|\n|TX|\n|Nfk|\n|Iow|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"state\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test110811"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Fri|\n|Sun|\n|Sat|\n|Sun|\n|Tue|\n|Wed|\n|Fri|\n|Sun|\n|Mon|\n|Mon|\n|Fri|\n|Sat|\n|Wed|\n|Sat|\n|Sun|\n|Tue|\n|Thu|\n|Sat|\n|Mon|\n|Fri|\n|Sun|\n|Tue|\n|Mon|\n|Tue|\n|Thu|\n|Sat|\n|Thu|\n|Fri|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"day\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test110855"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Wheaton, IL|\n|Valparaiso, IN|\n|Rensselaer, IN|\n|Valparaiso, IN|\n|Valparaiso, IN|\n|Evansville, IN|\n|Valparaiso, IN|\n|Indianapolis, IN|\n|Valparaiso, IN|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"location\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test110916"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Base class for the JXR reports.|\n|Generates a combined JXR report in an aggregating project.|\n|Generates a combined JXR report for test code in an aggregating project.|\n|Display help information on maven-jxr-plugin. Call mvn jxr:help -Ddetail=true -Dgoal= to display parameter details.|\n|Creates an html-based, cross referenced version of Java source code for a project.|\n|Utility class for the jxr report.|\n|Creates an html-based, cross referenced version of Java source code for a project's test sources.|\n|Logging adapter.|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"description\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test11107"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|09 - 12|\n|10 - 12|\n|KG - 12|\n|09 - 11|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"grades\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test111141"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|400 Michigan Avenue NE|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"address\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test11122"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|29er|\n|420|\n|470|\n|470|\n|Cadet|\n|Europe|\n|Formula 18|\n|J\/24|\n|Laser|\n|Laser 4.7|\n|Laser Radial|\n|Laser Radial|\n|Optimist|\n|RS:X|\n|RS:X|\n|Snipe|\n|Soling|\n|Techno 293|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"class\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test111460"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|All of Italy|\n|All of Italy|\n|All of Italy|\n|All of Italy|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"region\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test111708"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Up-regulated|\n|Up-regulated|\n|Up-regulated|\n|Up-regulated|\n|Up-regulated|\n|Up-regulated|\n|Up-regulated|\n|Down-regulated|\n|Down-regulated|\n|Down-regulated|\n|Down-regulated|\n|Down-regulated|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"status\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test111745"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Sunset Piano - Single|\n|Tsumanne|\n|Tsumanne|\n|Tsumanne|\n|Tsumanne|\n|Tsumanne|\n|Tsumanne|\n|Tsumanne|\n|Tsumanne|\n|Tsumanne|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"album\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test111969"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Monday|\n|Tuesday|\n|Wednesday|\n|Thursday|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"day\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test112205"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Friday|\n|Saturday|\n|Sunday|\n|Tuesday|\n|Wednesday|\n|Thursday|\n|Friday|\n|Saturday|\n|Sunday|\n|Monday|\n|Tuesday|\n|Wednesday|\n|Friday|\n|Saturday|\n|Sunday|\n|Tuesday|\n|Wednesday|\n|Thursday|\n|Friday|\n|Saturday|\n|Sunday|\n|Monday|\n|Tuesday|\n|Wednesday|\n|Thursday|\n|Friday|\n|Saturday|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"day\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test112264"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|FR Doc.|\n|RIN|\n|DA|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"type\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test112477"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Golden Gate Branch|\n|Elmhurst Branch|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"location\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test112496"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|51|\n|68|\n|31|\n|9|\n|35|\n|50|\n|36|\n|50|\n|39|\n|43|\n|47|\n|36|\n|52|\n|21|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"plays\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test112608"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Health Care|\n|Education|\n|Pharmaceutical Services|\n|Education|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"product\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test11284"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Boulder Running Company Cycling Team|\n|Boulder Running Company Cycling Team|\n|Boulder Running Company Cycling Team|\n|Boulder Running Company Cycling Team|\n|Boulder Running Company Cycling Team|\n|Boulder Running Company Cycling Team|\n|Boulder Running Company Cycling Team|\n|Boulder Running Company Cycling Team|\n|Boulder Running Company Cycling Team|\n|Boulder Running Company Cycling Team|\n|Boulder Running Company Cycling Team|\n|Boulder Running Company Cycling Team|\n|Boulder Running Company Cycling Team|\n|Boulder Running Company Cycling Team|\n|Boulder Running Company Cycling Team|\n|Boulder Running Company Cycling Team|\n|Boulder Running Company Cycling Team|\n|Boulder Running Company Cycling Team|\n|Boulder Running Company Cycling Team|\n|Boulder Running Company Cycling Team|\n|Boulder Running Company Cycling Team|\n|Boulder Running Company Cycling Team|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team Name\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test112894"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|70|\n|70|\n|70|\n|72|\n|70|\n|74|\n|70|\n|73|\n|70|\n|70|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test113004"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Wednesday|\n|Thursday|\n|Friday|\n|Saturday|\n|Sunday|\n|Tuesday|\n|Wednesday|\n|Thursday|\n|Friday|\n|Saturday|\n|Sunday|\n|Monday|\n|Tuesday|\n|Wednesday|\n|Thursday|\n|Friday|\n|Saturday|\n|Sunday|\n|Tuesday|\n|Wednesday|\n|Thursday|\n|Friday|\n|Saturday|\n|Sunday|\n|Tuesday|\n|Wednesday|\n|Thursday|\n|Friday|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"day\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test113111"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|25.0|\n|31.0|\n|nan|\n|nan|\n|nan|\n|nan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test113333"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|ConnectionOpened: connection string|\n|ConnectionClosed:|\n|QueryOpened: mysql server thread id, query text|\n|ResultOpened: field count, affected rows (-1 if select), inserted id (-1 if select)|\n|ResultClosed: total rows read, rows skipped, size of resultset in bytes|\n|QueryClosed:|\n|StatementPrepared: prepared sql, statement id|\n|StatementExecuted: statement id, mysql server thread id|\n|StatementClosed: statement id|\n|NonQuery: [varies]|\n|UsageAdvisorWarning: usage advisor flag. NoIndex = 1, BadIndex = 2, SkippedRows = 3, SkippedColumns = 4, FieldConversion = 5.|\n|Warning: level, code, message|\n|Error: error number, error message|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"description\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test113543"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|ARUSHA|\n|DAR ES SALAAM|\n|DODOMA|\n|GEITA|\n|IRINGA|\n|KAGERA|\n|KATAVI|\n|KIGOMA|\n|KILIMANJARO|\n|LINDI|\n|MANYARA|\n|MARA|\n|MBEYA|\n|MOROGORO|\n|MTWARA|\n|MWANZA|\n|NJOMBE|\n|PWANI|\n|RUKWA|\n|RUVUMA|\n|SHINYANGA|\n|SIMIYU|\n|SINGIDA|\n|TABORA|\n|TANGA|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"region\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test113630"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|allow-connections|\n|dial-peer voice|\n|mode (voice register global)|\n|show dial-peer voice|\n|source-address (voice register global)|\n|voice register global|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"command\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test113680"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1988|\n|1985|\n|1985|\n|1982|\n|1982|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"year\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test113684"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|nan|\n|44.0|\n|37.0|\n|61.0|\n|46.0|\n|47.0|\n|34.0|\n|47.0|\n|44.0|\n|44.0|\n|56.0|\n|41.0|\n|50.0|\n|47.0|\n|nan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"position\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test113701"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|web site|\n|web site|\n|web site|\n|web site|\n|web site|\n|web site|\n|web site|\n|web site|\n|web site|\n|web site|\n|web site|\n|web site|\n|web site|\n|web site|\n|web site|\n|web site|\n|web site|\n|web site|\n|web site|\n|web site|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"address\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test114061"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Freiburg|\n|K'lautern|\n|VfL Bochum|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test114065"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1|\n|2|\n|3|\n|4|\n|5|\n|6|\n|7|\n|8|\n|9|\n|10|\n|11|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"day\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test114071"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Automake|\n|Autoconf|\n|shell script|\n|C++|\n|C|\n|All Languages|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"language\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test114089"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|SUI|\n|SUI|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|GRE|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|ITA|\n|SUI|\n|SUI|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test11410"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Allegro MicroSystems, Inc. |\n|Aspect |\n|Aspen Technology, Inc.|\n|Avid Technology, Inc.|\n|Brooks Automation, Inc.|\n|Dassault Systemes Enovia Corp|\n|Dimensional Insight Inc|\n|Dynamics Research Corporation|\n|EMC Corporation|\n|Kronos|\n|Medical Information Tech Inc|\n|Nortel Networks|\n|Novell Inc|\n|Nuance Communications Inc.|\n|Parametric Technology|\n|Pegasystems, Inc. |\n|Progress Software Corporation |\n|RSA Security Inc. |\n|Sapient Corporation|\n|SeaChange International |\n|The MathWorks Inc|\n|Thermo Fisher Scientific Inc.|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test114243"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|5\/21\/2014|\n|5\/21\/2014|\n|5\/22\/2014|\n|8\/20\/2014|\n|8\/20\/2014|\n|8\/21\/2014|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"day\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test114258"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|3622.84|\n|3622.84|\n|3622.84|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"elevation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test114362"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Full|\n|Unavailable|\n|Unavailable|\n|Unavailable|\n|Unavailable|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"status\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test1145"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|isbn 0671741039|\n|isbn 0312876637|\n|isbn 0670852627|\n|isbn 0340250879|\n|isbn 1609288521|\n|isbn|\n|isbn 1250045029|\n|isbn 0446677922|\n|isbn 0460077376|\n|isbn|\n|isbn 1857988841|\n|isbn 1400068673|\n|isbn 0393332144|\n|isbn 1627793763|\n|isbn 1477822070|\n|isbn 0545819784|\n|isbn|\n|isbn|\n|isbn 0140432116|\n|isbn 1406840246|\n|isbn 0883551284|\n|isbn 1597802212|\n|isbn 0671415018|\n|isbn 0425244210|\n|isbn 0380320290|\n|isbn 1553211057|\n|isbn|\n|isbn|\n|isbn|\n|isbn 1583335765|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"isbn\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test114553"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Environmental Assessment and Measures, Environment and Social Impact Assessments|\n|Environmental and Social Monitoring Reports, Environmental Monitoring Reports|\n|Completion Reports, TA Completion Reports|\n|Environmental Assessment and Measures, Environmental Management Plans|\n|Environmental Assessment and Measures, Environmental Management Plans|\n|Environmental and Social Monitoring Reports, Environmental Monitoring Reports|\n|Environmental and Social Monitoring Reports, Environmental Monitoring Reports|\n|Completion Reports, Project\/Program Completion Reports|\n|Resettlement Planning Documents, Resettlement Frameworks|\n|Environmental Assessment and Measures, Environmental Assessment and Review Framework|\n|Environmental Assessment and Measures, Initial Environmental Examination|\n|Completion Reports, Project\/Program Completion Reports|\n|Resettlement Planning Documents, Resettlement Plans|\n|Procurement Plans|\n|Resettlement Planning Documents, Resettlement Plans|\n|Resettlement Planning Documents, Resettlement Plans|\n|Resettlement Planning Documents, Resettlement Plans|\n|Resettlement Planning Documents, Resettlement Plans|\n|Environmental Assessment and Measures, Initial Environmental Examination|\n|Safeguards Due Diligence Reports|\n|Safeguards Due Diligence Reports|\n|Resettlement Planning Documents, Resettlement Plans|\n|Environmental Assessment and Measures, Environmental and Social Impacts Matrix|\n|Completion Reports, TA Completion Reports|\n|Resettlement Planning Documents, Resettlement Plans|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"type\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test114554"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|2004\/2005|\n|2005\/2006|\n|2006\/2007|\n|2007\/2008|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"year\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test114589"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|110-140 lbs.|\n|140-165 lbs.|\n|165-190 lbs.|\n|190-215 lbs.|\n|215-240 lbs.|\n|240-270 lbs.|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"weight\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test114653"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Europe|\n|North America|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"region\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test114969"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|HDTVtoMPEG2_v1.11.94.zip|\n|HDTVtoMPEG2_v1.11.93.zip|\n|HDTVtoMPEG2_v1.11.89.zip|\n|HDTVtoMPEG2_1.11-Beta3.zip|\n|HDTVtoMPEG2_1.11-Beta.zip|\n|5 files|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"name\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test115005"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Men Category 3|\n|Men Category 3|\n|Category 3 Men|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"category\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test115030"}}
{"prompt":null,"completion":"{\"chosen_semantic_type\": \"country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test115148"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Ron Carter , Gerry Gibbs , Kenny Barron|\n|Ron Carter , Gerry Gibbs , Kenny Barron|\n|Ron Carter , Gerry Gibbs , Kenny Barron|\n|Ron Carter , Gerry Gibbs , Kenny Barron|\n|Ron Carter , Gerry Gibbs , Kenny Barron|\n|Ron Carter , Gerry Gibbs , Kenny Barron|\n|Ron Carter , Gerry Gibbs , Kenny Barron|\n|Ron Carter , Gerry Gibbs , Kenny Barron|\n|Ron Carter , Gerry Gibbs , Kenny Barron|\n|Ron Carter , Gerry Gibbs , Kenny Barron|\n|Ron Carter , Gerry Gibbs , Kenny Barron|\n|Ron Carter , Gerry Gibbs , Kenny Barron|\n|Ron Carter , Gerry Gibbs , Kenny Barron|\n|Ron Carter , Gerry Gibbs , Kenny Barron|\n|Ron Carter , Gerry Gibbs , Kenny Barron|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"artist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test115405"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Korean|\n|Chinese|\n|Thai|\n|Indonesian|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"language\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test115583"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Chiba|\n|Chiba|\n|Chiba|\n|Chiba|\n|Chiba|\n|Chiba|\n|Chiba|\n|Ibaraki|\n|Kanagawa|\n|Kanagawa|\n|Kanagawa|\n|Kanagawa|\n|Kanagawa|\n|Kanagawa|\n|Kanagawa|\n|Kanagawa|\n|Kanagawa|\n|Saitama|\n|Saitama|\n|Saitama|\n|Saitama|\n|Saitama|\n|Shizuoka|\n|Tochigi|\n|Tokio|\n|Tokio|\n|Tokio|\n|Tokio|\n|Tokio|\n|Yamanashi|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"region\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test115611"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Rock|\n|Jefferson|\n|Dane|\n|Orange|\n|Orange|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"county\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test115730"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|P Townend|\n|P Carberry|\n|B J Geraghty|\n|D J Casey|\n|D E Mullins|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"jockey\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test115974"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|TO DO|\n|TO DO|\n|IN PROGRESS|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|IN PROGRESS|\n|IN PROGRESS|\n|IN PROGRESS|\n|TO DO|\n|TO DO|\n|TO DO|\n|TO DO|\n|IN PROGRESS|\n|IN PROGRESS|\n|IN PROGRESS|\n|IN PROGRESS|\n|IN PROGRESS|\n|IN PROGRESS|\n|IN PROGRESS|\n|IN PROGRESS|\n|IN PROGRESS|\n|DONE|\n|IN PROGRESS|\n|IN PROGRESS|\n|IN PROGRESS|\n|DONE|\n|DONE|\n|DONE|\n|DONE|\n|IN PROGRESS|\n|DONE|\n|IN PROGRESS|\n|IN PROGRESS|\n|IN PROGRESS|\n|IN PROGRESS|\n|DONE|\n|IN PROGRESS|\n|TO DO|\n|TO DO|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"status\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test11600"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Points|\n|Minutes|\n|2 Points Made|\n|3 Points Made|\n|FT Made|\n|Offensive Rebounds|\n|Defensive Rebounds|\n|Total rebounds|\n|Assists|\n|Fouls|\n|Turnover|\n|Steals|\n|Blocks|\n|Efficiency|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"category\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test116046"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Pacific Bell Park|\n|Pacific Bell Park|\n|Pacific Bell Park|\n|Pacific Bell Park|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"location\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test116065"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|w1377210|\n|w66320|\n|w66098|\n|w66320|\n|w66098|\n|w1377210|\n|w1377210|\n|w66320|\n|w1377210|\n|w66320|\n|w1377210|\n|w66320|\n|w525316|\n|w66320|\n|w66320|\n|w1377210|\n|w66320|\n|w291766962|\n|w66320|\n|w291766962|\n|w66320|\n|w291766962|\n|w66320|\n|w1377210|\n|w66320|\n|w1377210|\n|w66320|\n|w1377210|\n|w66320|\n|w1377210|\n|w66320|\n|w1377210|\n|w66098|\n|w291766962|\n|w1377210|\n|w66320|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"person\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test116196"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|18|\n|4-16|\n|1-3|\n|270|\n|195|\n|21-44|\n|4.4|\n|75|\n|29|\n|2.6|\n|5-25|\n|2|\n|0|\n|2|\n|31:40|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"day\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test116293"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"sex\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test116354"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Dwight Howard|\n|Rashard Lewis|\n|Hedo Turkoglu|\n|Jameer Nelson|\n|Rafer Alston\u2020|\n|Mickael Pietrus|\n|Courtney Lee|\n|J.J. Redick|\n|Anthony Johnson|\n|Keith Bogans\u2020|\n|Tony Battie|\n|Marcin Gortat|\n|Jeremy Richardson|\n|Tyronn Lue\u2020|\n|Brian Cook\u2020|\n|Adonal Foyle\u2020|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"name\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test116363"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Lake|\n|Lee|\n|Leon|\n|Levy|\n|Liberty|\n|Madison|\n|Manatee|\n|Marion|\n|Martin|\n|Monroe|\n|Nassau|\n|Okaloosa|\n|Okeechobee|\n|Orange|\n|Osceola|\n|Palm Beach|\n|Pasco|\n|Pinellas|\n|Polk|\n|Putnam|\n|Saint Johns|\n|Saint Lucie|\n|Santa Rosa|\n|Sarasota|\n|Seminole|\n|Sumter|\n|Suwannee|\n|Taylor|\n|Union|\n|Volusia|\n|Wakulla|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"county\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test116387"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|9 Helston Close|\n|9 Helston Close|\n|21 Helston Close|\n|13 Helston Close|\n|9 Helston Close|\n|19 Helston Close|\n|6 Helston Close|\n|3 Helston Close|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"address\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test116466"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|12|\n|9|\n|3|\n|12|\n|0|\n|7|\n|5|\n|1|\n|11|\n|12|\n|0|\n|5|\n|7|\n|8|\n|4|\n|5|\n|5|\n|2|\n|0|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"plays\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test116488"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|US (%)|\n|Europe (%)|\n|Asia - Pacific (%)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"location\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test116551"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|USA|\n|France|\n|USA|\n|USA|\n|France|\n|USA|\n|France|\n|France|\n|USA|\n|USA|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"origin\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test11667"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Non-Ranking|\n|Non-Ranking|\n|Non-Ranking|\n|Non-Ranking|\n|Non-Ranking|\n|Non-Ranking|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"classification\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test116737"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|3|\n|3|\n|3|\n|3|\n|3|\n|3|\n|3|\n|3|\n|3|\n|3|\n|3|\n|3|\n|3|\n|3|\n|1|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"credit\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test117017"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Other Wood Product Manufacturing|\n|Veneer, Plywood, and Engineered Wood Product Manufacturing|\n|Sawmills and Wood Preservation|\n|Household and Institutional Furniture and Kitchen Cabinet Manufacturing|\n|Office Furniture (including Fixtures) Manufacturing|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"industry\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test117055"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|5.5|\n|18.4|\n|74.4|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"day\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test117240"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|148-158, Springfield Road|\n|148-158, Springfield Road|\n|148-158, Springfield Road|\n|148, Springfield Road|\n|148, Springfield Road|\n|189, Springfield Road|\n|212-214, Springfield Road|\n|210, Springfield Road|\n|230, Springfield Road|\n|212-214, Springfield Road|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"address\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test11727"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|SCSI target type|\n|Node and Port WWN of fibre channel target|\n|Port WWN of fibre channel target|\n|Node WWN of fibre channel target|\n|ISCSI name of target|\n|ISCSI alias of target|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"description\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test117310"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|60.0|\n|59.3|\n|60.0|\n|59.2|\n|59.9|\n|59.6|\n|59.3|\n|59.9|\n|59.7|\n|59.8|\n|60.0|\n|60.0|\n|59.5|\n|59.3|\n|59.9|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"depth\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test117326"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|loss|\n|draw|\n|win|\n|loss|\n|loss|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"result\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test117388"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"brand\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test117505"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Knigh|\n|Werew|\n|Werew|\n|Knigh|\n|Chuck|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test117954"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"sex\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test118248"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|ADAM:IN|\n|AMCG:US|\n|CAMB3:BZ|\n|CAMB4:BZ|\n|050110:KS|\n|CBTL:IN|\n|8081:HK|\n|CMGE:US|\n|CMX:GR|\n|CLIR:US|\n|4CC:GR|\n|CBSXNR:GR|\n|CBGOOD:SW|\n|CBGOODEU:SW|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"symbol\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test118344"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|isocentric|\n|isocentric|\n|0|\n|0|\n|isocentric|\n|0|\n|Isocentric|\n|isocentric|\n|isocentric|\n|isocentric|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team Name\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test118518"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Non-Ranking|\n|MTB Regional A|\n|MTB Regional A|\n|MTB Regional A|\n|Non-Ranking|\n|MTB Regional A|\n|MTB Regional A|\n|MTB Regional A|\n|MTB Regional A|\n|MTB Regional A|\n|MTB Regional A|\n|MTB Regional A|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"classification\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test118672"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|M|\n|F|\n|F|\n|F|\n|M|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|M|\n|M|\n|F|\n|F|\n|M|\n|M|\n|M|\n|F|\n|F|\n|F|\n|F|\n|M|\n|M|\n|F|\n|M|\n|M|\n|F|\n|M|\n|M|\n|F|\n|F|\n|F|\n|F|\n|M|\n|M|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"sex\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test118722"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|California Giant Cycling|\n|California Giant Cycling|\n|California Giant Cycling|\n|California Giant\/ Sp|\n|California Giant\/ Sp|\n|California Giant\/ Sp|\n|California Giant\/ Sp|\n|California Giant\/Specialized|\n|California Giant\/Specialized|\n|California Giant\/Specialized|\n|California Giant\/Specialized|\n|California Giant\/Specialized|\n|California Giant Cycling|\n|California Giant Cycling|\n|California Giant Cycling|\n|California Giant Cycling|\n|California Giant \/ Specialized|\n|California Giant \/ Specialized|\n|California Giant \/ Specialized|\n|California Giant \/ Specialized|\n|California Giant \/ Specialized|\n|California Giant \/ Specialized|\n|California Giant\/Specialized*|\n|California Giant\/Specialized*|\n|California Giant Cycling|\n|California Giant Cycling|\n|California Giant Cycling|\n|California Giant Cycling|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team Name\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test118739"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Mon|\n|Tues|\n|Wed|\n|Thurs|\n|Fri|\n|Sat|\n|Sun|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"order\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test118785"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1 ,2|\n|1|\n|1|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"notes\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test119041"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|D Lesot|\n|D Lesot|\n|D Cottin|\n|D Cottin|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"jockey\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test119075"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|26 KM SOUTH OF SH118|\n|SH118 1.6 KM N SH223|\n|EAST ST 161 M N US90|\n|SH118 & SPUR 78 MC DONALD OBSERVATORY|\n|SH118 483 M SE SH17|\n|US90 AT SAN ANTONIO & MESA ST|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"address\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test119259"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|AD8475|\n|AD7176-2|\n|ADR445|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"product\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test119362"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Hardware Microsoft Windows computer Operating System Windows 2000 Server Windows Server 2003 Standard Windows Server 2003 Enterprise Edition Service Pack 2 Software IBM Lotus Sametime Standard Server 7.5.1 CF1 Also see the server requirements at http:\/\/publib.boulder.ibm.com\/infocenter\/sametime\/v7r5m1\/index.jsp?topic=\/com.ibm.help.sametime.install.doc\/st_inst_inst_softwarerequirements.html. IBM Lotus Sametime Standard Server 8.0.1 Also see the server requirements at http:\/\/www-01.ibm.com\/support\/docview.wss?rs=477&uid=swg27010738. Note: If you also deploy the Cisco Phone Control and Presence with IBM Lotus Sametime integration, then you must use IBM Lotus Sametime Server 8.0.1 and install the following IBM patches to disable the IBM phone icon: 3AAAFEAB, 49D5219C, 643A31, 662A775A, 77D5E39D.|\n|See the Application Server Requirements.|\n|See the Media Server Requirements.|\n|IBM Lotus Sametime Connect Client Version 7.5.1 CF1 Also see the client requirements at http:\/\/publib.boulder.ibm.com\/infocenter\/sametime\/v7r5m1\/index.jsp?topic=\/com.ibm.help.sametime.install.doc\/st_inst_inst_softwarerequirements.html. IBM Lotus Sametime Connect Client Version 8.0 Also see the client requirements at http:\/\/www-01.ibm.com\/support\/docview.wss?rs=477&uid=swg27010738.|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"requirement\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test119484"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|30 turns|\n|30 turns|\n|30 turns|\n|Always|\n|Always|\n|Always|\n|Always|\n|Always|\n|Always|\n|5 turns|\n|5 turns|\n|5 turns|\n|Always|\n|Always|\n|Always|\n|Always|\n|Always|\n|1 turn|\n|20 turns|\n|1 turn|\n|1 turn|\n|1 turn|\n|1 turn|\n|Always|\n|Always|\n|Always|\n|Always|\n|3 turn|\n|1 turn|\n|1 turn|\n|1 turn|\n|1 turn|\n|1 turn|\n|1 turn|\n|Always|\n|Always|\n|1 turn|\n|1 turn|\n|1 turn|\n|1 turn|\n|30 turns|\n|20 turns|\n|Always|\n|1 turn|\n|Always|\n|Always|\n|Always|\n|Always|\n|Always|\n|Always|\n|Always|\n|Always|\n|Always|\n|Always|\n|Always|\n|Always|\n|20 turns|\n|20 turns|\n|10 turns|\n|Always|\n|10 turns|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"duration\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test119546"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Fort Myers, FL View More Details|\n|Fort Myers, FL View More Details|\n|Fort Myers, FL View More Details|\n|Fort Myers, FL View More Details|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"location\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test119639"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|IL|\n|OH|\n|IL|\n|FL|\n|GA|\n|IL|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"state\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test119653"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|UU + Tupil|\n|UU|\n|UU|\n|Credit Suisse|\n|University of Brighton|\n|UU|\n|Well-Typed LLP|\n|thorkilnaur.com|\n|ICS AG|\n|UU + Tupil|\n|UU|\n|Well-Typed LLP|\n|Barcap|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"affiliation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test119680"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|The Calverton School Alumni A (Small Sided)|\n|Oakton HS 2|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"location\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test120114"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|England won by 3 wickets|\n|England won by 8 wickets|\n|England won by 675 runs|\n|England won by an innings and 71 runs|\n|England won by an innings and 30 runs|\n|England won by an innings and 58 runs|\n|South Africa won by 8 wickets|\n|South Africa won by 4 wickets|\n|Match Drawn|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"result\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test12021"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"sex\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test120219"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Alerts|\n|Guided Navigation|\n|Dispute Metrics (metrics bar) Note: The Metric Components are color coded to highlight warnings and health: - Red: Critical warning state - Yellow: Warning state - Green: Good|\n|Dispute Reasons (tag cloud)|\n|Disputes List (results table)|\n|Dispute Details (cross tab)|\n|Graphs Region|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"region\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test120707"}}
{"prompt":null,"completion":"{\"chosen_semantic_type\": \"state\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test121038"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|PRESCHOOL-K|\n|PRESCHOOL-8|\n|PRESCHOOL-12|\n|PRESCHOOL-5|\n|6-8|\n|K-5|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"grades\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test121052"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|client-identifier|\n|host|\n|ip dhcp pool|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"command\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test12117"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Brazil|\n|nan|\n|United States|\n|Anonymous Proxy|\n|Chile|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"origin\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test121223"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Sheer Efficiency\u2122 with Energy Shield\u2122|\n|Linen|\n|Translucence|\n|Designer Textures|\n|Designer Textures with Energy Shield\u2122|\n|Designer Textures Room Darkening|\n|Designer Colors Single Cell|\n|Designer Colors Single Cell with Energy Shield\u2122|\n|Designer Colors Room Darkening|\n|Classic|\n|Designer Colors Double Cell|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"collection\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test121255"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|GOLD|\n|WCM|\n|USF|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test121405"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Chapter 194, Acts, 2005|\n|Approved by Governor 4\/18\/05 - Senate Journal|\n|Approved by Governor 4\/18\/05 - House Journal|\n|Approved by Governor 4\/18\/05|\n|To Governor 4\/12\/05 - Senate Journal|\n|To Governor 4\/12\/05 - House Journal|\n|To Governor 4\/12\/05|\n|House Message received|\n|Completed legislative action|\n|Communicated to Senate|\n|Effective from passage (Roll No. 411)|\n|House concurred in Senate amendment and passed bill (Roll No. 410)|\n|Reported by the Clerk|\n|On Unfinished Business, Special Calendar|\n|House received Senate message|\n|Senate requests House to concur|\n|Effective from passage (Roll No. 2)|\n|Title amendment adopted|\n|Passed Senate (Roll No. 2)|\n|Having been read 3rd time 4\/1\/05|\n|On Unfinished Business|\n|Read 3rd time|\n|Amended on third reading (Voice vote)|\n|Unanimous consent to amend|\n|Senate reconsidered passage of bill (Voice vote)|\n|Senate reconsidered title amendment (Voice vote)|\n|Senate reconsidered effective date|\n|Having been passed in prior proceedings|\n|Senate requests return of bill from House|\n|Senate requests House to concur|\n|Effective from passage (Roll No. 2)|\n|Passed Senate with amended title (Roll No. 2)|\n|Read 3rd time|\n|Suspension of Constitutional Rule (Roll No. 1)|\n|On 3rd reading|\n|Floor amendment withdrawn by unanimous consent|\n|Committee amendments adopted (Voice vote)|\n|Read 2nd time|\n|Immediate consideration|\n|Having been read 1st time, prior proceedings, 3\/24\/05|\n|Reported do pass, with amendments and title amendment|\n|Referred to Judiciary on 2nd reading|\n|Motion|\n|Laid over on 2nd reading 3\/25\/05|\n|Unanimous consent|\n|Read 1st time|\n|On 1st reading|\n|Reported do pass|\n|To Energy, Industry and Mining|\n|To Energy, Industry and Mining|\n|Introduced in Senate|\n|Communicated to Senate|\n|Effective from passage (Roll No. 122)|\n|Passed House (Roll No. 119)|\n|Read 3rd time|\n|On 3rd reading, Consent Calendar|\n|Read 2nd time|\n|On 2nd reading, Consent Calendar|\n|Read 1st time|\n|On 1st reading, Consent Calendar|\n|Do pass to Consent Calendar|\n|To House Judiciary|\n|Introduced in House|\n|To Judiciary|\n|Filed for introduction|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"description\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test121416"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|[if parseFloat(vars.f)] $[toPrice(vars.tf)] [else] - [\/if]|\n|[if parseFloat(vars.f)] $[toPrice(parseFloat(vars.f))] [else]- [\/if]|\n|[if vars.add%26%26vars.f] $[toPrice(vars.add*4)] [else] - [\/if]|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"family\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test121691"}}
{"prompt":null,"completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test122024"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Final\/10|\n|Final|\n|Final|\n|Final|\n|Final|\n|Final|\n|Suspended: Jul 8th|\n|Final|\n|Postponed: Apr 13th|\n|Final\/7|\n|Final\/7|\n|Final\/11|\n|Final|\n|Final|\n|Final|\n|Final|\n|Postponed: Apr 21st|\n|Final|\n|Final\/7|\n|Final\/7|\n|Final|\n|Final|\n|Postponed: Apr 25th|\n|Final\/7|\n|Final\/7|\n|Final|\n|Final|\n|Final|\n|Final|\n|Final\/15|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"status\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test122070"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Europe|\n|North America|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"region\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test122147"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Alabama|\n|Oregon|\n|Florida State|\n|Ohio State|\n|Baylor|\n|Miami (FL)|\n|Clemson|\n|Stanford|\n|LSU|\n|Auburn|\n|Oklahoma|\n|Texas A&M|\n|Oklahoma St.|\n|South Carolina|\n|Missouri|\n|Texas Tech|\n|Louisville|\n|Michigan|\n|Michigan St.|\n|UCF|\n|N. Illinois|\n|Fresno State|\n|UCLA|\n|Wisconsin|\n|Notre Dame|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test122207"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1|\n|2|\n|3|\n|4|\n|5|\n|6|\n|7|\n|8|\n|9|\n|10|\n|11|\n|12|\n|13|\n|14|\n|15|\n|16|\n|17|\n|18|\n|19|\n|20|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"rank\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test122440"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Federal Executive Branch (OES Designation)|\n|State Government (OES Designation)|\n|Local Government (OES Designation)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"industry\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test122577"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|R|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"class\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test12263"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Siegen|\n|Madrid|\n|Siegen|\n|Siegen|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"city\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test122711"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Mr H D Dunne (7)|\n|S E Butler (7)|\n|M A Enright (5)|\n|A F O'Neill (7)|\n|D R Fox (7)|\n|Mr P W Mullins|\n|S J Hassett (3)|\n|B J Geraghty|\n|D J Bates (5)|\n|A McNamara|\n|B T O'Connell|\n|R Walsh|\n|M J Ferris|\n|P Townend|\n|R 1|\n|R 2|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"jockey\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test122782"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n|Jamaica|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"origin\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test123217"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Franklin Maleking (9)|\n|S Khumalo|\n|Jarryd Penny (9)|\n|S Brown|\n|Akash Aucharuz (6)|\n|S Nhlapo|\n|Marco V'Rensburg|\n|Hennie Greyling|\n|Devin Ashby|\n|Francois Herholdt|\n|M Yeni|\n|L Nhlapo|\n|Evert Pheiffer|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"jockey\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test123552"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|MALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n|FEMALE|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"gender\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test123583"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Year of fee payment: 4|\n|Year of fee payment: 8|\n|Effective date: 20141112|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"description\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test123612"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Saturday|\n|Sunday|\n|Monday|\n|Tuesday|\n|Wednesday|\n|Thursday|\n|Friday|\n|Saturday|\n|Sunday|\n|Monday|\n|Tuesday|\n|Tuesday|\n|Thursday|\n|Friday|\n|Friday|\n|Saturday|\n|Sunday|\n|Monday|\n|Tuesday|\n|Wednesday|\n|Thursday|\n|Friday|\n|Saturday|\n|Sunday|\n|Monday|\n|Tuesday|\n|Wednesday|\n|Thursday|\n|Friday|\n|Saturday|\n|Sunday|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"day\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test123744"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|A|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"position\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test123807"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|PA|\n|LA|\n|KS|\n|TX|\n|MI|\n|IL|\n|CA|\n|CA|\n|CA|\n|WA|\n|OR|\n|ID|\n|PA|\n|MT|\n|OK|\n|MO|\n|MO|\n|OH|\n|KY|\n|LA|\n|TN|\n|VT|\n|MT|\n|CO|\n|VA|\n|MN|\n|CA|\n|CA|\n|CO|\n|PA|\n|MI|\n|UT|\n|TX|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"state\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test123824"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|15.0|\n|31.0|\n|0.0|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"elevation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test123844"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|09 - 12|\n|08 - 12|\n|09 - 12|\n|08 - 12|\n|08 - 12|\n|09 - 12|\n|09 - 12|\n|09 - 12|\n|09 - 12|\n|08 - 12|\n|09 - 12|\n|09 - 12|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"grades\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test124019"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|CALM|\n|TEP|\n|TESS|\n|SLP|\n|GES|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"symbol\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test124062"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|01\/36\/09\/012|\n|01\/36\/09\/013|\n|01\/36\/09\/014|\n|01\/36\/09\/015|\n|01\/36\/09\/016|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"location\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test124112"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|OKMS|\n|TGM|\n|LBSC|\n|SMMM|\n|IM|\n|DCRP|\n|PNA|\n|LBSC|\n|TOC|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"club\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test124166"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|VSB200|\n|CSS2123\/F7|\n|HW-E450|\n|VHT215|\n|SURROUNDBAR|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"product\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test124319"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Country|\n|Afghanistan|\n|Albania|\n|Algeria|\n|Andorra|\n|Angola|\n|Antigua and Barbuda|\n|Argentina|\n|Armenia|\n|Australia|\n|Austria|\n|Azerbaijan|\n|Bahamas|\n|Bahrain|\n|Bangladesh|\n|Barbados|\n|Belarus|\n|Belgium|\n|Belize|\n|Benin|\n|Bhutan|\n|Bolivia|\n|Bosnia and Herzegovina|\n|Botswana|\n|Brazil|\n|Brunei Darussalam|\n|Bulgaria|\n|Burkina Faso|\n|Burundi|\n|Cabo Verde|\n|Cambodia|\n|Cameroon|\n|Canada|\n|Central African Republic|\n|Chad|\n|Chile|\n|China|\n|Colombia|\n|Comoros|\n|Congo|\n|Congo, Democratic Republic of|\n|Costa Rica|\n|Ivory Coast|\n|Croatia|\n|Cuba|\n|Cyprus|\n|Czech Republic|\n|Denmark|\n|Djibouti|\n|Dominica|\n|Dominican Republic|\n|Ecuador|\n|Egypt|\n|El Salvador|\n|Equatorial Guinea|\n|Eritrea|\n|Estonia|\n|Ethiopia|\n|Fiji|\n|Finland|\n|France|\n|Gabon|\n|Gambia|\n|Georgia|\n|Germany|\n|Ghana|\n|Greece|\n|Grenada|\n|Guatemala|\n|Guinea|\n|Guinea-Bissau|\n|Guyana|\n|Haiti|\n|Honduras|\n|Hong Kong|\n|Hungary|\n|Iceland|\n|India|\n|Indonesia|\n|Iran|\n|Iraq|\n|Ireland|\n|Israel|\n|Italy|\n|Jamaica|\n|Japan|\n|Jordan|\n|Kazakhstan|\n|Kenya|\n|Kiribati|\n|South Korea|\n|Kuwait|\n|Kyrgyzstan|\n|Laos|\n|Latvia|\n|Lebanon|\n|Lesotho|\n|Liberia|\n|Libya|\n|Liechtenstein|\n|Lithuania|\n|Luxembourg|\n|Madagascar|\n|Malawi|\n|Malaysia|\n|Maldives|\n|Mali|\n|Malta|\n|Mauritania|\n|Mauritius|\n|Mexico|\n|Micronesia|\n|Moldova|\n|Mongolia|\n|Montenegro|\n|Morocco|\n|Mozambique|\n|Myanmar|\n|Namibia|\n|Nepal|\n|Netherlands|\n|New Zealand|\n|Nicaragua|\n|Niger|\n|Nigeria|\n|Norway|\n|Oman|\n|Pakistan|\n|Palau|\n|Palestine|\n|Panama|\n|Papua New Guinea|\n|Paraguay|\n|Peru|\n|Philippines|\n|Poland|\n|Portugal|\n|Qatar|\n|Romania|\n|Russian Federation|\n|Rwanda|\n|Saint Kitts and Nevis|\n|Saint Lucia|\n|Saint Vincent and the Grenadines|\n|Samoa|\n|Sao Tome and Principe|\n|Saudi Arabia|\n|Senegal|\n|Serbia|\n|Seychelles|\n|Sierra Leone|\n|Singapore|\n|Slovakia|\n|Slovenia|\n|Solomon Islands|\n|South Africa|\n|South Sudan|\n|Spain|\n|Sri Lanka|\n|Sudan|\n|Suriname|\n|Swaziland|\n|Sweden|\n|Switzerland|\n|Syrian Arab Republic|\n|Tajikistan|\n|Tanzania|\n|Thailand|\n|Macedonia|\n|Timor-Leste|\n|Togo|\n|Tonga|\n|Trinidad and Tobago|\n|Tunisia|\n|Turkey|\n|Turkmenistan|\n|Uganda|\n|Ukraine|\n|United Arab Emirates|\n|United Kingdom|\n|United States|\n|Uruguay|\n|Uzbekistan|\n|Vanuatu|\n|Venezuela|\n|Vietnam|\n|Yemen|\n|Zambia|\n|Zimbabwe|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test124534"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n|Mugilidae|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"family\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test124545"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|5|\n|3|\n|3|\n|3|\n|6|\n|3|\n|3|\n|2|\n|3|\n|5|\n|6|\n|3|\n|4|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"plays\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test1246"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|NOE|\n|MER|\n|NOE|\n|MER|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test124764"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|10-12|\n|10-12|\n|10-12|\n|10-12|\n|10-12 p|\n|10-12|\n|10-12|\n|10-12|\n|10-12|\n|10-9 p1|\n|10-9|\n|10-9|\n|10-9|\n|10-9|\n|10-9|\n|10-12|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"weight\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test12489"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|3880|\n|3893|\n|4451|\n|3153|\n|2778|\n|3575|\n|3230|\n|3252|\n|3462|\n|3814|\n|3627|\n|3583|\n|4013|\n|3638|\n|3836|\n|3561|\n|4035|\n|3880|\n|4024|\n|4399|\n|4024|\n|3936|\n|3825|\n|3131|\n|2921|\n|3351|\n|3197|\n|3560|\n|3219|\n|3461|\n|3594|\n|3285|\n|3616|\n|3285|\n|3483|\n|3428|\n|3472|\n|3814|\n|4376|\n|4464|\n|3781|\n|3415|\n|4023|\n|4824|\n|2932|\n|2998|\n|3353|\n|3567|\n|3591|\n|3778|\n|3909|\n|4600|\n|3536|\n|3461|\n|4024|\n|3694|\n|3984|\n|4044|\n|5879|\n|5367|\n|3992|\n|4302|\n|3647|\n|4605|\n|5678|\n|2370|\n|2348|\n|2617|\n|2676|\n|2617|\n|3623|\n|3246|\n|3248|\n|3465|\n|3476|\n|3606|\n|3174|\n|3297|\n|3315|\n|3458|\n|3340|\n|3434|\n|4142|\n|4804|\n|4760|\n|4947|\n|5050|\n|2866|\n|4425|\n|3699|\n|3217|\n|3581|\n|3650|\n|3479|\n|3548|\n|3060|\n|4675|\n|3101|\n|3105|\n|3173|\n|3357|\n|3448|\n|3222|\n|4331|\n|4068|\n|5042|\n|3862|\n|3829|\n|3714|\n|4987|\n|4440|\n|3487|\n|3469|\n|2581|\n|2626|\n|4542|\n|3175|\n|3182|\n|3410|\n|4057|\n|4057|\n|4057|\n|3346|\n|7190|\n|5000|\n|4463|\n|4788|\n|5464|\n|2606|\n|2606|\n|2750|\n|2702|\n|2612|\n|2691|\n|4275|\n|3290|\n|3347|\n|3028|\n|3306|\n|3497|\n|3313|\n|3780|\n|3351|\n|4945|\n|4309|\n|4548|\n|5440|\n|4083|\n|6133|\n|3047|\n|3294|\n|2994|\n|3349|\n|2432|\n|2601|\n|2500|\n|2732|\n|2513|\n|2782|\n|3258|\n|3468|\n|1850|\n|4365|\n|4310|\n|4387|\n|2835|\n|6400|\n|2255|\n|2290|\n|2339|\n|2635|\n|2635|\n|2698|\n|3549|\n|3217|\n|3217|\n|3023|\n|3651|\n|3651|\n|4056|\n|4309|\n|3336|\n|3677|\n|3416|\n|3306|\n|3851|\n|3977|\n|4967|\n|3836|\n|3777|\n|3874|\n|4046|\n|3803|\n|3803|\n|3948|\n|3980|\n|3779|\n|4042|\n|3865|\n|3428|\n|3516|\n|3790|\n|3826|\n|3575|\n|*|\n|3281|\n|3279|\n|2458|\n|2403|\n|2447|\n|4802|\n|4112|\n|2661|\n|2686|\n|2697|\n|4576|\n|3577|\n|5379|\n|3460|\n|3649|\n|3715|\n|4740|\n|3285|\n|3255|\n|3410|\n|3990|\n|5590|\n|4065|\n|3840|\n|4834|\n|3681|\n|3681|\n|3768|\n|3768|\n|5969|\n|4369|\n|4369|\n|4474|\n|2960|\n|3571|\n|3812|\n|2387|\n|2387|\n|3053|\n|3029|\n|3091|\n|2696|\n|2762|\n|3042|\n|3250|\n|3470|\n|3360|\n|3360|\n|3540|\n|3450|\n|*|\n|3430|\n|3430|\n|4085|\n|4473|\n|3770|\n|3585|\n|3966|\n|3635|\n|4230|\n|3815|\n|5423|\n|4874|\n|4160|\n|4390|\n|4065|\n|4235|\n|4429|\n|3055|\n|3220|\n|4052|\n|4052|\n|4052|\n|4195|\n|4340|\n|4374|\n|3488|\n|3308|\n|3315|\n|2524|\n|2678|\n|3549|\n|3241|\n|3296|\n|4134|\n|3351|\n|3649|\n|2656|\n|3263|\n|2795|\n|2744|\n|3020|\n|4718|\n|3240|\n|3188|\n|3428|\n|3039|\n|3197|\n|3932|\n|3473|\n|3476|\n|3801|\n|5013|\n|3871|\n|4012|\n|4175|\n|2513|\n|2581|\n|2761|\n|5287|\n|3760|\n|3085|\n|2946|\n|3948|\n|3779|\n|3790|\n|3118|\n|3477|\n|3484|\n|3725|\n|3803|\n|4431|\n|2771|\n|2771|\n|2701|\n|3240|\n|3135|\n|3131|\n|3119|\n|2811|\n|2911|\n|4950|\n|3175|\n|3700|\n|3480|\n|3175|\n|3620|\n|3470|\n|3470|\n|2692|\n|3109|\n|3197|\n|2692|\n|2751|\n|2692|\n|2751|\n|3381|\n|2340|\n|2425|\n|3485|\n|3090|\n|2965|\n|3085|\n|3263|\n|3395|\n|3285|\n|3430|\n|3610|\n|3630|\n|3495|\n|2676|\n|2676|\n|2932|\n|2756|\n|2701|\n|3380|\n|3020|\n|3682|\n|4035|\n|3417|\n|3439|\n|3086|\n|3296|\n|3175|\n|3417|\n|3439|\n|3362|\n|2500|\n|2502|\n|2524|\n|2524|\n|2085|\n|2035|\n|2055|\n|3935|\n|5390|\n|2679|\n|2195|\n|2890|\n|3119|\n|5270|\n|4120|\n|4165|\n|2750|\n|4435|\n|3925|\n|2897|\n|2934|\n|3034|\n|3179|\n|3003|\n|2820|\n|3082|\n|3338|\n|3241|\n|3721|\n|4067|\n|3953|\n|5194|\n|5399|\n|5086|\n|3450|\n|3450|\n|2767|\n|3903|\n|3571|\n|3766|\n|3691|\n|3576|\n|3653|\n|2822|\n|3823|\n|4638|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"weight\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test125132"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Brazil|\n|nan|\n|United States|\n|France|\n|Germany|\n|Japan|\n|United Kingdom|\n|Paraguay|\n|China|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"origin\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test125211"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|OF|\n|C|\n|P|\n|C|\n|P|\n|OF|\n|SS|\n|SS|\n|OF|\n|C|\n|1B|\n|P|\n|P|\n|P|\n|P|\n|P|\n|OF|\n|2B|\n|P|\n|P|\n|1B|\n|3B|\n|P|\n|P|\n|3B|\n|P|\n|OF|\n|P|\n|SS|\n|P|\n|SS|\n|3B|\n|P|\n|P|\n|C|\n|SS|\n|OF|\n|P|\n|P|\n|P|\n|C|\n|OF|\n|OF|\n|C|\n|3B|\n|P|\n|P|\n|C|\n|OF|\n|1B|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"position\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test125480"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Bozeman, MT|\n|Logan, UT|\n|Bozeman, MT|\n|Spokane, WA|\n|Helena, MT|\n|Bozeman, MT|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"location\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test125593"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Mar. Beverly Nolan|\n|Mar. Judy Chadman|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"notes\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test125955"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Abellio London|\n|London United|\n|Abellio London|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"operator\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test126033"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Masters Men|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"category\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test126073"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1|\n|2|\n|3|\n|4|\n|5|\n|6|\n|7|\n|8|\n|9|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"rank\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test126083"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|\/usr\/sadm\/bin\/smosservice|\n|\/usr\/sadm\/bin\/smdiskless|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"command\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test126086"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Monday|\n|Tuesday|\n|Wednesday|\n|Friday|\n|Saturday|\n|Sunday|\n|Monday|\n|Tuesday|\n|Wednesday|\n|Friday|\n|Saturday|\n|Sunday|\n|Monday|\n|Tuesday|\n|Wednesday|\n|Thursday|\n|Friday|\n|Saturday|\n|Sunday|\n|Monday|\n|Tuesday|\n|Wednesday|\n|Friday|\n|Saturday|\n|Sunday|\n|Monday|\n|Tuesday|\n|Wednesday|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"day\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test126104"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Comments|\n|Comments|\n|Comments|\n|Cron API|\n|Cron API|\n|Cron API|\n|Cron API|\n|Cron API|\n|Cron API|\n|Cron API|\n|Cron API|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Customize|\n|Database|\n|Database|\n|Database|\n|Database|\n|Database|\n|Database|\n|Database|\n|Database|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"component\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test126213"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|M|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"sex\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test126232"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Fantasy Premier League|\n|Sky Sports Fantasy Football|\n|ESPN Premier Fantasy|\n|Telegraph Fantasy Football|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"brand\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test126412"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|EUR \/ USD|\n|USD \/ JPY|\n|GBP \/ USD|\n|USD \/ CHF|\n|USD \/ CAD|\n|EUR \/ JPY|\n|AUD \/ USD|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"currency\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test126570"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Broncos|\n|Cowboys|\n|Roosters|\n|Rabbitohs|\n|Storm|\n|Sharks|\n|Bulldogs|\n|Warriors|\n|Raiders|\n|Dragons|\n|Sea Eagles|\n|Panthers|\n|Eels|\n|Knights|\n|Titans|\n|Tigers|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test126731"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Youth Only|\n|Youth Only|\n|Regional C|\n|Regional C|\n|Youth Only|\n|Youth Only|\n|Youth Only|\n|Youth Only|\n|Regional C|\n|Youth Only|\n|Youth Only|\n|Youth Only|\n|Youth Only|\n|Regional C|\n|Youth Only|\n|Youth Only|\n|Youth Only|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"classification\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test12674"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|2006 - Present|\n|2002 - 2003|\n|2000 - 2001|\n|1999 - 2000|\n|1998 - 1999|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"duration\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test126924"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|22.0|\n|58.0|\n|0.0|\n|51.0|\n|22.0|\n|0.0|\n|nan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"position\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test127107"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|F|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"sex\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test127197"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Ankerstjerne|\n|Eric Amarillo|\n|Rasmus Seebach|\n|Michael Jackson & Justin Timberlake|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"artist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test12728"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Less than 3.6 years|\n|Between 3.6 - 4.1 years|\n|Greater than 4.1 years|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test127498"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Checked In|\n|Checked In|\n|Checked In|\n|Checked In|\n|Checked In|\n|Checked In|\n|Checked out|\n|Checked In|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"status\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test127953"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Iron and Steel Mills and Ferroalloy Manufacturing|\n|Alumina and Aluminum Production and Processing|\n|Metalworking Machinery Manufacturing|\n|Other Fabricated Metal Product Manufacturing|\n|Forging and Stamping|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"industry\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test128406"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|December 27, 1954|\n|September 17, 1953|\n|August 20, 1954|\n|September 2, 1951|\n|July 11, 1956|\n|February 8, 1956|\n|September 10, 1948|\n|April 21, 1953|\n|September 21, 1957|\n|November 23, 1953|\n|July 15, 1955|\n|March 1, 1952|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"birth Date\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test128519"}}
{"prompt":null,"completion":"{\"chosen_semantic_type\": \"gender\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test128802"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|S Sanders|\n|S Sanders|\n|P J Smullen|\n|D P McDonogh|\n|J Mackay|\n|S Sanders|\n|J B Eyquem|\n|J-P Guillambert|\n|S Sanders|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"jockey\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test128858"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|35|\n|35|\n|35|\n|37|\n|36|\n|37|\n|38|\n|37|\n|38|\n|35|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test128921"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|2|\n|5|\n|6|\n|9|\n|11|\n|13|\n|15|\n|15|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"position\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test128927"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Food|\n|Drink|\n|Food|\n|Drink|\n|Food|\n|Drink|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"product\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test128985"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Deno's Wonder Wheel Cycling|\n|Deno's Wonder Wheel Cycling|\n|Deno's Wonder Wheel Cycling|\n|Deno's Wonder Wheel Cycling|\n|Deno's Wonder Wheel Cycling|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team Name\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test129053"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Phase 8 Vanilla|\n|Phase 8 Milk Chocolate|\n|Phase 8 Peanut Butter Chocolate|\n|Phase 8 White Chocolate|\n|Phase 8 Vanilla|\n|Phase 8 Milk Chocolate|\n|Phase 8 Strawberry|\n|Phase 8 Peanut Butter Chocolate|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"product\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test129200"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|M|\n|M|\n|M|\n|M|\n|M|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"sex\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test129232"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|M|\n|W|\n|M|\n|W|\n|M|\n|M|\n|M|\n|M|\n|W|\n|W|\n|W|\n|M|\n|W|\n|M|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"sex\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test12950"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Forge Cafe|\n|Blue Moon Collection|\n|Mace Motel|\n|Queenstown Roofing|\n|The Gift Centre|\n|Bettys Liquor Store Frankton|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test129598"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Aurela Ga\u00e7e - Mu Than\u00eb Syt\u00eb - EP|\n|Aurela Ga\u00e7e - Mu Than\u00eb Syt\u00eb - EP|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"album\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test129644"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Mr K Thulbourn +|\n|Mr P A Braithwaite|\n|Mr D Barnard|\n|Mr J Nickels|\n|The Spanish Olive Shop|\n|Mr G E Marshall|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"owner\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test129753"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|FA|\n|M|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"status\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test129868"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Moodle|\n|Moodle|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"product\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test129978"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|AS|\n|CC|\n|FPAY|\n|FPAY|\n|FPAY|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"code\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test130197"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Aardvark Property Managment LLC|\n|Aardvark Property Managment LLC|\n|Aardvark Property Managment LLC|\n|Aardvark Property Managment LLC|\n|Aardvark Property Managment LLC|\n|Aardvark Property Managment LLC|\n|Aardvark Property Managment LLC|\n|Aardvark Property Managment LLC|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"owner\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test130331"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Standard Shipping (UPS Ground)|\n|Expedited Shipping (UPS 3 Day SelectSM)|\n|Expedited Shipping (UPS 2nd Day Air\u00ae)|\n|Express Shipping (UPS Next Day Air\u00ae)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"service\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test130486"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Commission on Security and Cooperation in Europe|\n|Organization for Security and Co-operation in Europe|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"affiliation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test130501"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|University of Illinois at Urbana-Champaign|\n|University of Illinois at Urbana-Champaign|\n|University of Illinois at Urbana-Champaign|\n|University of Illinois at Urbana-Champaign|\n|University of Illinois at Urbana-Champaign|\n|University of Illinois at Urbana-Champaign|\n|University of Illinois at Urbana-Champaign|\n|University of Illinois at Urbana-Champaign|\n|University of Illinois at Urbana-Champaign|\n|University of Illinois at Urbana-Champaign|\n|University of Illinois at Urbana-Champaign|\n|University of Illinois at Urbana-Champaign|\n|University of Illinois at Urbana-Champaign|\n|University of Illinois at Urbana-Champaign|\n|University of Illinois at Urbana-Champaign|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team Name\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test130592"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Tue|\n|Wed|\n|Sat|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"day\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test130722"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|PG|\n|SG|\n|SF|\n|PF|\n|C|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"position\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test130834"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|BLND|\n|DEAF|\n|WCHR|\n|WCHS|\n|WCHC|\n|WCMP|\n|WCBD|\n|Blindenhund|\n|BAG|\n|BAG (BM)|\n|BAG 2 - 5|\n|XBA\/XMA|\n|XBB-XBE\/MBXME|\n|SKI|\n|WEA|\n|GOLF|\n|BIKE|\n|SPEQ|\n|ADD|\n|RBK|\n|NC1|\n|PETC|\n|TAFR|\n|TAFG|\n|INF|\n|UM|\n|Kinderwagen|\n|SEF|\n|SEF|\n|SEF|\n|SEF|\n|CBF|\n|CXL\/RBK flex|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"service\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test130858"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|3880|\n|3893|\n|4451|\n|3153|\n|2778|\n|3575|\n|3230|\n|3252|\n|3462|\n|3814|\n|3627|\n|3583|\n|4013|\n|3638|\n|3836|\n|3561|\n|4035|\n|3880|\n|4024|\n|4399|\n|4024|\n|3936|\n|3825|\n|3131|\n|2921|\n|3351|\n|3197|\n|3560|\n|3219|\n|3461|\n|3594|\n|3285|\n|3616|\n|3285|\n|3483|\n|3428|\n|3472|\n|3814|\n|4376|\n|4464|\n|3781|\n|3415|\n|4023|\n|4824|\n|2932|\n|2998|\n|3353|\n|3567|\n|3591|\n|3778|\n|3909|\n|4600|\n|3536|\n|3461|\n|4024|\n|3694|\n|3984|\n|4044|\n|5879|\n|5367|\n|3992|\n|4302|\n|3647|\n|4605|\n|5678|\n|2370|\n|2348|\n|2617|\n|2676|\n|2617|\n|3623|\n|3246|\n|3248|\n|3465|\n|3476|\n|3606|\n|3174|\n|3297|\n|3315|\n|3458|\n|3340|\n|3434|\n|4142|\n|4804|\n|4760|\n|4947|\n|5050|\n|2866|\n|4425|\n|3699|\n|3217|\n|3581|\n|3650|\n|3479|\n|3548|\n|3060|\n|4675|\n|3101|\n|3105|\n|3173|\n|3357|\n|3448|\n|3222|\n|4331|\n|4068|\n|5042|\n|3862|\n|3829|\n|3714|\n|4987|\n|4440|\n|3487|\n|3469|\n|2581|\n|2626|\n|4542|\n|3175|\n|3182|\n|3410|\n|4057|\n|4057|\n|4057|\n|3346|\n|7190|\n|5000|\n|4463|\n|4788|\n|5464|\n|2606|\n|2606|\n|2750|\n|2702|\n|2612|\n|2691|\n|4275|\n|3290|\n|3347|\n|3028|\n|3306|\n|3497|\n|3313|\n|3780|\n|3351|\n|4945|\n|4309|\n|4548|\n|5440|\n|4083|\n|6133|\n|3047|\n|3294|\n|2994|\n|3349|\n|2432|\n|2601|\n|2500|\n|2732|\n|2513|\n|2782|\n|3258|\n|3468|\n|1850|\n|4365|\n|4310|\n|4387|\n|2835|\n|6400|\n|2255|\n|2290|\n|2339|\n|2635|\n|2635|\n|2698|\n|3549|\n|3217|\n|3217|\n|3023|\n|3651|\n|3651|\n|4056|\n|4309|\n|3336|\n|3677|\n|3416|\n|3306|\n|3851|\n|3977|\n|4967|\n|3836|\n|3777|\n|3874|\n|4046|\n|3803|\n|3803|\n|3948|\n|3980|\n|3779|\n|4042|\n|3865|\n|3428|\n|3516|\n|3790|\n|3826|\n|3575|\n|*|\n|3281|\n|3279|\n|2458|\n|2403|\n|2447|\n|4802|\n|4112|\n|2661|\n|2686|\n|2697|\n|4576|\n|3577|\n|5379|\n|3460|\n|3649|\n|3715|\n|4740|\n|3285|\n|3255|\n|3410|\n|3990|\n|5590|\n|4065|\n|3840|\n|4834|\n|3681|\n|3681|\n|3768|\n|3768|\n|5969|\n|4369|\n|4369|\n|4474|\n|2960|\n|3571|\n|3812|\n|2387|\n|2387|\n|3053|\n|3029|\n|3091|\n|2696|\n|2762|\n|3042|\n|3250|\n|3470|\n|3360|\n|3360|\n|3540|\n|3450|\n|*|\n|3430|\n|3430|\n|4085|\n|4473|\n|3770|\n|3585|\n|3966|\n|3635|\n|4230|\n|3815|\n|5423|\n|4874|\n|4160|\n|4390|\n|4065|\n|4235|\n|4429|\n|3055|\n|3220|\n|4052|\n|4052|\n|4052|\n|4195|\n|4340|\n|4374|\n|3488|\n|3308|\n|3315|\n|2524|\n|2678|\n|3549|\n|3241|\n|3296|\n|4134|\n|3351|\n|3649|\n|2656|\n|3263|\n|2795|\n|2744|\n|3020|\n|4718|\n|3240|\n|3188|\n|3428|\n|3039|\n|3197|\n|3932|\n|3473|\n|3476|\n|3801|\n|5013|\n|3871|\n|4012|\n|4175|\n|2513|\n|2581|\n|2761|\n|5287|\n|3760|\n|3085|\n|2946|\n|3948|\n|3779|\n|3790|\n|3118|\n|3477|\n|3484|\n|3725|\n|3803|\n|4431|\n|2771|\n|2771|\n|2701|\n|3240|\n|3135|\n|3131|\n|3119|\n|2811|\n|2911|\n|4950|\n|3175|\n|3700|\n|3480|\n|3175|\n|3620|\n|3470|\n|3470|\n|2692|\n|3109|\n|3197|\n|2692|\n|2751|\n|2692|\n|2751|\n|3381|\n|2340|\n|2425|\n|3485|\n|3090|\n|2965|\n|3085|\n|3263|\n|3395|\n|3285|\n|3430|\n|3610|\n|3630|\n|3495|\n|2676|\n|2676|\n|2932|\n|2756|\n|2701|\n|3380|\n|3020|\n|3682|\n|4035|\n|3417|\n|3439|\n|3086|\n|3296|\n|3175|\n|3417|\n|3439|\n|3362|\n|2500|\n|2502|\n|2524|\n|2524|\n|2085|\n|2035|\n|2055|\n|3935|\n|5390|\n|2679|\n|2195|\n|2890|\n|3119|\n|5270|\n|4120|\n|4165|\n|2750|\n|4435|\n|3925|\n|2897|\n|2934|\n|3034|\n|3179|\n|3003|\n|2820|\n|3082|\n|3338|\n|3241|\n|3721|\n|4067|\n|3953|\n|5194|\n|5399|\n|5086|\n|3450|\n|3450|\n|2767|\n|3903|\n|3571|\n|3766|\n|3691|\n|3576|\n|3653|\n|2822|\n|3823|\n|4638|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"weight\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test130897"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Physical Education Teaching and Coaching|\n|Secondary Education and Teaching|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"education\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test131050"}}
{"prompt":null,"completion":"{\"chosen_semantic_type\": \"sex\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test131250"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Commission on Security and Cooperation in Europe|\n|Commission on Security and Cooperation in Europe|\n|Commission on Security and Cooperation in Europe|\n|Department of State|\n|United States Army War College|\n|Institute of World Politics|\n|University of Washington|\n|Sunshine Coalition, Uzbekistan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"affiliation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test131428"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Male|\n|Female|\n|Total|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"gender\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test131484"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|POL 7, AUT 5|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"result\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test131582"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|AS|\n|CC|\n|AS|\n|AS|\n|FPAY|\n|FPAY|\n|AS|\n|FPAY|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"code\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test131777"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Wilkin Ortiz|\n|Erik Barbaran|\n|Deshawn Parker|\n|Domingo Chacaltana (5)|\n|Scott Spieth|\n|Marklee Buchanan|\n|Angel Stanley|\n|Ricardo Martinez|\n|Samuel Bermudez|\n|Ben Creed|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"jockey\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test131928"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Mon|\n|Tues|\n|Wed|\n|Thurs|\n|Fri|\n|Sat|\n|Sun|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"order\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test132341"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|L|\n|L|\n|L|\n|R|\n|R|\n|R|\n|L|\n|L|\n|L|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"class\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test132449"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|57|\n|57|\n|57|\n|57|\n|57|\n|57|\n|57|\n|57|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test132562"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Credit Crunchers Syndicate|\n|Mr T J Madden|\n|Mr I Wagstaff +|\n|Mr D W Lee +|\n|Mr M J Lee|\n|Mr A C Turner|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"owner\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test13275"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|3880|\n|3893|\n|4451|\n|3153|\n|2778|\n|3575|\n|3230|\n|3252|\n|3462|\n|3814|\n|3627|\n|3583|\n|4013|\n|3638|\n|3836|\n|3561|\n|4035|\n|3880|\n|4024|\n|4399|\n|4024|\n|3936|\n|3825|\n|3131|\n|2921|\n|3351|\n|3197|\n|3560|\n|3219|\n|3461|\n|3594|\n|3285|\n|3616|\n|3285|\n|3483|\n|3428|\n|3472|\n|3814|\n|4376|\n|4464|\n|3781|\n|3415|\n|4023|\n|4824|\n|2932|\n|2998|\n|3353|\n|3567|\n|3591|\n|3778|\n|3909|\n|4600|\n|3536|\n|3461|\n|4024|\n|3694|\n|3984|\n|4044|\n|5879|\n|5367|\n|3992|\n|4302|\n|3647|\n|4605|\n|5678|\n|2370|\n|2348|\n|2617|\n|2676|\n|2617|\n|3623|\n|3246|\n|3248|\n|3465|\n|3476|\n|3606|\n|3174|\n|3297|\n|3315|\n|3458|\n|3340|\n|3434|\n|4142|\n|4804|\n|4760|\n|4947|\n|5050|\n|2866|\n|4425|\n|3699|\n|3217|\n|3581|\n|3650|\n|3479|\n|3548|\n|3060|\n|4675|\n|3101|\n|3105|\n|3173|\n|3357|\n|3448|\n|3222|\n|4331|\n|4068|\n|5042|\n|3862|\n|3829|\n|3714|\n|4987|\n|4440|\n|3487|\n|3469|\n|2581|\n|2626|\n|4542|\n|3175|\n|3182|\n|3410|\n|4057|\n|4057|\n|4057|\n|3346|\n|7190|\n|5000|\n|4463|\n|4788|\n|5464|\n|2606|\n|2606|\n|2750|\n|2702|\n|2612|\n|2691|\n|4275|\n|3290|\n|3347|\n|3028|\n|3306|\n|3497|\n|3313|\n|3780|\n|3351|\n|4945|\n|4309|\n|4548|\n|5440|\n|4083|\n|6133|\n|3047|\n|3294|\n|2994|\n|3349|\n|2432|\n|2601|\n|2500|\n|2732|\n|2513|\n|2782|\n|3258|\n|3468|\n|1850|\n|4365|\n|4310|\n|4387|\n|2835|\n|6400|\n|2255|\n|2290|\n|2339|\n|2635|\n|2635|\n|2698|\n|3549|\n|3217|\n|3217|\n|3023|\n|3651|\n|3651|\n|4056|\n|4309|\n|3336|\n|3677|\n|3416|\n|3306|\n|3851|\n|3977|\n|4967|\n|3836|\n|3777|\n|3874|\n|4046|\n|3803|\n|3803|\n|3948|\n|3980|\n|3779|\n|4042|\n|3865|\n|3428|\n|3516|\n|3790|\n|3826|\n|3575|\n|*|\n|3281|\n|3279|\n|2458|\n|2403|\n|2447|\n|4802|\n|4112|\n|2661|\n|2686|\n|2697|\n|4576|\n|3577|\n|5379|\n|3460|\n|3649|\n|3715|\n|4740|\n|3285|\n|3255|\n|3410|\n|3990|\n|5590|\n|4065|\n|3840|\n|4834|\n|3681|\n|3681|\n|3768|\n|3768|\n|5969|\n|4369|\n|4369|\n|4474|\n|2960|\n|3571|\n|3812|\n|2387|\n|2387|\n|3053|\n|3029|\n|3091|\n|2696|\n|2762|\n|3042|\n|3250|\n|3470|\n|3360|\n|3360|\n|3540|\n|3450|\n|*|\n|3430|\n|3430|\n|4085|\n|4473|\n|3770|\n|3585|\n|3966|\n|3635|\n|4230|\n|3815|\n|5423|\n|4874|\n|4160|\n|4390|\n|4065|\n|4235|\n|4429|\n|3055|\n|3220|\n|4052|\n|4052|\n|4052|\n|4195|\n|4340|\n|4374|\n|3488|\n|3308|\n|3315|\n|2524|\n|2678|\n|3549|\n|3241|\n|3296|\n|4134|\n|3351|\n|3649|\n|2656|\n|3263|\n|2795|\n|2744|\n|3020|\n|4718|\n|3240|\n|3188|\n|3428|\n|3039|\n|3197|\n|3932|\n|3473|\n|3476|\n|3801|\n|5013|\n|3871|\n|4012|\n|4175|\n|2513|\n|2581|\n|2761|\n|5287|\n|3760|\n|3085|\n|2946|\n|3948|\n|3779|\n|3790|\n|3118|\n|3477|\n|3484|\n|3725|\n|3803|\n|4431|\n|2771|\n|2771|\n|2701|\n|3240|\n|3135|\n|3131|\n|3119|\n|2811|\n|2911|\n|4950|\n|3175|\n|3700|\n|3480|\n|3175|\n|3620|\n|3470|\n|3470|\n|2692|\n|3109|\n|3197|\n|2692|\n|2751|\n|2692|\n|2751|\n|3381|\n|2340|\n|2425|\n|3485|\n|3090|\n|2965|\n|3085|\n|3263|\n|3395|\n|3285|\n|3430|\n|3610|\n|3630|\n|3495|\n|2676|\n|2676|\n|2932|\n|2756|\n|2701|\n|3380|\n|3020|\n|3682|\n|4035|\n|3417|\n|3439|\n|3086|\n|3296|\n|3175|\n|3417|\n|3439|\n|3362|\n|2500|\n|2502|\n|2524|\n|2524|\n|2085|\n|2035|\n|2055|\n|3935|\n|5390|\n|2679|\n|2195|\n|2890|\n|3119|\n|5270|\n|4120|\n|4165|\n|2750|\n|4435|\n|3925|\n|2897|\n|2934|\n|3034|\n|3179|\n|3003|\n|2820|\n|3082|\n|3338|\n|3241|\n|3721|\n|4067|\n|3953|\n|5194|\n|5399|\n|5086|\n|3450|\n|3450|\n|2767|\n|3903|\n|3571|\n|3766|\n|3691|\n|3576|\n|3653|\n|2822|\n|3823|\n|4638|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"weight\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test132842"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Tsuru Capital LLC|\n|Tsuru Capital SG Pte Ltd|\n|bCODE Pty Ltd|\n|IIJ|\n|Google|\n|nan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"affiliation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test132974"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|IL|\n|AR|\n|KS|\n|AR|\n|AR|\n|AR|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"state\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test133143"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|429.0|\n|0.0|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"elevation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test133218"}}
{"prompt":null,"completion":"{\"chosen_semantic_type\": \"product\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test133401"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Read|\n|Reading|\n|Reading|\n|Reading|\n|Reading|\n|Reading|\n|Read|\n|Read|\n|Reading|\n|Read|\n|Read|\n|Want to Read|\n|Read|\n|Want to Read|\n|Read|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"status\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test133458"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|3:28|\n|3:34|\n|3:06|\n|3:24|\n|4:30|\n|4:21|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"duration\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test133570"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Ottawa Fury FC|\n|New York Cosmos|\n|Tampa Bay Rowdies|\n|Carolina RailHawks|\n|Minnesota United FC|\n|Indy Eleven|\n|Fort Lauderdale Strikers|\n|FC Edmonton|\n|San Antonio Scorpions|\n|Atlanta Silverbacks|\n|Jacksonville Armada|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test133607"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|10619 Pleasant Valley Cir|\n|10631 Pleasant Valley Cir|\n|10637 Pleasant Valley Cir|\n|10735 Pleasant Valley Cir|\n|10741 Pleasant Valley Cir|\n|10749 Pleasant Valley Cir|\n|10761 Pleasant Valley Cir|\n|10795 Pleasant Valley Cir|\n|10809 Pleasant Valley Cir|\n|10847 Pleasant Valley Cir|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"address\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test133701"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Pram|\n|Pram|\n|Pram|\n|Pram|\n|Pram|\n|Pram|\n|Pram|\n|Pram|\n|Pram|\n|Pram|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"artist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test13376"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|FR Doc.|\n|RIN|\n|Item|\n|FAR Case|\n|FAC|\n|Docket No.|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"type\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test133775"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|2014.0|\n|2014.0|\n|2014.0|\n|2014.0|\n|2014.0|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"year\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test133972"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"sex\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test134066"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Richard Thomas|\n|Kundalini|\n|David Kristian|\n|Stereolab|\n|Wagon Christ|\n|Mogwai|\n|Four Tet & Rothko|\n|Richard Thomas|\n|Warren Defever|\n|Eight Frozen Modules|\n|Add N to (X) & Merzbow|\n|Cheap Glue|\n|Damon Albarn, Graham Coxon, Thurston Moore & Voafose|\n|Infrastructure & Thurston Moore|\n|Rothko|\n|David Kristian|\n|The Sycophants|\n|Aphex Twin & Mike Flowers Pops|\n|Barbed|\n|Echo Park|\n|Twisted Science|\n|Twisted Science|\n|Third Eye Foundation|\n|Twisted Science|\n|Richard Thomas|\n|2 Players|\n|Twisted Science|\n|Bedouin Ascent|\n|David Kristian|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"artist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test134118"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|4|\n|5|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test134205"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Mapping|\n|Mapping|\n|Location|\n|Mapping|\n|Mapping|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"category\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test13464"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|YouTube|\n|YouTube|\n|Blip.tv|\n|Blip.tv|\n|iTunes|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"service\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test135068"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|PK -|\n|PK -|\n|KG - 1|\n|PK - 8|\n|PK - 12|\n|KG - 12|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"grades\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test135150"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Luxo|\n|Luxo|\n|Luxo|\n|Luxo|\n|Luxo|\n|Luxo|\n|Luxo|\n|Luxo|\n|Luxo|\n|Luxo|\n|Luxo|\n|Luxo|\n|Luxo|\n|Luxo|\n|Luxo|\n|Luxo|\n|Luxo|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"manufacturer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test135165"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Jimmy Austin#|\n|Bill Bayne*|\n|Josh Billings|\n|George Boehler|\n|Bill Burwell*|\n|Pat Collins|\n|Dixie Davis|\n|Joe DeBerry*|\n|Bert Gallia|\n|Joe Gedeon|\n|Wally Gerber|\n|Johnnie Heving|\n|Baby Doll Jacobson|\n|Lyman Lamb|\n|Dud Lee*|\n|Lefty Leifield*|\n|Hod Leverette|\n|Adrian Lynch#|\n|Marty McManus|\n|Billy Mullen|\n|Earl Pruess|\n|Ray Richmond|\n|Roy Sanders|\n|John Scheneberg#|\n|Hank Severeid|\n|Urban Shocker|\n|John Shovlin|\n|George Sisler*|\n|Earl Smith#|\n|Allan Sothoron#|\n|Paul Speraw|\n|Frank Thompson|\n|Jack Tobin*|\n|Elam Vangilder|\n|Carl Weilman*|\n|Dutch Wetzel|\n|Ken Williams*|\n|Team Total|\n|Name|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"name\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test135326"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|This motion PASSED the Senate 90 voted YES 8 voted NO 2 voted present\/not voting|\n|This amendment PASSED the Senate 50 voted YES 46 voted NO 4 voted present\/not voting|\n|This amendment PASSED the Senate 65 voted YES 33 voted NO 2 voted present\/not voting|\n|PASSED by voice vote|\n|PASSED by voice vote|\n|PASSED by voice vote|\n|PASSED by voice vote|\n|PASSED by voice vote|\n|PASSED by voice vote|\n|PASSED by voice vote|\n|PASSED by voice vote|\n|PASSED by voice vote|\n|PASSED by voice vote|\n|PASSED by voice vote|\n|PASSED by voice vote|\n|This amendment DID NOT PASS the Senate 38 voted YES 61 voted NO 1 voted present\/not voting|\n|This amendment PASSED the Senate 66 voted YES 33 voted NO 1 voted present\/not voting|\n|This amendment PASSED the Senate 75 voted YES 24 voted NO 1 voted present\/not voting|\n|This amendment PASSED the Senate 55 voted YES 44 voted NO 1 voted present\/not voting|\n|This amendment DID NOT PASS the Senate 43 voted YES 56 voted NO 1 voted present\/not voting|\n|This amendment PASSED the Senate 58 voted YES 41 voted NO 1 voted present\/not voting|\n|This amendment DID NOT PASS the Senate 41 voted YES 58 voted NO 1 voted present\/not voting|\n|This amendment PASSED the Senate 73 voted YES 26 voted NO 1 voted present\/not voting|\n|This amendment DID NOT PASS the Senate 15 voted YES 84 voted NO 1 voted present\/not voting|\n|This amendment DID NOT PASS the Senate 33 voted YES 66 voted NO 1 voted present\/not voting|\n|This amendment PASSED the Senate 76 voted YES 23 voted NO 1 voted present\/not voting|\n|This amendment DID NOT PASS the Senate 42 voted YES 57 voted NO 1 voted present\/not voting|\n|This amendment DID NOT PASS the Senate 33 voted YES 66 voted NO 1 voted present\/not voting|\n|This amendment DID NOT PASS the Senate 45 voted YES 54 voted NO 1 voted present\/not voting|\n|This amendment DID NOT PASS the Senate 14 voted YES 84 voted NO 2 voted present\/not voting|\n|This amendment DID NOT PASS the Senate 20 voted YES 79 voted NO 1 voted present\/not voting|\n|PASSED by voice vote|\n|PASSED by voice vote|\n|PASSED by voice vote|\n|PASSED by voice vote|\n|PASSED by voice vote|\n|PASSED by voice vote|\n|PASSED by voice vote|\n|PASSED by voice vote|\n|PASSED by voice vote|\n|PASSED by voice vote|\n|PASSED by voice vote|\n|PASSED by voice vote|\n|PASSED by voice vote|\n|PASSED by voice vote|\n|PASSED by voice vote|\n|DID NOT PASS by voice vote|\n|PASSED by voice vote|\n|PASSED by voice vote|\n|PASSED by voice vote|\n|PASSED by voice vote|\n|This amendment PASSED the Senate 63 voted YES 36 voted NO 1 voted present\/not voting|\n|This amendment DID NOT PASS the Senate 44 voted YES 55 voted NO 1 voted present\/not voting|\n|This amendment DID NOT PASS the Senate 30 voted YES 69 voted NO 1 voted present\/not voting|\n|This amendment PASSED the Senate 62 voted YES 37 voted NO 1 voted present\/not voting|\n|This amendment PASSED the Senate 59 voted YES 40 voted NO 1 voted present\/not voting|\n|This amendment DID NOT PASS the Senate 43 voted YES 56 voted NO 1 voted present\/not voting|\n|This amendment PASSED the Senate 77 voted YES 22 voted NO 1 voted present\/not voting|\n|This amendment DID NOT PASS the Senate 21 voted YES 77 voted NO 2 voted present\/not voting|\n|This amendment DID NOT PASS the Senate 15 voted YES 84 voted NO 1 voted present\/not voting|\n|This amendment DID NOT PASS the Senate 35 voted YES 63 voted NO 2 voted present\/not voting|\n|This amendment DID NOT PASS the Senate 36 voted YES 63 voted NO 1 voted present\/not voting|\n|This amendment DID NOT PASS the Senate 46 voted YES 53 voted NO 1 voted present\/not voting|\n|This motion DID NOT PASS the Senate 29 voted YES 70 voted NO 1 voted present\/not voting|\n|This motion DID NOT PASS the Senate 40 voted YES 59 voted NO 1 voted present\/not voting|\n|This amendment PASSED the Senate 88 voted YES 11 voted NO 1 voted present\/not voting|\n|This amendment PASSED the Senate 52 voted YES 47 voted NO 1 voted present\/not voting|\n|This amendment DID NOT PASS the Senate 44 voted YES 55 voted NO 1 voted present\/not voting|\n|This amendment PASSED the Senate 66 voted YES 33 voted NO 1 voted present\/not voting|\n|PASSED by voice vote|\n|This amendment DID NOT PASS the Senate 47 voted YES 48 voted NO 5 voted present\/not voting|\n|This amendment DID NOT PASS the Senate 56 voted YES 43 voted NO 1 voted present\/not voting|\n|This amendment DID NOT PASS the Senate 58 voted YES 41 voted NO 1 voted present\/not voting|\n|This amendment DID NOT PASS the Senate 26 voted YES 73 voted NO 1 voted present\/not voting|\n|This amendment PASSED the Senate 95 voted YES 4 voted NO 1 voted present\/not voting|\n|This amendment DID NOT PASS the Senate 45 voted YES 54 voted NO 1 voted present\/not voting|\n|This bill PASSED the Senate 64 voted YES 35 voted NO 1 voted present\/not voting|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"result\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test135439"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|PDF (120K)|\n|Complete Source PDF (3.9M)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"format\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test135577"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|AS|\n|AS|\n|AS|\n|FPAY|\n|FPAY|\n|AS|\n|FPAY|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"code\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test135601"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Shopping|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"category\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test135755"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|nan|\n|nan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"gender\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test136311"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|bandwidth mam (RSVP)|\n|bandwidth rdm (RSVP)|\n|rsvp bandwidth mam|\n|show rsvp interface|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"command\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test136361"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|32|\n|30|\n|30|\n|34|\n|31|\n|31|\n|30|\n|32|\n|32|\n|32|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test136544"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Mandarin Chinese|\n|Mandarin Chinese|\n|Mandarin Chinese|\n|Mandarin Chinese|\n|Korean|\n|Mandarin Chinese|\n|Mandarin Chinese|\n|Mandarin Chinese|\n|Marathi|\n|Gujarati|\n|Tamil|\n|Tamil|\n|Tamil|\n|Malayalam|\n|Malayalam|\n|Malayalam|\n|Marathi|\n|Arabic|\n|Marathi|\n|Tamil|\n|Telugu|\n|Tamil|\n|Kannada|\n|Gujarati|\n|Greek|\n|Greek|\n|Tamil|\n|Malayalam|\n|Malayalam|\n|Tamil|\n|Tamil|\n|Malayalam|\n|Malayalam|\n|Telugu|\n|Telugu|\n|Tamil|\n|Telugu|\n|Telugu|\n|Malayalam|\n|Gujarati|\n|Greek|\n|Greek|\n|Greek|\n|Greek|\n|Greek|\n|Marathi|\n|Gujarati|\n|Malayalam|\n|Tamil|\n|Danish|\n|Arabic|\n|Ivatan|\n|Tamil|\n|Malayalam|\n|Oriya|\n|Tamil|\n|Tamil|\n|Arabic|\n|Malay|\n|Malay|\n|Not specified|\n|Vietnamese|\n|Vietnamese|\n|Vietnamese|\n|Papiamentu|\n|Italian|\n|Italian|\n|Italian|\n|Italian|\n|Italian|\n|Italian|\n|Telugu|\n|Creole, French|\n|Palauan|\n|French|\n|French|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|Spanish|\n|Italian|\n|Rumanian|\n|Italian|\n|Arabic|\n|French|\n|French|\n|French|\n|French|\n|Greek|\n|Portuguese|\n|French|\n|French|\n|Portuguese|\n|Portuguese|\n|Slovene|\n|Cebuano|\n|Sinhalese|\n|Portuguese|\n|Portuguese|\n|Portuguese|\n|Portuguese|\n|Portuguese|\n|Portuguese|\n|Agutaynen|\n|Finnish|\n|Dutch|\n|Dutch|\n|Dutch|\n|Dutch|\n|Dutch|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|Papiamentu|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|Tagalog|\n|Creole, French|\n|Creole, French|\n|French|\n|Creole, French|\n|Afrikaans|\n|French|\n|French|\n|Afrikaans|\n|French|\n|English|\n|Spanish|\n|Spanish|\n|Spanish|\n|Spanish|\n|Spanish|\n|English|\n|Spanish|\n|Spanish|\n|Papiamentu|\n|Spanish|\n|Bikol|\n|Hiligaynon|\n|Ilokano|\n|Kuyunon|\n|Tagalog|\n|Waray-waray|\n|Spanish|\n|Spanish|\n|Spanish|\n|Spanish|\n|English|\n|Spanish|\n|Spanish|\n|Spanish|\n|Spanish|\n|Not specified|\n|Creole, Portuguese|\n|Portuguese|\n|Spanish|\n|Spanish|\n|Spanish|\n|Spanish|\n|Portuguese|\n|Portuguese|\n|Creole, Portuguese|\n|Portuguese|\n|Portuguese|\n|Portuguese|\n|Portuguese|\n|Portuguese|\n|Portuguese|\n|Papiamentu|\n|Papiamentu|\n|Croatian|\n|Bolinao|\n|Cebuano|\n|Hiligaynon|\n|Tagalog|\n|Palauan|\n|Mandarin Chinese|\n|Maldivian|\n|Swahili|\n|Persian|\n|Sinhalese|\n|German|\n|German|\n|German|\n|Malay|\n|Malay|\n|Dutch|\n|Dutch|\n|Dutch|\n|Portuguese|\n|French|\n|Portuguese|\n|English|\n|German|\n|Portuguese|\n|Portuguese|\n|Danish|\n|Swedish|\n|Norwegian|\n|Gujarati|\n|Marathi|\n|Gujarati|\n|Marathi|\n|Fw\u00c3\u00a2i|\n|Malay|\n|Malay|\n|Gela|\n|Makassarese|\n|Wolof|\n|Tamil|\n|Tamil|\n|Malayalam|\n|Marshallese|\n|Misima-Paneati|\n|Tamil|\n|Tamil|\n|Albanian|\n|Albanian|\n|Polish|\n|Greek|\n|Greek|\n|Greek|\n|Cebuano|\n|Chavacano|\n|Maranao\/Samal\/Tao Sug|\n|Bikol|\n|Bikol|\n|Tagalog|\n|Arabic|\n|Arabic|\n|Arabic|\n|Italian|\n|Arabic|\n|Arabic|\n|Turkish|\n|Arabic|\n|Italian|\n|Croatian|\n|Italian|\n|Serbian|\n|Spanish|\n|Spanish|\n|Serbian|\n|Croatian|\n|Maltese|\n|Croatian|\n|Bikol|\n|Italian|\n|Bahasa Indonesia|\n|Malay|\n|Italian|\n|Catalan|\n|Spanish|\n|Creole, Portuguese|\n|Malay|\n|Tagalog|\n|Bahasa Indonesia|\n|Cebuano|\n|Portuguese|\n|English|\n|English|\n|English|\n|Not specified|\n|Hawaiian|\n|Hawaiian|\n|English|\n|Hawaiian|\n|Fijian|\n|Tahitian|\n|Rapa|\n|Carolinian|\n|English|\n|Tokelauan|\n|Tongan|\n|Hawaiian|\n|English|\n|Wallisian|\n|Fijian|\n|Korean|\n|Surigaonon|\n|Samoan|\n|Javanese|\n|Kagayanen|\n|Arabic|\n|Telugu|\n|Cantonese|\n|Cebuano|\n|Chavacano|\n|Davawenyo|\n|Ilokano|\n|Maranao\/Samal\/Tao Sug|\n|Comorian|\n|Comorian|\n|Comorian|\n|Comorian|\n|Ilokano|\n|Italian|\n|Italian|\n|Italian|\n|Malay|\n|Malay|\n|Aceh|\n|Bahasa Indonesia|\n|Italian|\n|Italian|\n|Portuguese|\n|Italian|\n|Corsican|\n|Albanian|\n|Italian|\n|Italian|\n|Arabic|\n|Bengali|\n|Serbian|\n|Serbian|\n|Mandarin Chinese|\n|Hebrew|\n|Sinhalese|\n|Sinhalese|\n|Arabic|\n|Chavacano|\n|Greek|\n|Arabic|\n|Portuguese|\n|Portuguese|\n|Portuguese|\n|Somali|\n|Japanese|\n|Kosraean|\n|Arabic|\n|Surigaonon|\n|Tuvaluan|\n|Kiribati|\n|Carolinian|\n|Telugu|\n|Aceh|\n|Kannada|\n|Creole, French|\n|Niuean|\n|Japanese|\n|Tamil|\n|Tamil|\n|Sinhalese|\n|Tamil|\n|Tamil|\n|Malayalam|\n|Turkish|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"language\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test136733"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Class I|\n|Class I|\n|Class I|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"classification\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test136852"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|PDF (308K)|\n|Complete Source PDF (6.1M)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"format\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test137046"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|AARDE JAMES RAYMOND|\n|AASEN DAVID KIM|\n|ACRE LAWRENCE DALE|\n|ADAIR WILLIAM MICHAEL|\n|ADAMS MICHAEL EUGENE|\n|AITON GERALD DAVID|\n|AKEHURST HOWARD DAVID|\n|ALAKULPPI VESA JUHANI|\n|ALBANESE LEWIS|\n|ALBANESE LUIGI FRANK|\n|ALEXANDER TERRY LEE|\n|ALFRED GERALD OAK JR|\n|ALFSTAD KENNETH ORVILLE|\n|ALM RICHARD ANDREW|\n|ALURA RUDOLFO RESTA|\n|ANDERSON CHARLES C JR|\n|ANDERSON CHARLES EUGENE|\n|ANDERSON CHARLES LEON|\n|ANDERSON CHARLES T JR|\n|ANDERSON DELOSS WILLIAM JR|\n|ANDERSON DOYLE TRAVIS|\n|ANDERSON LARRY EDWARD|\n|ANDERSON LYNN DENNIS|\n|ANDERSON RICHARD WILBUR|\n|ANDERSON WAYNE MARSHALL|\n|ANDREASSI CIRO JOHN|\n|ARCHER DANNY LEE|\n|ARENS DAVID LE ROY|\n|ARMITAGE ROBERT LAYMON|\n|ARMSTRONG PEDER WALTER|\n|ARNDT ROBERT DARRELL|\n|ARNEY RANDALL NAVE|\n|ATCHLEY KEITH NOEL|\n|ATOR RICHARD DENNIS|\n|AUSTIN WILLIAM KENNETH|\n|AVERY KENNETH VARSALL|\n|AXSOM HOBART JR|\n|AYERS DARRELL EUGENE|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"name\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test137257"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|strikeout|\n|shortstop to first base, ground ball|\n|intentional walk|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"result\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test137282"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1.0|\n|1.0|\n|1.0|\n|1.0|\n|1.0|\n|1.0|\n|1.0|\n|2.0|\n|2.0|\n|2.0|\n|2.0|\n|2.0|\n|2.0|\n|2.0|\n|4.0|\n|4.0|\n|4.0|\n|4.0|\n|4.0|\n|4.0|\n|4.0|\n|6.0|\n|6.0|\n|5.0|\n|6.0|\n|6.0|\n|6.0|\n|6.0|\n|8.0|\n|nan|\n|nan|\n|8.0|\n|8.0|\n|8.0|\n|8.0|\n|9.0|\n|9.0|\n|9.0|\n|9.0|\n|9.0|\n|13.0|\n|13.0|\n|13.0|\n|13.0|\n|13.0|\n|13.0|\n|13.0|\n|13.0|\n|13.0|\n|nan|\n|nan|\n|nan|\n|16.0|\n|16.0|\n|16.0|\n|16.0|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"rank\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test137292"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Brazil|\n|United States|\n|Paraguay|\n|nan|\n|Ukraine|\n|France|\n|Hong Kong|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"origin\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test1383"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Albany|\n|Broome|\n|Cayuga|\n|Chenango|\n|Clinton|\n|Columbia|\n|Cortland|\n|Delaware|\n|Essex|\n|Franklin|\n|Fulton|\n|Greene|\n|Hamilton|\n|Herkimer|\n|Jefferson|\n|Lewis|\n|Madison|\n|Montgomery|\n|Oneida|\n|Onondaga|\n|Oswego|\n|Otsego|\n|Rensselaer|\n|St. Lawrence|\n|Saratoga|\n|Schenectady|\n|Schoharie|\n|Tioga|\n|Tompkins|\n|Ulster|\n|Warren|\n|Washington|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"county\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test13837"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Belgium|\n|Belgium|\n|Belgium|\n|Belgium|\n|Belgium|\n|Belgium|\n|Belgium|\n|Switzerland|\n|Switzerland|\n|Spain|\n|Spain|\n|Spain|\n|Spain|\n|Spain|\n|Spain|\n|Spain|\n|Spain|\n|Spain|\n|Spain|\n|Italy|\n|Italy|\n|Italy|\n|Netherlands|\n|Netherlands|\n|Netherlands|\n|Netherlands|\n|Netherlands|\n|Netherlands|\n|Netherlands|\n|Netherlands|\n|Netherlands|\n|Sweden|\n|Sweden|\n|Sweden|\n|Sweden|\n|Sweden|\n|Sweden|\n|Sweden|\n|United Kingdom|\n|United Kingdom|\n|United Kingdom|\n|United Kingdom|\n|United Kingdom|\n|United Kingdom|\n|United Kingdom|\n|United Kingdom|\n|United Kingdom|\n|United Kingdom|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test14022"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|John Mess|\n|Mary Mess|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"person\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test14086"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"file Size\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test14127"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|TJCOG|\n|CGIA|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"collection\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test14352"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|BLND|\n|DEAF|\n|WCHR|\n|WCHS|\n|WCHC|\n|WCMP|\n|WCBD|\n|Blindenhund|\n|BAG|\n|BAG (BM)|\n|BAG 2 - 5|\n|XBA\/XMA|\n|XBB-XBE\/MBXME|\n|SKI|\n|WEA|\n|GOLF|\n|BIKE|\n|SPEQ|\n|ADD|\n|RBK|\n|NC1|\n|PETC|\n|TAFR|\n|TAFG|\n|INF|\n|UM|\n|Kinderwagen|\n|SEF|\n|SEF|\n|SEF|\n|SEF|\n|CBF|\n|CXL\/RBK flex|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"service\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test14394"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|CMSE11109|\n|CMSE11133|\n|CMSE11139|\n|CMSE11085|\n|CMSE11160|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"code\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test14591"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|CALM|\n|TEP|\n|TESS|\n|SLP|\n|GES|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"symbol\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test14714"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|0\/6M|\n|6\/12M|\n|12\/24M|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test14744"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Arsenal|\n|Arsenal|\n|Aston Villa|\n|Bolton|\n|Chelsea|\n|Chelsea|\n|Chelsea|\n|Chelsea|\n|Chelsea|\n|Chelsea|\n|Everton|\n|Fulham|\n|Liverpool|\n|Liverpool|\n|Liverpool|\n|Manchester City|\n|Manchester City|\n|Manchester City|\n|Manchester City|\n|Manchester City|\n|Manchester City|\n|Manchester City|\n|Manchester United|\n|Manchester United|\n|Manchester United|\n|QPR|\n|Reading|\n|Sunderland|\n|Tottenham|\n|Tottenham|\n|West Ham|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"club\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test15127"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Djurgardens IF Stockholm-Sweden|\n|Winnipeg Jets-WHA|\n|Winnipeg Jets-WHA|\n|Flames|\n|Flames|\n|Flames|\n|Flames|\n|Flames|\n|North Stars|\n|Oilers|\n|HC Bolzano-Italy|\n|Djurgardens IF Stockholm-Sweden|\n|EHC Kloten-Swiss|\n|EHC Kloten-Swiss|\n|EHC Kloten-Swiss|\n|Djurgardens IF Stockholm-Sweden|\n|CH Majadahonda-Spain|\n|NHL Totals|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test15203"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Loss|\n|Win|\n|Win|\n|Loss|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"result\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test15233"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Germany|\n|nan|\n|United States|\n|Brazil|\n|United Kingdom|\n|France|\n|Europe|\n|Canada|\n|China|\n|Mozambique|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"origin\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test15418"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|80UPW|\n|4+|\n|80UPW|\n|4+|\n|80UPW|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"class\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test15482"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|John Peterson|\n|Neil Mitchell|\n|Duncan Coutts|\n|Axel Simon|\n|Bjorn Bringert|\n|Antony Courtney|\n|Norman Ramsey|\n|Paul Johnson|\n|Liwen Huang|\n|User:Ashley Y|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"owner\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test15586"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|N 42\u00b029', E 003\u00b006'|\n|N 46\u00b010', W 001\u00b013'|\n|N 43\u00b018', E 005\u00b022'|\n|N 43\u00b043', E 007\u00b018'|\n|N 43\u00b020', W 001\u00b056'|\n|N 45\u00b034', W 001\u00b004'|\n|N 44\u00b030', E 012\u00b017'|\n|N 43\u00b023', W 001\u00b040'|\n|N 43\u00b007', E 005\u00b054'|\n|N 45\u00b026', E 012\u00b020'|\n|N 45\u00b026', E 012\u00b020'|\n|N 43\u00b031', W 001\u00b032'|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"location\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test15646"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Carlos|\n|Officer in Charge|\n|Actor|\n|Actor|\n|Dancing Vagrant at Party|\n|Actor|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"credit\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test15755"}}
{"prompt":null,"completion":"{\"chosen_semantic_type\": \"state\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test15815"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|chromatic|\n|--|\n|jkeenan|\n|jkeenan|\n|jkeenan|\n|Infinoid|\n|--|\n|allison|\n|--|\n|jkeenan|\n|--|\n|whiteknight|\n|--|\n|Infinoid|\n|NotFound|\n|whiteknight|\n|jkeenan|\n|--|\n|whiteknight|\n|bacek|\n|coke|\n|bacek|\n|--|\n|--|\n|jkeenan|\n|NotFound|\n|--|\n|coke|\n|pmichaud|\n|--|\n|coke|\n|--|\n|--|\n|whiteknight|\n|--|\n|--|\n|jkeenan|\n|jkeenan|\n|whiteknight|\n|--|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"owner\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test15941"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|BAL|\n|BAL|\n|BAL|\n|BAL|\n|NYA|\n|WAS|\n|WAS|\n|WAS|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test15960"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|9,840,024|\n|2,425|\n|34.8|\n|3|\n|56,241|\n|27,900|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"county\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test16240"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|logging buffered xml|\n|show logging xml|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"command\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test16321"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|BLND|\n|DEAF|\n|WCHR|\n|WCHS|\n|WCHC|\n|WCMP|\n|WCBD|\n|Blindenhund|\n|BAG|\n|BAG (BM)|\n|BAG 2 - 5|\n|XBA\/XMA|\n|XBB-XBE\/MBXME|\n|SKI|\n|WEA|\n|GOLF|\n|BIKE|\n|SPEQ|\n|ADD|\n|RBK|\n|NC1|\n|PETC|\n|TAFR|\n|TAFG|\n|INF|\n|UM|\n|Kinderwagen|\n|SEF|\n|SEF|\n|SEF|\n|SEF|\n|CBF|\n|CXL\/RBK flex|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"service\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test16435"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|AN 1|\n|Asian 1|\n|Asian 2|\n|Asian 3|\n|Asian 4|\n|Asian 5|\n|Asian 6|\n|Asian 7|\n|Asian 8|\n|Asian 9|\n|Asian 10|\n|Asian 11|\n|Asian 12|\n|Asian 13|\n|Asian 14|\n|Asian 15|\n|Asian 16|\n|Asian 17|\n|Asian 18|\n|Asian 19|\n|Asian 20|\n|Asian 21|\n|Asian 22|\n|Asian 23|\n|Asian 24|\n|Asian 25|\n|Asian 26|\n|Asian 27|\n|Asian 28|\n|Asian 29|\n|Asian 30|\n|Asian 31|\n|Asian 32|\n|Asian 33|\n|Asian 34|\n|Asian 35|\n|Asian 36|\n|Asian 37|\n|Asian 38|\n|Asian 39|\n|Asian 40|\n|Asian 41|\n|Asian 42|\n|Asian 43|\n|Asian 44|\n|Asian 45|\n|Asian 46|\n|Asian 47|\n|Asian 48|\n|Asian 49|\n|Asian 50|\n|Asian 51|\n|Asian 52|\n|Asian 53|\n|Asian 54|\n|Asian 55|\n|B 1|\n|B 2|\n|B 3|\n|B 4|\n|B 5|\n|B 6|\n|B 7|\n|B 8|\n|B 9|\n|B 10|\n|B 11|\n|B 12|\n|B 13|\n|B 14|\n|B 15|\n|B 16|\n|B 17|\n|B 18|\n|B 19|\n|B 20|\n|B 21|\n|B 22|\n|B 23|\n|B 24|\n|B 25|\n|B 26|\n|B 27|\n|B 28|\n|B 29|\n|B 30|\n|B 31|\n|B 32|\n|B 33|\n|B 34|\n|B 35|\n|B 36|\n|B 37|\n|B 38|\n|B 39|\n|B 40|\n|B 41|\n|B 42|\n|B 43|\n|B 44|\n|B 45|\n|B 46|\n|B 47|\n|B 48|\n|B 49|\n|B 50|\n|B 51|\n|B 52|\n|B 53|\n|B 54|\n|B 55|\n|B 56|\n|B 57|\n|B 58|\n|B 59|\n|B 60|\n|B 61|\n|B 62|\n|B 63|\n|B 64|\n|B 65|\n|B 66|\n|B 67|\n|B 68|\n|B 69|\n|B 70|\n|B 71|\n|B 72|\n|B 73|\n|B 74|\n|B 75|\n|B 76|\n|B 77|\n|B 78|\n|B 79|\n|B 80|\n|B 81|\n|B 82|\n|H 1|\n|H 2|\n|H 3|\n|H 4|\n|H 5|\n|H 6|\n|H 7|\n|H 8|\n|H 9|\n|H 10|\n|H 11|\n|H 12|\n|H 13|\n|H 14|\n|TR 1|\n|TR 2|\n|TR 3|\n|TR 4|\n|W 1|\n|W 2|\n|W 3|\n|W 4|\n|W 5|\n|W 6|\n|W 7|\n|W 8|\n|W 9|\n|W 10|\n|W 11|\n|W 12|\n|W 13|\n|W 14|\n|W 15|\n|W 16|\n|W 17|\n|W 18|\n|W 19|\n|W 20|\n|W 21|\n|W 22|\n|W 23|\n|W 24|\n|W 25|\n|W 26|\n|W 27|\n|W 28|\n|W 29|\n|W 30|\n|W 31|\n|W 32|\n|W 33|\n|W 34|\n|W 35|\n|W 36|\n|W 37|\n|W 38|\n|W 39|\n|W 40|\n|W 41|\n|W 42|\n|W 43|\n|W 44|\n|W 45|\n|W 46|\n|W 47|\n|W 48|\n|W 49|\n|W 50|\n|W 51|\n|W 52|\n|W 53|\n|W 54|\n|W 55|\n|W 56|\n|W 57|\n|W 58|\n|W 59|\n|W 60|\n|W 61|\n|W 62|\n|W 63|\n|W 64|\n|W 65|\n|W 66|\n|W 67|\n|W 68|\n|W 69|\n|W 70|\n|W 71|\n|W 72|\n|W 73|\n|W 74|\n|W 75|\n|W 76|\n|W 77|\n|W 78|\n|W 79|\n|W 80|\n|W 81|\n|W 82|\n|W 83|\n|W 84|\n|W 85|\n|W 86|\n|W 87|\n|W 88|\n|W 89|\n|W 90|\n|W 91|\n|W 92|\n|W 93|\n|W 94|\n|W 95|\n|W 96|\n|W 97|\n|W 98|\n|W 99|\n|W 100|\n|W 101|\n|W 102|\n|W 103|\n|W 104|\n|W 105|\n|W 106|\n|W 107|\n|W 108|\n|W 109|\n|W 110|\n|W 111|\n|W 112|\n|W 113|\n|W 114|\n|W 115|\n|W 116|\n|W 117|\n|W 118|\n|W 119|\n|W 120|\n|W 121|\n|W 122|\n|W 123|\n|W 124|\n|W 125|\n|W 126|\n|W 127|\n|W 128|\n|W 129|\n|W 130|\n|W 131|\n|W 132|\n|W 133|\n|W 134|\n|W 135|\n|W 136|\n|W 137|\n|W 138|\n|W 139|\n|W 140|\n|W 141|\n|W 142|\n|W 143|\n|W 144|\n|W 145|\n|W 146|\n|W 147|\n|W 148|\n|W 149|\n|W 150|\n|W 151|\n|W 152|\n|W 153|\n|W 154|\n|W 155|\n|W 156|\n|W 157|\n|W 158|\n|W 159|\n|W 160|\n|W 161|\n|W 162|\n|W 163|\n|W 164|\n|W 165|\n|W 166|\n|W 167|\n|W 168|\n|W 169|\n|W 170|\n|W 171|\n|W 172|\n|W 173|\n|W 174|\n|W 175|\n|W 176|\n|W 177|\n|W 178|\n|W 179|\n|W 180|\n|W 181|\n|W 182|\n|W 183|\n|W 184|\n|W 185|\n|W 186|\n|W 187|\n|W 188|\n|W 189|\n|W 190|\n|W 191|\n|W 192|\n|W 193|\n|W 194|\n|W 195|\n|W 196|\n|W 197|\n|W 198|\n|W 199|\n|W 200|\n|W 201|\n|W 202|\n|W 203|\n|W 204|\n|W 205|\n|W 206|\n|W 207|\n|W 208|\n|W 209|\n|W 210|\n|W 211|\n|W 212|\n|W 213|\n|W 214|\n|W 215|\n|W 216|\n|W 217|\n|W 218|\n|W 219|\n|W 220|\n|W 221|\n|W 222|\n|W 223|\n|W 224|\n|W 225|\n|W 226|\n|W 227|\n|W 228|\n|W 229|\n|W 230|\n|W 231|\n|W 232|\n|W 233|\n|W 234|\n|W 235|\n|W 236|\n|W 237|\n|W 238|\n|W 239|\n|W 240|\n|W 241|\n|W 242|\n|W 243|\n|W 244|\n|W 245|\n|W 246|\n|W 247|\n|W 248|\n|W 249|\n|W 250|\n|W 251|\n|W 252|\n|W 253|\n|W 254|\n|W 255|\n|W 256|\n|W 257|\n|W 258|\n|W 259|\n|W 260|\n|W 261|\n|W 262|\n|W 263|\n|W 264|\n|W 265|\n|W 266|\n|W 267|\n|W 268|\n|W 269|\n|W 270|\n|W 271|\n|W 272|\n|W 273|\n|W 274|\n|W 275|\n|W 276|\n|W 277|\n|W 278|\n|W 279|\n|W 280|\n|W 281|\n|W 282|\n|W 283|\n|W 284|\n|W 285|\n|W 286|\n|W 287|\n|W 288|\n|W 289|\n|W 290|\n|W 291|\n|W 292|\n|W 293|\n|W 294|\n|W 295|\n|W 296|\n|W 297|\n|W 298|\n|W 299|\n|W 300|\n|W 301|\n|W 302|\n|W 303|\n|W 304|\n|W 305|\n|W 306|\n|W 307|\n|W 308|\n|W 309|\n|W 310|\n|W 311|\n|W 312|\n|W 313|\n|W 314|\n|W 315|\n|W 316|\n|W 317|\n|W 318|\n|W 319|\n|W 320|\n|W 321|\n|W 322|\n|W 323|\n|W 324|\n|W 325|\n|W 326|\n|W 327|\n|W 328|\n|W 329|\n|W 330|\n|W 331|\n|W 332|\n|W 333|\n|W 334|\n|W 335|\n|W 336|\n|W 337|\n|W 338|\n|W 339|\n|W 340|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"person\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test1645"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|From Anger and Rage|\n|From Anger and Rage|\n|From Anger and Rage|\n|From Anger and Rage|\n|Rebuild|\n|From Anger and Rage|\n|4 Songs - EP|\n|4 Songs - EP|\n|4 Songs - EP|\n|4 Songs - EP|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"album\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test16505"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"origin\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test16859"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Love Letter|\n|Love Letter|\n|Love Letter|\n|Love Letter|\n|Love Letter|\n|Love Letter|\n|Love Letter|\n|Love Letter|\n|Love Letter|\n|Love Letter|\n|Monkeys & Ice Cream|\n|Monkeys & Ice Cream|\n|Monkeys & Ice Cream|\n|Monkeys & Ice Cream|\n|Monkeys & Ice Cream|\n|Monkeys & Ice Cream|\n|Monkeys & Ice Cream|\n|Monkeys & Ice Cream|\n|Monkeys & Ice Cream|\n|Monkeys & Ice Cream|\n|Monkeys & Ice Cream|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"album\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test16916"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|CLE|\n|PIT|\n|NYN|\n|PHI|\n|ATL|\n|KCA|\n|KCA|\n|TBA|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test16922"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|help|\n|run|\n|use|\n|ping|\n|quit|\n|auw|\n|aur|\n|aul|\n|aul|\n|mkfs|\n|fwr|\n|frd|\n|cd|\n|mkdir|\n|rm|\n|mv|\n|pwd|\n|ls|\n|cat|\n|ln|\n|chmod|\n|touch|\n|df|\n|fsq|\n|rfe|\n|se|\n|scw|\n|scr|\n|sr|\n|rfpw|\n|rfpr|\n|rxpw|\n|rxpr|\n|txpw|\n|txpr|\n|spw|\n|spr|\n|rftw|\n|rftr|\n|ttw|\n|ttr|\n|stw|\n|str|\n|mr|\n|mw|\n|cr|\n|cw|\n|me|\n|mpr|\n|mpw|\n|vg|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"command\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test17356"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1|\n|2|\n|3|\n|4|\n|5|\n|6|\n|7|\n|8|\n|9|\n|10|\n|11|\n|12|\n|13|\n|14|\n|15|\n|16|\n|17|\n|18|\n|19|\n|20|\n|21|\n|22|\n|23|\n|24|\n|25|\n|26|\n|27|\n|28|\n|29|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"rank\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test17430"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Hubert Kah|\n|Hubert Kah|\n|Hubert Kah|\n|Hubert Kah|\n|Hubert Kah|\n|Hubert Kah|\n|Hubert Kah|\n|Hubert Kah|\n|Hubert Kah|\n|Hubert Kah|\n|Hubert Kah|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"artist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test17498"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Nardwuar the Human Serviette|\n|Old Skull|\n|Old Skull|\n|Das Racist|\n|Mikey Erg|\n|Mikey Erg|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"artist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test17740"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|W Springfield|\n|Birch Run|\n|Kaneohe|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"city\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test17825"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Missoula|\n|South Bend|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team Name\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test17854"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1-2|\n|C|\n|1-2|\n|2-3|\n|SF|\n|4-5|\n|1-2|\n|2-3|\n|SG|\n|4-5|\n|C|\n|SF|\n|3-4|\n|4-5|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"position\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test17891"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"sex\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test17896"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Cuisinart TOB-195|\n|Breville BOV450XL|\n|Cuisinart TOB-135|\n|Panasonic Flash Xpress|\n|Breville BOV650XL|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"product\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test1805"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|7\"|\n|Supernatural|\n|a south bronx story|\n|Sapo|\n|7\"|\n|Soul Makossa|\n|Fuel|\n|7\"|\n|Les Annees Passent|\n|Step Into Our Life|\n|Color Her Sunshine|\n|On Tap|\n|Scores|\n|7\"|\n|Champions|\n|7\"|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"album\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test18126"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Points|\n|Minutes|\n|2 Points Made|\n|3 Points Made|\n|FT Made|\n|Offensive Rebounds|\n|Defensive Rebounds|\n|Total rebounds|\n|Assists|\n|Fouls|\n|Turnover|\n|Steals|\n|Blocks|\n|Efficiency|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"category\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test18373"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1 gold|\n|5|\n|1 gold|\n|1|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"rank\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test18414"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Day 1|\n|Day 14|\n|Day 20|\n|Day 23|\n|Day 30|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"day\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test1842"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Marine, USMC|\n|Wounded|\n|Officer, USA|\n|Officer, USA|\n|Dead|\n|Wounded|\n|Sailor, USN|\n|Dead|\n|Sailor, USN|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"notes\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test18499"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Win|\n|Win|\n|Loss|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"result\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test18551"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|GOLD|\n|1776|\n|SDSM|\n|IM|\n|ES|\n|ARIZ|\n|FMM|\n|FMM|\n|CMS|\n|SDSM|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"club\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test18651"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|QB|\n|RB|\n|RB|\n|RB|\n|WR|\n|WR|\n|TE|\n|OT|\n|OT|\n|OG|\n|OG|\n|C|\n|K|\n|KR|\n|QB|\n|RB|\n|RB|\n|RB|\n|WR|\n|WR|\n|WR|\n|TE|\n|OT|\n|OT|\n|OG|\n|OG|\n|C|\n|K|\n|QB|\n|RB|\n|WR|\n|TE|\n|TE|\n|OT|\n|OT|\n|OT|\n|OG|\n|OG|\n|C|\n|C|\n|Ret Sp|\n|Ret Sp|\n|DL|\n|DL|\n|DL|\n|DE|\n|DE|\n|ILB|\n|ILB|\n|OLB|\n|OLB|\n|DB|\n|DB|\n|DB|\n|P|\n|DL|\n|DL|\n|DL|\n|DE|\n|DE|\n|ILB|\n|ILB|\n|OLB|\n|OLB|\n|DB|\n|DB|\n|DB|\n|P|\n|DL|\n|DL|\n|DE|\n|DE|\n|DE|\n|ILB|\n|ILB|\n|ILB|\n|OLB|\n|OLB|\n|DB|\n|DB|\n|DB|\n|DB|\n|DB|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"position\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test18681"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|UNESCO International Hydrological Programme (IHP)|\n|Full Professor of International Law, University of Bologna and Chairman of the Legal Board of the UNECE Water Convention [Bionote]|\n|Lecturer, School of Law, University of Surrey and Deputy Director, Environmental Regulatory Research Group [Bionote]|\n|Director, International Water Law Project; Professor of Law, Texas Wesleyan University School of Law [Bionote]|\n|Lecturer in International Law and Human Rights, University of Ulster [Bionote]|\n|Professor, University of Buenos Aires School of Law [Bionote]|\n|Former Secretary-General of the Project for Environmental Protection and Sustainable Development of the Guarani Aquifer System [Bionote]|\n|Professor of Public International Law, Department of Law, Queen Mary, University of London [Bionote]|\n|Member of the IUCN Commission on Environmental Law|\n|Senior Lecturer, UEA Water Security Research Centre, School of International Development, University of East Anglia|\n|Senior Lecturer, Faculty of Law, National University of Ireland [Bionote]|\n|Water Law Specialist, Consultant, UNESCO-IHP [Bionote]|\n|Professor, School of Law, University of Surrey and Director, Environmental Regulatory Research Group|\n|Senior Research Fellow, Robens Centre for Public and Environmental Health [Bionote]|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"affiliation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test18684"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Namco|\n|Nintendo|\n|Nintendo|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"publisher\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test18849"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Win|\n|Loss|\n|Win|\n|Win|\n|Loss|\n|Win|\n|Win|\n|Win|\n|Win|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"result\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test19060"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|4:43|\n|4:55|\n|4:15|\n|4:06|\n|4:33|\n|2:44|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"duration\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test19183"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|55|\n|55|\n|55|\n|55|\n|55|\n|55|\n|55|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test19712"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|TROJ|\n|OREG|\n|NAC|\n|IEM|\n|PNA|\n|OREG|\n|MMNY|\n|CSUF|\n|SPRD|\n|UNAT|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"club\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test19728"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|VPSL|\n|VPSL|\n|Senate President|\n|VPSL|\n|President \/ VPSL|\n|VPSL \/ PT Committee|\n|VPSL|\n|Candidates|\n|Deans \/ Library Director|\n|VPSL|\n|PT Committee Chair|\n|Monitors|\n|Deans \/ Library Director|\n|Candidates|\n|Monitors|\n|Deans \/ Library Director|\n|Monitors|\n|PRG Chairs|\n|PRG Chairs|\n|PRG \/ PRG Chairs|\n|PRG \/ PRG Chairs\/ Monitors|\n|P\/T Chair & Monitor|\n|P\/T Chair|\n|P\/T Chair & P\/T Committee VPSL|\n|Deans \/ Library Director|\n|Candidates|\n|VPSL|\n|PT Committee or Hearing Committee Chair|\n|VPSL|\n|Deans \/ Library Director|\n|President|\n|TBR|\n|President|\n|VPSL|\n|VPSL|\n|PT Chair|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"person\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test1974"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|turn off TVs in public places!|\n|turn off TVs in public places at 50 meters away!|\n|turn off TVs in public places at 100 meters away!|\n|Meditate, Hallucinate, and Trip Out!|\n|Meditate, Hallucinate, and Trip Out!|\n|make your own handheld game console!|\n|interactive blinky lights!|\n|animated 3D cube!|\n|write messages in the air!|\n|charge your USB enabled gadgets!|\n|make your own fully functional Arduino -- for solderless breadboards!|\n|make your own shield-compatible Arduino!|\n|program your Arduino clone with Windows, MacOS, or Linux!|\n|animate fun patterns in the shape of a heart!|\n|Lots of LEDs! for your Arduino!|\n|make noise by drawing lines with this pencil!|\n|program all your AVR family chips!|\n|Learn Arduino by making TV-B-Gone as an example!|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"description\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test20059"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|College Avenue Library|\n|Franklin Road Library|\n|Glendale Library|\n|Glendale Library|\n|Glendale Library|\n|Irvington Library|\n|Nora Library|\n|Nora Library|\n|Pike Library|\n|Spades Park Library|\n|Spades Park Library|\n|Wayne Library|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"location\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test20263"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|AS|\n|FPAY|\n|FPAY|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"code\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test20296"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|--|\n|136|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"plays\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test20564"}}
{"prompt":null,"completion":"{\"chosen_semantic_type\": \"species\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test20639"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Cumulus Media I...|\n|Cumulus Media I...|\n|Cumulus Media I...|\n|Cumulus Media I...|\n|Cumulus Media I...|\n|Cumulus Media I...|\n|Cumulus Media I...|\n|Cumulus Media I...|\n|Cumulus Media I...|\n|Cumulus Media I...|\n|Cumulus Media I...|\n|Cumulus Media I...|\n|Cumulus Media I...|\n|Cumulus Media I...|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test20646"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|BLND|\n|DEAF|\n|WCHR|\n|WCHS|\n|WCHC|\n|WCMP|\n|WCBD|\n|Blindenhund|\n|BAG|\n|BAG (BM)|\n|BAG 2 - 5|\n|XBA\/XMA|\n|XBB-XBE\/MBXME|\n|SKI|\n|WEA|\n|GOLF|\n|BIKE|\n|SPEQ|\n|ADD|\n|RBK|\n|NC1|\n|PETC|\n|TAFR|\n|TAFG|\n|INF|\n|UM|\n|Kinderwagen|\n|SEF|\n|SEF|\n|SEF|\n|SEF|\n|CBF|\n|CXL\/RBK flex|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"service\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test2092"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Geburtsanzeigen|\n|Das Kind muss ins Bett|\n|GordonTraining|\n|9 monate|\n|Verwaiste Eltern|\n|V\u00c3\u00a4ter im Erziehungsurlaub|\n|Treffpunkt Eltern|\n|Pa#filtered#chen e.V.|\n|Leben und Erziehen|\n|Exentreff|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"description\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test20984"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|DT|\n|DT|\n|DT|\n|DT|\n|DT|\n|DT|\n|DT|\n|LB|\n|LB|\n|LB|\n|LB|\n|LB|\n|LB|\n|LB|\n|LB|\n|LB|\n|LB|\n|LB|\n|LB|\n|LB|\n|LB|\n|LB|\n|LB|\n|LB|\n|LB|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"position\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test21236"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n| Extracellular Space|\n| Plasma Membrane|\n| Plasma Membrane|\n| unknown|\n| Cytoplasm|\n| Cytoplasm|\n| unknown|\n| Cytoplasm|\n| Extracellular Space|\n| Plasma Membrane|\n| unknown|\n| unknown|\n| Extracellular Space|\n| Extracellular Space|\n| Nucleus|\n| Nucleus|\n| Cytoplasm|\n| Cytoplasm|\n| Extracellular Space|\n| Plasma Membrane|\n| Cytoplasm|\n| Cytoplasm|\n| Nucleus|\n| unknown|\n| unknown|\n| Cytoplasm|\n| unknown|\n| Plasma Membrane|\n| Cytoplasm|\n| Cytoplasm|\n| Nucleus|\n| Cytoplasm|\n| Cytoplasm|\n| Plasma Membrane|\n| Cytoplasm|\n| Nucleus|\n| Cytoplasm|\n| unknown|\n| unknown|\n| unknown|\n| unknown|\n| unknown|\n| unknown|\n| unknown|\n| unknown|\n| unknown|\n| unknown|\n| unknown|\n| unknown|\n| unknown|\n| unknown|\n| unknown|\n| Plasma Membrane|\n| Cytoplasm|\n| Cytoplasm|\n| Plasma Membrane|\n| Nucleus|\n| Nucleus|\n| Nucleus|\n| Cytoplasm|\n| Cytoplasm|\n| Nucleus|\n| Plasma Membrane|\n| Nucleus|\n| Cytoplasm|\n| unknown|\n| unknown|\n| Cytoplasm|\n| Cytoplasm|\n| Plasma Membrane|\n| Nucleus|\n| Cytoplasm|\n| Extracellular Space|\n| Cytoplasm|\n| Nucleus|\n| Cytoplasm|\n| Plasma Membrane|\n| Extracellular Space|\n| Extracellular Space|\n| Cytoplasm|\n| Cytoplasm|\n| unknown|\n| Nucleus|\n| Cytoplasm|\n| unknown|\n| Plasma Membrane|\n| Nucleus|\n| unknown|\n| Cytoplasm|\n| Plasma Membrane|\n| Cytoplasm|\n| Extracellular Space|\n| unknown|\n| Plasma Membrane|\n| Plasma Membrane|\n| unknown|\n| unknown|\n| Extracellular Space|\n| Plasma Membrane|\n| Cytoplasm|\n| Cytoplasm|\n| unknown|\n| unknown|\n| unknown|\n| unknown|\n| Plasma Membrane|\n| Cytoplasm|\n| unknown|\n| unknown|\n| unknown|\n| unknown|\n| unknown|\n| Plasma Membrane|\n| unknown|\n| unknown|\n| unknown|\n| Cytoplasm|\n| Extracellular Space|\n| Nucleus|\n| Extracellular Space|\n| Plasma Membrane|\n| Extracellular Space|\n| Cytoplasm|\n| unknown|\n| unknown|\n| Cytoplasm|\n| unknown|\n| Plasma Membrane|\n| Plasma Membrane|\n| unknown|\n| Plasma Membrane|\n| Plasma Membrane|\n| Plasma Membrane|\n| Plasma Membrane|\n| unknown|\n| unknown|\n| Extracellular Space|\n| Nucleus|\n| unknown|\n| Nucleus|\n| unknown|\n| Nucleus|\n| Nucleus|\n| Cytoplasm|\n| Cytoplasm|\n| Plasma Membrane|\n| Cytoplasm|\n| unknown|\n| Plasma Membrane|\n| Plasma Membrane|\n| Extracellular Space|\n| Cytoplasm|\n| Plasma Membrane|\n| Extracellular Space|\n| Plasma Membrane|\n| unknown|\n| unknown|\n| Nucleus|\n| unknown|\n| Cytoplasm|\n| Nucleus|\n| Cytoplasm|\n| Nucleus|\n| unknown|\n| Plasma Membrane|\n| Extracellular Space|\n| unknown|\n| Nucleus|\n| unknown|\n| unknown|\n| unknown|\n| Extracellular Space|\n| Plasma Membrane|\n| unknown|\n| Plasma Membrane|\n| Plasma Membrane|\n| Extracellular Space|\n| Cytoplasm|\n| Cytoplasm|\n| Cytoplasm|\n| Nucleus|\n| Nucleus|\n| unknown|\n| unknown|\n| Cytoplasm|\n| unknown|\n| Cytoplasm|\n| unknown|\n| unknown|\n| Cytoplasm|\n| Cytoplasm|\n| unknown|\n| Nucleus|\n| Plasma Membrane|\n| Nucleus|\n| Cytoplasm|\n| Nucleus|\n| Nucleus|\n| Cytoplasm|\n| Plasma Membrane|\n| Plasma Membrane|\n| Nucleus|\n| unknown|\n| unknown|\n| Plasma Membrane|\n| unknown|\n| Cytoplasm|\n| Cytoplasm|\n| Extracellular Space|\n| unknown|\n| Cytoplasm|\n| unknown|\n| Extracellular Space|\n| Plasma Membrane|\n| Nucleus|\n| unknown|\n| Extracellular Space|\n| Cytoplasm|\n| unknown|\n| Plasma Membrane|\n| unknown|\n| Nucleus|\n| Cytoplasm|\n| Nucleus|\n| Cytoplasm|\n| Plasma Membrane|\n| unknown|\n| unknown|\n| Extracellular Space|\n| Extracellular Space|\n| Cytoplasm|\n| Plasma Membrane|\n| Plasma Membrane|\n| Cytoplasm|\n| Nucleus|\n| Cytoplasm|\n| Cytoplasm|\n| unknown|\n| Extracellular Space|\n| unknown|\n| unknown|\n| Nucleus|\n| unknown|\n| Nucleus|\n| unknown|\n| Cytoplasm|\n| unknown|\n| Cytoplasm|\n| Cytoplasm|\n| Extracellular Space|\n| Extracellular Space|\n| Nucleus|\n| Plasma Membrane|\n| Nucleus|\n| unknown|\n| Nucleus|\n| unknown|\n| unknown|\n| unknown|\n| unknown|\n| unknown|\n| Extracellular Space|\n| unknown|\n| Plasma Membrane|\n| Nucleus|\n| Cytoplasm|\n| unknown|\n| Cytoplasm|\n| Extracellular Space|\n| Nucleus|\n| Nucleus|\n| Nucleus|\n| unknown|\n| unknown|\n| Extracellular Space|\n| Cytoplasm|\n| Plasma Membrane|\n| Nucleus|\n| Cytoplasm|\n| Cytoplasm|\n| Cytoplasm|\n| Plasma Membrane|\n| Cytoplasm|\n| Nucleus|\n| Extracellular Space|\n| Plasma Membrane|\n| Plasma Membrane|\n| Extracellular Space|\n| Nucleus|\n| Cytoplasm|\n| Extracellular Space|\n| unknown|\n| Nucleus|\n| unknown|\n| unknown|\n| unknown|\n| unknown|\n| Cytoplasm|\n| unknown|\n| Extracellular Space|\n| unknown|\n| Cytoplasm|\n| Cytoplasm|\n| Plasma Membrane|\n| Plasma Membrane|\n| Extracellular Space|\n| Extracellular Space|\n| unknown|\n| Nucleus|\n| Cytoplasm|\n| Nucleus|\n| Cytoplasm|\n| Cytoplasm|\n| Plasma Membrane|\n| unknown|\n| Nucleus|\n| Cytoplasm|\n| Cytoplasm|\n| Nucleus|\n| Extracellular Space|\n| Plasma Membrane|\n| Plasma Membrane|\n| Plasma Membrane|\n| unknown|\n| Plasma Membrane|\n| Extracellular Space|\n| Nucleus|\n| Nucleus|\n| unknown|\n| Nucleus|\n| Nucleus|\n| Nucleus|\n| unknown|\n| Nucleus|\n| Nucleus|\n| unknown|\n|nan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"location\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test21245"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|NY|\n|TX|\n|TX|\n|TX|\n|VA|\n|PA|\n|MA|\n|QC|\n|NY|\n|NY|\n|IL|\n|WI|\n|MN|\n|NY|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"state\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test21254"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|2000|\n|2000|\n|2000|\n|2000|\n|2001|\n|2001|\n|2001|\n|2001|\n|2001|\n|2001|\n|2001|\n|2001|\n|2001|\n|2001|\n|2002|\n|2002|\n|2002|\n|2002|\n|2002|\n|2002|\n|2002|\n|2002|\n|2002|\n|2002|\n|2002|\n|2002|\n|2002|\n|2002|\n|2002|\n|2002|\n|2002|\n|2002|\n|2002|\n|2002|\n|2002|\n|2002|\n|2002|\n|2002|\n|2002|\n|2002|\n|2002|\n|2002|\n|2002|\n|2002|\n|2002|\n|2002|\n|2002|\n|2003|\n|2003|\n|2003|\n|2003|\n|2003|\n|2003|\n|2003|\n|2004|\n|2004|\n|2004|\n|2004|\n|2005|\n|2005|\n|2005|\n|2005|\n|2005|\n|2006|\n|2006|\n|2006|\n|2006|\n|2006|\n|2007|\n|2007|\n|2007|\n|2007|\n|2007|\n|2007|\n|2007|\n|2007|\n|2007|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"year\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test2163"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Japan|\n|(Jpn)|\n|(Jpn)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team Name\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test2187"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Merchant security token: used to identify merchant and validate transaction.|\n|Transaction Reference number assigned by the gateway.|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"description\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test2190"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|David Alvarez|\n|Alfonso Lujan|\n|Eddie Cox|\n|Danny Lavergne|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"jockey\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test21999"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1.0|\n|0.6|\n|0.3|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"weight\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test22269"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|nan|\n|4.0|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"rank\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test22380"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Part I|\n|1|\n|2|\n|3|\n|4|\n|5|\n|6|\n|7|\n|8|\n|9|\n|10|\n|11|\n|12|\n|13|\n|14|\n|Part II|\n|15|\n|16|\n|17|\n|18|\n|19|\n|20|\n|21|\n|22|\n|23|\n|24|\n|25|\n|26|\n|27|\n|28|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"class\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test22458"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|ITG|\n|ETFC|\n|GS|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test22704"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Mon|\n|Tues|\n|Wed|\n|Thurs|\n|Fri|\n|Sat|\n|Sun|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"order\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test22908"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|70|\n|74|\n|73|\n|71|\n|70|\n|72|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test23107"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|AS|\n|FPAY|\n|FPAY|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"code\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test2316"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|2014|\n|2013|\n|2012|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"year\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test23528"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Up to 1 year|\n|Perpetual distribution rights|\n|Perpetual distribution rights|\n|Perpetual distribution rights|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"duration\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test23611"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Brazil|\n|United States|\n|Paraguay|\n|nan|\n|Ukraine|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"origin\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test23619"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|DISPATCHED|\n|ENROUTE|\n|ONSCENE|\n|DISPATCHED|\n|DISPATCHED|\n|DISPATCHED|\n|DISPATCHED|\n|ONSCENE|\n|DISPATCHED|\n|DISPATCHED|\n|DISPATCHED|\n|DISPATCHED|\n|DISPATCHED|\n|WAITING|\n|DISPATCHED|\n|ONSCENE|\n|DISPATCHED|\n|DISPATCHED|\n|DISPATCHED|\n|DISPATCHED|\n|DISPATCHED|\n|DISPATCHED|\n|DISPATCHED|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"status\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test23648"}}
{"prompt":null,"completion":"{\"chosen_semantic_type\": \"description\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test23741"}}
{"prompt":null,"completion":"{\"chosen_semantic_type\": \"location\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test23757"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Royal Mail International Standard (Small Packets)|\n|Express Int'l Postage|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"service\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test23768"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|12\"|\n|15\"|\n|18\"|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"depth\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test23769"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Capital|\n|Capital|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Capital|\n|Capital|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Capital|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Capital|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Capital|\n|Capital|\n|Revenue|\n|Revenue|\n|Capital|\n|Revenue|\n|Revenue|\n|Revenue|\n|Capital|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Capital|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Capital|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Capital|\n|Capital|\n|Capital|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Capital|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|Revenue|\n|nan|\n|nan|\n|nan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"type\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test23772"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|16 minutes|\n|14 minutes|\n|14 minutes|\n|13 minutes|\n|15 minutes|\n|24 minutes|\n|18 minutes|\n|14 minutes|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"duration\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test23781"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|9781583225813|\n|9780312263805|\n|9780679752554|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"isbn\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test23823"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Stewart House, Kingsway East|\n|Kingsway East|\n|Stewart House, Kingsway East|\n|Stewart House, Kingsway East|\n|Stewart House, Unit 1 Kingsway East|\n|Unit 2 Mid Craigie Industrial Estate, Kingsway East|\n|Stewart House, Kingsway East|\n|Stewart House, Kingsway East|\n|Suite 2 Stewarts House, Kingsway East|\n|Suite Two Stewarts House, Kingsway East|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"address\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test24077"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|F|\n|F|\n|F|\n|F|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"sex\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test24081"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|web site|\n|web site|\n|web site|\n|web site|\n|web site|\n|web site|\n|web site|\n|web site|\n|web site|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"address\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test24171"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1,425,903|\n|1,425,924|\n|1,425,925|\n|1,425,928|\n|1,425,929|\n|1,425,930|\n|1,425,931|\n|1,425,932|\n|1,425,933|\n|1,425,934|\n|1,425,935|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"rank\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test24302"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Personality|\n|Personality|\n|Celestial|\n|Personality|\n|Personality|\n|Follower|\n|Strategy|\n|Personality|\n|Personality|\n|Region|\n|Strategy|\n|Strategy|\n|Strategy|\n|Strategy|\n|Personality|\n|Strategy|\n|Personality|\n|Celestial|\n|Strategy|\n|Celestial|\n|Personality|\n|Strategy|\n|Personality|\n|Strategy|\n|Strategy|\n|Region|\n|Strategy|\n|Personality|\n|Strategy|\n|Strategy|\n|Item|\n|Celestial|\n|Personality|\n|Personality|\n|Strategy|\n|Strategy|\n|Strategy|\n|Strategy|\n|Strategy|\n|Strategy|\n|Personality|\n|Personality|\n|Personality|\n|Strategy|\n|Strategy|\n|Follower|\n|Holding|\n|Spell|\n|Personality|\n|Personality|\n|Personality|\n|Personality|\n|Stronghold|\n|Stronghold|\n|Stronghold|\n|Personality|\n|Item|\n|Personality|\n|Item|\n|Strategy|\n|Personality|\n|Personality|\n|Strategy|\n|Strategy|\n|Personality|\n|Personality|\n|Follower|\n|Holding|\n|Item|\n|Item|\n|Personality|\n|Personality|\n|Personality|\n|Strategy|\n|Personality|\n|Strategy|\n|Personality|\n|Personality|\n|Personality|\n|Personality|\n|Strategy|\n|Strategy|\n|Follower|\n|Strategy|\n|Personality|\n|Spell|\n|Personality|\n|Item|\n|Strategy|\n|Follower|\n|Personality|\n|Personality|\n|Personality|\n|Strategy|\n|Strategy|\n|Spell|\n|Item|\n|Item|\n|Item|\n|Item|\n|Event|\n|Personality|\n|Personality|\n|Personality|\n|Strategy|\n|Strategy|\n|Personality|\n|Strategy|\n|Strategy|\n|Event|\n|Event|\n|Personality|\n|Personality|\n|Personality|\n|Personality|\n|Follower|\n|Celestial|\n|Strategy|\n|Strategy|\n|Spell|\n|Spell|\n|Personality|\n|Personality|\n|Strategy|\n|Strategy|\n|Spell|\n|Item|\n|Strategy|\n|Strategy|\n|Personality|\n|Celestial|\n|Personality|\n|Strategy|\n|Holding|\n|Personality|\n|Strategy|\n|Personality|\n|Strategy|\n|Personality|\n|Personality|\n|Personality|\n|Personality|\n|Personality|\n|Strategy|\n|Strategy|\n|Strategy|\n|Strategy|\n|Personality|\n|Spell|\n|Personality|\n|Follower|\n|Celestial|\n|Personality|\n|Personality|\n|Strategy|\n|Strategy|\n|Strategy|\n|Item|\n|Strategy|\n|Strategy|\n|Personality|\n|Celestial|\n|Personality|\n|Personality|\n|Personality|\n|Celestial|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"type\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test24349"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|SUMMIT|\n|SUMMIT|\n|SUMMIT|\n|SUMMIT|\n|SUMMIT|\n|SUMMIT|\n|SUMMIT|\n|SUMMIT|\n|SUMMIT|\n|SUMMIT|\n|SUMMIT|\n|SUMMIT|\n|SUMMIT|\n|SUMMIT|\n|SUMMIT|\n|SUMMIT|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"county\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test24567"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|AA|\n|AA|\n|AA|\n|AA|\n|AA|\n|AA|\n|AA|\n|A|\n|AA|\n|AA|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"classification\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test24583"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Mon|\n|Tues|\n|Wed|\n|Thurs|\n|Fri|\n|Sat|\n|Sun|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"order\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test24593"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Tyler Pizarro|\n|Sheldon Russell|\n|Emma Jayne Wilson|\n|James McAleney|\n|Patrick Husbands|\n|A Solis|\n|Jesse Campbell|\n|John Velazquez|\n|Luis Contreras|\n|Justin Stein|\n|David Moran|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"jockey\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test24656"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Rest of Season ? Projected stats for the rest of the season as calculated by PECOTA, Baseball Prospectus' proprietary system that projects player performance based on comparisons with historical player-seasons|\n|Cumulative ? Projected end-of-season stats, combining year-to-date stats with PECOTA projected stats for the remainder of the season|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"duration\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test2474"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Retired|\n|Health Professionals|\n|Real Estate|\n|Leadership PACs|\n|Securities & Investment|\n|Lawyers\/Law Firms|\n|Insurance|\n|General Contractors|\n|Misc Manufacturing & Distributing|\n|Misc Finance|\n|Automotive|\n|Electric Utilities|\n|Commercial Banks|\n|Business Services|\n|Food & Beverage|\n|Lobbyists|\n|Hospitals\/Nursing Homes|\n|Oil & Gas|\n|Air Transport|\n|Building Materials & Equipment|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"industry\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test24743"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|United States|\n|Germany|\n|Canada|\n|Japan|\n|France|\n|Italy|\n|United Kingdom|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test24745"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Scolopacidae|\n|Scolopacidae|\n|Scolopacidae|\n|Scolopacidae|\n|Accipitridae|\n|Accipitridae|\n|Falconidae|\n|Falconidae|\n|Scolopacidae|\n|Scolopacidae|\n|Ziphiidae|\n|Ziphiidae|\n|Ziphiidae|\n|Ziphiidae|\n|Laridae|\n|Laridae|\n|Felidae|\n|Felidae|\n|Ziphiidae|\n|Muscicapidae|\n|Laridae|\n|Laridae|\n|Anatidae|\n|Anatidae|\n|Rhinolophidae|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"family\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test24794"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Dubrovnik (Croatia)|\n|Wroclaw (Poland)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"location\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test25018"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Roma|\n|Roma|\n|Roma|\n|Roma|\n|Roma|\n|Roma|\n|Roma|\n|Roma|\n|Roma|\n|Roma|\n|Roma|\n|Roma|\n|Roma|\n|Roma|\n|Roma|\n|Roma|\n|Roma|\n|Roma|\n|Roma|\n|Roma|\n|Roma|\n|Roma|\n|Roma|\n|Roma|\n|Roma|\n|Roma|\n|Roma|\n|Roma|\n|Roma|\n|Roma|\n|Tokyo|\n|Tokyo|\n|Tokyo|\n|Tokyo|\n|Tokyo|\n|Tokyo|\n|Tokyo|\n|Tokyo|\n|Tokyo|\n|Tokyo|\n|Tokyo|\n|Tokyo|\n|Tokyo|\n|Tokyo|\n|Tokyo|\n|Tokyo|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"city\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test25100"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|MAS|\n|MAS|\n|MAS|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"operator\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test25118"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|New York|\n|California|\n|Illinois|\n|Florida|\n|Nevada|\n|Florida|\n|Texas|\n|Florida|\n|Hawaii|\n|Pennsylvania|\n|Virginia|\n|Florida|\n|Florida|\n|Texas|\n|Florida|\n|Georgia|\n|Maryland|\n|Maryland|\n|California|\n|North Carolina|\n|North Carolina|\n|Michigan|\n|Tennessee|\n|Florida|\n|Georgia|\n|Maryland|\n|Georgia|\n|New Mexico|\n|Florida|\n|Kentucky|\n|Texas|\n|California|\n|Wisconsin|\n|Colorado|\n|Maryland|\n|Georgia|\n|Texas|\n|Texas|\n|Texas|\n|Florida|\n|Utah|\n|California|\n|Florida|\n|Arizona|\n|Tennessee|\n|Maryland|\n|Colorado|\n|Virginia|\n|North Carolina|\n|Virginia|\n|South Carolina|\n|Utah|\n|Texas|\n|Florida|\n|Florida|\n|Alabama|\n|Nevada|\n|Florida|\n|Texas|\n|Texas|\n|Utah|\n|California|\n|Texas|\n|Arizona|\n|Tennessee|\n|Texas|\n|Virginia|\n|California|\n|California|\n|Texas|\n|District of Columbia|\n|Utah|\n|Massachusetts|\n|California|\n|Ohio|\n|Ohio|\n|Texas|\n|North Carolina|\n|Texas|\n|Georgia|\n|Florida|\n|California|\n|North Carolina|\n|Texas|\n|Georgia|\n|Virginia|\n|Colorado|\n|California|\n|Texas|\n|Colorado|\n|California|\n|Alaska|\n|Louisiana|\n|Texas|\n|Maryland|\n|California|\n|Texas|\n|California|\n|Virginia|\n|Tennessee|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"state\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test25136"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Steve Horan|\n|The So So Glos|\n|Bettie Serveert|\n|The Delmore Brothers|\n|Mose Allison|\n|Elvis Costello & the Roots|\n|Elvis Costello & the Roots|\n|The Beatles|\n|John Lennon|\n|XTC|\n|Vampire Weekend|\n|Marshall Crenshaw|\n|Dubmatix|\n|Dubmatix|\n|Yellow Dogs|\n|My Woshin Mashin|\n|Pairin Pongpjboon|\n|The Velvet Underground|\n|The Youngbloods|\n|Dave Alvin|\n|The Lords of the New Church|\n|Kurt Vonnegut|\n|Jerry Lee Lewis|\n|LaVern Baker|\n|Carmen McRae|\n|Ella Fitzgerald|\n|Frank Sinatra|\n|Elvis Costello & the I's|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"artist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test25220"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Blu-ray|\n|DVD|\n|Theatrical|\n|Theatrical|\n|DVD|\n|DVD|\n|DVD|\n|Blu-ray|\n|Blu-ray|\n|DVD|\n|DVD|\n|DVD|\n|DVD|\n|Blu-ray|\n|Blu-ray|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"format\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test25275"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Moscow - Russian Federation|\n|Moscow - Russian Federation|\n|Moscow - Russian Federation|\n|Riazan - Russian Federation|\n|Krasnoyarsk - Russian Federation|\n|Krasnoyarsk - Russian Federation|\n|Moscow - Russian Federation|\n|Moscow - Russian Federation|\n|Moscow - Russian Federation|\n|Moscow - Russian Federation|\n|Sochi - Russian Federation|\n|Sochi - Russian Federation|\n|Sudak - Ukraine|\n|Sudak - Ukraine|\n|Lobnya - Russian Federation|\n|Lobnya - Russian Federation|\n|Moscow - Russian Federation|\n|Moscow - Russian Federation|\n|Moscow - Russian Federation|\n|Moscow - Russian Federation|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"location\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test25363"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|HISQ|\n|DWF|\n|MILC|\n|Chroma|\n|VASP|\n|QE|\n|BGW (Sigma)|\n|QBOX|\n|GROMACS|\n|EMGEO|\n|CESM (HOMME)|\n|MPAS-O|\n|CHOMBO|\n|BOXLIB|\n|WARP|\n|XGC1|\n|MFDN|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"code\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test25646"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|21|\n|21|\n|25|\n|14|\n|24|\n|28|\n|21|\n|27|\n|30|\n|19|\n|26|\n|23|\n|19|\n|30|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"depth\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test2585"}}
{"prompt":null,"completion":"{\"chosen_semantic_type\": \"address\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test2590"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Iron Whey Vanilla|\n|Iron Whey Chocolate|\n|Iron Whey Cookies N Cream|\n|Iron Whey Peanut Butter Cup|\n|Iron Whey Strawberry Banana|\n|Iron Whey Chocolate|\n|Iron Whey Cookies N Cream|\n|Iron Whey Peanut Butter Cup|\n|Iron Whey Strawberry Banana|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"product\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test26390"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|DC United|\n|Columbus Crew|\n|New York Red BullsNY Red Bulls|\n|Orlando City|\n|Toronto|\n|New England RevolutionNew England|\n|Philadelphia UnionPhiladelphia|\n|Montreal ImpactMontreal|\n|New York City FCNY City|\n|Chicago Fire|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test26401"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Highlands Minerals Corp.|\n|Canyon View Development Co.|\n|Yellow Eagle Mining, Inc.|\n|Yellow Eagle Mining, Inc.|\n|Bonanza Mining Co.|\n|Baker County Road Department|\n|Baker County Road Department|\n|Unc Mining And Milling|\n|Baker County Road Department|\n|Elkhorn Mining And Minerals Co.|\n|Bonnanza Mining Co|\n|L. C. Binford And Family|\n|Baker County Road Department|\n|Kenneth Huffman|\n|Kenneth Huffman|\n|Butler Ore Co.|\n|Forest Industries Insurance Management Co.|\n|Donald And David Steinmetz|\n|Baker County Road Department|\n|Wendt, William|\n|Culley Trickle|\n|Oregon Copper Co. (Morris Cook)|\n|Jones, William E.|\n|Jones, William E.|\n|Oscar A. Allstead|\n|Forest Industries Insurance Management Co.|\n|Bonnanza Mining Co.|\n|Forest Industries Insurance Management Co.|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"owner\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test26530"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|mark|\n|mark|\n|mark|\n|jdixon|\n|jdixon|\n|mark|\n|mark|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"owner\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test2656"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1|\n|2|\n|3|\n|4|\n|5|\n|6|\n|7|\n|8|\n|9|\n|10|\n|11|\n|12|\n|13|\n|14|\n|15|\n|16|\n|17|\n|18|\n|19|\n|20|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"position\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test26604"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Luis Garcia|\n|Trevor McCarthy (5)|\n|Abel Jr Castellano|\n|Victor Carrasco (5)|\n|Jose Caraballo|\n|Carlos Jr Marquez|\n|Xavier Perez|\n|Alex Cintron|\n|Daniel Centeno|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"jockey\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test26755"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Wokingham, GB2|\n|Reading, GB2|\n|Ramsden, GB2|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"address\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test26872"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|%%|\n|%t|\n|%D|\n|%{FOOBAR}e|\n|%{FOOBAR}s|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"format\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test27092"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1.sg.|\n|2.sg.|\n|3.sg.|\n|1.pl.|\n|2.pl.|\n|3.pl.|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"person\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test27127"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|M|\n|M|\n|M|\n|M|\n|M|\n|F|\n|M|\n|F|\n|F|\n|M|\n|F|\n|M|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"sex\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test27146"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|IND|\n|IND|\n|IND|\n|IND|\n|IND|\n|IND|\n|VAR|\n|IND|\n|VAR|\n|IND|\n|ATA|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"class\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test27247"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Jamaica|\n|Israel|\n|Belgium|\n|Denmark|\n|Denmark|\n|PR. China|\n|Argentina|\n|Israel|\n|India|\n|Turkey|\n|Korea|\n|Finland|\n|Brazil|\n|Portugal|\n|Netherlands|\n|China|\n|Mexico|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test27264"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|BLND|\n|DEAF|\n|WCHR|\n|WCHS|\n|WCHC|\n|WCMP|\n|WCBD|\n|Blindenhund|\n|BAG|\n|BAG (BM)|\n|BAG 2 - 5|\n|XBA\/XMA|\n|XBB-XBE\/MBXME|\n|SKI|\n|WEA|\n|GOLF|\n|BIKE|\n|SPEQ|\n|ADD|\n|RBK|\n|NC1|\n|PETC|\n|TAFR|\n|TAFG|\n|INF|\n|UM|\n|Kinderwagen|\n|SEF|\n|SEF|\n|SEF|\n|SEF|\n|CBF|\n|CXL\/RBK flex|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"service\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test27273"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|251|\n|290|\n|49|\n|332|\n|257|\n|65|\n|133|\n|281|\n|132|\n|278|\n|245|\n|207|\n|233|\n|131|\n|290|\n|151|\n|150|\n|247|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"duration\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test27304"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Tuesday|\n|Saturday|\n|Sunday|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"day\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test27318"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"sex\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test27319"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|10th|\n|8th|\n|graduate|\n|12th|\n|8th|\n|8th|\n|graduate|\n|graduate|\n|8th|\n|others|\n|post_graduate|\n|12th|\n|5th|\n|8th|\n|graduate|\n|graduate|\n|12th|\n|12th|\n|12th|\n|12th|\n|8th|\n|10th|\n|8th|\n|12th|\n|10th|\n|8th|\n|10th|\n|8th|\n|12th|\n|literate|\n|8th|\n|12th|\n|10th|\n|graduate|\n|8th|\n|10th|\n|10th|\n|12th|\n|12th|\n|5th|\n|12th|\n|post_graduate|\n|10th|\n|10th|\n|5th|\n|graduate_professional|\n|8th|\n|10th|\n|10th|\n|10th|\n|graduate_professional|\n|graduate|\n|graduate|\n|12th|\n|illiterate|\n|8th|\n|12th|\n|10th|\n|graduate|\n|8th|\n|graduate_professional|\n|10th|\n|8th|\n|12th|\n|8th|\n|8th|\n|12th|\n|literate|\n|12th|\n|8th|\n|10th|\n|10th|\n|literate|\n|10th|\n|post_graduate|\n|10th|\n|10th|\n|10th|\n|12th|\n|graduate|\n|10th|\n|8th|\n|10th|\n|graduate|\n|12th|\n|10th|\n|graduate|\n|12th|\n|8th|\n|graduate|\n|8th|\n|8th|\n|12th|\n|10th|\n|12th|\n|not_given|\n|graduate|\n|10th|\n|12th|\n|10th|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"education\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test27332"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|This motion DID NOT PASS the House 183 voted YES 244 voted NO 7 voted present\/not voting|\n|This bill PASSED the House 234 voted YES 193 voted NO 7 voted present\/not voting|\n|PASSED by voice vote|\n|PASSED by voice vote|\n|This amendment PASSED the Senate 89 voted YES 10 voted NO 1 voted present\/not voting|\n|This motion PASSED the House 229 voted YES 193 voted NO 12 voted present\/not voting|\n|This motion DID NOT PASS the House 183 voted YES 238 voted NO 13 voted present\/not voting|\n|This motion PASSED the House 397 voted YES 16 voted NO 21 voted present\/not voting|\n|This motion DID NOT PASS the House 184 voted YES 236 voted NO 13 voted present\/not voting|\n|This motion PASSED the House 405 voted YES 15 voted NO 14 voted present\/not voting|\n|This bill PASSED the House 293 voted YES 132 voted NO 9 voted present\/not voting|\n|This bill PASSED the Senate 60 voted YES 36 voted NO 4 voted present\/not voting|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"result\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test27433"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|GA|\n|NC|\n|NC|\n|VA|\n|VA|\n|PA|\n|DC|\n|Danish Capital Regio|\n|055|\n|Bremen|\n|TN|\n|Vic|\n|SA|\n|Nsw|\n|FL|\n|FL|\n|FL|\n|TN|\n|TN|\n|HH|\n|Rhineland-palatinate|\n|LU|\n|??|\n|Sry|\n|LA|\n|LA|\n|MS|\n|AL|\n|TN|\n|KY|\n|WV|\n|ZH|\n|South Holland|\n|Ile|\n|L|\n|CA|\n|CA|\n|NV|\n|CA|\n|CA|\n|CA|\n|CA|\n|NJ|\n|WV|\n|OH|\n|NY|\n|PA|\n|NY|\n|NY|\n|MA|\n|NY|\n|CT|\n|NY|\n|PA|\n|PA|\n|NY|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"state\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test27497"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Ciudad de M\u00e9xico|\n|Ciudad de M\u00e9xico|\n|M\u00fcnchen|\n|M\u00fcnchen|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"city\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test2752"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Marvel Comics|\n|DC Comics|\n|IDW Publishing|\n|Image Comics|\n|Dark Horse|\n|Dynamite Entertainment|\n|Boom! Studios|\n|Zenescope Entertainment|\n|Bongo Comics|\n|Avatar|\n|Radical Comics|\n|Archie Comics|\n|Udon Entertainment|\n|ONI Press|\n|Aspen|\n|Abstract Studios|\n|NBM|\n|Broadsword Comics|\n|Cartoon Books|\n|Th3rd World Studios|\n|Albatross Exploding Funny Book|\n|Titan Publishing|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"publisher\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test27804"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|chime|\n|Chime|\n|Axel|\n|bglimm|\n|Andy|\n|Greg|\n|Axel|\n|bglimm|\n|AndyS|\n|Greg|\n|AndyS|\n|AndyS|\n|Lee|\n|Lee|\n|AndyS|\n|Andy|\n|Axel|\n|Andy|\n|Andy|\n|Axel|\n|SteveH|\n|SteveH|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"owner\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test2787"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|AS|\n|FPAY|\n|FPAY|\n|FPAY|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"code\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test27871"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|40|\n|40|\n|40|\n|42|\n|42|\n|42|\n|40|\n|40|\n|43|\n|40|\n|40|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test2792"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|'Shipping Code for Category A'|\n|COMBINATION|\n|0|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"code\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test27975"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Alabama|\n|Florida State|\n|Ohio State|\n|Oklahoma St.|\n|Clemson|\n|Auburn|\n|Missouri|\n|Michigan St.|\n|Baylor|\n|Stanford|\n|South Carolina|\n|Arizona State|\n|Oregon|\n|LSU|\n|USC|\n|Texas A&M|\n|Oklahoma|\n|Wisconsin|\n|UCF|\n|Duke|\n|Fresno State|\n|Northern Ill.|\n|Louisville|\n|UCLA|\n|Notre Dame|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test28022"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|20|\n|26|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test28157"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|MAC|\n|MAC|\n|Urban Decay|\n|MAC|\n|MAC|\n|Urban Decay|\n|NYX|\n|MAC|\n|Benefit|\n|Benefit|\n|Illamasqua|\n|NARS|\n|MAC|\n|NYX|\n|NYX|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"brand\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test28320"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|State Government (OES Designation)|\n|Local Government (OES Designation)|\n|Federal Executive Branch (OES Designation)|\n|Individual and Family Services|\n|General Medical and Surgical Hospitals|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"industry\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test28328"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Spanish|\n|Italian|\n|Italian|\n|Spanish|\n|Spanish|\n|Argentine\/Spanish|\n|Spanish|\n|Spanish|\n|Spanish|\n|Spanish|\n|Dutch*|\n|English|\n|Uruguayan\/Spanish|\n|Spanish|\n|Spanish|\n|Spanish*|\n|Argentine|\n|Brazilian*|\n|Spanish|\n|Brazilian*|\n|Spanish*|\n|Spanish*|\n|Spanish*|\n|Spanish|\n|Dutch|\n|Italian|\n|Italian|\n|Italian|\n|Italian|\n|Scottish|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"nationality\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test28589"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Up to 1 year|\n|Perpetual distribution rights|\n|Perpetual distribution rights|\n|Perpetual distribution rights|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"duration\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test28901"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|3-6ft|\n|4-6ft|\n|6-8ft|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"depth\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test29090"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|\ufffd|\n|1576|\n|\ufffd|\n|2847|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"rank\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test29301"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1|\n|2|\n|3|\n|4|\n|5|\n|6|\n|7|\n|8|\n|9|\n|10|\n|11|\n|12|\n|13|\n|14|\n|15|\n|16|\n|17|\n|18|\n|19|\n|20|\n|21|\n|22|\n|23|\n|24|\n|25|\n|26|\n|27|\n|28|\n|29|\n|30|\n|31|\n|32|\n|33|\n|34|\n|35|\n|36|\n|37|\n|38|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"rank\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test29349"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Director Giant Screenwriter|\n|Actor|\n|Director|\n|Director|\n|Director Screenwriter|\n|Achilles Captain|\n|McNabb|\n|Screenwriter Director|\n|Sean Raine|\n|Actor|\n|Sparks|\n|Sparks|\n|Actor|\n|Mike|\n|German Champ|\n|Tieg|\n|Actor|\n|Ken|\n|Robert|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"credit\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test29662"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|FB2|\n|FB|\n|FX1|\n|MO|\n|MO|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"class\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test29917"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Boston, MA|\n|Ann Arbor, MI|\n|Phoenix, AZ|\n|Phoenix, AZ|\n|Phoenix, AZ|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"location\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test30363"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|TRINITY IND\u2026|\n|TESSCO TECH\u2026|\n|ITT EDUCATI\u2026|\n|ULTRA CLEAN\u2026|\n|SANMINA COR\u2026|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test30446"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|College Student Counseling and Personnel Services|\n|Education, General|\n|Elementary Education and Teaching|\n|Secondary Education and Teaching|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"education\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test30546"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Year of fee payment: 4|\n|Year of fee payment: 8|\n|Year of fee payment: 12|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"description\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test30669"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Mainline Protestant|\n|Evangelical Protestant|\n|Catholic|\n|nan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"religion\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test30855"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Externa|\n|Externa|\n|Externa|\n|Interna|\n|Interna|\n|Interna|\n|Interna|\n|Interna|\n|Interna|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"type\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test30889"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Sonoma|\n|Santa Clara|\n|Santa Clara|\n|Santa Clara|\n|Alameda|\n|Alameda|\n|Santa Clara|\n|San Mateo|\n|Santa Clara|\n|Contra Costa|\n|Santa Clara|\n|Santa Clara|\n|San Mateo|\n|San Francisco|\n|San Francisco|\n|Marin|\n|San Mateo|\n|Marin|\n|Alameda|\n|Solano|\n|Alameda|\n|Solano|\n|Contra Costa|\n|Santa Clara|\n|Sonoma|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"county\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test30964"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Pupil|\n|Pupil|\n|Public|\n|Pupil|\n|Pupil|\n|Client|\n|Public|\n|Public|\n|Pupil|\n|Employee|\n|Employee|\n|Pupil|\n|Employee|\n|Pupil|\n|Public|\n|Pupil|\n|Pupil|\n|Pupil|\n|Pupil|\n|Pupil|\n|Pupil|\n|Pupil|\n|Pupil|\n|Pupil|\n|Pupil|\n|Employee|\n|Pupil|\n|Employee|\n|Employee|\n|Pupil|\n|Pupil|\n|Employee|\n|Pupil|\n|Public|\n|Pupil|\n|Pupil|\n|Employee|\n|Client|\n|Employee|\n|Employee|\n|Employee|\n|Employee|\n|Pupil|\n|Pupil|\n|Pupil|\n|Pupil|\n|Pupil|\n|Pupil|\n|Pupil|\n|Pupil|\n|Pupil|\n|Pupil|\n|Employee|\n|Employee|\n|Public|\n|Pupil|\n|Pupil|\n|Pupil|\n|Pupil|\n|Pupil|\n|Employee|\n|Public|\n|Public|\n|Pupil|\n|Pupil|\n|Public|\n|Employee|\n|Employee|\n|Employee|\n|Employee|\n|Public|\n|Public|\n|Pupil|\n|Pupil|\n|Employee|\n|Pupil|\n|Pupil|\n|Pupil|\n|Employee|\n|Employee|\n|Employee|\n|Employee|\n|Employee|\n|Pupil|\n|Pupil|\n|Employee|\n|Public|\n|Pupil|\n|Pupil|\n|Pupil|\n|Pupil|\n|Employee|\n|Employee|\n|Pupil|\n|Employee|\n|Employee|\n|Pupil|\n|Employee|\n|Pupil|\n|Pupil|\n|Pupil|\n|Pupil|\n|Employee|\n|Employee|\n|Employee|\n|Public|\n|Pupil|\n|Pupil|\n|Pupil|\n|Employee|\n|Pupil|\n|Pupil|\n|Pupil|\n|Employee|\n|Employee|\n|Client|\n|Employee|\n|Pupil|\n|Employee|\n|Employee|\n|Pupil|\n|Pupil|\n|Pupil|\n|Pupil|\n|Public|\n|Employee|\n|Pupil|\n|Employee|\n|Pupil|\n|Employee|\n|Public|\n|Pupil|\n|Pupil|\n|Pupil|\n|Employee|\n|Employee|\n|Public|\n|Pupil|\n|Pupil|\n|Employee|\n|Employee|\n|Pupil|\n|Pupil|\n|Pupil|\n|Pupil|\n|Pupil|\n|Public|\n|Pupil|\n|Pupil|\n|Pupil|\n|Public|\n|Employee|\n|Pupil|\n|Employee|\n|Pupil|\n|Employee|\n|Pupil|\n|Public|\n|Employee|\n|Employee|\n|Employee|\n|Employee|\n|Pupil|\n|Pupil|\n|Pupil|\n|Pupil|\n|Pupil|\n|Pupil|\n|Pupil|\n|Pupil|\n|Employee|\n|Employee|\n|Employee|\n|Client|\n|Pupil|\n|Employee|\n|Pupil|\n|Pupil|\n|Pupil|\n|Employee|\n|Pupil|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"status\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test30992"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Kyolic Garlic Cardiovascular Formula 100|\n|Kyolic Garlic Cardiovascular Formula 100|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"product\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test31030"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Indianapolis|\n|Indianapolis|\n|Indianapolis|\n|Indianapolis|\n|Indianapolis|\n|Indianapolis|\n|Indianapolis|\n|Indianapolis|\n|Indianapolis|\n|Indianapolis|\n|Indianapolis|\n|Indianapolis|\n|Indianapolis|\n|Indianapolis|\n|Indianapolis|\n|Indianapolis|\n|Indianapolis|\n|Indianopolis|\n|Indianapolis|\n|Indianapolis|\n|Indianapolis|\n|Indianapolis|\n|Indianapolis|\n|Indianapolis|\n|Indianapolis|\n|Indianapolis|\n|Indianapolis|\n|Indianapolis|\n|Indianapolis|\n|Indianapolis|\n|Indianapolis|\n|Indianapolis|\n|Indianapolis|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"city\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test31134"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|format Paperback|\n|format Paperback|\n|format Paperback|\n|format Paperback|\n|format Paperback|\n|format Hardcover|\n|format Paperback|\n|format Paperback|\n|format Paperback|\n|format Hardcover|\n|format Paperback|\n|format Paperback|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"format\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test31480"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Carla Patricia Montano and Rodrigo Shariff Mendoza|\n|Russel and Jeanette Joss|\n|Eduardo E. Garcia and Lauren E. Eadeh|\n|Nicolas D & #39 and Rina D & #39|\n|Brian P. and Amanda L. Bartlett|\n|Adrian Costo and Amy Durfee|\n|Gilmi D' Cardozo and Giovanni Camilo Agostino|\n|Lee W. and Tracy A. Swasey|\n|Mario A. Monge and Ana Maria Romero|\n|Luisa Gamboa and Carlos Castaneda|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"owner\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test31525"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|IC3 Colorado|\n|IC3 Colorado|\n|IC3 Colorado|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team Name\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test31537"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Democratic Party of Michigan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"affiliate\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test31580"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|705.0|\n|0.0|\n|0.0|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"elevation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test31652"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|$1.86|\n|$2.23|\n|$0.93|\n|$2.23|\n|$2.98|\n|$2.23|\n|$2.60|\n|$32.73|\n|$32.73|\n|$32.73|\n|$32.73|\n|$32.73|\n|$20.83|\n|$28.26|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"club\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test31703"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|format Hardcover|\n|format Paperback|\n|format Hardcover|\n|format Paperback|\n|format Hardcover|\n|format Hardcover|\n|format Paperback|\n|format Paperback|\n|format Hardcover|\n|format Paperback|\n|format Paperback|\n|format Hardcover|\n|format Paperback|\n|format Paperback|\n|format Paperback|\n|format Hardcover|\n|format Hardcover|\n|format Paperback|\n|format Paperback|\n|format Hardcover|\n|format Hardcover|\n|format Paperback|\n|format Paperback|\n|format Paperback|\n|format Hardcover|\n|format Hardcover|\n|format Paperback|\n|format Hardcover|\n|format Gebundene Ausgabe|\n|format Paperback|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"format\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test31751"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|AK|\n|AK|\n|AL|\n|AL|\n|AL|\n|AL|\n|AR|\n|AZ|\n|AZ|\n|AZ|\n|AZ|\n|CA|\n|CA|\n|CA|\n|CA|\n|CA|\n|CA|\n|CA|\n|CA|\n|CA|\n|CA|\n|CA|\n|CA|\n|CA|\n|CA|\n|CA|\n|CA|\n|CA|\n|CA|\n|CA|\n|CA|\n|CA|\n|CA|\n|CA|\n|CA|\n|CA|\n|CA|\n|CA|\n|CA|\n|CA|\n|CA|\n|CO|\n|CO|\n|CO|\n|CT|\n|CT|\n|CT|\n|CT|\n|DE|\n|FL|\n|FL|\n|FL|\n|FL|\n|FL|\n|FL|\n|FL|\n|FL|\n|FL|\n|FL|\n|FL|\n|FL|\n|FL|\n|GA|\n|GA|\n|GA|\n|GA|\n|GA|\n|GA|\n|GA|\n|GA|\n|HI|\n|IA|\n|IA|\n|IA|\n|ID|\n|ID|\n|IL|\n|IL|\n|IL|\n|IL|\n|IL|\n|IL|\n|IL|\n|IL|\n|IL|\n|IL|\n|IL|\n|IN|\n|IN|\n|IN|\n|IN|\n|KS|\n|KS|\n|KS|\n|KY|\n|KY|\n|KY|\n|KY|\n|LA|\n|LA|\n|LA|\n|MA|\n|MA|\n|MA|\n|MA|\n|MA|\n|MA|\n|MD|\n|MD|\n|MD|\n|MD|\n|MD|\n|MD|\n|MD|\n|MD|\n|ME|\n|MI|\n|MI|\n|MI|\n|MI|\n|MI|\n|MI|\n|MN|\n|MN|\n|MN|\n|MN|\n|MN|\n|MN|\n|MO|\n|MO|\n|MO|\n|MO|\n|MO|\n|MS|\n|MS|\n|MS|\n|MT|\n|nan|\n|nan|\n|nan|\n|NC|\n|NC|\n|NC|\n|NC|\n|NC|\n|NC|\n|NE|\n|NE|\n|NJ|\n|NJ|\n|NJ|\n|NJ|\n|NJ|\n|NJ|\n|NJ|\n|NJ|\n|NM|\n|NM|\n|NV|\n|NV|\n|NY|\n|NY|\n|NY|\n|NY|\n|NY|\n|NY|\n|NY|\n|NY|\n|NY|\n|NY|\n|NY|\n|NY|\n|NY|\n|NY|\n|NY|\n|NY|\n|OH|\n|OH|\n|OH|\n|OH|\n|OH|\n|OH|\n|OH|\n|OH|\n|OH|\n|OH|\n|OK|\n|OK|\n|OK|\n|OK|\n|OR|\n|OR|\n|OR|\n|OR|\n|PA|\n|PA|\n|PA|\n|PA|\n|PA|\n|PA|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"state\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test31892"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Global Network Initiative|\n|Human Rights First|\n|International Corporate Accountability Roundtable|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"affiliation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test31910"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1 9TH AVENUE|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"address\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test31912"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|41|\n|40|\n|42|\n|41|\n|40|\n|41|\n|40|\n|42|\n|40|\n|40|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test31935"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Thursday|\n|Friday|\n|Saturday|\n|Sunday|\n|Monday|\n|Tuesday|\n|Wednesday|\n|Thursday|\n|Friday|\n|Saturday|\n|Sunday|\n|Tuesday|\n|Wednesday|\n|Thursday|\n|Friday|\n|Saturday|\n|Sunday|\n|Monday|\n|Tuesday|\n|Thursday|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"day\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test32097"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Add new Web site: BioKids - New World Warbler.|\n|Add new Web site: BirdWatch Ireland - Wood Warbler.|\n|Add new Web site: Birds of Britain - Wood Warbler.|\n|Added alternative name New World warbler and changed \"subfamily Parulinae\" to \"family Parulidae.\"|\n|Photograph of common yellowthroat added.|\n|Added image of northern parula warbler.|\n|Media added.|\n|Article revised and updated.|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"description\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test32234"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Minyi Gu|\n|Sarah Grimshaw|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"person\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test32410"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Residential|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"category\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test32522"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|played at Suburban - Turf|\n|Will not be rescheduled|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"notes\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test32524"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Commission on Security and Cooperation in Europe|\n|Commission on Security and Cooperation in Europe|\n|Chairperson-in-Office of the OSCE|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"affiliation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test32597"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|T|\n|Th|\n|T|\n|Th|\n|T|\n|Th|\n|M|\n|T|\n|T|\n|Th|\n|T|\n|Th|\n|T|\n|Th|\n|M|\n|T|\n|T|\n|Th|\n|T|\n|Th|\n|T|\n|Th|\n|T|\n|Th|\n|T|\n|Th|\n|T|\n|T|\n|W|\n|Th|\n|T|\n|Th|\n|T|\n|Th|\n|T|\n|T|\n|W|\n|Th|\n|Th|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"day\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test32725"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Object model|\n|Data validation|\n|Event handling|\n|User interface|\n|Editing controls|\n|Error handling|\n|Security|\n|Data submission|\n|Business logic|\n|Form integration|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"component\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test32866"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Dee-Blast Corporation|\n|Dee-Blast Corporation|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"manufacturer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test33094"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|22|\n|21|\n|21|\n|24|\n|23|\n|21|\n|20|\n|24|\n|19|\n|24|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test33156"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Atlantic Southeast Airlines - ASA, opf. Delta Connection|\n|Air Tahiti|\n|Ryan Airlines|\n|Metro Cargo|\n|Lauda Air|\n|Sempati Air|\n|Airtech Rajawaldi Udara|\n|Indonesian AF|\n|Nordeste Linhas A\u00e9reas|\n|SAS|\n|China Airlines|\n|GLM Aviation|\n|US Coast Guard|\n|Trans-Air Service|\n|Perris Valley Aviation|\n|TAMPA Colombia|\n|China General|\n|Far East Avia|\n|Nigerian AF|\n|El Al|\n|Connie Kalitta|\n|ARM, opf. Tadair|\n|JAL|\n|Aviation & Services Europe|\n|Ketchum Air Service|\n|Hungarian Aeronautical Ass.|\n|Indian Airlines|\n|Peterborough Parachute Centre|\n|Baikal Airlines|\n|Scibe Airlift Cargo Zaire|\n|Rich|\n|Northwest Airlines|\n|Crystal Aviation|\n|Aurukun Air Services|\n|FedEx, opf. Empire Airlines|\n|Leadair UniJet|\n|Abakan Airlines|\n|US Navy|\n|ValuJet Airlines|\n|private|\n|Atlantic Southeast Airlines - ASA, opf. Delta Connection|\n|Tamair|\n|Grand Aire Express|\n|Tower Air|\n|Azerbaijan Airlines|\n|American Air Network|\n|Garuda|\n|Pink Aviation Services|\n|Delta Air Lines|\n|Air North|\n|TAM|\n|Ethiopian Airlines|\n|Indian AF|\n|Canadian Airlines|\n|Afghan AF|\n|ExpressJet Airlines, opf. Continental Express|\n|R. L. Riemenschneider Enterprises|\n|Great Lakes Airlines, opf. United Express|\n|South African Airways - SAA, opf. LAM|\n|Continental Air Lines|\n|Capital T\u00e1xi A\u00e9reo|\n|IAT Cargo|\n|Pan African Airlines|\n|Pantanal|\n|H\u00e9lica|\n|Blue Water Aviation Services|\n|TAF Linhas A\u00e9reas|\n|Avisto, opf. Sirte Oil Company|\n|Antey, opf. Sky Cabs|\n|Atlas Air|\n|Continental Air Lines|\n|Emery Worldwide|\n|East Coast Aviation Services|\n|Paraclub Moorsele|\n|Varig|\n|America West|\n|private|\n|Hapag-Lloyd|\n|Colonels Inc.|\n|US Airways|\n|Earth Data Aviation|\n|Loganair|\n|Jim Hankins Air Service|\n|Associa\u00e7\u00e3o dos Pilotos de Angola|\n|Wiggins Airways, opf. FedEx|\n|Channel Express|\n|Airtex Aviation|\n|L\u00ednea A\u00e9rea Amaszonas|\n|Penta|\n|Air Transat|\n|Binter M\u00e9diterraneo|\n|USAF|\n|TAM Brasil|\n|Aero Ferinco|\n|Trans-Air-Link|\n|ACES|\n|Garuda|\n|Fly BVI|\n|Skymaster|\n|American Airlines|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"operator\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test33563"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Audio Recordings|\n|Text \/ Printed Matter|\n|General|\n|Film \/ Video|\n|Text \/ Printed Matter|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"format\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test33741"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Emilia-Romagna|\n|Emilia-Romagna|\n|Emilia-Romagna|\n|Emilia-Romagna|\n|Emilia-Romagna|\n|Emilia-Romagna|\n|Emilia-Romagna|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"region\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test33874"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|CC|\n|FPAY|\n|FPAY|\n|FPAY|\n|AS|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"code\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test33973"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Platinum Hydro Builder Vanilla Bean|\n|Platinum Hydro Builder Chocolate Shake|\n|Platinum Hydro Builder Vanilla Bean|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"product\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test34172"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|0.002432414|\n|0.002432414|\n|0.001911182|\n|0.004308847|\n|0.005108069|\n|0.006289527|\n|0.010077142|\n|0.010945861|\n|0.014594482|\n|0.025540343|\n|0.029710195|\n|0.026409062|\n|0.030961151|\n|0.030961151|\n|0.041177288|\n|0.052296893|\n|0.129126416|\n|0.172145389|\n|0.155604976|\n|0.247967197|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"weight\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test34404"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Davidson|\n|Davidson|\n|Shelby|\n|Davidson|\n|Davidson|\n|Robertson|\n|Shelby|\n|Washington|\n|Hamilton|\n|Montgomery|\n|Gibson|\n|Davidson|\n|Shelby|\n|Shelby|\n|Shelby|\n|Henderson|\n|Montgomery|\n|Obion|\n|Shelby|\n|Henderson|\n|Davidson|\n|Davidson|\n|Maury|\n|Shelby|\n|Coffee|\n|Hamilton|\n|Shelby|\n|Shelby|\n|Shelby|\n|Shelby|\n|Shelby|\n|Davidson|\n|Davidson|\n|Giles|\n|Davidson|\n|Lincoln|\n|Wayne|\n|Marshall|\n|Cocke|\n|Knox|\n|Shelby|\n|Gibson|\n|Montgomery|\n|Hamblen|\n|Davidson|\n|Giles|\n|Williamson|\n|Trousdale|\n|Hamilton|\n|Madison|\n|Jefferson|\n|Davidson|\n|Cocke|\n|Rutherford|\n|Maury|\n|Cocke|\n|Gibson|\n|Jefferson|\n|Coffee|\n|Davidson|\n|Davidson|\n|Williamson|\n|Hancock|\n|Marion|\n|Shelby|\n|Marshall|\n|Robertson|\n|Shelby|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"county\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test34753"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|WATERTOWN|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"city\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test34876"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|33.9|\n|37.2|\n|32.9|\n|32.5|\n|36.7|\n|34.0|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"weight\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test34983"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|PDF|\n|Hardcopy (shipping and handling)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"format\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test35037"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Alabama|\n|Florida State|\n|Ohio State|\n|Baylor|\n|Stanford|\n|Oregon|\n|Clemson|\n|Auburn|\n|Texas A&M|\n|Oklahoma St.|\n|Missouri|\n|South Carolina|\n|Michigan St.|\n|Central Fl.|\n|LSU|\n|Louisville|\n|Oklahoma|\n|UCLA|\n|Wisconsin|\n|Arizona State|\n|Nebraska|\n|Texas|\n|Miami (FL)|\n|Northern Ill.|\n|Fresno State|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test35137"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Eurico Silva Da|\n|Patrick Husbands|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"jockey\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test3545"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Electricity\/Gas|\n|Fire|\n|Internet Service Providers|\n|Phone Local\/Long Distance|\n|Police|\n|TV\/Cable\/Satellite|\n|Water|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"service\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test35531"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1990|\n|2000|\n|2001|\n|2002|\n|2003|\n|2004|\n|2005|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"year\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test35565"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|The Helsinki Commission|\n|The Helsinki Commission|\n|The Helsinki Commission|\n|U.S. Department of State|\n|U.S. Department of State|\n|Brown University|\n|OSCE|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"affiliation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test35712"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Saturday|\n|Sat. Feb 07, 2009|\n|Sat. Feb 07, 2009|\n|Sat. Feb 07, 2009|\n|Sat. Feb 07, 2009|\n|Sat. Feb 07, 2009|\n|Sat. Feb 07, 2009|\n|Sat. Feb 07, 2009|\n|Sunday|\n|Sun. Feb 08, 2009|\n|Sun. Feb 08, 2009|\n|Sun. Feb 08, 2009|\n|Sun. Feb 08, 2009|\n|Sun. Feb 08, 2009|\n|Sun. Feb 08, 2009|\n|Sun. Feb 08, 2009|\n|Sun. Feb 08, 2009|\n|Sun. Feb 08, 2009|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"day\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test35801"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Geelong|\n|Melbourne|\n|Ballarat|\n|Canberra|\n|Marrickville|\n|Newcastle|\n|Ottawa|\n|Nashville|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"city\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test35842"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Brazil|\n|United States|\n|nan|\n|China|\n|Portugal|\n|United Kingdom|\n|Japan|\n|Paraguay|\n|Germany|\n|France|\n|Argentina|\n|Russian Federation|\n|Peru|\n|Colombia|\n|Spain|\n|Ecuador|\n|Cuba|\n|Anonymous Proxy|\n|Korea, Republic of|\n|Mexico|\n|Mozambique|\n|Netherlands|\n|Italy|\n|Canada|\n|Ireland|\n|Angola|\n|Australia|\n|Finland|\n|Embrapa|\n|Europe|\n|India|\n|Bolivia|\n|Mauritius|\n|Venezuela|\n|Chile|\n|Denmark|\n|Nicaragua|\n|Guatemala|\n|South Africa|\n|Cape Verde|\n|Algeria|\n|Switzerland|\n|Ukraine|\n|Slovakia|\n|Morocco|\n|Uruguay|\n|Satellite Provider|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"origin\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test35862"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|24|\n|23|\n|23|\n|24|\n|22|\n|24|\n|23|\n|24|\n|22|\n|22|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test35867"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Japan|\n|USA|\n|Brazil|\n|South Korea|\n|Mexico|\n|Japan|\n|Philippines|\n|India|\n|India|\n|Indonesia|\n|Nigeria|\n|India|\n|Egypt|\n|USA|\n|Argentina|\n|Brazil|\n|Russia|\n|China|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test36114"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1|\n|2|\n|3|\n|4|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"ranking\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test36363"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Active|\n|Closed|\n|Active|\n|Active|\n|Active|\n|Active|\n|Active|\n|Active|\n|Active|\n|Active|\n|Active|\n|Active|\n|Active|\n|Closed|\n|Closed|\n|Closed|\n|Closed|\n|Active|\n|Active|\n|Active|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"status\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test36410"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|134.0|\n|0.0|\n|0.0|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"elevation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test36535"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|25|\n|28|\n|19|\n|Age|\n|18|\n|20|\n|24|\n|24.7|\n|Age|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test36615"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Audio Recordings|\n|Film \/ Video|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"format\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test36723"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|isbn 0060776099|\n|isbn 1857231465|\n|isbn 006185414X|\n|isbn 0440170370|\n|isbn 0446402397|\n|isbn 0006395422|\n|isbn 0060089911|\n|isbn 0439023491|\n|isbn 1565129768|\n|isbn 0061726826|\n|isbn 0452011876|\n|isbn 0439579295|\n|isbn 0763622591|\n|isbn 0439023513|\n|isbn 1416936408|\n|isbn 0393312836|\n|isbn 0385732554|\n|isbn 1416974369|\n|isbn 0689865406|\n|isbn 2266159240|\n|isbn 2266159259|\n|isbn 0439023483|\n|isbn 0141036141|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"isbn\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test3675"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Win|\n|Win|\n|Loss|\n|Win|\n|Win|\n|Win|\n|Loss|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"result\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test37096"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|German AF|\n|South African AF|\n|United Air Lines|\n|LATI|\n|Ala Littoria|\n|Malert|\n|BOAC|\n|China National|\n|TWA|\n|TCAL|\n|Stephens Aviation|\n|US Navy|\n|China National|\n|BOAC|\n|RAF|\n|Eastern Air Lines|\n|Iberia|\n|Deutsche Lufthansa|\n|US Navy|\n|RAF|\n|American Airlines|\n|USAAF|\n|South African Airways - SAA|\n|South African AF|\n|Eastern Air Lines|\n|TACA de Nicaragua|\n|RAF|\n|Hungarian AF|\n|Colombian AF|\n|RAF|\n|RAF|\n|Aeroflot|\n|South African Airways - SAA|\n|RAF|\n|RAAF|\n|German AF|\n|South African AF|\n|Hangar Six|\n|BOAC|\n|LARES|\n|Panagra|\n|German AF|\n|German AF|\n|Hungarian AF|\n|US Navy|\n|RAF|\n|USAAC|\n|Soviet AF|\n|USAAF|\n|Ala Littoria|\n|RAF|\n|Soviet AF|\n|US Treasury|\n|BOAC|\n|US Navy|\n|Colombian AF|\n|Panair do Brasil|\n|Colombian AF|\n|US Navy|\n|Air France|\n|RAF|\n|RAF|\n|US Navy|\n|CAMB|\n|Finnish AF|\n|Pan Am|\n|German AF|\n|Deutsche Lufthansa|\n|RAF|\n|US Navy|\n|Guinea Airways|\n|Northwest Orient Airlines|\n|American Airlines|\n|German AF|\n|Aero OY|\n|US Navy|\n|DETA|\n|Private|\n|RAF|\n|German AF|\n|RAF|\n|Dutch Navy|\n|US Navy|\n|US Navy|\n|US Navy|\n|US Navy|\n|US Navy|\n|US Navy|\n|US Navy|\n|US Navy|\n|US Navy|\n|US Navy|\n|US Navy|\n|US Navy|\n|US Navy|\n|US Navy|\n|US Navy|\n|US Navy|\n|US Navy|\n|US Navy|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"operator\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test37292"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|COL|\n|SEA|\n|HOU|\n|MIN|\n|PHI|\n|TOR|\n|NYA|\n|CHN|\n|ARI|\n|ANA|\n|BAL|\n|BOS|\n|SFN|\n|NYN|\n|MIA|\n|SDN|\n|CLE|\n|SLN|\n|WAS|\n|TEX|\n|ATL|\n|DET|\n|CHA|\n|TBA|\n|CIN|\n|LAN|\n|KCA|\n|OAK|\n|PIT|\n|MIL|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test37632"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|BJ'S RESTAURANTS, INC.|\n|BOFI HOLDING, INC.|\n|BREEZE-EASTERN CORP|\n|CAMBREX CORPORATION|\n|CAMDEN PROPERTY TRUST|\n|CARTER'S, INC.|\n|CASEY'S GENERAL STORES INC|\n|CENTERSTATE BANKS INC|\n|CHIPOTLE MEXICAN GRILL, INC.|\n|CLEARONE INCOPRORATED|\n|CROWN MEDIA HOLDINGS, INC|\n|DIAMOND HILL INVESTMENT GROUP, INC.|\n|DYCOM INDUSTRIES, INC.|\n|EAGLE BANCORP, INC.|\n|EDWARDS LIFESCIENCES CORP|\n|ENTERPRISE FINANCIAL SERVICES CORP|\n|ENVIROSTAR INC|\n|EQUITY LIFESTYLE PROPERTIES, INC.|\n|ESTEE LAUDER COMPANIES INC|\n|FARMERS CAPITAL BANK CORP|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test37657"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Luc Seufer|\n|Luc Seufer|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"creator\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test37750"}}
{"prompt":null,"completion":"{\"chosen_semantic_type\": \"country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test37753"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|English|\n|Spanish|\n|German|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"language\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test37900"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|PK - 05|\n|PK - PK|\n|PK - 05|\n|PK - 05|\n|KG - 05|\n|KG - 05|\n|KG - 05|\n|KG - 05|\n|PK - 05|\n|PK - 05|\n|KG - 05|\n|PK - 05|\n|KG - 06|\n|PK - 05|\n|PK - 05|\n|KG - 05|\n|PK - 05|\n|PK - 05|\n|PK - 05|\n|PK - 05|\n|PK - 05|\n|PK - 05|\n|KG - 08|\n|KG - 05|\n|PK - 05|\n|KG - 05|\n|KG - 05|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"grades\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test38223"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Men|\n|Men|\n|Men|\n|Men|\n|Women|\n|Women|\n|Women|\n|Women|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"type\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test38269"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Catholic|\n|Mainline Protestant|\n|Evangelical Protestant|\n|Other|\n|Orthodox|\n|Black Protestant|\n|nan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"religion\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test38293"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Verkauf|\n|Kauf|\n|Kauf|\n|Verkauf|\n|Verkauf|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"order\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test38300"}}
{"prompt":null,"completion":"{\"chosen_semantic_type\": \"name\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test38336"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|9781501104565|\n|9781443436717|\n|9780345530950|\n|9780060935467|\n|9781455515974|\n|9780446310789|\n|9781501111747|\n|9780425278420|\n|9780553418026|\n|9780061120084|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"isbn\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test38394"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|male|\n|male|\n|female|\n|female|\n|male|\n|male|\n|female|\n|male|\n|male|\n|female|\n|male|\n|female|\n|male|\n|male|\n|male|\n|male|\n|female|\n|male|\n|female|\n|male|\n|male|\n|female|\n|male|\n|male|\n|male|\n|male|\n|?|\n|female|\n|male|\n|male|\n|male|\n|female|\n|male|\n|male|\n|?|\n|male|\n|female|\n|female|\n|female|\n|male|\n|male|\n|male|\n|?|\n|?|\n|female|\n|male|\n|female|\n|male|\n|male|\n|male|\n|male|\n|male|\n|male|\n|male|\n|?|\n|male|\n|male|\n|male|\n|male|\n|male|\n|male|\n|?|\n|male|\n|male|\n|male|\n|male|\n|male|\n|female|\n|male|\n|female|\n|?|\n|male|\n|male|\n|male|\n|male|\n|male|\n|male|\n|female|\n|?|\n|?|\n|male|\n|male|\n|male|\n|?|\n|?|\n|?|\n|?|\n|male|\n|female|\n|male|\n|?|\n|?|\n|male|\n|male|\n|male|\n|female|\n|male|\n|?|\n|male|\n|?|\n|male|\n|?|\n|female|\n|male|\n|male|\n|male|\n|male|\n|?|\n|?|\n|male|\n|?|\n|male|\n|?|\n|male|\n|male|\n|male|\n|male|\n|?|\n|male|\n|male|\n|male|\n|male|\n|female|\n|male|\n|female|\n|female|\n|male|\n|male|\n|?|\n|?|\n|male|\n|male|\n|?|\n|?|\n|?|\n|female|\n|?|\n|male|\n|male|\n|male|\n|?|\n|male|\n|male|\n|male|\n|male|\n|?|\n|male|\n|?|\n|male|\n|male|\n|male|\n|male|\n|male|\n|male|\n|?|\n|male|\n|male|\n|male|\n|female|\n|male|\n|male|\n|male|\n|male|\n|male|\n|male|\n|?|\n|male|\n|female|\n|male|\n|male|\n|?|\n|male|\n|male|\n|male|\n|male|\n|male|\n|male|\n|?|\n|male|\n|male|\n|male|\n|female|\n|male|\n|?|\n|male|\n|female|\n|female|\n|male|\n|male|\n|female|\n|?|\n|?|\n|male|\n|?|\n|male|\n|?|\n|?|\n|male|\n|?|\n|?|\n|?|\n|?|\n|male|\n|male|\n|male|\n|male|\n|male|\n|?|\n|?|\n|male|\n|?|\n|female|\n|male|\n|?|\n|?|\n|?|\n|male|\n|?|\n|female|\n|male|\n|male|\n|male|\n|male|\n|female|\n|male|\n|male|\n|male|\n|?|\n|male|\n|male|\n|?|\n|?|\n|?|\n|?|\n|male|\n|?|\n|?|\n|male|\n|male|\n|male|\n|male|\n|male|\n|?|\n|male|\n|?|\n|male|\n|?|\n|?|\n|?|\n|?|\n|male|\n|male|\n|male|\n|male|\n|female|\n|male|\n|male|\n|male|\n|?|\n|?|\n|male|\n|female|\n|?|\n|male|\n|?|\n|female|\n|male|\n|male|\n|?|\n|?|\n|male|\n|female|\n|male|\n|female|\n|male|\n|male|\n|female|\n|?|\n|male|\n|?|\n|male|\n|?|\n|female|\n|female|\n|?|\n|male|\n|male|\n|male|\n|?|\n|male|\n|?|\n|?|\n|male|\n|male|\n|female|\n|?|\n|male|\n|?|\n|male|\n|female|\n|?|\n|?|\n|male|\n|male|\n|?|\n|male|\n|male|\n|male|\n|male|\n|?|\n|?|\n|male|\n|male|\n|male|\n|female|\n|male|\n|?|\n|?|\n|male|\n|male|\n|male|\n|male|\n|male|\n|?|\n|female|\n|male|\n|male|\n|male|\n|male|\n|male|\n|?|\n|male|\n|male|\n|male|\n|male|\n|male|\n|male|\n|?|\n|male|\n|female|\n|male|\n|female|\n|male|\n|?|\n|male|\n|male|\n|female|\n|male|\n|?|\n|male|\n|male|\n|male|\n|male|\n|male|\n|male|\n|male|\n|male|\n|male|\n|?|\n|male|\n|?|\n|male|\n|?|\n|?|\n|female|\n|male|\n|male|\n|?|\n|?|\n|male|\n|?|\n|male|\n|?|\n|?|\n|?|\n|?|\n|female|\n|male|\n|male|\n|male|\n|female|\n|male|\n|male|\n|male|\n|male|\n|?|\n|?|\n|male|\n|?|\n|male|\n|male|\n|male|\n|male|\n|male|\n|?|\n|?|\n|?|\n|?|\n|male|\n|male|\n|?|\n|female|\n|male|\n|male|\n|?|\n|?|\n|?|\n|male|\n|?|\n|?|\n|?|\n|female|\n|?|\n|?|\n|male|\n|male|\n|male|\n|female|\n|?|\n|female|\n|male|\n|male|\n|male|\n|?|\n|?|\n|male|\n|male|\n|male|\n|?|\n|?|\n|male|\n|?|\n|female|\n|male|\n|?|\n|?|\n|male|\n|?|\n|female|\n|?|\n|male|\n|male|\n|?|\n|male|\n|female|\n|?|\n|female|\n|male|\n|female|\n|male|\n|male|\n|?|\n|male|\n|?|\n|?|\n|?|\n|?|\n|?|\n|female|\n|male|\n|male|\n|male|\n|male|\n|male|\n|?|\n|female|\n|?|\n|male|\n|male|\n|?|\n|male|\n|male|\n|?|\n|male|\n|male|\n|male|\n|?|\n|male|\n|nan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"gender\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test38399"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|GNIS|\n|National Atlas|\n|ESRI\u00ae Data & Maps 2006|\n|ESRI\u00ae Data & Maps 2006|\n|ESRI\u00ae Data & Maps 2006|\n|ESRI\u00ae Data & Maps 2006|\n|ESRI\u00ae Data & Maps 2006|\n|ESRI\u00ae Data & Maps 2006|\n|ESRI\u00ae Data & Maps 2006|\n|HAZUS-MH 1.1|\n|HAZUS-MH 1.1|\n|BasinPro 8|\n|National Transportation Atlas Databases (NTAD) 2004|\n|National Transportation Atlas Databases (NTAD) 2004|\n|ESRI\u00ae Data & Maps 2004|\n|ESRI\u00ae Data & Maps 2004|\n|ESRI\u00ae Data & Maps 2004|\n|ESRI\u00ae Data & Maps 2004|\n|ESRI\u00ae Data & Maps 2004|\n|ESRI\u00ae Data & Maps 2004|\n|NC OneMap - 3\/12\/2007|\n|National Transportation Atlas Database|\n|National Transportation Atlas Database|\n|NCDOT|\n|National Transportation Atlas Database|\n|ESRI Data 2000|\n|ESRI TIGER 2000R|\n|Census TIGER 2000R|\n|ESRI Data 2000|\n|Dynamap\/2000|\n|CGIA|\n|CGIA|\n|ArcAtlas|\n|TIGER 95|\n|TIGER 95|\n|TIGER 95|\n|Digital Chart of the World|\n|Digital Chart of the World|\n|HAZUS|\n|HAZUS|\n|CGIA|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"collection\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test38479"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|@help|\n|@type EXPR or ':t' EXPR|\n|@kind TYPECONSTRUCTOR|\n|@run EXPR or '>' EXPR|\n|@pl FUNCTION|\n|@pointful FUNCTION or '@unpl' FUNCTION|\n|@tell -- same as @ask|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"command\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test38661"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|AS|\n|REMI|\n|LAPS|\n|FP|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"code\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test38730"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Imperial|\n|Imperial|\n|Imperial|\n|Imperial|\n|Imperial|\n|Imperial|\n|Imperial|\n|Imperial|\n|Imperial|\n|Imperial|\n|Imperial|\n|Imperial|\n|Imperial|\n|Imperial|\n|Imperial|\n|Imperial|\n|Imperial|\n|Imperial|\n|Imperial|\n|Imperial|\n|Imperial|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"county\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test38857"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Crafting Material|\n|Crafting Material|\n|Crafting Material|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"type\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test38907"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|0.02002|\n|0.0|\n|0.02532|\n|0.0|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"position\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test39203"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Alanis Morissette|\n|Talking Heads|\n|Faith No More|\n|Fiona Apple|\n|Genesis|\n|Madonna|\n|Duran Duran|\n|MC Hammer|\n|Guns N' Roses|\n|Beck|\n|Sin\u00e9ad O'Connor|\n|Billy Idol|\n|Madonna|\n|Don Henley|\n|Lenny Kravitz|\n|Van Halen|\n|Bj\u00f6rk|\n|Cher|\n|Aerosmith|\n|Jane's Addiction|\n|Twisted Sister|\n|Cyndi Lauper|\n|D'Angelo|\n|Tom Petty|\n|DJ Jazzy Jeff & The Fresh Prince|\n|David Lee Roth|\n|Madonna|\n|Godley & Creme|\n|Michael Jackson|\n|Janet Jackson|\n|Billy Joel|\n|Red Hot Chili Peppers|\n|Michael Jackson|\n|The Police|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"artist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test3924"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Federal government (OES designation)|\n|Fabric mills|\n|Drycleaning and laundry services|\n|Other textile product mills|\n|Textile furnishings mills|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"industry\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test39379"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|34.9|\n|32.3|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"weight\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test39380"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Unavailable|\n|Unavailable|\n|Unavailable|\n|Full|\n|Unavailable|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"status\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test39496"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1.0|\n|2.0|\n|3.0|\n|4.0|\n|5.0|\n|nan|\n|7.0|\n|8.0|\n|9.0|\n|10.0|\n|11.0|\n|12.0|\n|13.0|\n|14.0|\n|15.0|\n|16.0|\n|17.0|\n|18.0|\n|19.0|\n|20.0|\n|21.0|\n|22.0|\n|23.0|\n|24.0|\n|25.0|\n|26.0|\n|27.0|\n|28.0|\n|29.0|\n|30.0|\n|31.0|\n|32.0|\n|33.0|\n|34.0|\n|35.0|\n|36.0|\n|37.0|\n|38.0|\n|39.0|\n|40.0|\n|41.0|\n|42.0|\n|43.0|\n|44.0|\n|45.0|\n|46.0|\n|47.0|\n|48.0|\n|49.0|\n|50.0|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"rank\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test39826"}}
{"prompt":null,"completion":"{\"chosen_semantic_type\": \"area\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test39868"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Last 7 Games|\n|Last 15 Games|\n|Last 30 Games|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"duration\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test39995"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|F|\n|F|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"sex\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test40029"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|2015 Easton XL1 Senior League -5 Baseball Bat: SL15X15|\n|Marucci Elite Senior League Baseball Bat: MSBE145|\n|2015 Marucci Elite Limited Senior League Baseball Bat: MSBE5|\n|2015 Axe Elite Senior League Baseball Bat: L133B|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"product\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test40079"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|CRCA|\n|CRCA|\n|CRCA|\n|CRCA|\n|CRCA|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team Name\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test40252"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|PDF (580K)|\n|Complete Source PDF (6.3M)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"format\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test40254"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|APIACEAE|\n|APIACEAE|\n|APIACEAE|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"family\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test40315"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Chungcheongnam-do|\n|Chungcheongnam-do|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"region\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test40673"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|AS|\n|FPAY|\n|FPAY|\n|REMI|\n|FPAY|\n|SULP|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"code\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test40993"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|FORG|\n|SMS|\n|BSSC|\n|TOC|\n|BOCA|\n|WEST|\n|ADMS|\n|TOC|\n|DCM|\n|UNAT|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"club\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test41269"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|11-2031.00|\n|11-3011.00|\n|11-3131.00|\n|11-9031.00|\n|11-9032.00|\n|11-9033.00|\n|11-9039.00|\n|11-9039.01|\n|11-9039.02|\n|13-1131.00|\n|13-1151.00|\n|13-1199.00|\n|13-1199.01|\n|13-1199.02|\n|13-1199.03|\n|13-1199.04|\n|13-1199.05|\n|13-1199.06|\n|13-2031.00|\n|13-2071.00|\n|13-2071.01|\n|15-1111.00|\n|15-1141.00|\n|15-1142.00|\n|15-1151.00|\n|15-2021.00|\n|15-2041.00|\n|15-2041.01|\n|15-2041.02|\n|19-1011.00|\n|19-1013.00|\n|19-1021.00|\n|19-1022.00|\n|19-1029.00|\n|19-1029.01|\n|19-1029.02|\n|19-1029.03|\n|19-1041.00|\n|19-1042.00|\n|19-1099.00|\n|19-2011.00|\n|19-2012.00|\n|19-2021.00|\n|19-2032.00|\n|19-2099.00|\n|19-2099.01|\n|19-3022.00|\n|19-3031.00|\n|19-3031.01|\n|19-3031.02|\n|19-3031.03|\n|19-3032.00|\n|19-3041.00|\n|19-3094.00|\n|19-3099.00|\n|19-3099.01|\n|19-4011.00|\n|19-4011.01|\n|19-4011.02|\n|19-4021.00|\n|19-4061.00|\n|19-4061.01|\n|19-4099.00|\n|19-4099.01|\n|19-4099.02|\n|19-4099.03|\n|21-1012.00|\n|21-1019.00|\n|21-1021.00|\n|21-1099.00|\n|25-1011.00|\n|25-1021.00|\n|25-1022.00|\n|25-1031.00|\n|25-1032.00|\n|25-1041.00|\n|25-1042.00|\n|25-1043.00|\n|25-1051.00|\n|25-1052.00|\n|25-1053.00|\n|25-1054.00|\n|25-1061.00|\n|25-1062.00|\n|25-1063.00|\n|25-1064.00|\n|25-1065.00|\n|25-1066.00|\n|25-1067.00|\n|25-1069.00|\n|25-1071.00|\n|25-1072.00|\n|25-1081.00|\n|25-1082.00|\n|25-1111.00|\n|25-1112.00|\n|25-1113.00|\n|25-1121.00|\n|25-1122.00|\n|25-1123.00|\n|25-1124.00|\n|25-1125.00|\n|25-1126.00|\n|25-1191.00|\n|25-1192.00|\n|25-1193.00|\n|25-1194.00|\n|25-1199.00|\n|25-2011.00|\n|25-2012.00|\n|25-2021.00|\n|25-2022.00|\n|25-2023.00|\n|25-2031.00|\n|25-2032.00|\n|25-2051.00|\n|25-2052.00|\n|25-2053.00|\n|25-2054.00|\n|25-2059.00|\n|25-2059.01|\n|25-3011.00|\n|25-3021.00|\n|25-3099.00|\n|25-3099.02|\n|25-4011.00|\n|25-4012.00|\n|25-4013.00|\n|25-4021.00|\n|25-4031.00|\n|25-9011.00|\n|25-9021.00|\n|25-9031.00|\n|25-9031.01|\n|25-9041.00|\n|25-9099.00|\n|27-2022.00|\n|27-2023.00|\n|27-2032.00|\n|27-2041.00|\n|27-2041.01|\n|27-2041.04|\n|27-3031.00|\n|27-3091.00|\n|27-3099.00|\n|27-4011.00|\n|29-1122.00|\n|29-1122.01|\n|29-1127.00|\n|29-1161.00|\n|29-1181.00|\n|29-9091.00|\n|29-9099.00|\n|29-9099.01|\n|33-3041.00|\n|33-9091.00|\n|33-9099.00|\n|33-9099.02|\n|35-2012.00|\n|35-9099.00|\n|37-1011.00|\n|37-2011.00|\n|37-3019.00|\n|39-3099.00|\n|39-9011.00|\n|39-9011.01|\n|39-9041.00|\n|41-9012.00|\n|43-4111.00|\n|43-4121.00|\n|43-4199.00|\n|43-6011.00|\n|43-6014.00|\n|43-9022.00|\n|43-9061.00|\n|43-9111.00|\n|43-9111.01|\n|43-9199.00|\n|51-8021.00|\n|53-2012.00|\n|53-3022.00|\n|53-6061.00|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"code\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test41276"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Augusta|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"city\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test41445"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Justin Masterson|\n|Jamey Wright (H, 1)|\n|Tony Sipp (H, 1)|\n|Joe Smith (BS, 1)|\n|Rafael Perez|\n|Jensen Lewis (W, 1-0)|\n|Chris Perez (S, 2)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"name\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test4167"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Tiger|\n|Jeste|\n|Bruin|\n|Tiger|\n|Flyer|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test41676"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Government Intranet Service|\n|Monthly Govt procurement card bill|\n|Switches and firewall support|\n|Pension administration|\n|Grant payment|\n|Design for web services|\n|Legislation iteration|\n|Legislation iteration|\n|Legislation iteration|\n|Legislation iteration|\n|Legislation iteration|\n|Legislation iteration|\n|Library subsidy|\n|Legislation cloud iteration|\n|Legislation cloud iteration|\n|IT consultancy|\n|Professional fees|\n|Facilities management monthly fee|\n|Record storage space|\n|Legislation operating costs|\n|Business rates|\n|Energy|\n|IT equipment|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"description\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test41701"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Colonna Extra Virgin Olive Oil|\n|Balsamic Vinegar of Reggio Emilia, Yellow Label|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"product\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test41867"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Wearing Someone Else's Clothes|\n|Wearing Someone Else's Clothes|\n|Songs for a New World|\n|Wearing Someone Else's Clothes|\n|Wearing Someone Else's Clothes|\n|Wearing Someone Else's Clothes|\n|Wearing Someone Else's Clothes|\n|Jason Robert Brown Plays Jason Robert Brown - Women's Edition|\n|Wearing Someone Else's Clothes|\n|Jason Robert Brown Plays Jason Robert Brown - Women's Edition|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"album\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test41885"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|umich.edu|\n|comcast.net|\n|sbcglobal.net|\n|charter.com|\n|rr.com|\n|ameritech.net|\n|wideopenwest.com|\n|141.211|\n|verizon.net|\n|71|\n|76|\n|optonline.net|\n|qwest.net|\n|yahoo.net|\n|tds.net|\n|comcastbusiness.net|\n|aol.com|\n|12|\n|cox.net|\n|direcpc.com|\n|[not listed: 1,246 organisations]|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"organisation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test41972"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|The Best of Listen Vision Volume #2|\n|The Love Experience|\n|The Love Experience|\n|The Love Experience|\n|The Love Experience|\n|The Love Experience|\n|The Love Experience|\n|The Love Experience|\n|The Love Experience|\n|The Love Experience|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"album\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test41997"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|FR Doc.|\n|RIN|\n|MB Docket No.|\n|DA|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"type\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test42177"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|W 14-0|\n|T 7-7|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"result\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test42220"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|(4, 10)|\n|(11, 5)|\n|(10, 10)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"position\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test42629"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1993|\n|1995|\n|1999|\n|2000|\n|2001|\n|2002|\n|2003|\n|2004|\n|2005|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"year\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test4297"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Portland, ME|\n|Biddeford, ME|\n|Bangor, ME|\n|Bucksport, ME|\n|Old Orchard Beach, ME|\n|Portland, ME|\n|Augusta, ME|\n|Bridgton, ME|\n|Augusta, ME|\n|Scarborough, ME|\n|Lubec , ME|\n|Waldoboro, ME|\n|Rockland, ME|\n|Scarborough, ME|\n|Augusta, ME|\n|Rumford, ME|\n|Portland, ME|\n|Portland, ME|\n|Freeport, ME|\n|Houlton, ME|\n|Winthrop, ME|\n|Thomaston, ME|\n|Bridgton, ME|\n|Augusta, ME|\n|Bath, ME|\n|Bar Harbor, ME|\n|Freeport, ME|\n|Grand Lake Stream, ME|\n|Rockland, ME|\n|Augusta, ME|\n|Scarborough, ME|\n|Rumford, ME|\n|Portland, ME|\n|Portland, ME|\n|Rumford, ME|\n|Portland, ME|\n|Scarborough, ME|\n|Augusta, ME|\n|Rockland, ME|\n|Portland, ME|\n|Harrison, ME|\n|Kennebunk, ME|\n|Kennebunk, ME|\n|Portland, ME|\n|Camden, ME|\n|Presque Isle, ME|\n|Rangeley, ME|\n|Lisbon Falls, ME|\n|Kennebunk, ME|\n|Camden, ME|\n|Windham, ME|\n|Kittery, ME|\n|Lovell, ME|\n|Buxton, ME|\n|Kennebunk, ME|\n|Kennebunk, ME|\n|Belfast, ME|\n|Union, ME|\n|Berwick, ME|\n|Lincoln, ME|\n|Auburn, ME|\n|Portland, ME|\n|Rockland, ME|\n|South Portland, ME|\n|Farmington, ME|\n|Falmouth, ME|\n|South Portland, ME|\n|Bethel, ME|\n|Scarborough, ME|\n|Westbrook, ME|\n|Orono, ME|\n|Beach, ME|\n|Raymond, ME|\n|Biddeford, ME|\n|Portland, ME|\n|Portland, ME|\n|Rumford, ME|\n|Farmington, ME|\n|Gorham, ME|\n|Gorham, ME|\n|Cumberland, ME|\n|Westbrook, ME|\n|Rockland, ME|\n|Portland, ME|\n|Orono, ME|\n|Kittery, ME|\n|Kittery, ME|\n|Old Town, ME|\n|Brunswick, ME|\n|Scarborough, ME|\n|Biddeford, ME|\n|Beach, ME|\n|Augusta, ME|\n|Rumford, ME|\n|Brunswick, ME|\n|Falmouth, ME|\n|Augusta, ME|\n|Portland, ME|\n|Bethel, ME|\n|Portland, ME|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"city\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test43369"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|W 63-54|\n|L 54-68|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"result\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test4338"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|SBM|\n|TXLA|\n|NOVA|\n|SDSM|\n|ESMS|\n|GOLD|\n|FACT|\n|SYSM|\n|SDSM|\n|GSM|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"club\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test43417"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|strikeout|\n|strikeout|\n|third base to first base|\n|line drive out, shortstop|\n|strikeout|\n|strikeout|\n|strikeout|\n|third base to first base|\n|second base to first base|\n|walk|\n|third base to first base|\n|shortstop to first base|\n|single, center field|\n|double, left field|\n|strikeout|\n|out, left field|\n|error shortstop|\n|single, second base|\n|first base to shortstop to first base, ground ball double play|\n|second base to first base|\n|single, left field|\n|first base to shortstop to pitcher, ground ball double play|\n|out, center field|\n|single, left field|\n|line drive out, center field|\n|walk|\n|batter hit by pitch|\n|strikeout, C|\n|strikeout, C|\n|single, center field|\n|second base to first base, GDP#|\n|out, left field|\n|pop fly out, catcher|\n|single, center field|\n|batter hit by pitch|\n|single, right field|\n|walk|\n|single, second base|\n|walk|\n|strikeout, C|\n|single, center field|\n|first base to second base, sacrifice hit|\n|batter hit by pitch|\n|third base to second base to first base, ground ball double play|\n|walk|\n|first base to shortstop to first base, ground ball double play|\n|error second base (ground ball)|\n|shortstop to first base|\n|walk|\n|first base to first base, line drive double play|\n|third base to first base|\n|walk|\n|error second base (ground ball)|\n|pop fly out, second base|\n|second base to shortstop, force out|\n|out, center field|\n|single, left field|\n|double, right field|\n|pop fly out, second base|\n|out, left field|\n|out, right field|\n|strikeout|\n|bunted pop fly out, second base|\n|walk|\n|single, left field|\n|pop fly out, second base|\n|strikeout, C|\n|second base to first base|\n|single, left field|\n|out, center field|\n|out, left field|\n|pop fly out, second base|\n|single, left field|\n|out, center field|\n|single, center field|\n|second base to shortstop, force out|\n|double, left field|\n|second base to first base|\n|line drive out, left field|\n|line drive out, left field|\n|walk|\n|second base to first base|\n|double, left field|\n|out, center field|\n|single, left field|\n|strikeout|\n|pitcher to first base|\n|shortstop to first base|\n|single, center field|\n|out, second base|\n|pitcher to first base|\n|error third base|\n|strikeout, C|\n|second base to first base|\n|strikeout|\n|single, center field|\n|single, center field|\n|strikeout|\n|double, left field|\n|catcher to second base, sacrifice hit|\n|walk|\n|pitcher to first base, sacrifice hit|\n|single, center field|\n|strikeout|\n|walk|\n|walk|\n|strikeout, C|\n|intentional walk|\n|strikeout|\n|out, left field|\n|ground ball out, first base|\n|out, left field|\n|second base to pitcher|\n|second base to first base|\n|walk|\n|single, center field|\n|second base to first base|\n|single, left field|\n|strikeout|\n|strikeout, C|\n|pop fly out, second base|\n|pop fly out, shortstop|\n|out, center field|\n|single, right field|\n|single, left field|\n|single, center field|\n|strikeout|\n|double, left field|\n|C, E2|\n|pitcher to third base, force out|\n|second base to shortstop to first base, ground ball double play|\n|walk|\n|shortstop to shortstop to first base, line drive double play|\n|walk|\n|out, center field|\n|single, right field|\n|second base to first base, line drive double play|\n|out, right field|\n|second base to first base|\n|out, left field|\n|out, right field|\n|out, left field|\n|second base to first base|\n|second base to first base|\n|strikeout, C|\n|walk|\n|out, right field|\n|strikeout, C|\n|shortstop to first base|\n|pitcher to first base|\n|shortstop to first base|\n|out, first base|\n|second base to first base|\n|walk|\n|out, first base|\n|out, right field|\n|out, left field|\n|walk|\n|single,|\n|third base to first base|\n|out, right field|\n|walk|\n|out, center field|\n|out, first base|\n|walk|\n|first base to second base, force out, ground ball|\n|shortstop to second base, force out, ground ball|\n|strikeout|\n|walk|\n|out, center field|\n|double,|\n|walk|\n|out, left field|\n|walk|\n|pitcher to first base|\n|shortstop to first base|\n|shortstop to first base|\n|strikeout|\n|out, third base|\n|out, right field|\n|shortstop to first base|\n|strikeout|\n|out, left field|\n|FL out, catcher|\n|out, left field|\n|out, center field|\n|single,|\n|single,|\n|single,|\n|second base to first base, double play|\n|shortstop to first base|\n|home run|\n|walk|\n|walk|\n|strikeout|\n|FL out, first base|\n|single,|\n|single,|\n|pitcher to first base|\n|walk|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"result\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test43642"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Florida|\n|Ball State|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test43956"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|UNAT|\n|RMM|\n|NEM|\n|MINN|\n|PALM|\n|WILD|\n|LMS|\n|O*H*|\n|AMS|\n|METR|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"club\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test44427"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"sex\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test44689"}}
{"prompt":null,"completion":"{\"chosen_semantic_type\": \"address\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test44722"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|CA|\n|FL|\n|FL|\n|FL|\n|FL|\n|FL|\n|AL|\n|GA|\n|TN|\n|TN|\n|NC|\n|VA|\n|PA|\n|PA|\n|IA|\n|MO|\n|MO|\n|SD|\n|WI|\n|OH|\n|NJ|\n|IN|\n|IN|\n|OK|\n|NE|\n|TX|\n|Derbyshire|\n|PA|\n|BC|\n|AB|\n|AB|\n|ON|\n|SK|\n|MB|\n|MN|\n|ON|\n|QC|\n|ON|\n|PA|\n|CT|\n|NY|\n|NY|\n|MA|\n|VA|\n|NJ|\n|NY|\n|ON|\n|IL|\n|IN|\n|MI|\n|OK|\n|TX|\n|TX|\n|NM|\n|NM|\n|CO|\n|UT|\n|ID|\n|WA|\n|WA|\n|WA|\n|WA|\n|WA|\n|CA|\n|CA|\n|AZ|\n|CA|\n|RJ|\n|C|\n|RM|\n|Dif|\n|NV|\n|Lnd|\n|Yorkshire|\n|Lancashire|\n|W Mids|\n|Glg|\n|Nwp|\n|Nwp|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"state\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test44816"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Seafoam Islands (B2f)|\n|Seafoam Islands (B4f)|\n|Cerulean Cave (B1f)|\n|Cerulean Cave (1f)|\n|Route 23|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"area\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test44817"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Japan|\n|North America|\n|Europe|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"region\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test4489"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Texas\u00a0|\n|California\u00a0|\n|Florida\u00a0|\n|Pennsylvania\u00a0|\n|Illinois\u00a0|\n|Georgia\u00a0|\n|Arizona\u00a0|\n|North Carolina\u00a0|\n|New York\u00a0|\n|Tennessee\u00a0|\n|South Carolina\u00a0|\n|Missouri\u00a0|\n|Ohio\u00a0|\n|Alabama\u00a0|\n|Louisiana\u00a0|\n|Michigan\u00a0|\n|Mississippi\u00a0|\n|Wisconsin\u00a0|\n|Virginia\u00a0|\n|Indiana\u00a0|\n|New Jersey\u00a0|\n|Washington\u00a0|\n|Kentucky\u00a0|\n|Arkansas\u00a0|\n|Oklahoma\u00a0|\n|Maryland\u00a0|\n|Colorado\u00a0|\n|Oregon\u00a0|\n|Minnesota\u00a0|\n|Nevada\u00a0|\n|Kansas\u00a0|\n|Massachusetts\u00a0|\n|New Mexico\u00a0|\n|West Virginia\u00a0|\n|Iowa\u00a0|\n|Connecticut\u00a0|\n|Montana\u00a0|\n|Idaho\u00a0|\n|Nebraska\u00a0|\n|South Dakota\u00a0|\n|Wyoming\u00a0|\n|Hawaii\u00a0|\n|Maine\u00a0|\n|Utah\u00a0|\n|New Hampshire\u00a0|\n|Delaware\u00a0|\n|North Dakota\u00a0|\n|Rhode Island\u00a0|\n|Vermont\u00a0|\n|Alaska\u00a0|\n|Dist of Columbia|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"state\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test4494"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|GOLD SHS|\n|SHS|\n|COM|\n|7-10 Y TR BD ETF|\n|CL A|\n|COM|\n|COM|\n|COM NEW|\n|SHS CL A|\n|ORD SHS|\n|COM|\n|COM|\n|TR UNIT|\n|COM SHS|\n|SHS|\n|CL A|\n|CL C|\n|COM|\n|20+ YR TR BD ETF|\n|COM|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"class\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test45015"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|LAM|\n|FORG|\n|GISA|\n|MAC|\n|HLJ|\n|HLJ|\n|ULT|\n|NMMS|\n|RMM|\n|SCAQ|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"club\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test45064"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|User profiles in the database|\n|Meetings in the database|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"component\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test45155"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Episode 13 \u00e2\u20ac\u201c 14 (guest) Episode 18 \u00e2\u20ac\u201c 25 (regular)|\n|Episode 1 \u00e2\u20ac\u201c 41 (regular) Episode 66 (guest) Episode 71, 97, 251 (cameo)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"duration\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test45236"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1|\n|8T|\n|13|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"rank\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test45508"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Endulge Bar Chocolate Caramel Mousse|\n|Endulge Bar Caramel Nut Chew|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"product\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test4557"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|MTB Regional B|\n|MTB National B|\n|Rider's total points|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"category\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test45669"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|5:54|\n|7:00|\n|4:29|\n|3:27|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"duration\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test45862"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|CAL-MAINE F\u2026|\n|TALLGRASS E\u2026|\n|TESSCO TECH\u2026|\n|SIMULATIONS\u2026|\n|GUESS? INC|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test45903"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Afghanistan|\n|Argentina|\n|Austria|\n|Brazil|\n|China|\n|Colombia|\n|Cuba|\n|Egypt|\n|France|\n|Germany|\n|India|\n|Israel|\n|Italy|\n|Japan|\n|Malaysia|\n|Mexico|\n|Morocco|\n|Norway|\n|Pakistan|\n|Paraguay|\n|Portugal|\n|South Africa|\n|Sri Lanka|\n|Turkey|\n|United Arab Emirates|\n|United Kingdom|\n|United States|\n|Uruguay|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test46649"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Denmark|\n|Finland|\n|Canada|\n|Sweden|\n|Switzerland|\n|Austria|\n|France|\n|Norway|\n|Belgium|\n|Portugal|\n|Iceland|\n|Netherlands|\n|Estonia|\n|Czech Republic|\n|Israel|\n|Ireland|\n|New Zealand|\n|Slovenia|\n|United States|\n|Russia|\n|Spain|\n|Poland|\n|Germany|\n|Hungary|\n|Mexico|\n|Brazil|\n|United Kingdom|\n|Australia|\n|India|\n|Slovakia|\n|Italy|\n|South Korea|\n|Japan|\n|Indonesia|\n|Chile |\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test46867"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Last 7 Games|\n|Last 15 Games|\n|Last 30 Games|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"duration\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test46981"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Roanoke-Lynchburg, VA (USA)|\n|Washington, DC (USA)|\n|New York, NY (USA)|\n|Los Angeles, CA (USA)|\n|San Francisco, CA (USA)|\n|Bangalore (India)|\n|New Delhi (India)|\n|Richmond-Petersburg, VA (USA)|\n|Philadelphia, PA (USA)|\n|Dallas-Fort Worth, TX (USA)|\n|Madras (India)|\n|Norfolk-Portsmouth, VA (USA)|\n|Hyderabad (India)|\n|Lagos (Nigeria)|\n|Atlanta, GA (USA)|\n|Seattle-Tacoma, WA (USA)|\n|London (Great Britain (UK))|\n|Dhaka (Bangladesh)|\n|Lahore (Pakistan)|\n|Chicago, IL (USA)|\n|Orlando, FL (USA)|\n|Bombay (India)|\n|Jaipur (India)|\n|Houston, TX (USA)|\n|Charlottesville, VA (USA)|\n|Baltimore, MD (USA)|\n|Raleigh-Durham, NC (USA)|\n|Charlotte, NC (USA)|\n|Miami, FL (USA)|\n|Beijing (China)|\n|Chandigarh (India)|\n|Kansas City, MO (USA)|\n|Boston, MA (USA)|\n|San Diego, CA (USA)|\n|Delhi (India)|\n|Cleveland, OH (USA)|\n|Hartford, CT (USA)|\n|Albany-Schenectady-Troy, NY (USA)|\n|Salt Lake City, UT (USA)|\n|Denver, CO (USA)|\n|Kampala (Uganda)|\n|M\u00fcllheim (Germany)|\n|Phoenix, AZ (USA)|\n|Austin, TX (USA)|\n|Ahmadabad (India)|\n|Greensboro, NC (USA)|\n|Kuala Lumpur (Malaysia)|\n|Islamabad (Pakistan)|\n|Detroit, MI (USA)|\n|Tampa, FL (USA)|\n|Karachi (Pakistan)|\n|Knoxville, TN (USA)|\n|Jakarta (Indonesia)|\n|Sacramento, CA (USA)|\n|Bangkok (Thailand)|\n|Portland, OR (USA)|\n|Nairobi (Kenya)|\n|Tehran (Iran (Islamic Republic of))|\n|Harrisonburg, VA (USA)|\n|Ispra (Italy)|\n|Calcutta (India)|\n|Indianapolis, IN (USA)|\n|Minneapolis-St Paul, MN (USA)|\n|Indore (India)|\n|Pune (India)|\n|Kottayam (India)|\n|Santa Barbara, CA (USA)|\n|Yogyakarta (Indonesia)|\n|Cape Town (South Africa)|\n|West Palm Beach, FL (USA)|\n|Kharagpur (India)|\n|Greenville-Spartenburg, SC (USA)|\n|Cebu (Philippines)|\n|Albuquerque, NM (USA)|\n|Toronto, ON (Canada)|\n|Riyadh (Saudi Arabia)|\n|Istanbul (Turkey)|\n|Dubai (United Arab Emirates)|\n|Athens (Greece)|\n|Grand Rapids, MI (USA)|\n|Auckland (New Zealand (Aotearoa))|\n|Singapore (Singapore)|\n|Madison, WI (USA)|\n|Colombo (Sri Lanka)|\n|Rochester, NY (USA)|\n|Brisbane (Australia)|\n|Columbus, OH (USA)|\n|Canberra (Australia)|\n|Munich (Germany)|\n|Surabaya (Indonesia)|\n|Milwaukee, WI (USA)|\n|Central District (Hong Kong)|\n|Huntsville, AL (USA)|\n|Colorado Springs, CO (USA)|\n|Wichita, KS (USA)|\n|Vancouver, BC (Canada)|\n|Hamburg (Germany)|\n|Paris (France)|\n|Sydney (Australia)|\n|Cairo (Egypt)|\n|Taipei (Taiwan)|\n|Bucharest (Romania)|\n|Hamilton, ON (Canada)|\n|Tel Aviv (Israel)|\n|Jeddah (Saudi Arabia)|\n|OTHER|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"city\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test47486"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Initial consultation|\n|Follow-up consultation|\n|Short follow-up consultation|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"service\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test4757"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|NC|\n|MS|\n|MS|\n|NC|\n|MS|\n|MS|\n|NC|\n|MS|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"type\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test47571"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Adult Fiction|\n|Adult Fiction--Mystery\/Detective|\n|Adult Fiction|\n|Adult Fiction|\n|Adult Fiction|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"location\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test47811"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|Deutsch|\n|English|\n|English|\n|English|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"language\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test47919"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Cobble Street Market Chicken Salad|\n|Cross Valley Farms Chicken Salad|\n|Cross Valley Farms Ham Salad|\n|Reser\u2019s Fine Foods White Meat Chicken Salad with Cranberries & Pecans|\n|Reser\u2019s Fine Foods Chicken Salad|\n|Reser\u2019s Fine Foods Ham Salad|\n|Reser\u2019s Fine Foods Ham Salad Supreme|\n|Millers Bar-B-Que Beans with Beef|\n|Reser\u2019s Fine Foods White Meat Chicken Salad|\n|Classic Chicken Salad|\n|Chef Solutions Cranberry Pecan White Meat Chicken Salad|\n|Stonemill Kitchens Loaded Potato Salad with Bacon|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"product\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test47926"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|EUR|\n|USD|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"currency\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test47966"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|format Hardcover|\n|format Hardcover|\n|format Hardcover|\n|format Hardcover|\n|format Paperback|\n|format Hardcover|\n|format Paperback|\n|format Hardcover|\n|format Hardcover|\n|format Hardcover|\n|format Hardcover|\n|format Paperback|\n|format Hardcover|\n|format Hardcover|\n|format Hardcover|\n|format Audio|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"format\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test4807"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|U.S. Commission on Security and Cooperation in Europe|\n|U.S. Commission on Security and Cooperation in Europe|\n|U.S. Department of State|\n|Ukrainian Embassy, Washington D.C.|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"affiliation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test48367"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|4-5|\n|PG|\n|PF|\n|2-3|\n|1-2|\n|2-3|\n|C|\n|PG|\n|C|\n|4-5|\n|PG|\n|SF|\n|4-5|\n|PG|\n|C|\n|C|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"position\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test48556"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|BUDGERIGAR|\n|BUDGERIGAR|\n|CHICKEN|\n|CHICKEN|\n|COCKATOO|\n|COCKATOO|\n|COCKATOO|\n|DUNLIN|\n|EAGLE|\n|EAGLE|\n|EAGLE|\n|FALCON|\n|FALCON|\n|FALCON|\n|FINCH|\n|MACAW|\n|MIXED_AVIAN_SPECIES|\n|MIXED_AVIAN_SPECIES|\n|PARROT|\n|PIGEON|\n|PIGEON|\n|PIGEON|\n|PIGEON|\n|PIGEON|\n|STORK|\n|TURKEY|\n|VULTURE|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"species\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test48597"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Giant Chasm|\n|Giant Chasm (Forest Cave)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"area\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test48833"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Oswestry, Shropshire, SY10 Full Address|\n|Birmingham, West Midlands, B20 Full Address|\n|Birmingham, West Midlands, B16 Full Address|\n|Tranent, East Lothian, EH33 Full Address|\n|Larne, County Antrim, BT40 Full Address|\n|Newcastle Upon Tyne, Tyne And Wear, NE16 Full Address|\n|Johnstone, Renfrewshire, PA6 Full Address|\n|Oldham, Lancashire, OL1 Full Address|\n|Kidderminster, Worcestershire, DY11 Full Address|\n|Liverpool, Merseyside, L15 Full Address|\n|Swindon, Wiltshire, SN5 Full Address|\n|Eastleigh, Hampshire, SO50 Full Address|\n|Gosport, Hampshire, PO12 Full Address|\n|Aberdeen, Aberdeenshire, AB12 Full Address|\n|Bicester, Oxfordshire, OX26 Full Address|\n|Uxbridge, Middlesex, UB10 Full Address|\n|Horsham, West Sussex, RH13 Full Address|\n|London, London, SE7 Full Address|\n|Brighton, East Sussex, BN1 Full Address|\n|Bognor Regis, West Sussex, PO21 Full Address|\n|Brentwood, Essex, CM14 Full Address|\n|Larne, County Antrim, BT40 Full Address|\n|Leeds, West Yorkshire, LS19 Full Address|\n|London, London, SW19 Full Address|\n|Ivybridge, Devon, PL21 Full Address|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"address\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test49126"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Evita (Original 1979 Cast Recording)|\n|The Secret Garden: The Original Broadway Cast Album|\n|Experiment|\n|Experiment|\n|Evita (Original 1979 Cast Recording)|\n|Experiment|\n|Mandy Patinkin|\n|Mandy Patinkin|\n|Mandy Patinkin Sings Sondheim|\n|Oscar & Steve|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"album\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test49251"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Mr C D Binge +|\n|Mr B M Phillips|\n|Miss K Clarke|\n|Mr F A Baker +|\n|Mr D W Callow +|\n|The Mavericks|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"owner\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test49273"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|General|\n|Web portal integration|\n|Degraded mode|\n|Concurrent users|\n|General response time to user input|\n|No extra application engineering|\n|IT friendly documentation|\n|Browser default settings|\n|Attributino and copyright notices|\n|Graphics|\n|Retreive TGML graphics|\n|Navigate using graphics|\n|Link to other objects|\n|Link to other web pages|\n|open link choice|\n|No applet reloading|\n|Context menus|\n|Read data from server|\n|Optimization|\n|View live data|\n|Subscriptions|\n|Set object property using default method|\n|Set object property using Javascript method|\n|Date and Time support|\n|Complexity|\n|Favourites and shortcuts|\n|Shortcut to workspace|\n|Save shorcut to workspace|\n|View shortcuts of workspace|\n|Shortcut to specific panel\/component|\n|Save shortcut to specific panel\/component|\n|View shortcut to a specific panel\/component|\n|Authority check|\n|Logon|\n|Logon screen focus|\n|Logon to workspace display time|\n|First time logon - time no more than 30 seconds|\n|Component progress indicator|\n|Subsequent logon - time no more than 1 second|\n|Logon authentication|\n|Log on screen design|\n|Remember me functionality|\n|Domain textbox behaviour|\n|Credentials TAC and Windows|\n|Guest login|\n|Workspaces|\n|Reduced workspace in thin client|\n|Thin client configured workspace|\n|Change current workspace|\n|Change local default workspace|\n|Save local workspace layout|\n|Tree navigation|\n|Navigation|\n|Icons in tree|\n|Renaming objects|\n|Alarms|\n|Alarm Viewer|\n|View active alarms|\n|Polling alarm viewer|\n|Alarm Management|\n|Manage alarms|\n|Manage several alarms|\n|Self assign|\n|Assign|\n|Accept|\n|Reject|\n|Release|\n|Remove\/Add columns|\n|View history|\n|Alarm Configuration|\n|Trends|\n|Trend Viewer|\n|Display series|\n|Loading|\n|Display live data|\n|Scroll X-axis|\n|Basic properties|\n|Change calculator|\n|Appearance properties|\n|Axes properties|\n|Context menu|\n|Performance|\n|Event icons|\n|Hide series|\n|Remove logs|\n|Remove points|\n|Rename|\n|Hoovering|\n|Add points|\n|Add logs|\n|Save chart|\n|Create new|\n|Trend Log List|\n|Display Trend log|\n|Edit intervals|\n|Edit hysteresis|\n|Enable\/Disable|\n|Log list copy|\n|Edit record|\n|Open trendlog|\n|Add value|\n|Create trend logs|\n|Open trend|\n|Object View List|\n|Container Object View List|\n|Object Property View|\n|Design property references editor|\n|Design object references editor|\n|Set property|\n|Editor for StrictEnum|\n|Editor for RelaxedEnum|\n|Editor for BinaryEnum|\n|ReadOnly attibutes|\n|Schedules|\n|View schedules (specific date)|\n|View schedules (weekly)|\n|Update schedule value|\n|Remove value|\n|Add value|\n|Server Settings|\n|HTTPS Server|\n|HTTP Server port|\n|SSL|\n|Event viewer|\n|Copy, cut and paste|\n|View History|\n|Change meter|\n|Searching|\n|Simple search|\n|Object access Authority|\n|Property Type search|\n|Object Name search|\n|Property Filter|\n|Object path search|\n|Object type search|\n|Saving search criteria|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"requirement\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test49572"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|BLND|\n|DEAF|\n|WCHR|\n|WCHS|\n|WCHC|\n|WCMP|\n|WCBD|\n|Blindenhund|\n|BAG|\n|BAG (BM)|\n|BAG 2 - 5|\n|XBA\/XMA|\n|XBB-XBE\/MBXME|\n|SKI|\n|WEA|\n|GOLF|\n|BIKE|\n|SPEQ|\n|ADD|\n|RBK|\n|NC1|\n|PETC|\n|TAFR|\n|TAFG|\n|INF|\n|UM|\n|Kinderwagen|\n|SEF|\n|SEF|\n|SEF|\n|SEF|\n|CBF|\n|CXL\/RBK flex|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"service\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test49715"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|25|\n|25|\n|1|\n|2|\n|25|\n|6|\n|25|\n|25 (Inherited)|\n|25|\n|0.169|\n|0.14|\n|25 (Inherited)|\n|25 (Inherited)|\n|25 (Inherited)|\n|25 (Inherited)|\n|25 (Inherited)|\n|25 (Inherited)|\n|25 (Inherited)|\n|25 (Inherited)|\n|25 (Inherited)|\n|25 (Inherited)|\n|25 (Inherited)|\n|0.239|\n|0.091|\n|0.246|\n|25|\n|25 (Inherited)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"range\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test49815"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Reassigned to Syracuse|\n|Recalled by Tampa Bay Lightning|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"description\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test49948"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Identifier of the agreement.|\n|State of the agreement. Possible values are Active, Pending, Expired, Suspend, Reactivate, and Cancel.|\n|Name of the agreement.|\n|Description of the agreement.|\n|Start date of the agreement. Date format yyyy-MM-dd z, as defined in ISO8601.|\n|Details of the agreement.|\n|Details of the buyer who is enrolling in this agreement. This information is gathered from execution of the approval URL.|\n|Shipping address object of the agreement, which should be provided if it is different from the default address.|\n|Default merchant preferences from the billing plan are used, unless override preferences are provided here.|\n|Array of override_charge_model for this agreement if needed to change the default models from the billing plan.|\n|Plan details for this agreement.|\n|Date and time that this resource was created. Date format yyyy-MM-dd z, as defined in ISO8601.|\n|Date and time that this resource was updated. Date format yyyy-MM-dd z, as defined in ISO8601.|\n|HATEOAS links related to this call.|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"description\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test49953"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Adams|\n|Allen|\n|Bartholomew|\n|Benton|\n|Blackford|\n|Boone|\n|Brown|\n|Carroll|\n|Cass|\n|Clark|\n|Clay|\n|Clinton|\n|Crawford|\n|Daviess|\n|Dearborn|\n|Decatur|\n|DeKalb|\n|Delaware|\n|Dubois|\n|Elkhart|\n|Fayette|\n|Floyd|\n|Fountain|\n|Franklin|\n|Fulton|\n|Gibson|\n|Grant|\n|Greene|\n|Hamilton|\n|Hancock|\n|Harrison|\n|Hendricks|\n|Henry|\n|Howard|\n|Huntington|\n|Jackson|\n|Jasper|\n|Jay|\n|Jefferson|\n|Jennings|\n|Johnson|\n|Knox|\n|Kosciusko|\n|LaGrange|\n|Lake|\n|LaPorte|\n|Lawrence|\n|Madison|\n|Marion|\n|Marshall|\n|Martin|\n|Miami|\n|Monroe|\n|Montgomery|\n|Morgan|\n|Newton|\n|Noble|\n|Ohio|\n|Orange|\n|Owen|\n|Parke|\n|Perry|\n|Pike|\n|Porter|\n|Posey|\n|Pulaski|\n|Putnam|\n|Randolph|\n|Ripley|\n|Rush|\n|Scott|\n|Shelby|\n|Spencer|\n|St. Joseph|\n|Starke|\n|Steuben|\n|Sullivan|\n|Switzerland|\n|Tippecanoe|\n|Tipton|\n|Union|\n|Vanderburgh|\n|Vermillion|\n|Vigo|\n|Wabash|\n|Warren|\n|Warrick|\n|Washington|\n|Wayne|\n|Wells|\n|White|\n|Whitley|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"county\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test50023"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|\\HELP|\n|\\SYS|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"location\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test50129"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Auckland|\n|Bay of Plenty|\n|Canterbury|\n|Gisborne|\n|Hawke's Bay|\n|Manawatu-Wanganui|\n|Marlborough|\n|Nelson|\n|Northland|\n|Otago|\n|Southland|\n|Taranaki|\n|Tasman|\n|Waikato|\n|Wellington|\n|ZZZ|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"region\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test50170"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Brazil|\n|nan|\n|United States|\n|Argentina|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"origin\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test50270"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Fitness|\n|Fitness|\n|Fitness|\n|Messaging|\n|Sports|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"category\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test50492"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Stalled|\n|Want to Read|\n|Reading|\n|Stalled|\n|Reading|\n|Read|\n|Read|\n|Read|\n|Want to Read|\n|Stalled|\n|Read|\n|Want to Read|\n|Stalled|\n|Read|\n|Read|\n|Read|\n|Want to Read|\n|Read|\n|Stalled|\n|Want to Read|\n|Reading|\n|Reading|\n|Want to Read|\n|Want to Read|\n|Dropped|\n|Read|\n|Want to Read|\n|Read|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"status\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test50607"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|BLND|\n|DEAF|\n|WCHR|\n|WCHS|\n|WCHC|\n|WCMP|\n|WCBD|\n|Blindenhund|\n|BAG|\n|BAG (BM)|\n|BAG 2 - 5|\n|XBA\/XMA|\n|XBB-XBE\/MBXME|\n|SKI|\n|WEA|\n|GOLF|\n|BIKE|\n|SPEQ|\n|ADD|\n|RBK|\n|NC1|\n|PETC|\n|TAFR|\n|TAFG|\n|INF|\n|UM|\n|Kinderwagen|\n|SEF|\n|SEF|\n|SEF|\n|SEF|\n|CBF|\n|CXL\/RBK flex|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"service\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test50612"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Qt|\n|libz|\n|libbz2|\n|libxml2|\n|Clucene|\n|Exiv2|\n|FFMPEG|\n|DBus|\n|FAM|\n|Log4cxx|\n|CppUnit|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"requirement\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test50749"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|2008|\n|2009|\n|2008|\n|2009|\n|2008|\n|2009|\n|2008|\n|2008|\n|2009|\n|2008|\n|2009|\n|2008|\n|2009|\n|2008|\n|2009|\n|2008|\n|2009|\n|2008|\n|2009|\n|2008|\n|2009|\n|2008|\n|2009|\n|2008|\n|2009|\n|2008|\n|2009|\n|2008|\n|2008|\n|2009|\n|2008|\n|2009|\n|2008|\n|2009|\n|2008|\n|2009|\n|2008|\n|2009|\n|2009|\n|2008|\n|2009|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"year\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test50775"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|2|\n|2|\n|4|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"sales\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test50779"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Invalidated site: Commemorative projects at Somerleyton in Suffolk, England, birthplace of the Hovercraft, including the Hovercraft Column.|\n|Media added.|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"description\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test50782"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|316|\n|396|\n|267|\n|267|\n|237|\n|232|\n|352|\n|398|\n|310|\n|218|\n|255|\n|273|\n|148|\n|232|\n|222|\n|747|\n|219|\n|259|\n|277|\n|151|\n|293|\n|320|\n|206|\n|265|\n|301|\n|228|\n|326|\n|288|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"duration\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test50934"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Houses|\n|Flats|\n|All|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"type\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test5108"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Category B|\n|Category C|\n|Rider's total points|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"category\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test51476"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Adult|\n|Adult|\n|Adult|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"category\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test5156"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|3479|\n|3458|\n|7777-15|\n|7777-30|\n|3-3500W|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"code\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test51592"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|kenguest|\n|kenguest|\n|kenguest|\n|kenguest|\n|kenguest|\n|kenguest|\n|kenguest|\n|kenguest|\n|kenguest|\n|kenguest|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"creator\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test51613"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|W 24-10|\n|W 13-3|\n|W 13-3|\n|W 20-14|\n|W 20-14|\n|W 36-13|\n|W 36-13|\n|W 16-13|\n|W 16-13|\n|W 16-13|\n|W 31-14|\n|L 23-35|\n|W 20-10|\n|W 20-10|\n|W 52-10|\n|W 38-13|\n|L 10-20|\n|L 10-13|\n|L 10-21|\n|W 38-0|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"result\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test51818"}}
{"prompt":null,"completion":"{\"chosen_semantic_type\": \"name\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test51823"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Shawl\/Wrap|\n|Shawl\/Wrap|\n|Shawl\/Wrap|\n|Scarf|\n|Shawl\/Wrap|\n|Shawl\/Wrap|\n|Mittens\/Gloves|\n|Socks|\n|Shawl\/Wrap|\n|Scarf|\n|Mittens\/Gloves|\n|Scarf|\n|Scarf|\n|Scarf|\n|Scarf|\n|Shawl\/Wrap|\n|Scarf|\n|Scarf|\n|Shawl\/Wrap|\n|Shawl\/Wrap|\n|Hat|\n|Scarf|\n|Shawl\/Wrap|\n|Shawl\/Wrap|\n|Shawl\/Wrap|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"category\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test51917"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|9150 South Hills Boulevard, Suite 300 Cleveland, OH 44147-3506|\n|9150 South Hills Boulevard, Suite 300 Cleveland, OH 44147-3506|\n|2828 Euclid Ave Cleveland, OH 44115-2455|\n|1818 County Rd No 160 Winesburg, OH 44690-|\n|3469 Wadsworth Rd Norton, OH 44203-5118|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"address\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test51958"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Public Sector Unions|\n|Retired|\n|Health Professionals|\n|Lawyers\/Law Firms|\n|Hospitals\/Nursing Homes|\n|Real Estate|\n|Pharmaceuticals\/Health Products|\n|Misc Energy|\n|Clergy & Religious Organizations|\n|Lobbyists|\n|Insurance|\n|Misc Business|\n|Accountants|\n|Business Services|\n|Civil Servants\/Public Officials|\n|Food Processing & Sales|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"industry\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test51965"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|L'ann\u00e9e courante (par exemple 2010)|\n|Le mois courant (1, ..., 12)|\n|Le jour courant dans le mois|\n|Les heures de la date courante (0, ..., 23)|\n|Les minutes de la date courante|\n|Les secondes de la date courante|\n|Le jour de la semaine (\u00e0 partir de 0 pour dimanche)|\n|La date et heure au format 20101231235959|\n|La cha\u00eene contenant la version du serveur|\n|La date de la version de l'API (module magic number)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"description\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test5223"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Committee on Homeland Security and Governmental Affairs. Original measure reported to Senate by Senator Lieberman. Without written report.|\n|Placed on Senate Legislative Calendar under General Orders. Calendar No. 301.|\n|Motion to proceed to consideration of measure made in Senate.|\n|Cloture motion on the motion to proceed to the measure presented in Senate.|\n|Motion to proceed to measure considered in Senate.|\n|On Cloture on the Motion to Proceed S. 2038|\n|Motion to proceed to consideration of measure agreed to in Senate by Voice Vote.|\n|Amendment SA 1470 proposed by Senator Reid.|\n|Amendment SA 1471 proposed by Senator McCain to Amendment SA 1470.|\n|Amendment SA 1472 proposed by Senator Toomey to Amendment SA 1470.|\n|Amendment SA 1473 proposed by Senator Coburn to Amendment SA 1470.|\n|Amendment SA 1474 proposed by Senator Coburn to Amendment SA 1470.|\n|Amendment SA 1476 proposed by Senator Coburn to Amendment SA 1470.|\n|Amendment SA 1477 proposed by Senator Thune to Amendment SA 1470.|\n|Amendment SA 1478 proposed by Senator Brown OH to Amendment SA 1470.|\n|Amendment SA 1481 proposed by Senator Brown OH to Amendment SA 1470.|\n|Amendment SA 1482 proposed by Senator Reid for Senator Lieberman to Amendment SA 1470.|\n|Amendment SA 1483 proposed by Senator Leahy to Amendment SA 1470.|\n|Amendment SA 1484 proposed by Senator Paul to Amendment SA 1470.|\n|Amendment SA 1485 proposed by Senator Paul to Amendment SA 1470.|\n|Amendment SA 1487 proposed by Senator Paul to Amendment SA 1470.|\n|Amendment SA 1488 proposed by Senator DeMint to Amendment SA 1470.|\n|Amendment SA 1490 proposed by Senator Paul to Amendment SA 1470.|\n|Measure laid before Senate by unanimous consent.|\n|Motion to proceed to measure considered in Senate.|\n|Considered by Senate.|\n|Considered by Senate.|\n|Considered by Senate.|\n|Considered by Senate.|\n|Considered by Senate.|\n|Considered by Senate.|\n|Considered by Senate.|\n|Considered by Senate.|\n|Considered by Senate.|\n|Considered by Senate.|\n|Considered by Senate.|\n|Considered by Senate.|\n|Considered by Senate.|\n|Considered by Senate.|\n|Considered by Senate.|\n|Amendment SA 1489 proposed by Senator Boxer to Amendment SA 1470.|\n|Considered by Senate.|\n|Amendment SA 1491 proposed by Senator Shelby to Amendment SA 1470.|\n|Amendment SA 1492 proposed by Senator Tester to Amendment SA 1470.|\n|Amendment SA 1498 proposed by Senator Blumenthal to Amendment SA 1470.|\n|Amendment SA 1500 proposed by Senator Inhofe to Amendment SA 1470.|\n|Amendment SA 1503 proposed by Senator Tester to Amendment SA 1470.|\n|Considered by Senate.|\n|Considered by Senate.|\n|Considered by Senate.|\n|Amendment SA 1470 agreed to in Senate by Unanimous Consent.|\n|Considered by Senate.|\n|Amendment SA 1471 agreed to in Senate by Voice Vote.|\n|Considered by Senate.|\n|Considered by Senate.|\n|Considered by Senate.|\n|Considered by Senate.|\n|Considered by Senate.|\n|Considered by Senate.|\n|Considered by Senate.|\n|Considered by Senate.|\n|Amendment SA 1482 agreed to in Senate by Voice Vote.|\n|Considered by Senate.|\n|Amendment SA 1483 agreed to in Senate by Voice Vote.|\n|Considered by Senate.|\n|Considered by Senate.|\n|Considered by Senate.|\n|Considered by Senate.|\n|Considered by Senate.|\n|Amendment SA 1489 as modified agreed to in Senate by Voice Vote.|\n|Considered by Senate.|\n|Considered by Senate.|\n|Considered by Senate.|\n|Amendment SA 1493 proposed by Senator Grassley to Amendment SA 1470.|\n|Considered by Senate.|\n|Amendment SA 1498 agreed to in Senate by Voice Vote.|\n|Considered by Senate.|\n|Considered by Senate.|\n|Amendment SA 1505 proposed by Senator Gillibrand for Senator Portman to Amendment SA 1470.|\n|Amendment SA 1505 agreed to in Senate by Voice Vote.|\n|Amendment SA 1510 proposed by Senator Collins for Senator Enzi to Amendment SA 1470.|\n|Amendment SA 1510 agreed to in Senate by Voice Vote.|\n|Amendment SA 1511 proposed by Senator Gillibrand for Senator Lieberman to Amendment SA 1470.|\n|Proposed amendment SA 1474 withdrawn in Senate.|\n|Proposed amendment SA 1476 withdrawn in Senate.|\n|Proposed amendment SA 1477 withdrawn in Senate.|\n|Proposed amendment SA 1478 withdrawn in Senate.|\n|Proposed amendment SA 1485 withdrawn in Senate.|\n|Proposed amendment SA 1490 withdrawn in Senate.|\n|Proposed amendment SA 1492 withdrawn in Senate.|\n|Proposed amendment SA 1503 withdrawn in Senate.|\n|On the Amendment S.Amdt. 1484 to S.Amdt. 1470 to S. 2038 (Stop Trading on Congressional Knowledge Act of 2012)|\n|On the Amendment S.Amdt. 1487 to S.Amdt. 1470 to S. 2038 (Stop Trading on Congressional Knowledge Act of 2012)|\n|On the Amendment S.Amdt. 1511 to S.Amdt. 1470 to S. 2038 (Stop Trading on Congressional Knowledge Act of 2012)|\n|On the Amendment S.Amdt. 1491 to S.Amdt. 1470 to S. 2038 (Stop Trading on Congressional Knowledge Act of 2012)|\n|On the Amendment S.Amdt. 1472 to S.Amdt. 1470 to S. 2038 (Stop Trading on Congressional Knowledge Act of 2012)|\n|On the Amendment S.Amdt. 1500 to S.Amdt. 1470 to S. 2038 (Stop Trading on Congressional Knowledge Act of 2012)|\n|On the Amendment S.Amdt. 1473 to S.Amdt. 1470 to S. 2038 (Stop Trading on Congressional Knowledge Act of 2012)|\n|On the Amendment S.Amdt. 1488 to S.Amdt. 1470 to S. 2038 (Stop Trading on Congressional Knowledge Act of 2012)|\n|On the Amendment S.Amdt. 1493 to S.Amdt. 1470 to S. 2038 (Stop Trading on Congressional Knowledge Act of 2012)|\n|On the Amendment S.Amdt. 1481 to S.Amdt. 1470 to S. 2038 (Stop Trading on Congressional Knowledge Act of 2012)|\n|S. 2038 (112th): STOCK Act|\n|Message on Senate action sent to the House.|\n|Received in the House.|\n|Held at the desk.|\n|Mr. Smith (TX) moved to suspend the rules and pass the bill, as amended.|\n|Considered under suspension of the rules.|\n|DEBATE - The House proceeded with forty minutes of debate on S. 2038.|\n|Motion to reconsider laid on the table Agreed to without objection.|\n|Message on House action received in Senate and at desk: House amendment to Senate bill.|\n|S. 2038 (112th): STOCK Act|\n|Measure laid before Senate by unanimous consent.|\n|Motion by Senator Reid to concur in the House amendment to the bill (S. 2038) made in Senate.|\n|Motion by Senator Reid to concur in the House amendment to the bill (S. 2038) with an amendment (SA 1940) made in Senate.|\n|Motion by Senator Reid to refer to Senate Committee on Homeland Security and Governmental Affairs the House message on S. 2038 with instructions to report back forthwith with amendment (SA 1942) made in Senate.|\n|Amendment SA 1940 proposed by Senator Reid.|\n|Amendment SA 1941 proposed by Senator Reid to Amendment SA 1940.|\n|Amendment SA 1942 proposed by Senator Reid.|\n|Amendment SA 1943 proposed by Senator Reid to Amendment SA 1942 (the instructions of the motion to refer).|\n|Amendment SA 1944 proposed by Senator Reid to Amendment SA 1943.|\n|Cloture motion on the motion to concur in the House amendment to the bill (S. 2038) presented in Senate.|\n|Considered by Senate (Message from the House considered).|\n|Motion by Senator Reid to refer to Senate Committee on Homeland Security and Governmental Affairs the House message on S. 2038 with instructions to report back forthwith with amendment (SA 1942) fell when cloture invoked on the motion to concur in the House amendment to the bill (S. 2038) in Senate.|\n|Motion by Senator Reid to concur in the House amendment to the bill (S. 2038) with an amendment (SA 1940) withdrawn in Senate by Unanimous Consent.|\n|Senate agreed to House amendment to the bill (S. 2038) by Unanimous Consent.|\n|Considered by Senate.|\n|Considered by Senate.|\n|SA 1941 fell when SA 1940 withdrawn.|\n|Considered by Senate.|\n|SA 1942 fell when cloture invoked on the motion to concur in the House amendment to the bill (S. 2038).|\n|Considered by Senate.|\n|SA 1943 fell when SA 1942 fell.|\n|Considered by Senate.|\n|SA 1944 fell when SA 1943 fell.|\n|Proposed amendment SA 1940 withdrawn in Senate.|\n|On the Cloture Motion S. 2038|\n|Message on Senate action sent to the House.|\n|Presented to President.|\n|Signed by President.|\n|Became Public Law No: 112-105.|\n|By Senator Lieberman from Committee on Homeland Security and Governmental Affairs filed written report. Report No. 112-244.|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"description\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test52250"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Men|\n|Women|\n|Men|\n|Women|\n|Men|\n|Women|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"gender\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test52296"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|MotoGP|\n|250cc|\n|250cc|\n|250cc|\n|250cc|\n|125cc|\n|125cc|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"category\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test5251"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|ALL|\n|eq_ref|\n|eq_ref|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"type\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test52531"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|CVM|\n|UNAT|\n|ISF|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"club\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test52544"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|A|\n|A|\n|M|\n|A|\n|D15|\n|A|\n|A|\n|A|\n|M|\n|A|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"status\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test5270"}}
{"prompt":null,"completion":"{\"chosen_semantic_type\": \"region\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test52923"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Houses|\n|Flats|\n|All|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"type\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test53256"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|230g (8.11 oz)|\n|560g (19.75 oz)|\n|580g (20.45 oz)|\n|720g (25.39 oz)|\n|1.09kg (2.40 lb)|\n|2.20kg (4.85 lb)|\n|3.60kg (7.93 lb)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"weight\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test53289"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|33.2|\n|30.0|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"weight\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test5372"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Religious Freedom Project at the Berkley Center for Religion, Peace, and World Affairs|\n|University of Warwick|\n|Alliance Defending Freedom|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"affiliation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test53888"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|NJ|\n|NJ|\n|NJ|\n|NJ|\n|NJ|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"state\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test5408"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Commelinaceae|\n|Commelinaceae|\n|Commelinaceae|\n|Commelinaceae|\n|Commelinaceae|\n|Commelinaceae|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"family\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test54324"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Temptations|\n|Little Sister|\n|Stevie Wonder|\n|Jackson 5|\n|Cymande|\n|The Politicians|\n|Minnie Riperton|\n|Supremes|\n|The Impressions|\n|The Five Stairsteps ~ Don't Change Your Love ~ Ultimate Breaks & Beats Vol.25 ~ 1991|\n|Demon Fuzz|\n|Chairmen of the Board|\n|5th Dimension|\n|Minnie Riperton\/Rotary Connection|\n|Quincy Jones|\n|Camille Yarborough|\n|The Dramatics|\n|Shuggie Otis|\n|Friends of Distinction|\n|Minnie Riperton\/Rotary Connection|\n|The 5 Stairsteps|\n|Brothers Johnson|\n|Earth Wind & Fire|\n|Roy Ayers|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"artist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test54637"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Edit Delete Edit localized... View CVT Robert McCool|\n|Edit Delete Edit localized... View CVT tomka|\n|Edit Delete Edit localized... View CVT Thomas Klein|\n|Edit Delete Edit localized... View CVT Aristotle N. Balogh|\n|Edit Delete Edit localized... View CVT Susan Decker|\n|Edit Delete Edit localized... View CVT David Filo|\n|Edit Delete Edit localized... View CVT Jerry Yang|\n|Edit Delete Edit localized... View CVT Randy Stewart|\n|Edit Delete Edit localized... View CVT Randy Stewart|\n|Edit Delete Edit localized... View CVT J.D. Falk|\n|91 values total \u00bb|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"person\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test54642"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|M|\n|M|\n|F|\n|F|\n|M|\n|F|\n|M|\n|M|\n|F|\n|M|\n|M|\n|M|\n|M|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|M|\n|M|\n|F|\n|F|\n|M|\n|M|\n|M|\n|F|\n|F|\n|F|\n|F|\n|M|\n|F|\n|F|\n|M|\n|F|\n|F|\n|F|\n|F|\n|M|\n|F|\n|F|\n|F|\n|F|\n|M|\n|M|\n|M|\n|F|\n|F|\n|F|\n|F|\n|M|\n|M|\n|F|\n|M|\n|F|\n|F|\n|F|\n|F|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"sex\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test54930"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|TBA|\n|TBA|\n|TBA|\n|TBA|\n|TBA|\n|TBA|\n|TBA|\n|TBA|\n|TBA|\n|TBA|\n|TBA|\n|TBA|\n|TBA|\n|Fri|\n|Fri|\n|Mon|\n|Mon|\n|Mon|\n|Tues|\n|Tues|\n|Sat|\n|TBA|\n|Mon|\n|Fri|\n|Sun|\n|Sun|\n|Thur|\n|Thur|\n|TBA|\n|TBA|\n|TBA|\n|Sat|\n|TBA|\n|TBA|\n|TBA|\n|TBA|\n|TBA|\n|TBA|\n|Sat|\n|Sat|\n|TBA|\n|Tues|\n|TBA|\n|Bi-wkly|\n|Wed|\n|TBA|\n|TBA|\n|TBA|\n|TBA|\n|TBA|\n|TBA|\n|TBA|\n|Intl|\n|TBA|\n|TBA|\n|TBA|\n|TBA|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"day\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test55020"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|South-East|\n|South-East|\n|South-East|\n|South-East|\n|South-East|\n|South-East|\n|South-East|\n|South-East|\n|South-East|\n|South-East|\n|South-East|\n|South-East|\n|South-East|\n|Sunshine and Fraser Coast|\n|South-East|\n|South-East|\n|South-East|\n|South-East|\n|South-East|\n|South-East|\n|South-East|\n|South-East|\n|South-East|\n|South-East|\n|South-East|\n|South-East|\n|South-East|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"region\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test55099"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Energy|\n|Energy|\n|Energy|\n|Energy|\n|Energy|\n|Energy|\n|Energy|\n|Energy|\n|Energy|\n|Energy|\n|Energy|\n|Energy|\n|Energy|\n|Energy|\n|Energy|\n|Energy|\n|Energy|\n|Science and Technology|\n|Science and Technology|\n|Science and Technology|\n|Science and Technology|\n|Science and Technology|\n|Science and Technology|\n|Science and Technology|\n|Science and Technology|\n|Science and Technology|\n|Science and Technology|\n|Science and Technology|\n|Science and Technology|\n|Business|\n|Business|\n|Business|\n|Business|\n|Science and Technology|\n|Infrastructure|\n|Infrastructure|\n|Infrastructure|\n|Infrastructure|\n|Infrastructure|\n|Infrastructure|\n|Infrastructure|\n|Infrastructure|\n|Infrastructure|\n|Infrastructure|\n|Infrastructure|\n|Infrastructure|\n|Infrastructure|\n|Infrastructure|\n|Infrastructure|\n|Infrastructure|\n|Infrastructure|\n|Infrastructure|\n|Infrastructure|\n|Infrastructure|\n|Environment|\n|Environment|\n|Environment|\n|Environment|\n|Environment|\n|Environment|\n|Environment|\n|Environment|\n|Environment|\n|Environment|\n|Environment|\n|Environment|\n|Environment|\n|Environment|\n|Environment|\n|Environment|\n|Environment|\n|Environment|\n|Infrastructure|\n|Education|\n|Education|\n|Education|\n|Education|\n|Education|\n|Education|\n|Education|\n|Education|\n|Education|\n|Education|\n|Education|\n|Education|\n|Education|\n|Healthcare|\n|Healthcare|\n|Healthcare|\n|Healthcare|\n|Healthcare|\n|Healthcare|\n|Jobs|\n|Jobs|\n|Jobs|\n|Jobs|\n|Jobs|\n|Jobs|\n|Housing|\n|Housing|\n|Housing|\n|Housing|\n|Housing|\n|Housing|\n|Housing|\n|Housing|\n|Housing|\n|Social programs|\n|Social programs|\n|Social programs|\n|Social programs|\n|Social programs|\n|Social programs|\n|Social programs|\n|Social programs|\n|Social programs|\n|Social programs|\n|Social programs|\n|Social programs|\n|Social programs|\n|Social programs|\n|Social programs|\n|Public Services|\n|Public Services|\n|Public Services|\n|Public Services|\n|Public Services|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"category\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test5511"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Chicago|\n|Austin|\n|Austin|\n|Chicago|\n|Milwaukee|\n|Saint Louis|\n|Omaha|\n|Cleveland|\n|Rochester|\n|New York|\n|New York|\n|Boston|\n|Philadelphia|\n|Baltimore|\n|Charlotte|\n|Atlanta|\n|Orlando|\n|Biloxi|\n|Canal Fulton|\n|Dallas|\n|Dallas|\n|Houston|\n|Houston|\n|Phoenix|\n|Las Vegas|\n|West Hollywood|\n|Anaheim|\n|San Diego|\n|Reno|\n|San Francisco|\n|Portland|\n|Seattle|\n|Spokane|\n|Boise|\n|Salt Lake City|\n|Denver|\n|Des Moines|\n|Minneapolis|\n|Saint Louis|\n|Columbia|\n|Tulsa|\n|Council Bluffs|\n|Chicago|\n|Cleveland|\n|Royal Oak|\n|Upper Darby|\n|Silver Spring|\n|New York|\n|Boston|\n|Charlotte|\n|Atlanta|\n|New Orleans|\n|Chandler|\n|San Antonio|\n|Houston|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"city\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test55626"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Use at an assay dependent dilution.|\n|1\/200 - 1\/2000.|\n|1\/10000 - 1\/100000. (Primary ELISA)|\n|1\/2000 - 1\/25000. (Colorimetric: 1\/2000 - 1\/20000; Chemiluminescent: 1\/5000 - 1\/25000)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"notes\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test55640"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Miss A J Hurst|\n|Mr S B Carrington|\n|Mr A Heard +|\n|Mr S A Dring +|\n|Mr M Beharrell|\n|Mrs T A Hurst|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"owner\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test55675"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|50|\n|50|\n|51|\n|51|\n|50|\n|52|\n|53|\n|54|\n|51|\n|51|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test55870"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Juventus|\n|Roma|\n|Napoli|\n|Fiorentina|\n|Internazionale|\n|Parma|\n|Torino|\n|Milan|\n|Lazio|\n|Verona|\n|Atalanta|\n|Sampdoria|\n|Udinese|\n|Genoa|\n|Cagliari|\n|Chievo|\n|Sassuolo|\n|Catania|\n|Bologna|\n|Livorno|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test55969"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|? Probably a version number, identifying the file structure. Observed values: 0x11 - Windows XP; 0x17 - Vista, Windows 7|\n|? Probably a file magic number. Only observed value: 0x41434353|\n|? Observed values: 0x0F - Windows XP, 0x11 - Windows 7|\n|Prefetch file length.|\n|Name of executable as Unicode string, truncated after character 29 if necessary, and terminated by U+0000. As it appears in the prefetch file file name.|\n|The prefetch hash, as it appears in the pf file name.|\n|? Observed values: 0 for almost all prefetch files (XP); 1 for NTOSBOOT-B00DFAAD.pf (XP)|\n|Offset to section A|\n|? Nr of entries in section A|\n|Offset to section B|\n|Nr of entries in section B|\n|Offset to section C|\n|Length of section C|\n|Offset to section D|\n|? Probably the number of entries in the D section header|\n|Length of section D|\n|Latest execution time of executable (FILETIME)|\n|? Possibly structured as 4 DWORD. Observed values: \/0x00000000 0x00000000 0x00000000 0x00000000\/, \/0x47868c00 0x00000000 0x47860c00 0x00000000\/|\n|Execution counter|\n|? Observed values: 1, 2, 3, 4, 5, 6 (XP)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"notes\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test55978"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|L|\n|L|\n|L|\n|L|\n|L|\n|L|\n|L|\n|L|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"class\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test55998"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Albania|\n|Algeria|\n|Argentina|\n|Armenia|\n|Australia|\n|Austria|\n|Azerbaijan|\n|Belarus|\n|Belgium|\n|Bolivia, Plurinational State of|\n|Brazil|\n|Bulgaria|\n|Canada|\n|Chile|\n|China|\n|Colombia|\n|Cyprus|\n|Czech Republic|\n|Egypt|\n|France|\n|Georgia|\n|Germany|\n|Ghana|\n|Greece|\n|Hungary|\n|India|\n|Indonesia|\n|Iran, Islamic Republic of|\n|Ireland|\n|Israel|\n|Italy|\n|Japan|\n|Jordan|\n|Kazakhstan|\n|Korea, Democratic People's Republic of|\n|Korea, Republic of|\n|Kuwait|\n|Lebanon|\n|Libyan Arab Jamahiriya|\n|Lithuania|\n|Macao|\n|Malaysia|\n|Martinique|\n|Mexico|\n|Netherlands|\n|New Zealand|\n|Nicaragua|\n|Nigeria|\n|Oman|\n|Pakistan|\n|Panama|\n|Peru|\n|Philippines|\n|Poland|\n|Portugal|\n|Puerto Rico|\n|Qatar|\n|Romania|\n|Russian Federation|\n|Saudi Arabia|\n|Singapore|\n|Slovakia|\n|Slovenia|\n|Somalia|\n|Spain|\n|Sweden|\n|Switzerland|\n|Taiwan, Province of China|\n|Thailand|\n|Turkey|\n|Ukraine|\n|United Arab Emirates|\n|United Kingdom|\n|United States|\n|Venezuela, Bolivarian republic of|\n|Viet Nam|\n|Yemen|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test56023"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Panel, Control (wht)|\n|Screw, No.8x1\/2 Hex Washer Head|\n|Pcb Assembly (9-button)|\n|Screw, No.8x1\/2 Hex Washer Head|\n|Latch Assembly|\n|Handle, Latch (wht)|\n|Insert, Vent|\n|Harness, Wire|\n|Harness, Wire|\n|Manual, Use & Care (trilingl)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"description\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test56123"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|2010|\n|2009|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"year\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test56368"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Unavailable|\n|Available|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"status\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test56407"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Trustworthiness|\n|Vendor reliability|\n|Privacy|\n|Child safety|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"component\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test56432"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|70|\n|71|\n|70|\n|70|\n|70|\n|71|\n|72|\n|71|\n|74|\n|70|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test56484"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Oaxaca Oax|\n|Atapan|\n|Carreton El|\n|Arado Lo|\n|Amayuca|\n|Leon Gto|\n|Coatetelco|\n|Altotonga|\n|Singuilucan Hgo|\n|Cuauhtemoc|\n|Atemajac De Brizuela|\n|Choya La|\n|Boquilla De Babisas La Boquilla De Conchos|\n|Huamantla|\n|San Nicolas Tlazala|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"city\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test56492"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Limited to 5 concurrent users. The IEEE\/IEE Electronic Library provides libraries and researchers with a single source to almost a third of the world's current electrical engineering and computer science literature, granting unparalleled access to publications from the Institute of Electrical and Electronics Engineers (IEEE) and the Institution of Electrical Engineers (IEE). Includes information on dental materials.|\n|Look here for books and other items available from the library. more info|\n|Diagnosis checklist system that is also integrated into the Dynamed platform.|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"notes\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test56589"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|PO Box 1404 Pampa, TX 79066|\n|P.O.Box 895 Pampa, TX 79066|\n|PO Box 659 Canyon, TX 79015|\n|P.O. BOX 659 Canyon, TX 79015|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"address\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test56604"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|LAM|\n|PALM|\n|TOC|\n|OREG|\n|METR|\n|UNAT|\n|DAM|\n|NEM|\n|TAM|\n|CONN|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"club\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test56752"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|nan|\n|Brunei Darussalam|\n|Cambodia|\n|Indonesia|\n|Lao PDR|\n|Malaysia|\n|Myanmar|\n|Philippines|\n|Singapore|\n|Thailand|\n|Viet Nam|\n|ASEAN|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test56756"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Monday|\n|Tuesday|\n|Wednesday|\n|Thursday|\n|Friday|\n|Saturday|\n|Sunday|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"day\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test56825"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|R|\n|R|\n|L|\n|L|\n|L|\n|L|\n|L|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"class\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test56924"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|AS|\n|AS|\n|REMI|\n|LAPS|\n|FP|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"code\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test56971"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Bohemian Horn Concertos: Havl\u00edk, Stich-Punto & Rossetti|\n|Bohemian Horn Concertos: Havl\u00edk, Stich-Punto & Rossetti|\n|Bohemian Horn Concertos: Havl\u00edk, Stich-Punto & Rossetti|\n|Bohemian Horn Concertos: Havl\u00edk, Stich-Punto & Rossetti|\n|Bohemian Horn Concertos: Havl\u00edk, Stich-Punto & Rossetti|\n|Bohemian Horn Concertos: Havl\u00edk, Stich-Punto & Rossetti|\n|Bohemian Horn Concertos: Havl\u00edk, Stich-Punto & Rossetti|\n|Bohemian Horn Concertos: Havl\u00edk, Stich-Punto & Rossetti|\n|Bohemian Horn Concertos: Havl\u00edk, Stich-Punto & Rossetti|\n|Rosetti: Requiem f\u00fcr Mozart - Geistliche Werke|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"album\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test57107"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Conifer, CO|\n|Federal Heights (Denver), CO|\n|Fort Collins, CO|\n|Longmont, CO|\n|Knoxville, TN|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"location\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test5728"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Northampton, Northamptonshire, NN6 Full Address|\n|Ilkeston, Derbyshire, DE7 Full Address|\n|Wimborne, Dorset, BH21 Full Address|\n|York, North Yorkshire, YO19 Full Address|\n|York, North Yorkshire, YO24 Full Address|\n|Upminster, Essex, RM14 Full Address|\n|Stourbridge, West Midlands, DY9 Full Address|\n|Melton Mowbray, Leicestershire, LE14 Full Address|\n|Leicester, Leicestershire, LE2 Full Address|\n|Melton Mowbray, Leicestershire, LE14 Full Address|\n|Verwood, Dorset, BH31 Full Address|\n|Seaford, East Sussex, BN25 Full Address|\n|York, North Yorkshire, YO10 Full Address|\n|Upminster, Essex, RM14 Full Address|\n|Nottingham, Nottinghamshire, NG16 Full Address|\n|Bicester, Oxfordshire, OX26 Full Address|\n|Nottingham, Nottinghamshire, NG15 Full Address|\n|St Helens, Merseyside, WA11 Full Address|\n|Bradford, West Yorkshire, BD13 Full Address|\n|Nottingham, Nottinghamshire, NG16 Full Address|\n|Great Yarmouth, Norfolk, NR30 Full Address|\n|Ellesmere Port, Cheshire, CH65 Full Address|\n|Leicester, Leicestershire, LE2 Full Address|\n|Cambridge, Cambridgeshire, CB25 Full Address|\n|Sutton-In-Ashfield, Nottinghamshire, NG17 Full Address|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"address\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test57549"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|FW (Forward - Centre)|\n|Sub (Substitute)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"position\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test57624"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Duology|\n|Two of a Kind|\n|Chicago Red|\n|Mingus at Antibes|\n|Beija Flors Velho E Sujo|\n|Sugar Foot Stomp|\n|Towns and Villages|\n|Along the Way|\n|Time travel|\n|The Illinois Concert|\n|Wheels|\n|Broad Strokes|\n|Pieces|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"album\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test5764"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|comcast.net|\n|umich.edu|\n|141.211|\n|68.42|\n|ameritech.net|\n|141.213|\n|rcn.com|\n|googlebot.com|\n|cablespeed.com|\n|colorado.edu|\n|mich.net|\n|aol.com|\n|tds.net|\n|buckeye-express.com|\n|69|\n|looksmart.com|\n|207.75|\n|rr.com|\n|digitalrealm.net|\n|64.241|\n|[not listed: 83 organisations]|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"organisation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test58105"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n|2011|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"year\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test58146"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Gary Boulanger|\n|Justin Stein|\n|Luis Contreras|\n|Steven Bahen|\n|Skye Chernetz (5)|\n|Mallory Strandberg (5)|\n|Tommy Wong (5)|\n|David Moran|\n|Todd Kabel|\n|Matt Moore|\n|Christopher Griffith|\n|David Garcia|\n|Daniel David|\n|Emma Jayne Wilson|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"jockey\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test58194"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Sets the time it takes for the atmosphere to fade when de-selected|\n|Set to true if you want to see the constellation line drawing on start-up|\n|Set to true if you want to see the constellation names on start-up|\n|Set to true if you want to see the constellation art on start-up|\n|Set to true if you want to see the constellation boundaries on start-up|\n|When set to true, constellation lines, boundaries and art will be limited to the constellation of the selected star, if that star is \u00e2\u20ac?on\u00e2\u20ac? one of the constellation lines.|\n|Set to true if you only want to see the line drawing, art and name of the selected constellation star|\n|Set to true if you want to see the azimuthal grid on start-up|\n|Set to true if you want to see the equatorial grid (on date) on start-up|\n|Set to true if you want to see the equatorial grid (J2000) on start-up|\n|Set to true if you want to see the ecliptic grid (J2000) on start-up|\n|Set to true if you want to see the galactic grid on start-up|\n|Set to true if you want to see the galactic plane line on start-up|\n|Set to true if you want to see the equator line on start-up|\n|Set to true if you want to see the ecliptic line (J2000) on start-up|\n|Set to true if you want to see the meridian line on start-up|\n|Set to false if you don't want to see the cardinal points|\n|Set to true if you want labels to undergo gravity (top side of text points toward zenithzenith). Useful with dome projection.|\n|Change to false if you want to see the real moon size on start-up|\n|Change to false if you want to see the real moon size on start-up|\n|Sets the moon scale factor, to correlate to our perception of the moon's size. Typical value: 4|\n|This number multiplies the brightness of the constellation art images. Typical value: 0.5|\n|Sets the amount of time the constellation art takes to fade in or out, in seconds. Typical value: 1.5|\n|Enable chart mode on startup|\n|Enable night mode on startup|\n|Sets the level of the light pollution simulation|\n|Enable dynamic eye adaptation.|\n|Enable render of the solar shadows.|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"description\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test58221"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|John W. Elick|\n|Bredeson, John, Geiser, Greg and Nations, Cheryl|\n|Nicholas B. Alexander|\n|Henderson, Frances and Kypros, Dr. Paul M.|\n|Steven Miyadi|\n|Greene, Sue and Matos, Sandra|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"owner\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test5826"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|California, French, Mediterranean|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"category\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test58348"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Cast Iron Love Birds Hose Tidy|\n|Cast Iron Love Birds Hose Tidy|\n|Cast Iron Love Birds Hose Tidy|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"product\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test58648"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Last 7 Games|\n|Last 15 Games|\n|Last 30 Games|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"duration\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test58832"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Sequence Analysis|\n|Endoplasmin|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"description\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test5900"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|2 parameter fit from 162 observations, autocmod 2.5c|\n|autocmod 2.5c|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"notes\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test59179"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|girl|\n|girl|\n|girl|\n|girl|\n|girl|\n|girl|\n|girl|\n|girl|\n|girl|\n|girl|\n|girl|\n|girl|\n|girl|\n|girl|\n|girl|\n|girl|\n|girl|\n|girl|\n|girl|\n|girl|\n|girl|\n|girl|\n|girl|\n|girl|\n|girl|\n|girl|\n|girl|\n|girl|\n|girl|\n|girl|\n|girl|\n|girl|\n|girl|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"gender\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test59356"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|A|\n|L|\n|A|\n|RL|\n|A|\n|A|\n|A|\n|A|\n|A|\n|A|\n|A|\n|M|\n|A|\n|A|\n|A|\n|A|\n|A|\n|A|\n|A|\n|A|\n|A|\n|A|\n|Q|\n|A|\n|B|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"class\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test59395"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Arcata, CA|\n|Arcata, CA|\n|Davis, CA|\n|San Francisco, CA|\n|Arcata, CA|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"location\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test59494"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|74.1|\n|74.7|\n|74.4|\n|75.0|\n|72.9|\n|73.7|\n|73.2|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"depth\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test59664"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Masters Women|\n|Masters Women|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"category\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test5977"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|EUR \/ USD|\n|USD \/ JPY|\n|GBP \/ USD|\n|USD \/ CHF|\n|USD \/ CAD|\n|EUR \/ JPY|\n|AUD \/ USD|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"currency\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test59995"}}
{"prompt":null,"completion":"{\"chosen_semantic_type\": \"city\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test60286"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Coalbrookdale Original Door Stop|\n|Coalbrookdale Original Door Stop Customer also bought: Cockerel Door Stop Large Black Cat Door Stop|\n|Coalbrookdale Original Door Stop Customer also bought: Pig Door Stop|\n|Coalbrookdale Original Door Stop|\n|Coalbrookdale Original Door Stop|\n|Coalbrookdale Original Door Stop|\n|Coalbrookdale Original Door Stop|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"product\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test60310"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|ALISA LASK|\n|ADENA TESTA|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"owner\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test60434"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Denver, CO, USA|\n|Aizkraukle, LVA|\n|Tyumen, RUS|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"birth Place\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test60517"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|LS |\n|LH |\n|JP |\n|DR |\n|VA |\n|CS |\n|NU |\n|AC |\n|HA |\n|MN |\n|EW |\n|BA |\n|HZ |\n|JN |\n|DU |\n|GL |\n|ML |\n|ZA |\n|YG |\n|RS |\n|MH |\n|MA |\n|MG |\n|OR |\n|GS |\n|HN |\n|UZ |\n|ZH |\n|XB |\n|QI |\n|NX |\n|BY |\n|GI |\n|DA |\n|SH |\n|DE |\n|LI |\n|DO |\n|YA |\n|PM |\n|BL |\n|SU |\n|TJ |\n|MB |\n|TA |\n|TU |\n|KG |\n|KZ |\n|HU |\n|UG |\n|BO |\n|DX |\n|LB |\n|SL |\n|TT |\n|YI |\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"code\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test60814"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Personal Training|\n|Personal Training|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"description\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test60825"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Baltimore, MD|\n|Baltimore, MD|\n|Princess Anne, MD|\n|Baltimore, MD|\n|Greensboro, NC|\n|Baltimore, MD|\n|Petersburg, VA|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"location\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test60954"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|18.0|\n|0.0|\n|24.0|\n|21.0|\n|0.0|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"elevation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test6111"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Charleston, IL|\n|Terre Haute, IN|\n|Terre Haute, IN|\n|Evansville, IN|\n|Terre Haute, IN|\n|Indianapolis, IN|\n|Terre Haute, IN|\n|Rensselaer, IN|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"location\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test61141"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|CC|\n|FPAY|\n|FPAY|\n|FPAY|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"code\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test61145"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Away from Family|\n|Away from Hometown|\n|Baby Boomers|\n|Engaged (<1 year)|\n|Engaged (<6 months)|\n|Newlywed (<1 year)|\n|Newlywed (<6 months)|\n|Parents (All)|\n|Parents (child: 0-3yrs)|\n|Parents (child: 4-12yrs)|\n|Parents (child: 13-15yrs)|\n|Parents (child: 16-19yrs)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"family\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test61209"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|69.4|\n|69.7|\n|69.0|\n|68.7|\n|69.2|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"depth\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test61247"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1998|\n|2010|\n|2003|\n|2005|\n|2006|\n|2000|\n|2005|\n|2006|\n|2005|\n|1984|\n|2009|\n|2003|\n|2007|\n|2001|\n|2006|\n|2011|\n|2007|\n|1996|\n|1993|\n|2008|\n|2002|\n|2000|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"year\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test61277"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|The Dave Brubeck Quartet|\n|The Dave Brubeck Quartet|\n|The Dave Brubeck Quartet|\n|The Dave Brubeck Quartet|\n|The Dave Brubeck Quartet|\n|The Dave Brubeck Quartet|\n|The Dave Brubeck Quartet|\n|The Dave Brubeck Quartet|\n|The Dave Brubeck Quartet|\n|The Dave Brubeck Quartet|\n|The Dave Brubeck Quartet|\n|The Dave Brubeck Quartet|\n|The Dave Brubeck Quartet|\n|The Dave Brubeck Quartet|\n|The Dave Brubeck Quartet|\n|The Dave Brubeck Quartet|\n|The Dave Brubeck Quartet|\n|The Dave Brubeck Quartet|\n|The Dave Brubeck Quartet|\n|The Dave Brubeck Quartet|\n|The Dave Brubeck Quartet|\n|The Dave Brubeck Quartet|\n|The Dave Brubeck Quartet|\n|The Dave Brubeck Quartet|\n|The Dave Brubeck Quartet|\n|The Dave Brubeck Quartet|\n|The Dave Brubeck Quartet|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"artist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test61698"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1-2|\n|4-5|\n|4-5|\n|4-5|\n|2-3|\n|PG|\n|PG|\n|C|\n|SG|\n|PF|\n|C|\n|2-3|\n|1-2|\n|PF|\n|PF|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"position\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test6176"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Pulp, Paper, and Paperboard Mills|\n|Metalworking Machinery Manufacturing|\n|Warehousing and Storage|\n|Converted Paper Product Manufacturing|\n|Medical Equipment and Supplies Manufacturing|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"industry\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test61774"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|31|\n|31|\n|30|\n|34|\n|33|\n|30|\n|31|\n|33|\n|33|\n|32|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test61862"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Relax Max!|\n|Relaxin' With the Whales|\n|Relaxin' With the Whales|\n|Relaxin' With the Whales|\n|Relaxin' With the Whales|\n|Relaxin' With the Whales|\n|Drivin' Cool, Vol. 1 (Great Music for the Road)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"album\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test61962"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|London, London, NW5 Full Address|\n|Edgware, Middlesex, HA8 Full Address|\n|London, London, NW9 Full Address|\n|London, London, NW9 Full Address|\n|Oxford, Oxfordshire, OX2 Full Address|\n|Edgware, Middlesex, HA8 Full Address|\n|Oxford, Oxfordshire, OX2 Full Address|\n|Harrow, Middlesex, HA2 Full Address|\n|London, London, SE6 Full Address|\n|Leatherhead, Surrey, KT24 Full Address|\n|London, London, E7 Full Address|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"address\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test62061"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Mainline Protestant|\n|Catholic|\n|Evangelical Protestant|\n|Other|\n|nan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"religion\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test62181"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Year of fee payment: 4|\n|Owner name: ANTARES LEVERAGED CAPITAL CORP., AS AGENT, ILLINOI Free format text: SECURITY INTEREST;ASSIGNOR:MEDICAL COMPANIES ALLIANCE, INC., A UTAH CORP.;REEL\/FRAME:009367\/0214 Effective date: 19980730|\n|Owner name: MEDICAL COMPANIES ALLIANCE, INC., UTAH Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:ANTARES LEVERAGED CAPITAL CORPORATION;REEL\/FRAME:010052\/0019 Effective date: 19990615|\n|Effective date: 19990806|\n|Year of fee payment: 8|\n|Effective date: 20010706|\n|Effective date: 20030806|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"description\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test62230"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Primal Scream|\n|Suede|\n|M People|\n|Portishead|\n|Pulp|\n|Roni Size \/ Reprazent|\n|Gomez|\n|Talvin Singh|\n|Badly Drawn Boy|\n|P J Harvey|\n|Ms. Dynamite|\n|Dizzee Rascal|\n|Franz Ferdinand|\n|Antony and the Johnsons|\n|Arctic Monkeys|\n|The Klaxons|\n|Elbow|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"artist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test62244"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"sex\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test62351"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Renzo Diaz|\n|Patrick Schmid|\n|Daniel Feliciano|\n|Charle Oliveros|\n|Charle Oliveros|\n|Kirk Johnson|\n|Marco Ccamaque|\n|Christian Pilares|\n|R Ganpath|\n|Fernando Cruz La De|\n|Rafael Jr Mojica|\n|Fernando Cruz La De|\n|Fernando Cruz La De|\n|Fernando Cruz La De|\n|Lizetta Cedeno|\n|Lizetta Cedeno|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"jockey\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test62450"}}
{"prompt":null,"completion":"{\"chosen_semantic_type\": \"club\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test62455"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Japanese \/ Sushi, Steakhouse|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"category\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test62570"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|AS|\n|FPAY|\n|REMI|\n|FPAY|\n|AS|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"code\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test62741"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Juventud|\n|Racing|\n|CNI|\n|Rampla Juniors|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test62926"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Patrick Sharp|\n|Marian Hossa|\n|Patrick Kane|\n|Duncan Keith|\n|Bryan Bickell|\n|Andrew Shaw|\n|Johnny Oduya|\n|Marcus Kruger|\n|Michael Frolik|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"name\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test630"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|3504|\n|3693|\n|3436|\n|3433|\n|3449|\n|4341|\n|4354|\n|4312|\n|4425|\n|3850|\n|3090|\n|4142|\n|4034|\n|4166|\n|3850|\n|3563|\n|3609|\n|3353|\n|3761|\n|3086|\n|2372|\n|2833|\n|2774|\n|2587|\n|2130|\n|1835|\n|2672|\n|2430|\n|2375|\n|2234|\n|2648|\n|4615|\n|4376|\n|4382|\n|4732|\n|2130|\n|2264|\n|2228|\n|2046|\n|1978|\n|2634|\n|3439|\n|3329|\n|3302|\n|3288|\n|4209|\n|4464|\n|4154|\n|4096|\n|4955|\n|4746|\n|5140|\n|2962|\n|2408|\n|3282|\n|3139|\n|2220|\n|2123|\n|2074|\n|2065|\n|1773|\n|1613|\n|1834|\n|1955|\n|2278|\n|2126|\n|2254|\n|2408|\n|2226|\n|4274|\n|4385|\n|4135|\n|4129|\n|3672|\n|4633|\n|4502|\n|4456|\n|4422|\n|2330|\n|3892|\n|4098|\n|4294|\n|4077|\n|2933|\n|2511|\n|2979|\n|2189|\n|2395|\n|2288|\n|2506|\n|2164|\n|2100|\n|4100|\n|3672|\n|3988|\n|4042|\n|3777|\n|4952|\n|4464|\n|4363|\n|4237|\n|4735|\n|4951|\n|3821|\n|3121|\n|3278|\n|2945|\n|3021|\n|2904|\n|1950|\n|4997|\n|4906|\n|4654|\n|4499|\n|2789|\n|2279|\n|2401|\n|2379|\n|2124|\n|2310|\n|2472|\n|2265|\n|4082|\n|4278|\n|1867|\n|2158|\n|2582|\n|2868|\n|3399|\n|2660|\n|2807|\n|3664|\n|3102|\n|2875|\n|2901|\n|3336|\n|1950|\n|2451|\n|1836|\n|2542|\n|3781|\n|3632|\n|3613|\n|4141|\n|4699|\n|4457|\n|4638|\n|4257|\n|2219|\n|1963|\n|2300|\n|1649|\n|2003|\n|2125|\n|2108|\n|2246|\n|2489|\n|2391|\n|2000|\n|3264|\n|3459|\n|3432|\n|3158|\n|4668|\n|4440|\n|4498|\n|4657|\n|3907|\n|3897|\n|3730|\n|3785|\n|3039|\n|3221|\n|3169|\n|2171|\n|2639|\n|2914|\n|2592|\n|2702|\n|2223|\n|2545|\n|2984|\n|1937|\n|3211|\n|2694|\n|2957|\n|2945|\n|2671|\n|1795|\n|2464|\n|2220|\n|2572|\n|2255|\n|2202|\n|4215|\n|4190|\n|3962|\n|4215|\n|3233|\n|3353|\n|3012|\n|3085|\n|2035|\n|2164|\n|1937|\n|1795|\n|3651|\n|3574|\n|3645|\n|3193|\n|1825|\n|1990|\n|2155|\n|2565|\n|3150|\n|3940|\n|3270|\n|2930|\n|3820|\n|4380|\n|4055|\n|3870|\n|3755|\n|2045|\n|2155|\n|1825|\n|2300|\n|1945|\n|3880|\n|4060|\n|4140|\n|4295|\n|3520|\n|3425|\n|3630|\n|3525|\n|4220|\n|4165|\n|4325|\n|4335|\n|1940|\n|2740|\n|2265|\n|2755|\n|2051|\n|2075|\n|1985|\n|2190|\n|2815|\n|2600|\n|2720|\n|1985|\n|1800|\n|1985|\n|2070|\n|1800|\n|3365|\n|3735|\n|3570|\n|3535|\n|3155|\n|2965|\n|2720|\n|3430|\n|3210|\n|3380|\n|3070|\n|3620|\n|3410|\n|3425|\n|3445|\n|3205|\n|4080|\n|2155|\n|2560|\n|2300|\n|2230|\n|2515|\n|2745|\n|2855|\n|2405|\n|2830|\n|3140|\n|2795|\n|3410|\n|1990|\n|2135|\n|3245|\n|2990|\n|2890|\n|3265|\n|3360|\n|3840|\n|3725|\n|3955|\n|3830|\n|4360|\n|4054|\n|3605|\n|3940|\n|1925|\n|1975|\n|1915|\n|2670|\n|3530|\n|3900|\n|3190|\n|3420|\n|2200|\n|2150|\n|2020|\n|2130|\n|2670|\n|2595|\n|2700|\n|2556|\n|2144|\n|1968|\n|2120|\n|2019|\n|2678|\n|2870|\n|3003|\n|3381|\n|2188|\n|2711|\n|2542|\n|2434|\n|2265|\n|2110|\n|2800|\n|2110|\n|2085|\n|2335|\n|2950|\n|3250|\n|1850|\n|1835|\n|2145|\n|1845|\n|2910|\n|2420|\n|2500|\n|2905|\n|2290|\n|2490|\n|2635|\n|2620|\n|2725|\n|2385|\n|1755|\n|1875|\n|1760|\n|2065|\n|1975|\n|2050|\n|1985|\n|2215|\n|2045|\n|2380|\n|2190|\n|2320|\n|2210|\n|2350|\n|2615|\n|2635|\n|3230|\n|2800|\n|3160|\n|2900|\n|2930|\n|3415|\n|3725|\n|3060|\n|3465|\n|2605|\n|2640|\n|2395|\n|2575|\n|2525|\n|2735|\n|2865|\n|3035|\n|1980|\n|2025|\n|1970|\n|2125|\n|2125|\n|2160|\n|2205|\n|2245|\n|1965|\n|1965|\n|1995|\n|2945|\n|3015|\n|2585|\n|2835|\n|2665|\n|2370|\n|2950|\n|2790|\n|2130|\n|2295|\n|2625|\n|2720|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"weight\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test63110"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Men A|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"category\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test63148"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Helsinki Commission|\n|Helsinki Commission|\n|Helsinki Commission|\n|Chairman -in-Office, OSCE|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"affiliation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test63320"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|DVD|\n|DVD|\n|DVD|\n|DVD|\n|DVD|\n|DVD|\n|DVD|\n|DVD|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"format\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test63364"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Burning Alive - Single|\n|Den L\u00e5ngsamma Blomman|\n|F\u00f6r den som \u00e4lskar - En samling|\n|Lever Mina Dr\u00f6mmar|\n|Din vinge - Single|\n|En afton i december - Single|\n|Den L\u00e5ngsamma Blomman|\n|Lever Mina Dr\u00f6mmar|\n|F\u00f6r den som \u00e4lskar - En samling|\n|Lever Mina Dr\u00f6mmar|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"album\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test63681"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Loss|\n|Loss|\n|Win|\n|Win|\n|Loss|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"result\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test63822"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|DCM|\n|LBM|\n|IM|\n|SMMM|\n|ARIZ|\n|SPRD|\n|O*H*|\n|SPM|\n|RMM|\n|ARIZ|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"club\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test63960"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|nan|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|nan|\n|nan|\n|Sex|\n|nan|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|F|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|M|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|F|\n|M|\n|F|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|F|\n|M|\n|nan|\n|nan|\n|nan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"sex\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test63967"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|SO|\n|SR|\n|SO|\n|SR|\n|SO|\n|FR|\n|SO|\n|SO|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"class\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test64005"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Palmico Sound, NC|\n|Wilmington, NC|\n|New Bern, NC|\n|Cape Hatteras, NC|\n|Cedar Island, NC|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"location\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test64038"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Greatest Hits, Vol 1: Music Inspired By Lost, Seasons 1-5|\n|Greatest Hits, Vol 1: Music Inspired By Lost, Seasons 1-5|\n|Greatest Hits, Vol 1: Music Inspired By Lost, Seasons 1-5|\n|Greatest Hits, Vol 1: Music Inspired By Lost, Seasons 1-5|\n|Greatest Hits, Vol 1: Music Inspired By Lost, Seasons 1-5|\n|Greatest Hits, Vol 1: Music Inspired By Lost, Seasons 1-5|\n|Greatest Hits, Vol 1: Music Inspired By Lost, Seasons 1-5|\n|Greatest Hits, Vol 1: Music Inspired By Lost, Seasons 1-5|\n|Greatest Hits, Vol 1: Music Inspired By Lost, Seasons 1-5|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"album\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test64066"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Absolute Beginners and Beginners Salsa|\n|Improver\/Intermediate Salsa|\n|All levels welcome|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"class\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test64214"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Take-Two Interactive |\n|Nintendo |\n|Capcom |\n|Microsoft |\n|Electronic Arts |\n|Activision Blizzard |\n|Sony |\n|Square Enix |\n|Sega |\n|Namco Bandai |\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"publisher\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test64319"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|General Freight Trucking|\n|Local Government (OES designation)|\n|Specialized Freight Trucking|\n|Taxi and Limousine Service|\n|Investigation and Security Services|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"industry\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test64345"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|9780553384499|\n|9780201001792|\n|9781572302679|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"isbn\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test6446"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Sufjan Stevens|\n|Sufjan Stevens|\n|Sufjan Stevens|\n|Sufjan Stevens|\n|Sufjan Stevens|\n|Sufjan Stevens|\n|Sufjan Stevens|\n|Sufjan Stevens|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"artist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test6455"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|isbn 0146000374|\n|isbn 0146001710|\n|isbn 0345319036|\n|isbn 0312863543|\n|isbn 0785121501|\n|isbn 188712831X|\n|isbn 0755331141|\n|isbn 0192752774|\n|isbn 0747595682|\n|isbn 0785118616|\n|isbn 0785115587|\n|isbn 0553283685|\n|isbn 1857239504|\n|isbn 1841492299|\n|isbn 0345339282|\n|isbn 0312877900|\n|isbn 1416509151|\n|isbn 0722178573|\n|isbn 0586026312|\n|isbn 0140027785|\n|isbn 0861300270|\n|isbn 0586066314|\n|isbn 0140036474|\n|isbn 0380471000|\n|isbn 0440105641|\n|isbn 0146000196|\n|isbn 0146000633|\n|isbn|\n|isbn 0860079597|\n|isbn 0146000447|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"isbn\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test64581"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Bury the Dog Deeper|\n|Bones|\n|Panicsville\/Lovely Little Girls Split|\n|Bones|\n|Pure Racket|\n|Wigs on Fire|\n|Snake Person Generation|\n|Music for Downers|\n|Brain Cloud|\n|Variations of Electronic Forms|\n|Wigs on Fire|\n|People's Elbow Split|\n|Signal Hill|\n|Panicsville\/Lovely Little Girls Split|\n|Abrasive Stuttering|\n|As I Awoke My Body Was Melting|\n|No Doctors|\n|Provocative Electronics|\n|Rope|\n|Bury the Dog Deeper|\n|Tribute To Masayuki Takayanagi|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"album\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test64717"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Any type|\n|A cons|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"requirement\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test64786"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Southern California (16)|\n|UCLA (1)|\n|Duke (2)|\n|Arkansas|\n|South Carolina|\n|Stanford (1)|\n|Arizona State|\n|Oklahoma|\n|Arizona|\n|Vanderbilt|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test6491"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Wednesday|\n|Friday|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"day\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test65089"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|MN|\n|IA|\n|ND|\n|NE|\n|MN|\n|IA|\n|NE|\n|MN|\n|SD|\n|IA|\n|MN|\n|MO|\n|KS|\n|SD|\n|ND|\n|NE|\n|MN|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"state\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test65181"}}
{"prompt":null,"completion":"{\"chosen_semantic_type\": \"publisher\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test65519"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|en_US|\n|en_US|\n|en_US|\n|en_US|\n|nan|\n|nan|\n|en_US|\n|en_US|\n|nan|\n|en_US|\n|en_US|\n|en_US|\n|en_US|\n|en_US|\n|en_US|\n|en_US|\n|en_US|\n|en_US|\n|en_US|\n|nan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"language\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test65610"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|North America|\n|Europe|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"region\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test65620"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Aves|\n|Aves|\n|Aves|\n|Aves|\n|Aves|\n|Aves|\n|Aves|\n|Aves|\n|Aves|\n|Mammalia|\n|Mammalia|\n|Aves|\n|Aves|\n|Mammalia|\n|Mammalia|\n|Mammalia|\n|Mammalia|\n|Reptilia|\n|Aves|\n|Reptilia|\n|Reptilia|\n|Reptilia|\n|Pisces (Actinopterygii)|\n|Aves|\n|Aves|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"class\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test66095"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Lurdy|\n|Lorna Larkin, Miss Texas|\n|Mona At 12|\n|Miss American Miss Host|\n|Clara|\n|Ruby At 12|\n|Ruby|\n|Wanda Love, Miss Tennessee|\n|Verna Chickle|\n|Joyce Parkins|\n|Nedra Hibbard|\n|Lance DeSalvo|\n|Alberta|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"credit\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test66547"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|won|\n|lost|\n|lost|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"result\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test66705"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|SEARS ROEBUCK AND CO.|\n|WELLS FARGO & COMPANY|\n|AMERICAN BANKERS ASSOCIATION|\n|FREDDIE MAC|\n|PRINCIPAL FINANCIAL GROUP|\n|ALLY FINANCIAL INC.|\n|NYSSCPA|\n|MORTGAGE BANKERS ASSOCIATION|\n|SUNTRUST BANKS INC.|\n|MCGLADREY LLP|\n|CITIGROUP|\n|BDO USA LLP|\n|AIG|\n|U.S. BANCORP|\n|THE PNC FINANCIAL SERVICES GROUP INC.|\n|REGIONS FINANCIAL CORPORATION|\n|BANK OF AMERICA CORPORATION|\n|OCC & NCUA|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"affiliation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test66890"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Aodhagan Conlon (5)|\n|P J Brennan|\n|G Sheehan|\n|P J Brennan|\n|P J Brennan|\n|P J Brennan|\n|L Heard|\n|P J Brennan|\n|P J Brennan|\n|P J Brennan|\n|L Heard|\n|P J Brennan|\n|R Johnson|\n|P J Brennan|\n|P J Brennan|\n|P J Brennan|\n|P J Brennan|\n|P J Brennan|\n|P J Brennan|\n|P J Brennan|\n|Wayne Hutchinson|\n|G Lee|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"jockey\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test66980"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|L|\n|L|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"class\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test67145"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Blackened Thrash\/Death Metal|\n|Death\/Black Metal|\n|Black\/Death\/Thrash Metal|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"genre\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test6723"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|AW200|\n|CS100|\n|CS100b|\n|CS200cad|\n|CS200cad|\n|CS400|\n|CS500|\n|CS500 Tour de France|\n|CS500+|\n|CS600|\n|CS600 with Power|\n|CS600X|\n|Equine CS600X Trotting|\n|FA20|\n|FT4|\n|FT40|\n|FT60|\n|FT7|\n|FT80|\n|FT80 with G1|\n|G1 GPS sensor|\n|G3 GPS sensor W.I.N.D.|\n|H1 Heart Rate Sensor|\n|H2 Heart Rate Sensor|\n|H7 heart rate sensor|\n|Polar Active|\n|Polar AXN300|\n|Polar AXN500|\n|Polar AXN700|\n|Polar RS800|\n|Polar WearLink\u00ae+ transmitter Nike+|\n|Polar WearLink\u00ae+ transmitter with Bluetooth\u00ae|\n|RCX3|\n|RCX5|\n|RCX5 Tour de France|\n|RS400|\n|RS400sd|\n|RS800|\n|RS800CX|\n|S1 foot pod\u2122|\n|s3 stride sensor\u2122 W.I.N.D.|\n|s3+ stride sensor|\n|WearLink\u00ae+ Hybrid transmitter|\n|WearLink\u00ae+ transmitter|\n|WearLink\u00ae+ transmitter W.I.N.D.|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"product\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test6735"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|The Price of Progression|\n|The Price of Progression|\n|The Price of Progression|\n|The Price of Progression|\n|The Price of Progression|\n|The Price of Progression|\n|The Price of Progression|\n|The Price of Progression|\n|The Price of Progression|\n|The Price of Progression|\n|The Price of Progression|\n|The Price of Progression|\n|The Price of Progression|\n|The Price of Progression|\n|The Price of Progression|\n|The Price of Progression|\n|Cast the First Stone|\n|Cast the First Stone|\n|Cast the First Stone|\n|Cast the First Stone|\n|Cast the First Stone|\n|Cast the First Stone|\n|Cast the First Stone|\n|Cast the First Stone|\n|Cast the First Stone|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"album\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test67517"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|COMNAVAIRPAC|\n|COMNAVSURFPAC|\n|COMSUBPAC|\n|Commander, SEVENTH Fleet|\n|Commander, THIRD Fleet|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"component\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test67561"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Paris|\n|Paris|\n|Amsterdam|\n|Amsterdam|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"city\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test677"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|PDF ()|\n|Complete Source PDF (23M)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"format\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test67935"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Colleges, Universities, and Professional Schools|\n|Junior Colleges|\n|General Medical and Surgical Hospitals|\n|Technical and Trade Schools|\n|Business Schools and Computer and Management Training|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"industry\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test68"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|azaozz|\n|obenland*|\n|westi*|\n|dd32*|\n|nacin|\n|swissspidy|\n|afercia|\n|nacin|\n|azaozz|\n|rmccue|\n|chriscct7*|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"owner\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test68207"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Local Government (OES designation)|\n|Motor Vehicle Parts Manufacturing|\n|Automobile Dealers|\n|Other Motor Vehicle Dealers|\n|Employment Services|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"industry\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test68334"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Darrow5 - #56 Though the situation looks pretty bad, escape is far from a possibility.|\n|Darrow5 - #57 Although it can be frozen, the Kraken won't stay solidified for long. With just a mere screech, the ice shatters instantly.|\n|Darrow5 - #58 Separately, they cannot keep the Kraken down...but perhaps a double layer of ice will do the trick?|\n|Darrow5 - #59 The Kraken is unable to resist the onslaught of ice, giving the group ample time to sail a fair distance away.|\n|Darrow - #56 Ness gets the lowdown on a man named Everdred and heads over to Burglin Park for some info gathering. Also, it's a great place to pick pockets.|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"description\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test68360"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|CAN|\n|SWE|\n|CAN|\n|RUS|\n|RUS|\n|USA|\n|CAN|\n|CAN|\n|USA|\n|SWE|\n|USA|\n|NOR|\n|CZE|\n|FIN|\n|RUS|\n|CAN|\n|RUS|\n|CAN|\n|USA|\n|CAN|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test68487"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Jason Lumpkins|\n|Luis Rivera|\n|Darryl Brinkley|\n|Oswald Pereira|\n|Andrew Ramgeet|\n|Ricardo Mejias (7)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"jockey\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test68762"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|isbn 038542017X|\n|isbn 0156904365|\n|isbn 0307386171|\n|isbn 0758217749|\n|isbn 0312289197|\n|isbn 043924188X|\n|isbn 1585676470|\n|isbn 0385333846|\n|isbn 159606126X|\n|isbn 1565122437|\n|isbn 0553114700|\n|isbn 0689865384|\n|isbn 0694016608|\n|isbn 0974162159|\n|isbn 0786809663|\n|isbn 0451450523|\n|isbn 0743298020|\n|isbn 0811841405|\n|isbn 0060541873|\n|isbn 0060934417|\n|isbn 0970661126|\n|isbn 0156029049|\n|isbn 006077181X|\n|isbn 0061687278|\n|isbn 0312873999|\n|isbn 0397013353|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"isbn\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test68910"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Club Brugge|\n|VfB Stuttgart|\n|Leicester City|\n|FC Kopenhagen|\n|Nordsj\u00e6lland|\n|Midtjylland|\n|Br\u00f6ndby|\n|Br\u00f6ndby|\n|Nordsj\u00e6lland|\n|Nordsj\u00e6lland|\n|AZ|\n|Ajax|\n|NEC|\n|FC Groningen|\n|Evian|\n|Evian|\n|Evian|\n|Evian|\n|Manchester United|\n|Liverpool|\n|Sunderland|\n|AS Roma|\n|Young Boys|\n|Bayern M\u00fcnchen|\n|Werder Bremen|\n|Hannover 96|\n|Bayern M\u00fcnchen|\n|Bayern M\u00fcnchen|\n|Bayern M\u00fcnchen|\n|Schalke 04|\n|Borussia Dortmund|\n|Borussia Dortmund|\n|Borussia Dortmund|\n|Borussia Dortmund|\n|Bayer Leverkusen|\n|Bayer Leverkusen|\n|Bayern M\u00fcnchen|\n|Bayern M\u00fcnchen|\n|Bayern M\u00fcnchen|\n|Borussia M\u00f6nchengladbach|\n|1. FC K\u00f6ln|\n|Bayern M\u00fcnchen|\n|Arsenal|\n|Real Madrid|\n|Real Madrid|\n|Lazio Roma|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"club\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test69100"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|18.0|\n|38.0|\n|0.0|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"elevation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test69122"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Acoustics|\n|Planet of Ice|\n|Acoustics|\n|Menos el Oso|\n|Acoustics|\n|Acoustics|\n|Acoustics|\n|Acoustics|\n|Acoustics|\n|Highly Refined Pirates|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"album\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test69199"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|D Sukie|\n|E Perez|\n|J Lantz|\n|R Hernandez|\n|M St|\n|U Lopez|\n|T Thornton|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"jockey\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test69439"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Angus|\n|East Stirlingshire|\n|Clackmannanshire|\n|Central|\n|Fife|\n|Grampian|\n|East Stirlingshire|\n|Perthshire|\n|Grampian|\n|Highland|\n|East Stirlingshire|\n|Grampian|\n|Angus|\n|Highland|\n|East Stirlingshire|\n|Fife|\n|Fife|\n|Highland|\n|Perthshire|\n|Highland|\n|Highland|\n|Grampian|\n|Grampian|\n|Angus|\n|Grampian|\n|Fife|\n|Highland|\n|Perthshire|\n|Grampian|\n|Fife|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"county\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test69531"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|BLND|\n|DEAF|\n|WCHR|\n|WCHS|\n|WCHC|\n|WCMP|\n|WCBD|\n|Blindenhund|\n|BAG|\n|BAG (BM)|\n|BAG 2 - 5|\n|XBA\/XMA|\n|XBB-XBE\/MBXME|\n|SKI|\n|WEA|\n|GOLF|\n|BIKE|\n|SPEQ|\n|ADD|\n|RBK|\n|NC1|\n|PETC|\n|TAFR|\n|TAFG|\n|INF|\n|UM|\n|Kinderwagen|\n|SEF|\n|SEF|\n|SEF|\n|SEF|\n|CBF|\n|CXL\/RBK flex|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"service\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test69539"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Chacun Pour Soi|\n|Chacun Pour Soi|\n|Chacun Pour Soi|\n|Chacun Pour Soi|\n|Chacun Pour Soi|\n|Chacun Pour Soi|\n|Chacun Pour Soi|\n|Mystic|\n|Les plus grands succ\u00e8s du Club Balattou|\n|Afrik Hits Top Ten|\n|Afri\u00e7an Sound Party|\n|Afri\u00e7an Mov'hits|\n|African Mov\u2019hits, Very Best of 2007|\n|African Move'Hits|\n|Mystic|\n|Mystic|\n|Mystic|\n|Mystic|\n|Mystic|\n|Mystic|\n|Mystic|\n|Chacun Pour Soi|\n|Chacun Pour Soi|\n|Chacun Pour Soi|\n|African Mov'hits|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"album\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test69647"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Catholicism|\n|European Free-Church|\n|Pentecostal|\n|Baptist|\n|Pentecostal|\n|Adventist|\n|Baptist|\n|Baptist|\n|Methodist\/Pietist|\n|Adventist|\n|Totals:|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"family\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test69715"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|F|\n|M|\n|M|\n|F|\n|F|\n|M|\n|M|\n|M|\n|F|\n|M|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"sex\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test69841"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n|Read|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"status\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test69883"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Emanuel Nieves (5)|\n|Junior Inirio|\n|Filemon Rodriguez|\n|Gerard Melancon|\n|Hector Santiago|\n|Joseph Jr Patin|\n|Chris Rosier|\n|Brian Hernandez|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"jockey\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test70146"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|CC|\n|FPAY|\n|FPAY|\n|FPAY|\n|AS|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"code\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test70280"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|The Hawk & A Hacksaw|\n|Coconuts|\n|Shelter Belt|\n|Lindsey & Jack Toft|\n|Simon Scott|\n|Lali Puna|\n|Hail Snail|\n|The Octopus Project|\n|Party of Helicopters|\n|Le Orme|\n|Sleigh Bells|\n|Liars|\n|Ween|\n|Iron Horse|\n|Tussle|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"artist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test7036"}}
{"prompt":null,"completion":"{\"chosen_semantic_type\": \"brand\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test70451"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Brinkburn, 147, Brinkburn Road|\n|Brinkburn, 147, Brinkburn Road|\n|Brinkburn, 147, Brinkburn Road|\n|147, Brinkburn Road|\n|147, Brinkburn Road|\n|141, Brinkburn Road|\n|141, Brinkburn Road|\n|137, Brinkburn Road|\n|83, Brinkburn Road|\n|73, Brinkburn Road|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"address\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test70511"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Europe|\n|North America|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"region\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test70728"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|27.4|\n|31.3|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"weight\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test70914"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Coffins|\n|Coffins|\n|Coffins|\n|Coffins|\n|Coffins|\n|Coffins|\n|Coffins|\n|Coffins|\n|Coffins|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"artist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test71110"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Creative|\n|RPG|\n|RPG|\n|Puzzle|\n|Adventure|\n|Adventure|\n|Arcade|\n|Adventure|\n|Adventure|\n|Puzzle|\n|Sports|\n|Racing|\n|Action|\n|Action|\n|Simulation|\n|Adventure|\n|Arcade|\n|Platformer|\n|Action|\n|Platformer|\n|Creative|\n|Action|\n|Puzzle|\n|Puzzle|\n|Action|\n|Adventure|\n|Action|\n|nan|\n|Action|\n|Action|\n|Adventure|\n|Puzzle|\n|Action|\n|Racing|\n|Party|\n|Adventure|\n|Strategy|\n|Adventure|\n|Action|\n|Action|\n|Action|\n|Puzzle|\n|Platformer|\n|Strategy|\n|Racing|\n|Action|\n|Simulation|\n|Action|\n|RPG|\n|Racing|\n|Music|\n|Fighting|\n|Adventure|\n|Sports|\n|RPG|\n|Strategy|\n|RPG|\n|Driving|\n|Adventure|\n|Sports|\n|Racing|\n|Action|\n|Action|\n|Sports|\n|Action|\n|Platformer|\n|Action|\n|Sports|\n|Creative|\n|Action|\n|Driving|\n|Fighting|\n|RPG|\n|Action|\n|Action|\n|Puzzle|\n|Action|\n|Action|\n|Sports|\n|Sports|\n|Action|\n|Simulation|\n|RPG|\n|Strategy|\n|Action|\n|Sports|\n|Puzzle|\n|Sports|\n|Adventure|\n|Simulation|\n|Action|\n|Arcade|\n|Puzzle|\n|Puzzle|\n|Action|\n|Racing|\n|Platformer|\n|Creative|\n|Racing|\n|Puzzle|\n|Adventure|\n|Adventure|\n|Action|\n|Creative|\n|Creative|\n|Adventure|\n|Action|\n|Action|\n|Action|\n|Action|\n|Adventure|\n|Adventure|\n|Adventure|\n|Puzzle|\n|Sports|\n|Sports|\n|Adventure|\n|Creative|\n|Creative|\n|Creative|\n|Puzzle|\n|Adventure|\n|Simulation|\n|Creative|\n|Racing|\n|Strategy|\n|Adventure|\n|nan|\n|Sports|\n|Racing|\n|Action|\n|Action|\n|Puzzle|\n|Sports|\n|Action|\n|Platformer|\n|Action|\n|Action|\n|Action|\n|Adventure|\n|Puzzle|\n|Arcade|\n|Action|\n|RPG|\n|Adventure|\n|Racing|\n|Fighting|\n|Driving|\n|Action|\n|Action|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"genre\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test71129"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|FMM|\n|GWSC|\n|FMM|\n|MICH|\n|WCM|\n|NEM|\n|WCM|\n|PNA|\n|O*H*|\n|FMM|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"club\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test71280"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Banyana - The Children of Africa|\n|Something Old, Something New, Something Borrowed, Something Blue|\n|Art-Work|\n|Peter Erskine|\n|Earthmover|\n|The Universe is a Disk|\n|Y'a du Bruit Dans Ma Cabane|\n|S.E.M. Ensemble|\n|Moondog|\n|Ritual-All-7-70|\n|Some New Stuff|\n|Tri-Dimprovisations|\n|Mr. Billy Higgins|\n|Jink|\n|Check for Monsters|\n|Rope-a-dope|\n|Transit|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"album\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test71370"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|DSA-2331-1|\n|DSA-2331-1|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"origin\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test71565"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Actor|\n|Desk Officer|\n|Actor|\n|Actor|\n|Jimmy Dickey|\n|Actor|\n|Actor|\n|Lamont|\n|Band Leader|\n|Freddie|\n|Vocalist|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"credit\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test71595"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Microsoft Windows computer|\n|Templates 6.0.5, 6.5.4, 6.5.5, 6.5.6, 7.0.2, 7.0.3, 8.0, 8.5 Users of IBM Lotus Domino Server Release 6 require: IBM Lotus Notes Release 6.0.5 Template of the same release as the client Users of IBM Lotus Domino Server Release 6.5 require: IBM Lotus Notes Release 6.5.6 or earlier Template of the same release as the client Users of IBM Lotus Domino Server Release 7 require: IBM Lotus Notes Release 7.0.3 or earlier Template of the same release as the client Users of IBM Lotus Domino Server Release 8 require: IBM Lotus Notes Release 8.0 or earlier Template of the same release as the client|\n|One of the following: Windows ME Windows Vista Windows 2000 Professional Windows 2000 Server Edition (SP2 or later) Windows 2000 Advanced Server Edition (SP2 or later) Windows XP|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"requirement\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test71739"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|30|\n|30|\n|30|\n|30|\n|34|\n|34|\n|34|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test72197"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Brazil|\n|nan|\n|United States|\n|China|\n|Paraguay|\n|France|\n|Ukraine|\n|Europe|\n|Hong Kong|\n|Bolivia|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"origin\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test72221"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|19, Crown Road|\n|45, Crown Road|\n|1, Crown Road|\n|19, Crown Road|\n|1, Crown Road|\n|3, Crown Road|\n|1, Crown Road|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"address\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test72257"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|T J Phelan|\n|T J Phelan|\n|T J Phelan (3)|\n|T J Phelan (3)|\n|R P McLernon|\n|R P McLernon|\n|A P McCoy|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"jockey\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test72560"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Action|\n|nan|\n|nan|\n|Action|\n|Fitness|\n|Action|\n|Creative|\n|Action|\n|Action|\n|Platformer|\n|Action|\n|Puzzle|\n|Action|\n|Action|\n|Action|\n|Driving|\n|Puzzle|\n|Action|\n|Action|\n|Action|\n|Action|\n|Action|\n|RPG|\n|Action|\n|Sports|\n|Driving|\n|Action|\n|Action|\n|Action|\n|Action|\n|Action|\n|FPS|\n|Action|\n|Action|\n|Action|\n|Action|\n|Action|\n|Shooter|\n|Action|\n|Action|\n|Action|\n|Action|\n|Fitness|\n|Fitness|\n|Action|\n|Action|\n|Adventure|\n|Action|\n|Platformer|\n|Action|\n|Action|\n|Action|\n|Action|\n|Action|\n|Action|\n|Action|\n|Adventure|\n|Simulation|\n|Action|\n|Adventure|\n|Action|\n|Shooter|\n|Action|\n|Action|\n|Action|\n|Puzzle|\n|Party|\n|Action|\n|Shooter|\n|Party|\n|Party|\n|Party|\n|Racing|\n|Racing|\n|Fighting|\n|FPS|\n|Party|\n|Dancing|\n|Dancing|\n|Dancing|\n|Action|\n|Sports|\n|Driving|\n|Action|\n|Platformer|\n|Party|\n|Action|\n|Action|\n|Puzzle|\n|Platformer|\n|Adventure|\n|Adventure|\n|Action|\n|Fighting|\n|Party|\n|Party|\n|Party|\n|Sports|\n|Party|\n|Party|\n|Party|\n|Party|\n|Dancing|\n|Sports|\n|Party|\n|Platformer|\n|Party|\n|Party|\n|Action|\n|Action|\n|Action|\n|Fighting|\n|Music|\n|Sports|\n|Racing|\n|Action|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"genre\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test72683"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Mongolia|\n|South Korea|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test72746"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Brazil|\n|United States|\n|nan|\n|France|\n|Paraguay|\n|Cote D'Ivoire|\n|China|\n|Hong Kong|\n|Ukraine|\n|Bolivia|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"origin\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test72850"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Female|\n|Female|\n|Male|\n|Male|\n|Male|\n|Female|\n|Male|\n|Male|\n|Female|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Female|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Female|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Female|\n|Male|\n|Male|\n|Male|\n|Female|\n|Male|\n|Male|\n|Male|\n|Male|\n|Female|\n|Female|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Female|\n|Female|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"gender\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test72862"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Owner name: BEL FUSE INC., 198 VAN VORST STREET, JERSEY CITY, Free format text: ASSIGNMENT OF ASSIGNORS INTEREST.;ASSIGNOR:BERNSTEIN, ELLIOT;REEL\/FRAME:004866\/0139 Effective date: 19880307 Owner name: BEL FUSE INC.,NEW JERSEY Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:BERNSTEIN, ELLIOT;REEL\/FRAME:004866\/0139 Effective date: 19880307|\n|Year of fee payment: 4|\n|Effective date: 19970611|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"description\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test72952"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Tuesday|\n|\u2022|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"day\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test72986"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|English Japanese|\n|English|\n|English|\n|English|\n|English|\n|English, Japanese, Chinese|\n|English|\n|English|\n|English|\n|English|\n|English, Japanese|\n|English|\n|German|\n|English|\n|English|\n|English|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"language\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test73070"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Dorothy Donnelly|\n|Jean Pieretti|\n|Nancy Phillips|\n|Dorothy Donnelly|\n|Jean Pieretti|\n|Nancy Phillips|\n|Jean Pieretti|\n|Dorothy Donnelly|\n|Nancy Phillips|\n|Nancy Phillips|\n|Nancy Phillips|\n|Dorothy Donnelly|\n|Jean Pieretti|\n|Nancy Phillips|\n|Dorothy Donnelly|\n|Jean Pieretti|\n|Nancy Phillips|\n|Nancy Phillips|\n|Jean Pieretti|\n|Dorothy Donnelly|\n|Dorothy Donnelly|\n|Dorothy Donnelly|\n|Jean Pieretti|\n|Nancy Phillips|\n|Dorothy Donnelly|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"name\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test73335"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Vasteras, SWE|\n|St. Charles, MO, USA|\n|Provost, AB, CAN|\n|Ottawa, ON, CAN|\n|Calgary, AB, CAN|\n|Swan River, MB, CAN|\n|Kladno, CZE|\n|Salem, NJ, USA|\n|Oulu, FIN|\n|Abbotsford, BC, CAN|\n|Olomouc, CZE|\n|Guelph, ON, CAN|\n|Burlington, ON, CAN|\n|Brampton, ON, CAN|\n|Cochrane, AB, CAN|\n|Denver, CO, USA|\n|Mississauga, ON, CAN|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"birth Place\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test73915"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|EnRhythm and EnRhythm MRI Pacemakers|\n|EnTrust\ufffd VR\/DR\/AT ICDs|\n|Kappa 600\/700\/900 and Sigma 100\/200\/300 Pacemakers|\n|6930, 6931, 6948, 6949 Sprint Fidelis Defibrillation Leads|\n|Sigma Implantable Pulse Generators|\n|Consulta\ufffd CRT-P and Syncra\ufffd CRT-P|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"product\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test7401"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|635 17Th, Spokane, WA 99203|\n|517 King, Lumberton, NC 28358|\n|532 University, Greensboro, NC 27403|\n|1488 Old Boardman, Evergreen, NC 28438|\n|28731 Nature, Hinton, IA 51024|\n|4022 Barnes, Southport, NC 28461|\n|366 Staggs Creek, Warrensville, NC 28693|\n|727 Redwood, Vicksburg, MS 39180|\n|727 Redwood, Redwood, MS 39156|\n|106 Livingstone, Cary, NC 27513|\n|408 16Th, Hattiesburg, MS 39401|\n|5902 Mount Eagle, Alexandria, VA 22303|\n|3616 Kenwood, Waco, TX 76706|\n|2716 Rion, Georgetown, SC 29440|\n|20015 95Th, Issaquah, WA 98027|\n|16548 59Th, Bellevue, WA 98006|\n|756 Redwood, Redwood, MS 39156|\n|5403 Friendly Manor, Greensboro, NC 27410|\n|845 Sloop Pointe, Kure Beach, NC 28449|\n|3331 Tara, Clarksville, TN 37042|\n|6283 gentle ln, Alexandria, VA 22310|\n|5403 friendly manor dr, Greensboro, NC 27410|\n|635 e 17th ave, Spokane, WA 99203|\n|727 redwood rd, Redwood, MS 39156|\n|910 arborway apt 4, Houghton, MI 49931|\n|845 sloop pointe ln, Kure Beach, NC 28449|\n|436 stream valley ct, Salisbury, MD 21804|\n|408 s 16th ave, Hattiesburg, MS 39401|\n|1102 1st st, Princeton, MN 55371|\n|10 riders run, Newtown Sq, PA 19073|\n|127 edward rd, Star, NC 27356|\n|1648 terns nest rd, Charleston, SC 29412|\n|3616 kenwood st, Waco, TX 76706|\n|2716 rion st, Georgetown, SC 29440|\n|104 jeanette st, Grayling, MI 49738|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"address\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test74381"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|2007|\n|2008|\n|2007|\n|2008|\n|2007|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2007|\n|2007|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2007|\n|2007|\n|2008|\n|2008|\n|2008|\n|2008|\n|2007|\n|2008|\n|2008|\n|2008|\n|2008|\n|2008|\n|2007|\n|2008|\n|2007|\n|2007|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"year\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test74417"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Fiordifrutta|\n|FiordiFrutta Elite Cycling Team|\n|FiordiFrutta Elite Cycling Team|\n|FiordiFrutta Elite Cycling Team|\n|FiordiFrutta Elite Cycling Team|\n|Fiordifrutta|\n|FiordiFrutta|\n|FiordiFrutta Elite Cycling Team|\n|FiordiFrutta Elite Cycling Team|\n|Fiordifrutta|\n|FiordiFrutta Elite Cycling Team|\n|FiordiFrutta Elite Cycling Team|\n|FiordiFrutta Elite Cycling Team|\n|FiordiFrutta Elite Cycling Team|\n|FiordiFrutta Elite Cycling Team|\n|FiordiFrutta Elite Cycling Team|\n|FiordiFrutta|\n|FiordiFrutta|\n|University of Vermont|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team Name\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test74617"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1|\n|2|\n|3|\n|4|\n|5|\n|6|\n|7|\n|8|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"rank\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test74741"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|0\/6M|\n|6\/12M|\n|12\/24M|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test74852"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1|\n|1|\n|1|\n|1|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"day\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test74896"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1|\n|2|\n|3|\n|4|\n|5|\n|6|\n|7|\n|8|\n|9|\n|10|\n|11|\n|12|\n|13|\n|14|\n|15|\n|16|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"order\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test74976"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Leeds|\n|Glasgow|\n|Manchester|\n|London|\n|Nottingham|\n|Manchester|\n|Hull|\n|Bristol|\n|London|\n|Manchester|\n|London|\n|Bexhill|\n|Gijon|\n|Zaragoza|\n|Barcelona|\n|Pontevedra|\n|Madrid|\n|Seville|\n|Sion|\n|London|\n|Newcastle upon Tyne|\n|Salisbury|\n|London|\n|London|\n|Bristol|\n|Norwich|\n|Hull|\n|Salford|\n|Newcastle upon Tyne|\n|Edinburgh|\n|York|\n|Cardiff|\n|London|\n|Cologne|\n|Lauenau|\n|Dresden|\n|Vienna|\n|Bern|\n|Munich|\n|Luxembourg|\n|The Hague|\n|Brussels|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"city\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test75135"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Rest of Season ? Projected stats for the rest of the season as calculated by PECOTA, Baseball Prospectus' proprietary system that projects player performance based on comparisons with historical player-seasons|\n|Cumulative ? Projected end-of-season stats, combining year-to-date stats with PECOTA projected stats for the remainder of the season|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"duration\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test7520"}}
{"prompt":null,"completion":"{\"chosen_semantic_type\": \"region\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test75238"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Books, journal articles, book chapters, bills, laws, court decisions, reports, news articles and audiovisuals relating to ethics and public policy issues in genetics.|\n|free\/open access resource|\n|Database that includes manuscript, printed and visual primary source materials for the study of global commodities in world history.|\n|Global Health focuses on public health research and practice. Topics include: Biomedical life sciences Chronic diseases Diagnosis and therapy of disease Environmental and occupational health Epidemiology and biostatistics Health promotion Health systems Infectious diseases and parasitology Nutrition and food sciences Public Health Public Health Emergencies Tropical and international health|\n|free\/open access resource|\n|Beta site offering searchable access to US patents from 1790 to mid-2006 (Google plans to expand coverage over time); patents can be downloaded as PDF files.|\n|Provided the by the Office of Research & Development Education (ORDE). For off-campus access please contact lynette.michael@ucdenver.edu|\n|compiled by the UC Denver Health Sciences Library|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"notes\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test75342"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|ONSCENE|\n|DISPATCHED|\n|ONSCENE|\n|ONSCENE|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"status\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test75423"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Boy|\n|Girl|\n|Missing|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"category\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test75541"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|AS|\n|AS|\n|FPAY|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"code\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test75568"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Lest We Forget - The Best Of|\n|Lest We Forget - The Best Of|\n|Lest We Forget - The Best Of|\n|Antichrist Superstar|\n|Lest We Forget - The Best Of|\n|Lest We Forget - The Best Of|\n|Mechanical Animals|\n|Lest We Forget - The Best Of|\n|Lest We Forget - The Best Of|\n|Mechanical Animals|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"album\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test75635"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1|\n|2|\n|3|\n|4|\n|5|\n|6|\n|7|\n|8|\n|9|\n|10|\n|11|\n|12|\n|13|\n|14|\n|15|\n|16|\n|17|\n|18|\n|19|\n|20|\n|21|\n|22|\n|23|\n|24|\n|25|\n|26|\n|27|\n|28|\n|29|\n|30|\n|31|\n|32|\n|33|\n|34|\n|35|\n|36|\n|37|\n|38|\n|39|\n|40|\n|41|\n|42|\n|43|\n|44|\n|45|\n|46|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"rank\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test75682"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Nate Thomas|\n|River Vorse|\n|Peter Wolter|\n|Carter Ros|\n|Dave Bergart|\n|Ben Brunelle|\n|Cooper Roquet|\n|gwenael layec|\n|roger smith|\n|brent peacock|\n|Norm Cessna|\n|Kelly Allison|\n|Sam Wolfe|\n|Ryan Stanley|\n|Lexie Praggastis|\n|Hal Stanley|\n|Loni Unser|\n|Landon Nurge|\n|Kathryn Gibson|\n|tom kohlhardt|\n|Patrick Simpson|\n|Liz Davy|\n|Kim Springer|\n|Dick Andersen|\n|Kelly McCloskey|\n|Maggie Gibson|\n|Julie Daily|\n|joni cashman|\n|Kevin Dupree|\n|Thomas Concannon|\n|Karena Simpson|\n|Joe DiPrisco|\n|Roger Miller|\n|Stacey Gunther|\n|Carol Mutzel|\n|Kerry Gunther|\n|Ken Newhouse|\n|Jock Glidden|\n|Brenda Spackman|\n|Natalie Williams|\n|Sandra Knapp|\n|Patricia Russell|\n|Heinz Walter|\n|Larry Young|\n|Martin Hudson|\n|Audrae Coury|\n|RICHARD GROTH|\n|Carolyn Gilbertson|\n|Jodi Bragassa|\n|Janet Wygle|\n|Debra Hinkley|\n|Dennis Larsen|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"name\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test75726"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|3|\n|0|\n|3|\n|1|\n|2|\n|3|\n|0|\n|2|\n|1|\n|3|\n|0|\n|2|\n|1|\n|3|\n|0|\n|0|\n|0|\n|3|\n|0|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"plays\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test75802"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|This session might be combined with the session on 06 Jun.|\n|This session might be combined with the session on 05 Jun.|\n|Any Plebe Adviser who has not attended a session by this date should contact the Director of Plebe Advising.|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"notes\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test75879"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Butler, Al|\n|Maugeri, Jordy|\n|Collins, Blake|\n|McCleery, Rory|\n|Eskanos, Joe|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"name\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test75907"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Oklahoma City Velo Club|\n|Oklahoma City Velo Club|\n|OKC Velo Club|\n|Oklahoma City Velo Club|\n|Oklahoma City Velo Club|\n|Oklahoma City Velo Club|\n|Oklahoma City Velo Club|\n|Oklahoma City Velo Club|\n|Oklahoma City Velo Club|\n|OKC Velo Club|\n|OKC Velo Club|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team Name\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test75993"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1025 Commons Circle Naples, FL 34119|\n|4280 Tamiami Trail East Naples, FL 34112|\n|7007 Lely Cultural Parkway Naples, FL 34113|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"address\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test76101"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Final|\n|Final|\n|Final\/10|\n|Final|\n|Final\/10|\n|Cancelled|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"status\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test76149"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|isbn 0439813786|\n|isbn 0061142883|\n|isbn 0060256656|\n|isbn 0060775858|\n|isbn 0060775823|\n|isbn 0307021416|\n|isbn 0307021343|\n|isbn 0307960307|\n|isbn 0307021106|\n|isbn 0307021688|\n|isbn 0307105474|\n|isbn 0099408392|\n|isbn 0679805273|\n|isbn 039480001X|\n|isbn 0394800168|\n|isbn 0394800893|\n|isbn 0679889108|\n|isbn 0394800796|\n|isbn 0394800133|\n|isbn 0394800788|\n|isbn 039480029X|\n|isbn 0241003008|\n|isbn 0760703019|\n|isbn 0689711735|\n|isbn 0395389496|\n|isbn 0395304482|\n|isbn 0545027896|\n|isbn 0763655988|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"isbn\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test762"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Lake|\n|Lee|\n|Leon|\n|Levy|\n|Liberty|\n|Madison|\n|Manatee|\n|Marion|\n|Martin|\n|Monroe|\n|Nassau|\n|Okaloosa|\n|Okeechobee|\n|Orange|\n|Osceola|\n|Palm Beach|\n|Pasco|\n|Pinellas|\n|Polk|\n|Putnam|\n|Saint Johns|\n|Saint Lucie|\n|Santa Rosa|\n|Sarasota|\n|Seminole|\n|Sumter|\n|Suwannee|\n|Taylor|\n|Union|\n|Volusia|\n|Wakulla|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"county\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test76242"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|2012|\n|2013|\n|2013|\n|2015|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"year\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test76582"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Commission on Security and Cooperation in Europe|\n|Commission on Security and Cooperation in Europe|\n|National Endowment for Democracy|\n|The National Committee on North Korea|\n|Amnesty International|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"affiliation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test76832"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|BLND|\n|DEAF|\n|WCHR|\n|WCHS|\n|WCHC|\n|WCMP|\n|WCBD|\n|Blindenhund|\n|BAG|\n|BAG (BM)|\n|BAG 2 - 5|\n|XBA\/XMA|\n|XBB-XBE\/MBXME|\n|SKI|\n|WEA|\n|GOLF|\n|BIKE|\n|SPEQ|\n|ADD|\n|RBK|\n|NC1|\n|PETC|\n|TAFR|\n|TAFG|\n|INF|\n|UM|\n|Kinderwagen|\n|SEF|\n|SEF|\n|SEF|\n|SEF|\n|CBF|\n|CXL\/RBK flex|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"service\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test76941"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|30.0|\n|26.8|\n|29.3|\n|24.4|\n|24.9|\n|27.7|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"weight\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test76976"}}
{"prompt":null,"completion":"{\"chosen_semantic_type\": \"status\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test77136"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Natural Calm Orange|\n|Natural Calm Raspberry-Lemon|\n|Natural Calm Unflavored|\n|Natural Calm Raspberry-Lemon|\n|Natural Calm Unflavored|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"product\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test77291"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Short film|\n|Short film|\n|TV movie|\n|Short film|\n|Short film|\n|Short film|\n|Voice|\n|Post-production|\n|Post-production|\n|Post-production|\n|Filming|\n|Voice|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"notes\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test77323"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n|M|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"sex\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test774"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|155|\n|81|\n|253|\n|239|\n|253|\n|251|\n|277|\n|215|\n|288|\n|265|\n|205|\n|233|\n|235|\n|285|\n|272|\n|223|\n|225|\n|299|\n|207|\n|297|\n|231|\n|305|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"duration\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test77406"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|0.0|\n|60.0|\n|60.0|\n|60.0|\n|60.0|\n|60.0|\n|60.0|\n|60.0|\n|60.0|\n|60.0|\n|60.0|\n|60.0|\n|60.0|\n|60.0|\n|60.0|\n|60.0|\n|60.0|\n|60.0|\n|60.0|\n|5.8|\n|5.8|\n|5.8|\n|5.8|\n|5.8|\n|5.8|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"depth\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test7748"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Nonfiction, Adult - Non-Floating|\n|Nonfiction, Adult - Non-Floating|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"collection\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test77638"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|PDF (60K)|\n|Complete Source PDF (6.6M)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"format\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test77822"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|AFMT_MU_LAW|\n|AFMT_A_LAW|\n|AFMT_IMA_ADPCM|\n|AFMT_U8|\n|AFMT_S16_LE|\n|AFMT_S16_BE|\n|AFMT_S8|\n|AFMT_U16_LE|\n|AFMT_U16_BE|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"format\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test77970"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1154-56 E 56Th Street, Chicago, IL|\n|5715 S Kimbark Avenue, Chicago, IL|\n|5557-59 S University Avenue, Chicago, IL|\n|973 E 61St Street, Chicago, IL|\n|1007 East 61St Street, Chicago, IL|\n|1358 E 58Th Street, Chicago, IL|\n|5455 S Ingleside Avenue, Chicago, IL|\n|5535 S Kimbark Avenue, Chicago, IL|\n|5452-5466 S Ellis Avenue, Chicago, IL|\n|6140 S Drexel Avenue, Chicago, IL|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"address\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test78155"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Algeria|\n|Benin|\n|Botswana|\n|Burkina Faso|\n|Burundi|\n|Cameroon|\n|Central African Republic|\n|Chad|\n|Comoros|\n|Congo|\n|Equatorial Guinea|\n|Eritrea|\n|Gabon|\n|Gambia|\n|Ghana|\n|Guinea|\n|Guinea-Bissau|\n|Kenya|\n|Lesotho|\n|Madagascar|\n|Malawi|\n|Mali|\n|Mauritania|\n|Mauritius|\n|Mozambique|\n|Namibia|\n|Niger|\n|Nigeria|\n|Rwanda|\n|Senegal|\n|Sierra Leone|\n|South Africa|\n|Swaziland|\n|Togo|\n|Uganda|\n|United Republic of Tanzania|\n|Zambia|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test7823"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|VASC|\n|TNK|\n|NAT|\n|GPRO|\n|MANH|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"symbol\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test78404"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Ohio|\n|Ohio|\n|Ohio|\n|Ohio|\n|Ohio|\n|Ohio|\n|Ohio|\n|Washington|\n|Ohio|\n|Ohio|\n|Ohio|\n|Ohio|\n|Ohio|\n|Ohio|\n|Ohio|\n|Ohio|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"state\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test78442"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|?|\n|?|\n|?|\n|?|\n|?|\n|?|\n|?|\n|?|\n|?|\n|?|\n|?|\n|?|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"isbn\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test78613"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|83|\n|86|\n|83|\n|89|\n|89|\n|84|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"weight\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test78826"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Cumbria|\n|Herefordshire|\n|North Yorkshire|\n|Nottinghamshire|\n|Essex|\n|Suffolk|\n|Devon|\n|Somerset|\n|Berkshire|\n|Buckinghamshire|\n|Dorset|\n|Hampshire|\n|Northamptonshire|\n|Oxfordshire|\n|Wiltshire|\n|Kent|\n|nan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"county\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test78890"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Dragonspiral Tower (Entrance)|\n|Dragonspiral Tower (Entrance)|\n|Dragonspiral Tower (Outside)|\n|Dragonspiral Tower (Outside)|\n|Giant Chasm (Outside)|\n|Giant Chasm (Outside)|\n|Giant Chasm|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"area\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test78959"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|49|\n|45|\n|45|\n|48|\n|46|\n|47|\n|45|\n|46|\n|46|\n|47|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test78961"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|38 N 4TH STREET|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"address\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test79116"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Kingdom|\n|Subkingdom|\n|Superdivision|\n|Division|\n|Class|\n|Subclass|\n|Order|\n|Family|\n|Genus|\n|Species|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"rank\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test79214"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|314.6|\n|0.0|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"elevation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test79383"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1|\n|2|\n|3|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"rank\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test79600"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|21|\n|3|\n|11|\n|2|\n|AC|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"rank\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test79667"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Full|\n|Unavailable|\n|Unavailable|\n|Unavailable|\n|Full|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"status\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test79691"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|mp_replication init|\n|mp_replication switchON|\n|mp_replication status|\n|mp_replication switchOFF|\n|mp_replication teardown|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"command\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test80061"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|24|\n|24|\n|23|\n|24|\n|24|\n|22|\n|21|\n|19|\n|23|\n|23|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test80086"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Catholic|\n|Mainline Protestant|\n|Evangelical Protestant|\n|Other|\n|nan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"religion\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test80448"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1304-1308 SE 41st |\n|1604 SE 41st|\n|1525 SE 41st|\n|1224 SE 41st |\n|1105 SE 41st|\n|1117 SE 41st|\n|1708 SE 41st|\n|1837 SE 41st|\n|1305 SE 41st|\n|1607 SE 41st|\n|1404 SE 41st|\n|1235 SE 41st|\n|1534 SE 41st|\n|1845 SE 41st|\n|1524 SE 41st|\n|1726 SE 41st|\n|1815 SE 41st|\n|1412 SE 41st|\n|1705 SE 41st|\n|1425 SE 41st|\n|1802 SE 41st|\n|1324 SE 41st|\n|2255 SE 41st|\n|1818 SE 41st|\n|1735 SE 41st|\n|1734SE 41st|\n|1809 SE 41st|\n|1834 SE 41st|\n|1700 SE 41st|\n|2216 SE 41st|\n|1842 SE 41st|\n|1610 SE 41st|\n|2263 SE 41st|\n|1828 SE 41st|\n|1620 SE 41st|\n|1810 SE 41st|\n|1628 SE 41st|\n|1615 SE 41st|\n|2273 SE 41st|\n|2031 SE 41st|\n|1829 SE 41st|\n|1623 SE 41st|\n|2015 SE 41st|\n|2016 SE 41st|\n|1727 SE 41st|\n|1319 SE 41st|\n|2023 SE 41st|\n|1633 SE 41st|\n|1903 SE 41st|\n|1823 SE 41st|\n|1803 SE 41st|\n|2034 SE 41st|\n|1721 SE 41st|\n|1904 SE 41st|\n|2006 SE 41st|\n|1711 SE 41st|\n|1911 SE 41st|\n|1601 SE 41st|\n|2005 SE 41st|\n|1848 SE 41st|\n|1928 SE 41st|\n|1912 SE 41st|\n|1927 SE 41st|\n|2022 SE 41st|\n|1917 SE 41st|\n|1939 SE 41st|\n|1718 SE 41st|\n|1918 SE 41st|\n|1936 SE 41st|\n|1209 Se 41st|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"address\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test80865"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Alabama|\n|Oregon|\n|Clemson|\n|Florida State|\n|Ohio State|\n|LSU|\n|UCLA|\n|Louisville|\n|Miami (FL)|\n|South Carolina|\n|Texas A&M|\n|Stanford|\n|Baylor|\n|Missouri|\n|Texas Tech|\n|Georgia|\n|Oklahoma St.|\n|Nebraska|\n|Oklahoma|\n|Michigan|\n|Fresno State|\n|North. Illinois|\n|Oregon State|\n|Michigan St.|\n|Wisconsin|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test80938"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Mon|\n|Tues|\n|Wed|\n|Thurs|\n|Fri|\n|Sat|\n|Sun|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"order\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test81039"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Challenger|\n|Incumbent|\n|Challenger|\n|Challenger|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Challenger|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Challenger|\n|Challenger|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Challenger|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Challenger|\n|Challenger|\n|Incumbent|\n|Challenger|\n|Challenger|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Incumbent|\n|Incumbent|\n|Challenger|\n|Challenger|\n|Challenger|\n|Challenger|\n|Incumbent|\n|Challenger|\n|Incumbent|\n|Challenger|\n|Challenger|\n|Incumbent|\n|Challenger|\n|Challenger|\n|Challenger|\n|Challenger|\n|Challenger|\n|Challenger|\n|Incumbent|\n|Challenger|\n|Challenger|\n|Challenger|\n|Challenger|\n|Incumbent|\n|Challenger|\n|Challenger|\n|Challenger|\n|Challenger|\n|Challenger|\n|Challenger|\n|Challenger|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"status\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test81087"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|nan|\n|0 to 216-1 or \\u0000 to \\uFFFF|\n|-27 to 27-1 or -128 to 127|\n|-215 to 215-1 or -32768 to 32767|\n|-231 to 231-1 or -2147483648 to 2147483647|\n|-263 to 263-1 or -9223372036854775808 to 9223372036854775807|\n|\u00ef\u00bf\u00bd1.4E-45 to \u00ef\u00bf\u00bd3.4028235E+38|\n|\u00ef\u00bf\u00bd439E-324 to \u00ef\u00bf\u00bd1.7976931348623157E+308|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"range\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test81385"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Platformer|\n|Action|\n|Puzzle|\n|nan|\n|Action|\n|Fighting|\n|Puzzle|\n|Action|\n|Action|\n|Simulation|\n|RPG|\n|Action|\n|Platformer|\n|Action|\n|RPG|\n|RPG|\n|Adventure|\n|Puzzle|\n|Adventure|\n|Puzzle|\n|Platformer|\n|Puzzle|\n|Board Game|\n|Action|\n|Action|\n|Board Game|\n|Other|\n|Simulation|\n|Board Game|\n|Action|\n|Platformer|\n|Adventure|\n|RPG|\n|Puzzle|\n|Action|\n|Platformer|\n|Action|\n|Simulation|\n|Simulation|\n|Puzzle|\n|Racing|\n|Puzzle|\n|Action|\n|Action|\n|Puzzle|\n|Strategy|\n|Simulation|\n|Racing|\n|FPS|\n|Action|\n|Adventure|\n|Puzzle|\n|Action|\n|Arcade|\n|Action|\n|Racing|\n|Puzzle|\n|Simulation|\n|Simulation|\n|Strategy|\n|Education|\n|Strategy|\n|RPG|\n|RPG|\n|Music|\n|Puzzle|\n|Other|\n|Simulation|\n|Sports|\n|Action|\n|Action|\n|Sports|\n|Puzzle|\n|Action|\n|Simulation|\n|Strategy|\n|Education|\n|Apps|\n|Other|\n|Board Game|\n|Action|\n|Action|\n|RPG|\n|Education|\n|Action|\n|Strategy|\n|Board Game|\n|Action|\n|Puzzle|\n|Board Game|\n|Puzzle|\n|Puzzle|\n|Board Game|\n|Arcade|\n|Strategy|\n|RPG|\n|Puzzle|\n|Action|\n|Arcade|\n|Board Game|\n|Platformer|\n|Action|\n|Arcade|\n|Board Game|\n|Action|\n|Action|\n|Arcade|\n|Action|\n|Action|\n|Puzzle|\n|Arcade|\n|Board Game|\n|Other|\n|Action|\n|Puzzle|\n|Music|\n|Arcade|\n|Adventure|\n|RPG|\n|Music|\n|Racing|\n|Action|\n|Racing|\n|Board Game|\n|Puzzle|\n|Puzzle|\n|RPG|\n|RPG|\n|Arcade|\n|Puzzle|\n|Puzzle|\n|Puzzle|\n|Action|\n|Puzzle|\n|Shooter|\n|Simulation|\n|Action|\n|Action|\n|Puzzle|\n|RPG|\n|Action|\n|Arcade|\n|Puzzle|\n|Puzzle|\n|Action|\n|Apps|\n|Simulation|\n|Action|\n|Puzzle|\n|nan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"genre\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test81648"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1|\n|1|\n|2|\n|1|\n|3|\n|2|\n|85|\n|1|\n|52|\n|2|\n|15|\n|19|\n|3|\n|45|\n|1|\n|1|\n|1|\n|2|\n|1|\n|39|\n|1|\n|74|\n|25|\n|7|\n|31|\n|5|\n|21|\n|4|\n|26|\n|4|\n|5|\n|1|\n|3|\n|1|\n|29|\n|9|\n|19|\n|23|\n|2|\n|23|\n|65|\n|1|\n|1|\n|2|\n|1|\n|38|\n|2|\n|1|\n|1|\n|1|\n|22|\n|2|\n|1|\n|1|\n|1|\n|3|\n|1|\n|32|\n|3|\n|1|\n|12|\n|2|\n|4|\n|2|\n|1|\n|1|\n|1|\n|1|\n|1|\n|1|\n|1|\n|1|\n|1|\n|1|\n|1|\n|1|\n|18|\n|69|\n|19|\n|3|\n|1|\n|1|\n|1|\n|1|\n|1|\n|2|\n|1|\n|1|\n|1|\n|1|\n|1|\n|1|\n|1|\n|1|\n|1|\n|10|\n|59|\n|7|\n|36|\n|33|\n|11|\n|1|\n|35|\n|7|\n|17|\n|61|\n|1|\n|1|\n|1|\n|1|\n|2|\n|1|\n|1|\n|1|\n|1|\n|1|\n|1|\n|1|\n|1|\n|1|\n|1|\n|2|\n|3|\n|3|\n|3|\n|3|\n|1|\n|1|\n|67|\n|1|\n|1|\n|1|\n|1|\n|2|\n|1|\n|54|\n|1|\n|1|\n|9|\n|1|\n|1|\n|1|\n|1|\n|5|\n|9|\n|2|\n|17|\n|51|\n|2|\n|3|\n|8|\n|2|\n|2|\n|1|\n|1|\n|1|\n|39|\n|1|\n|8|\n|46|\n|35|\n|4|\n|10|\n|12|\n|66|\n|56|\n|43|\n|5|\n|11|\n|59|\n|46|\n|1|\n|18|\n|54|\n|2|\n|2|\n|1|\n|2|\n|60|\n|58|\n|4|\n|8|\n|3|\n|1|\n|1|\n|54|\n|1|\n|34|\n|2|\n|1|\n|1|\n|30|\n|1|\n|1|\n|1|\n|1|\n|6|\n|1|\n|1|\n|5|\n|29|\n|20|\n|1|\n|1|\n|4|\n|92|\n|24|\n|30|\n|40|\n|64|\n|34|\n|6|\n|22|\n|46|\n|69|\n|2|\n|7|\n|23|\n|3|\n|5|\n|28|\n|16|\n|46|\n|53|\n|2|\n|1|\n|16|\n|18|\n|1|\n|1|\n|3|\n|1|\n|2|\n|4|\n|1|\n|1|\n|48|\n|41|\n|1|\n|93|\n|44|\n|88|\n|1|\n|70|\n|49|\n|3|\n|30|\n|50|\n|32|\n|22|\n|1|\n|73|\n|1|\n|34|\n|1|\n|1|\n|1|\n|1|\n|1|\n|78|\n|1|\n|19|\n|80|\n|1|\n|15|\n|44|\n|26|\n|1|\n|1|\n|1|\n|1|\n|1|\n|1|\n|1|\n|1|\n|1|\n|5|\n|1|\n|49|\n|11|\n|1|\n|11|\n|1|\n|1|\n|40|\n|1|\n|1|\n|66|\n|19|\n|38|\n|56|\n|79|\n|43|\n|18|\n|6|\n|9|\n|1|\n|1|\n|1|\n|3|\n|2|\n|14|\n|2|\n|1|\n|12|\n|1|\n|1|\n|5|\n|1|\n|51|\n|24|\n|1|\n|1|\n|1|\n|1|\n|2|\n|1|\n|2|\n|3|\n|3|\n|1|\n|1|\n|42|\n|1|\n|2|\n|14|\n|3|\n|6|\n|36|\n|9|\n|23|\n|51|\n|1|\n|1|\n|48|\n|68|\n|8|\n|14|\n|36|\n|1|\n|2|\n|4|\n|1|\n|1|\n|1|\n|1|\n|1|\n|1|\n|2|\n|1|\n|1|\n|1|\n|18|\n|2|\n|76|\n|2|\n|1|\n|2|\n|63|\n|13|\n|16|\n|13|\n|17|\n|26|\n|31|\n|26|\n|3|\n|25|\n|37|\n|12|\n|43|\n|25|\n|25|\n|1|\n|3|\n|83|\n|79|\n|44|\n|3|\n|41|\n|3|\n|2|\n|42|\n|17|\n|23|\n|2|\n|1|\n|1|\n|1|\n|41|\n|14|\n|3|\n|1|\n|37|\n|1|\n|32|\n|2|\n|65|\n|67|\n|61|\n|46|\n|35|\n|8|\n|37|\n|6|\n|1|\n|1|\n|1|\n|11|\n|7|\n|8|\n|9|\n|2|\n|2|\n|1|\n|22|\n|2|\n|75|\n|1|\n|16|\n|7|\n|1|\n|18|\n|1|\n|1|\n|1|\n|2|\n|1|\n|59|\n|66|\n|30|\n|64|\n|2|\n|42|\n|45|\n|75|\n|1|\n|9|\n|1|\n|7|\n|1|\n|4|\n|2|\n|1|\n|1|\n|1|\n|1|\n|31|\n|18|\n|9|\n|3|\n|9|\n|1|\n|1|\n|62|\n|2|\n|1|\n|2|\n|1|\n|1|\n|20|\n|1|\n|1|\n|1|\n|1|\n|1|\n|1|\n|2|\n|53|\n|1|\n|83|\n|5|\n|47|\n|37|\n|1|\n|53|\n|1|\n|15|\n|30|\n|2|\n|84|\n|1|\n|2|\n|1|\n|17|\n|13|\n|1|\n|3|\n|23|\n|1|\n|13|\n|31|\n|12|\n|16|\n|1|\n|10|\n|2|\n|2|\n|9|\n|4|\n|4|\n|3|\n|1|\n|34|\n|1|\n|31|\n|33|\n|1|\n|39|\n|50|\n|62|\n|1|\n|2|\n|1|\n|2|\n|1|\n|1|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"ranking\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test81718"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|0.0|\n|183.0|\n|0.0|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"elevation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test81767"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|INF, P|\n|C, OF|\n|1B, UTIL|\n|INF, OF|\n|OF|\n|OF, INF|\n|P, 1B|\n|1B|\n|P, INF|\n|DH, OF|\n|INF, P|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"position\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test81888"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Status|\n|Normal|\n|Normal|\n|Normal|\n|Normal|\n|Normal|\n|Normal|\n|Normal|\n|Normal|\n|Normal|\n|Normal|\n|Normal|\n|Normal|\n|Normal|\n|Normal|\n|Normal|\n|Normal|\n|Normal|\n|Normal|\n|Normal|\n|Normal|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"status\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test82072"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|SMM|\n|SMM|\n|SMM|\n|STAR|\n|SMM|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"club\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test82073"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Union of Bulgarian Mathematicians|\n|Union of Bulgarian Mathematicians|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"publisher\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test8212"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|FSLR|\n|SPWR|\n|SOL|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"symbol\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test82125"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|United States|\n|Canada|\n|United States|\n|United States|\n|United States|\n|Cameroon|\n|United States|\n|United States|\n|United States|\n|United States|\n|United States|\n|United States|\n|United States|\n|United States \/ Nigeria|\n|United States|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"nationality\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test82198"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Cold Storage|\n|Cold Storage|\n|Dragonspiral Tower (Entrance)|\n|Dragonspiral Tower (Outside)|\n|Route 6|\n|Route 6|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"area\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test82285"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Paul Hutinger|\n|William L Moffit|\n|John M Woods|\n|Allen Hellman|\n|Richard Avery|\n|Matthew Flanagan|\n|Morris Eppley|\n|Harry Dodge|\n|John Cousens|\n|Charles McIntyre|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"name\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test82315"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n|canton|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"type\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test8245"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Authorized to practice law|\n|Authorized to practice law|\n|Inactive|\n|Inactive|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"status\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test8253"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Demolished 1874|\n|Burnt down 15 August 1915, base remains.|\n|Molendatabase (Dutch) De Hollandsche Molen (Dutch)|\n|Molendatabase (Dutch) De Hollandsche Molen (Dutch)|\n|Demolished c. 1935, base left standing. De Hollandsche Molen (Dutch)|\n|Molendatabase (Dutch) De Hollandsche Molen (Dutch)|\n|Demolished 1941, base remains standing|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"notes\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test82571"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Baidu ADR Sprinter Long 187,0|\n|Imtech Sprinter Long 3,33|\n|Philips Sprinter BEST Short 26,0|\n|S&P 500 Sprinter BEST Short 2140,1|\n|UCB Sprinter Long 63,2|\n|Aperam Sprinter BEST Short 41,09|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"product\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test82578"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|TBD|\n|Location|\n|Mission Street and The Embarcadero San Francisco, California 94105|\n|Mission Street and The Embarcadero San Francisco, California 94105|\n|Mission Street and The Embarcadero San Francisco, California 94105|\n|Mission Street and The Embarcadero San Francisco, California 94105|\n|Mission Street and The Embarcadero San Francisco, California 94105|\n|Mission Street and The Embarcadero San Francisco, California 94105|\n|Mission Street and The Embarcadero San Francisco, California 94105|\n|Mission Street and The Embarcadero San Francisco, California 94105|\n|Mission Street and The Embarcadero San Francisco, California 94105|\n|Mission Street and The Embarcadero San Francisco, California 94105|\n|Mission Street and The Embarcadero San Francisco, California 94105|\n|Mission Street and The Embarcadero San Francisco, California 94105|\n|Mission Street and The Embarcadero San Francisco, California 94105|\n|Mission Street and The Embarcadero San Francisco, California 94105|\n|Mission Street and The Embarcadero San Francisco, California 94105|\n|Mission Street and The Embarcadero San Francisco, California 94105|\n|Mission Street and The Embarcadero San Francisco, California 94105|\n|Spreckel\u2019s Lake in Golden Gate Park \u2013 John F Kennedy Drive and 36th Avenue San Francisco, California 94121|\n|Spreckel\u2019s Lake in Golden Gate Park \u2013 John F Kennedy Drive and 36th Avenue San Francisco, California 94121|\n|Spreckel\u2019s Lake in Golden Gate Park \u2013 John F Kennedy Drive and 36th Avenue San Francisco, California 94121|\n|Spreckel\u2019s Lake in Golden Gate Park \u2013 John F Kennedy Drive and 36th Avenue San Francisco, California 94121|\n|Spreckel\u2019s Lake in Golden Gate Park \u2013 John F Kennedy Drive and 36th Avenue San Francisco, California 94121|\n|Spreckel\u2019s Lake in Golden Gate Park \u2013 John F Kennedy Drive and 36th Avenue San Francisco, California 94121|\n|Mission Street and The Embarcadero San Francisco, California 94105|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"location\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test82607"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|28.6|\n|25.8|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"weight\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test82732"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Masculine|\n|Feminine|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"gender\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test82937"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|35.9|\n|29.3|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"weight\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test82975"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Part I|\n|1|\n|2|\n|3|\n|4|\n|5|\n|6|\n|7|\n|14|\n|9|\n|10|\n|11|\n|12|\n|13|\n|14|\n|Part II|\n|15|\n|16|\n|17|\n|18|\n|19|\n|20|\n|21|\n|22|\n|23|\n|24|\n|25|\n|26|\n|27|\n|28|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"class\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test83031"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|CAN|\n|CAN|\n|CAN|\n|CAN|\n|CAN|\n|CAN|\n|CAN|\n|CAN|\n|CAN|\n|CAN|\n|CAN|\n|CAN|\n|CAN|\n|CAN|\n|CAN|\n|CAN|\n|CAN|\n|CAN|\n|CAN|\n|CAN|\n|CAN|\n|CAN|\n|CAN|\n|CAN|\n|CAN|\n|CAN|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test83092"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|HPQ Monitor 1|\n|Dell  Monitor 1|\n|HPQ PC1|\n|Dell Opt PC2|\n|nan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"type\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test83169"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|8 Lath Kitchen Shelf Rack|\n|8 Lath Kitchen Shelf Rack|\n|8 Lath Kitchen Shelf Rack|\n|8 Lath Kitchen Shelf Rack Customer also bought: Edwardian Coat Hook White Porcelain Pandora T Bar Handle|\n|8 Lath Kitchen Shelf Rack Customer also bought: Raven Cabinet Knob|\n|8 Lath Kitchen Shelf Rack Customer also bought: Cast Iron Towel Rail Traditional Kitchen Maid\u00ae Pulley Clothes Airer|\n|8 Lath Kitchen Shelf Rack|\n|8 Lath Kitchen Shelf Rack|\n|8 Lath Kitchen Shelf Rack|\n|8 Lath Kitchen Shelf Rack Customer also bought: Herb and Flower Dryer|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"product\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test83271"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Full|\n|Unavailable|\n|Unavailable|\n|Unavailable|\n|Full|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"status\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test83428"}}
{"prompt":null,"completion":"{\"chosen_semantic_type\": \"state\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test83624"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Black Sabbath|\n|Black Sabbath|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"artist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test83736"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Aetna|\n|Aetna|\n|Aetna|\n|Aetna|\n|Aetna|\n|Ambetter from Buckeye Community Health Plan|\n|Ambetter from Buckeye Community Health Plan|\n|Ambetter from Buckeye Community Health Plan|\n|Ambetter from Buckeye Community Health Plan|\n|Ambetter from Buckeye Community Health Plan|\n|Ambetter from Buckeye Community Health Plan|\n|Ambetter from Buckeye Community Health Plan|\n|Ambetter from Buckeye Community Health Plan|\n|Ambetter from Buckeye Community Health Plan|\n|Ambetter from Buckeye Community Health Plan|\n|Ambetter from Buckeye Community Health Plan|\n|Ambetter from Buckeye Community Health Plan|\n|Ambetter from Buckeye Community Health Plan|\n|Ambetter from Buckeye Community Health Plan|\n|Ambetter from Buckeye Community Health Plan|\n|Ambetter from Buckeye Community Health Plan|\n|Ambetter from Buckeye Community Health Plan|\n|Ambetter from Buckeye Community Health Plan|\n|Ambetter from Buckeye Community Health Plan|\n|Ambetter from Buckeye Community Health Plan|\n|Ambetter from Buckeye Community Health Plan|\n|Ambetter from Buckeye Community Health Plan|\n|Ambetter from Buckeye Community Health Plan|\n|Ambetter from Buckeye Community Health Plan|\n|Ambetter from Buckeye Community Health Plan|\n|Ambetter from Buckeye Community Health Plan|\n|Ambetter from Buckeye Community Health Plan|\n|Ambetter from Buckeye Community Health Plan|\n|Ambetter from Buckeye Community Health Plan|\n|Ambetter from Buckeye Community Health Plan|\n|Anthem Blue Cross and Blue Shield|\n|Anthem Blue Cross and Blue Shield|\n|Anthem Blue Cross and Blue Shield|\n|Anthem Blue Cross and Blue Shield|\n|Anthem Blue Cross and Blue Shield|\n|Anthem Blue Cross and Blue Shield|\n|Anthem Blue Cross and Blue Shield|\n|Anthem Blue Cross and Blue Shield|\n|Anthem Blue Cross and Blue Shield|\n|Anthem Blue Cross and Blue Shield|\n|Anthem Blue Cross and Blue Shield|\n|Anthem Blue Cross and Blue Shield|\n|Anthem Blue Cross and Blue Shield|\n|Anthem Blue Cross and Blue Shield|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|Assurant Health|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|AultCare Insurance Company|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|CareSource Just4Me|\n|HealthSpan|\n|HealthSpan|\n|HealthSpan|\n|HealthSpan|\n|HealthSpan|\n|HealthSpan|\n|HealthSpan|\n|HealthSpan|\n|HealthSpan|\n|HealthSpan|\n|HealthSpan Integrated Care|\n|HealthSpan Integrated Care|\n|HealthSpan Integrated Care|\n|HealthSpan Integrated Care|\n|HealthSpan Integrated Care|\n|HealthSpan Integrated Care|\n|HealthSpan Integrated Care|\n|HealthSpan Integrated Care|\n|HealthSpan Integrated Care|\n|HealthSpan Integrated Care|\n|Humana Insurance Company|\n|Humana Insurance Company|\n|Humana Insurance Company|\n|Humana Insurance Company|\n|Humana Insurance Company|\n|Humana Insurance Company|\n|Humana Insurance Company|\n|Humana Insurance Company|\n|Humana Insurance Company|\n|Humana Insurance Company|\n|Humana Insurance Company|\n|Humana Insurance Company|\n|Humana Insurance Company|\n|Humana Insurance Company|\n|InHealth Mutual|\n|InHealth Mutual|\n|InHealth Mutual|\n|InHealth Mutual|\n|InHealth Mutual|\n|InHealth Mutual|\n|InHealth Mutual|\n|InHealth Mutual|\n|InHealth Mutual|\n|MedMutual|\n|MedMutual|\n|MedMutual|\n|MedMutual|\n|MedMutual|\n|MedMutual|\n|MedMutual|\n|MedMutual|\n|MedMutual|\n|MedMutual|\n|MedMutual|\n|MedMutual|\n|MedMutual|\n|MedMutual|\n|MedMutual|\n|Molina Marketplace|\n|Molina Marketplace|\n|Molina Marketplace|\n|Paramount Insurance Company|\n|Paramount Insurance Company|\n|Paramount Insurance Company|\n|Paramount Insurance Company|\n|Paramount Insurance Company|\n|Paramount Insurance Company|\n|Paramount Insurance Company|\n|Paramount Insurance Company|\n|Premier Health Plan, Inc.|\n|Premier Health Plan, Inc.|\n|Premier Health Plan, Inc.|\n|Premier Health Plan, Inc.|\n|Premier Health Plan, Inc.|\n|SummaCare|\n|SummaCare|\n|SummaCare|\n|SummaCare|\n|SummaCare|\n|SummaCare|\n|SummaCare|\n|SummaCare|\n|SummaCare|\n|SummaCare|\n|UnitedHealthcare|\n|UnitedHealthcare|\n|UnitedHealthcare|\n|UnitedHealthcare|\n|UnitedHealthcare|\n|UnitedHealthcare|\n|UnitedHealthcare|\n|UnitedHealthcare|\n|UnitedHealthcare|\n|UnitedHealthcare|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test83773"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|13. Huddersfield|\n|14. Hull City|\n|15. Ipswich|\n|16. Leeds Utd|\n|17. Middlesbrough|\n|18. MK Dons|\n|19. Preston|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test83780"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|4:19|\n|3:21|\n|4:22|\n|4:43|\n|2:20|\n|5:08|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"duration\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test83835"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Southern Miss 71, Houston 67|\n|Marshall 78, Houston 74|\n|Houston 72, East Carolina 69|\n|SMU 85, Houston 74|\n|Tulsa 66, Houston 57|\n|Tulane 73, Houston 69|\n|UTEP 80, Houston 55|\n|SMU 74, Houston 51|\n|Houston 63, Tulsa 49|\n|Houston 80, UAB 76|\n|Houston 70, Memphis 54|\n|Houston 70, Rice 64|\n|Houston 71, Southern Miss 61|\n|Houston 74, UCF 61|\n|Houston 71, Rice 66|\n|Houston 74, Tulane 64|\n|UTEP 79, Houston 61|\n|Houston 82, Lamar 75|\n|Duke 84, Houston 68|\n|Houston 73, TCU 68|\n|Akron 81, Houston 76|\n|Houston 63, Miami (Fla.) 62|\n|Houston 66, Texas Tech 63|\n|LSU 77, Houston 46|\n|Houston 87, McNeese State 57|\n|Liberty 70, Houston 61|\n|Xavier 69, Houston 47|\n|Middle Tennessee 69, Houston 68|\n|Cal Poly 53, Houston 48|\n|CSU Bakersfield 95, Houston 83|\n|Houston 76, Texas Southern 58|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"result\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test83843"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|3.0|\n|nan|\n|nan|\n|3.0|\n|nan|\n|nan|\n|nan|\n|nan|\n|11.0|\n|25.0|\n|9.0|\n|14.0|\n|5.0|\n|18.0|\n|13.0|\n|6.0|\n|34.0|\n|7.0|\n|0.0|\n|8.0|\n|19.0|\n|7.0|\n|nan|\n|21.0|\n|32.0|\n|16.0|\n|0.0|\n|3.0|\n|22.0|\n|5.0|\n|1.0|\n|56.0|\n|56.0|\n|54.0|\n|46.0|\n|nan|\n|19.0|\n|9.0|\n|3.0|\n|9.0|\n|14.0|\n|27.0|\n|nan|\n|15.0|\n|nan|\n|8.0|\n|nan|\n|nan|\n|76.0|\n|nan|\n|50.0|\n|nan|\n|nan|\n|nan|\n|nan|\n|2.0|\n|nan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"position\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test84075"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Akkadian|\n|Akkadian|\n|Sumerian|\n|Neo-Babylonian|\n|Sumerian and Eblaite|\n|Hittite|\n|Akkadian|\n|Ugaritic|\n|Akkadian|\n|Akkadian|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"language\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test84644"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Park Lane South & 89th St.|\n|Type|\n|Hard|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"location\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test84982"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|nan|\n|3456.0|\n|2159.0|\n|390.0|\n|838.0|\n|828.0|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"file Size\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test84994"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|CZE|\n|OMA|\n|RUS|\n|HAI|\n|ANT|\n|HON|\n|NGR|\n|MAR|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test8501"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|bin\/nutch readdb|\n|bin\/nutch mergedb|\n|bin\/nutch readlinkdb|\n|bin\/nutch inject|\n|bin\/nutch hostinject|\n|bin\/nutch generate|\n|bin\/nutch freegen|\n|bin\/nutch fetch|\n|bin\/nutch parse|\n|bin\/nutch readseg|\n|bin\/nutch mergesegs|\n|bin\/nutch updatedb|\n|bin\/nutch updatehostdb|\n|bin\/nutch invertlinks|\n|bin\/nutch mergelinkdb|\n|bin\/nutch elasticindex|\n|bin\/nutch solrindex|\n|bin\/nutch solrdedup|\n|bin\/nutch solrclean|\n|bin\/nutch index|\n|bin\/nutch dedup|\n|bin\/nutch clean|\n|bin\/nutch parsechecker|\n|bin\/nutch indexchecker|\n|bin\/nutch domainstats|\n|bin\/nutch webgraph|\n|bin\/nutch linkrank|\n|bin\/nutch scoreupdater|\n|bin\/nutch nodedumper|\n|bin\/nutch plugin|\n|bin\/nutch nutchserver|\n|bin\/nutch webapp|\n|bin\/nutch junit|\n|bin\/nutch commoncrawldump|\n|bin\/nutch CLASSNAME|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"command\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test85027"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1|\n|1|\n|0|\n|1|\n|0|\n|0|\n|1|\n|0|\n|1|\n|0|\n|1|\n|0|\n|0|\n|0|\n|0|\n|0|\n|1|\n|0|\n|0|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"plays\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test85123"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|kkubasik|\n|nobody|\n|ramiro|\n|kedmiston|\n|davide-ceretti|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"owner\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test85124"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|61|\n|36|\n|25|\n|4|\n|57|\n|33|\n|28|\n|8|\n|53|\n|50|\n|11|\n|35|\n|15|\n|17|\n|33|\n|28|\n|18|\n|15|\n|0|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"plays\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test85166"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Regional C+|\n|Regional C+|\n|Regional C|\n|Regional C|\n|Regional C|\n|Regional C|\n|Regional C+|\n|Regional C|\n|Regional C|\n|Regional C|\n|National Junior Only|\n|Regional C+|\n|Regional C+|\n|Regional C|\n|Regional C|\n|Regional C|\n|Regional C|\n|Regional C|\n|Regional C|\n|Regional C|\n|Regional C|\n|National Junior Only|\n|Regional C+|\n|Regional C+|\n|National B|\n|Regional C|\n|Regional C|\n|Regional C|\n|Regional C|\n|Regional C|\n|Regional C+|\n|Regional C+|\n|National B|\n|Regional C+|\n|Regional C|\n|Regional C|\n|National Junior Only|\n|Regional C|\n|Regional C|\n|Regional C|\n|Regional A|\n|National Junior Only|\n|Regional A|\n|National B|\n|Regional C|\n|Regional C|\n|Regional C|\n|Regional C|\n|Rider's total points|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"category\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test85395"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|F Lynch|\n|R Winston|\n|R Winston|\n|Barry McHugh|\n|Martin Lane|\n|Graham Gibbons|\n|P Pickard|\n|P Pickard|\n|Barry McHugh|\n|Megan Carberry (5)|\n|Kevin Lundie (7)|\n|P Pickard|\n|P Pickard|\n|Robert Tart (3)|\n|P Pickard|\n|P Pickard|\n|Barry McHugh|\n|Tim Clark (3)|\n|Graham Gibbons|\n|G Lee|\n|D Swift|\n|S De Sousa|\n|Barry McHugh|\n|P Pickard (3)|\n|P Pickard (3)|\n|Barry McHugh|\n|Barry McHugh|\n|Barry McHugh|\n|T Eaves|\n|P Pickard (3)|\n|G Lee|\n|S De Sousa|\n|Barry McHugh|\n|Barry McHugh|\n|Barry McHugh|\n|Barry McHugh|\n|P Pickard|\n|William Carson|\n|F Norton|\n|T Eaves|\n|A Kirby|\n|F Norton|\n|R Lucey-Butler (3)|\n|A Mullen|\n|P Cosgrave|\n|F Norton|\n|R Lucey-Butler (3)|\n|F Norton|\n|F Norton|\n|F Norton|\n|F Norton|\n|F Norton|\n|F Norton|\n|David Probert|\n|F Norton|\n|J Quinn|\n|F Norton|\n|F Norton|\n|F Norton|\n|F Norton|\n|Paul Eddery|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"jockey\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test85587"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Female|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Female|\n|Male|\n|Male|\n|Female|\n|Female|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"sex\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test85780"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|MIAMI-DADE|\n|MIAMI-DADE|\n|MIAMI-DADE|\n|MIAMI-DADE|\n|MIAMI-DADE|\n|MIAMI-DADE|\n|MIAMI-DADE|\n|MIAMI-DADE|\n|MIAMI-DADE|\n|MIAMI-DADE|\n|MIAMI-DADE|\n|MIAMI-DADE|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"county\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test85872"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Max Opening, 39\"|\n|Max Opening, 37\"|\n|Max Opening, 36\"|\n|Max Opening, 35\"|\n|Max Opening, 34\"|\n|Max Opening, 32\"|\n|Max Opening, 31\"|\n|Max Opening, 30\"|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"description\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test85970"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|ip dns server|\n|ip host|\n|ip name-server|\n|show ip dns primary|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"command\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test86073"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|scutellarioides|\n|scutellarioides|\n|scutellarioides|\n|scutellarioides|\n|scutellarioides|\n|scutellarioides|\n|scutellarioides|\n|scutellarioides|\n|scutellarioides|\n|scutellarioides|\n|scutellarioides|\n|pumilus|\n|scutellarioides|\n|scutellarioides|\n|scutellarioides|\n|scutellarioides|\n|scutellarioides|\n|pumilus|\n|scutellarioides|\n|scutellarioides|\n|scutellarioides|\n|scutellarioides|\n|scutellarioides|\n|scutellarioides|\n|scutellarioides|\n|pumilus|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"species\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test86172"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|FR Doc.|\n|RIN|\n|Docket No.|\n|Amdt. No.|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"type\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test86181"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|PGT INC|\n|CALAVO GROW\u2026|\n|ZOE'S KITCH\u2026|\n|ORION ENGIN\u2026|\n|DOT HILL SY\u2026|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test86338"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Ottawa Fury FC|\n|New York Cosmos|\n|Tampa Bay Rowdies|\n|Carolina RailHawks|\n|Minnesota United FC|\n|Indy Eleven|\n|Fort Lauderdale Strikers|\n|FC Edmonton|\n|San Antonio Scorpions|\n|Atlanta Silverbacks|\n|Jacksonville Armada|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test86470"}}
{"prompt":null,"completion":"{\"chosen_semantic_type\": \"region\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test8661"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Fed Rep|\n|FSt|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"status\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test86629"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|Europe|\n|North America|\n|North America|\n|North America|\n|North America|\n|Southern Caribbean|\n|Southern Caribbean|\n|Southern Caribbean|\n|Southern Caribbean|\n|Southern Caribbean|\n|Southern Caribbean|\n|Southern Caribbean|\n|Southern Caribbean|\n|Southern Caribbean|\n|Southern Caribbean|\n|Southern Caribbean|\n|Central America|\n|Central America|\n|Central America|\n|Central America|\n|Central America|\n|Central America|\n|Central America|\n|Central America|\n|Central America|\n|South America|\n|South America|\n|South America|\n|South America|\n|South America|\n|South America|\n|South America|\n|South America|\n|South America|\n|South America|\n|South America|\n|South America|\n|Asia\/Europe|\n|Asia\/Europe|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Oceania|\n|Oceania|\n|Oceania|\n|Oceania|\n|Oceania|\n|Oceania|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n|Africa|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"region\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test86723"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|UCI|\n|UCLA|\n|METR|\n|UNAT|\n|ARIZ|\n|SSLM|\n|MVN|\n|MVN|\n|SCAM|\n|CYCL|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"club\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test86762"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|A|\n|A|\n|A|\n|B|\n|B|\n|C|\n|D|\n|E|\n|E|\n|E|\n|E|\n|E|\n|G|\n|H|\n|H|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"person\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test86843"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|aMvEL|\n|aMvEL|\n|mget|\n|clownen|\n|clownen|\n|clownen|\n|clownen|\n|clownen|\n|clownen|\n|clownen|\n|clownen|\n|clownen|\n|clownen|\n|clownen|\n|clownen|\n|clownen|\n|masteroid|\n|clownen|\n|clownen|\n|clownen|\n|clownen|\n|clownen|\n|clownen|\n|clownen|\n|clownen|\n|clownen|\n|clownen|\n|clownen|\n|clownen|\n|clownen|\n|r3p0|\n|Kal-Earth2|\n|Kal-Earth2|\n|clownen|\n|clownen|\n|mnemosyne|\n|Kal-Earth2|\n|friesland2k5|\n|BHR|\n|Gfy|\n|hima193|\n|verdikt|\n|verdikt|\n|aMvEL|\n|verdikt|\n|verdikt|\n|verdikt|\n|bloody hill|\n|FrenchTeAm|\n|aMvEL|\n|aMvEL|\n|LOKA1944|\n|Anderss|\n|manman89|\n|hatemmonir87|\n|verdikt|\n|verdikt|\n|clownen|\n|aMvEL|\n|aMvEL|\n|bloody hill|\n|FlyLo|\n|aMvEL|\n|Cosinus|\n|carrot|\n|carrot|\n|Anderss|\n|carrot|\n|FrenchTeAm|\n|Anderss|\n|aMvEL|\n|erazerhead|\n|masteroid|\n|aMvEL|\n|aMvEL|\n|Abdelmunsef|\n|Anderss|\n|verdikt|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"owner\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test86861"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|nan|\n|58053.0|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"sales\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test86883"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|To House Government Organization|\n|Introduced in House|\n|To Government Organization then Judiciary|\n|Filed for introduction|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"description\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test87018"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|CAL-MAINE F\u2026|\n|GTT COMMUNI\u2026|\n|SIMULATIONS\u2026|\n|BOOT BARN H\u2026|\n|OUTERWALL I\u2026|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test87625"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n|F|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"sex\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test87671"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Beverly Hills, CA 90210|\n|Beverly Hills, CA 90210|\n|Arvada, CO 80002|\n|Aurora, CO 80010|\n|Aurora, CO 80012|\n|Aurora, CO 80012|\n|Aurora, CO 80014|\n|Aurora, CO 80014|\n|Broomfield, CO 80021|\n|Louisville, CO 80027|\n|Westminster, CO 80031|\n|Englewood, CO 80110|\n|Englewood, CO 80112|\n|Englewood, CO 80112|\n|Englewood, CO 80112|\n|Littleton, CO 80123|\n|Littleton, CO 80124|\n|Denver, CO 80202|\n|Denver, CO 80202|\n|Denver, CO 80202|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"address\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test87786"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|902|\n|454|\n|448|\n|453|\n|449|\n|519|\n|383|\n|257|\n|645|\n|834|\n|68|\n|508|\n|326|\n|315|\n|519|\n|251|\n|261|\n|261|\n|129|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"plays\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test87795"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|5-2 Retired|\n|7-6 (8-6), 6-7 (7-9), 6-4|\n|2-6, 0-6|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"result\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test87894"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|L 1-4|\n|T 1-1|\n|W 0-1|\n|W 1-4|\n|L 0-5|\n|W 0-2|\n|W 0-2|\n|W 2-1|\n|W 0-1|\n|L 0-1|\n|L 1-3|\n|W 2-1|\n|T 0-0|\n|L 0-1|\n|W 1-0|\n|L 2-0|\n|W 1-3|\n|L 1-2|\n|T 0-0|\n|T 2-2|\n|T 0-0|\n|W 2-0|\n|T 0-0|\n|W 0-3|\n|W 2-1|\n|L 2-3|\n|W 0-3|\n|T 2-2|\n|T 3-3|\n|W 3-0|\n|L 4-2|\n|T 1-1|\n|W 0-2|\n|L 1-3|\n|W 3-2|\n|W 1-2|\n|L 1-0|\n|T 2-2|\n|W 3-1|\n|L 4-3|\n|W 2-0|\n|W 2-1|\n|T 3-3|\n|T 1-1|\n|W 2-3|\n|T 1-1|\n|L 0-1|\n|T 1-1|\n|T 4-4|\n|L 1-2|\n|L 0-2|\n|T 1-1|\n|T 1-1|\n|W 0-1|\n|T 2-2|\n|W 0-1|\n|W 0-1|\n|T 1-1|\n|L 0-4|\n|T 1-1|\n|T 1-1|\n|L 0-2|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"result\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test88039"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Albania|\n|Andorra|\n|Armenia|\n|Austria|\n|Azerbaijan|\n|Belarus|\n|Belgium|\n|Bosnia & Herzegovina|\n|Bulgaria|\n|Croatia|\n|Cyprus|\n|Czech Republic|\n|Denmark|\n|Estonia|\n|Finland|\n|France|\n|Georgia|\n|Germany|\n|Greece|\n|Hungary|\n|Iceland|\n|Ireland|\n|Italy|\n|Kosovo|\n|Latvia|\n|Liechtenstein|\n|Lithuania|\n|Luxembourg|\n|Macedonia|\n|Malta|\n|Moldova|\n|Monaco|\n|Montenegro|\n|The Netherlands|\n|Norway|\n|Poland|\n|Portugal|\n|Romania|\n|Russia|\n|San Marino|\n|Serbia|\n|Slovakia|\n|Slovenia|\n|Spain|\n|Sweden|\n|Switzerland|\n|Turkey|\n|Ukraine|\n|United Kingdom|\n|Vatican City (Holy See)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test8808"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|R\u00e9dactionnel|\n|R\u00e9dactionnel|\n|R\u00e9dactionnel|\n|R\u00e9dactionnel|\n|Auto|\n|Auto|\n|Auto|\n|Auto|\n|Auto|\n|Auto|\n|Aviation|\n|Auto|\n|Auto|\n|Aviation|\n|Aviation|\n|Auto|\n|Auto|\n|Auto|\n|Auto|\n|Couverture|\n|Auto|\n|Auto|\n|Auto|\n|Auto|\n|Aviation|\n|Aviation|\n|Aviation|\n|Auto|\n|Auto|\n|R\u00e9dactionnel|\n|Aviation|\n|Couverture|\n|Auto|\n|Aviation|\n|Auto|\n|Auto|\n|Auto|\n|Aviation|\n|Auto|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"type\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test88125"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|3PA\/FGA|\n|PF\/g|\n|PF\/40|\n|PF\/40p|\n|PF|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"category\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test88510"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Guard|\n|Back|\n|Back|\n|End|\n|Guard|\n|Guard|\n|Back|\n|Tackle|\n|End|\n|End|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"position\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test88741"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|CAL-MAINE F\u2026|\n|GTT COMMUNI\u2026|\n|SIMULATIONS\u2026|\n|BOOT BARN H\u2026|\n|OUTERWALL I\u2026|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test88792"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Mr J Laxon +|\n|Mrs J A White|\n|Mr R A Pendall|\n|Mr E J Cantillon|\n|Mrs A V French|\n|Mr E J Cantillon|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"owner\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test88989"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|69,070|\n|25,000|\n|47,000|\n|24,000|\n|5,000|\n|3,000|\n|2,000|\n|3,000|\n|6,000|\n|nan|\n|6,000|\n|5,000|\n|2,000|\n|nan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"capacity\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test89094"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1 SPEEDWELL AVE|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"address\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test89543"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Light Weight 7.5 oz. Poly-Cotton Karate Uniform|\n|Light Weight 7.5 oz. Poly-Cotton Karate Uniform|\n|Light Weight 8 oz. 100% Cotton Karate Uniform|\n|Light Weight 8 oz. 100% Cotton Karate Uniform|\n|Light Weight Junior Karate Uniform|\n|Heavy Weight - White Karate Uniform|\n|Heavy Weight - Black Karate Uniform|\n|Heavy Weight - Blue Karate Uniform|\n|Heavy Weight - Red karate Uniform|\n|Heavy Weight Brushed Canvas - White karate Uniform|\n|Heavy Weight Brushed Canvas - Black Karate Uniform|\n|Orange Label (White Karate Uniform)|\n|Yellow Label (White karate Uniform)|\n|Black Label (White karate Uniform)|\n|Toyo - White premium Karate Uniform - Made in Japan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"product\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test89572"}}
{"prompt":null,"completion":"{\"chosen_semantic_type\": \"family\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test89621"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|69.5|\n|69.3|\n|68.7|\n|68.1|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"depth\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test89977"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Type|\n|Zip Code|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"county\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test90130"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|UK Standard 48hr|\n|UK Next Day|\n|UK Next Day Pre 12|\n|Collect+ 72hr|\n|Click & Collect|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"service\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test90159"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Last week|\n|Last month|\n|Last 3 months|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"range\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test9023"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|nan|\n|nan|\n|nan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"status\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test90443"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|California|\n|Hawaii|\n|New Mexico|\n|Florida|\n|Alaska|\n|Texas|\n|Wyoming|\n|Washington|\n|District of Columbia|\n|Arizona|\n|Utah|\n|Oregon|\n|Idaho|\n|Georgia|\n|Oklahoma|\n|South Carolina|\n|Colorado|\n|Virginia|\n|North Carolina|\n|Maryland|\n|New Hampshire|\n|Alabama|\n|Louisiana|\n|Tennessee|\n|Kansas|\n|New Jersey|\n|Montana|\n|Arkansas|\n|Maine|\n|Rhode Island|\n|Connecticut|\n|Minnesota|\n|Nevada|\n|Nebraska|\n|Missouri|\n|Illinois|\n|Mississippi|\n|Massachusetts|\n|Delaware|\n|North Dakota|\n|Wisconsin|\n|Vermont|\n|South Dakota|\n|New York|\n|Kentucky|\n|Indiana|\n|Iowa|\n|Michigan|\n|Ohio|\n|Pennsylvania|\n|West Virginia|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"state\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test90646"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Hawaii|\n|Rhode Island|\n|Alaska|\n|Vermont|\n|Alabama|\n|Maine|\n|Montana|\n|Wyoming|\n|Arkansas|\n|Iowa|\n|Missouri|\n|Minnesota|\n|South Carolina|\n|Indiana|\n|New Hampshire|\n|Idaho|\n|Louisiana|\n|Michigan|\n|North Carolina|\n|Maryland|\n|Oklahoma|\n|Georgia|\n|Kentucky|\n|Illinois|\n|Nebraska|\n|Utah|\n|Massachusetts|\n|Conneticut|\n|Arizona|\n|Delaware|\n|New Mexico|\n|Tennessee|\n|Virginia|\n|Washington |\n|Texas|\n|New Jersey|\n|Ohio|\n|Nevada|\n|Colorado|\n|Oregon|\n|New York|\n|Florida|\n|California|\n|North Dakota|\n|South Dakota|\n|Kansas|\n|Wisconsin|\n|Mississippi|\n|West Virginia|\n|Pensylvannia|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"state\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test9078"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|43|\n|42|\n|44|\n|41|\n|42|\n|40|\n|42|\n|42|\n|40|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test91016"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Commission on Security and Cooperation in Europe|\n|Commission on Security and Cooperation in Europe|\n|Commission on Security and Cooperation in Europe|\n|Switzerland|\n|European Union|\n|United Nations|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"affiliation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test91087"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|+5.66%|\n|0.48%|\n|0.36|\n|$1.1B|\n|$30.6B|\n|15.5|\n|0.18%|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"category\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test91153"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Comedy, Romance, School Life, Shoujo, Slice of Life|\n|Drama, Shounen Ai|\n|Comedy, Drama, School Life, Shoujo, Slice of Life|\n|Drama|\n|Drama, Fantasy, Shoujo, Shounen Ai|\n|Drama, Romance, Shoujo, Slice of Life|\n|Comedy, Drama, Psychological, School Life, Shoujo, Supernatural, Tragedy|\n|Drama, Historical, Romance, Shoujo, Shounen Ai, Slice of Life, Supernatural, Tragedy|\n|Drama, Fantasy, Josei, Romance|\n|Drama, School Life, Slice of Life, Yaoi|\n|Adult, Yaoi|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"genre\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test91187"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Pedro Rodriguez|\n|Irvin Rohena (5)|\n|Pedro Rodriguez|\n|Daniel Morales|\n|Daniel Morales|\n|R Torres|\n|Joel Cruz|\n|Jaime Rodriguez|\n|Charlie Amaro|\n|Charlie Amaro|\n|Charlie Amaro|\n|Charlie Amaro|\n|Guillermo Rodriguez|\n|Guillermo Rodriguez|\n|R Torres|\n|R Torres|\n|Steven Fret (7)|\n|Charlie Amaro|\n|Charlie Amaro|\n|Charlie Amaro|\n|Charlie Amaro|\n|Jilver Chamafi|\n|Manuel Franco (7)|\n|Abel Lezcano|\n|Abel Lezcano|\n|Abel Lezcano|\n|Luis Perez|\n|Luis Perez|\n|Luis Perez|\n|Luis Perez|\n|Maylan Studart|\n|Guillermo Rodriguez (7)|\n|Emanuel Nieves (7)|\n|Emanuel Nieves (7)|\n|Omar Camejo|\n|Guillermo Rodriguez|\n|Olaf Hernandez|\n|Olaf Hernandez|\n|Olaf Hernandez|\n|Omar Camejo|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"jockey\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test91687"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Category 3 Men|\n|Category 3 Men|\n|Category 3 Men|\n|Category 3 Men|\n|Category 3 Men|\n|Category 3 Men|\n|Category 3 Men|\n|Category 3 Men|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"category\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test91941"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|application\/pdf|\n|application\/pdf|\n|application\/pdf|\n|application\/pdf|\n|application\/pdf|\n|application\/pdf|\n|application\/pdf|\n|application\/pdf|\n|application\/pdf|\n|application\/pdf|\n|application\/pdf|\n|application\/pdf|\n|application\/pdf|\n|application\/pdf|\n|application\/pdf|\n|application\/pdf|\n|application\/pdf|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"format\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test92043"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Auckland|\n|Balleny|\n|Bellona|\n|Bounty|\n|Campbell|\n|Chatham|\n|Cook|\n|Esperance|\n|Hjort|\n|Kandavu|\n|Lachlan|\n|Lord Howe|\n|Macquarie|\n|Norfolk|\n|Port Jackson|\n|Pukaki|\n|Rarotonga|\n|Resolution|\n|Rotuma|\n|Three Kings|\n|Tonga|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"area\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test9212"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Super Charge! Xtreme 4.0 Blue Raspberry|\n|Super Charge! Xtreme 4.0 Fruit Punch|\n|Super Charge! Xtreme 4.0 Lemon Lime|\n|Super Charge! Xtreme 4.0 Strawberry Dreamsicle|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"product\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test92202"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Scientific Research and Development Services|\n|Pharmaceutical and Medicine Manufacturing|\n|Colleges, Universities, and Professional Schools|\n|Architectural, Engineering, and Related Services|\n|Drugs and Druggists' Sundries Merchant Wholesalers|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"industry\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test92239"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|E|\n|E|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"class\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test92644"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Yes|\n|Yes|\n|Yes|\n|Yes|\n|Yes|\n|Yes|\n|Yes|\n|Yes|\n|Yes|\n|Yes|\n|Yes|\n|Yes|\n|Yes|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"education\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test92816"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|52.0|\n|0.0|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"elevation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test92825"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Junior Men|\n|Junior Men|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"category\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test92864"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|39|\n|39|\n|44|\n|66|\n|79|\n|83|\n|94|\n|94|\n|108|\n|118|\n|129|\n|137|\n|137|\n|139|\n|141|\n|152|\n|152|\n|161|\n|178|\n|179|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"region\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test92905"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Michael Giacchino|\n|Michael Giacchino|\n|Michael Giacchino|\n|Michael Giacchino|\n|Michael Giacchino|\n|Michael Giacchino|\n|Michael Giacchino|\n|Michael Giacchino|\n|Michael Giacchino|\n|Michael Giacchino|\n|Michael Giacchino|\n|Michael Giacchino|\n|Michael Giacchino|\n|Michael Giacchino|\n|Michael Giacchino|\n|Michael Giacchino|\n|Michael Giacchino|\n|Michael Giacchino|\n|Michael Giacchino|\n|Michael Giacchino|\n|Michael Giacchino|\n|Michael Giacchino|\n|Michael Giacchino|\n|Michael Giacchino|\n|Michael Giacchino|\n|Michael Giacchino|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"artist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test93031"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Nonfiction, Adult|\n|Nonfiction, Adult - Non-Floating|\n|Nonfiction, Adult|\n|Nonfiction, Adult|\n|Nonfiction, Adult|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"collection\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test93038"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Villanova|\n|Dallas|\n|Miami|\n|Miami|\n|Cincinnati|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"city\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test93217"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|line drive single, right field|\n|first base to second base, sacrifice hit, bunted ground ball|\n|ground ball single, center field|\n|intentional walk|\n|pop fly out, first base|\n|fly ball out, center field|\n|third base to first base, ground ball|\n|walk|\n|strikeout|\n|ground ball out, first base|\n|ground ball out, first base|\n|fly ball double, center field|\n|strikeout|\n|walk|\n|strikeout|\n|third base to first base, ground ball|\n|line drive double, center field|\n|strikeout|\n|pop fly out, first base|\n|pitcher to first base, ground ball|\n|walk|\n|strikeout, double play|\n|line drive double, left field|\n|error pitcher (sacrifice hit, bunted ground ball)|\n|strikeout|\n|strikeout|\n|intentional walk|\n|strikeout|\n|fly ball out, right field|\n|pitcher to first base, ground ball|\n|line drive out, right field|\n|walk|\n|bunted ground ball single, second base|\n|pitcher to second base, sacrifice hit, bunted ground ball|\n|intentional walk|\n|third base to catcher, force out, ground ball|\n|walk|\n|line drive single, right field|\n|strikeout|\n|strikeout|\n|strikeout|\n|strikeout|\n|walk|\n|second base to first base, ground ball|\n|strikeout|\n|strikeout|\n|strikeout|\n|line drive double, left field|\n|fly ball out, left field|\n|strikeout|\n|line drive single, right field|\n|walk|\n|strikeout|\n|strikeout|\n|line drive out, right field|\n|shortstop to first base, ground ball|\n|strikeout|\n|line drive out, right field|\n|first base to pitcher, ground ball|\n|strikeout|\n|line drive double, left field|\n|strikeout|\n|ground ball single, second base to right field|\n|fly ball out, left field|\n|line drive single, center field|\n|fly ball double, right field|\n|first base to pitcher, ground ball|\n|third base to first base, ground ball|\n|strikeout|\n|line drive single, left field|\n|line drive single, left field|\n|line drive single, right field|\n|third base to first base, ground ball|\n|strikeout|\n|fly ball out, right field|\n|strikeout|\n|pop fly out, shortstop|\n|strikeout|\n|foul pop fly out, third base|\n|strikeout|\n|fly ball out, right field|\n|strikeout|\n|line drive out, second base|\n|strikeout, catcher to first|\n|foul pop fly out, shortstop|\n|pop fly out, first base|\n|fly ball out, center field|\n|line drive single, left field|\n|shortstop to second base, force out, ground ball|\n|fly ball out, right field|\n|fly ball out, center field|\n|third base to first base, ground ball|\n|fly ball out, center field|\n|shortstop to first base, ground ball|\n|line drive single, left field|\n|strikeout|\n|shortstop to first base, ground ball|\n|sacrifice fly out, right field|\n|walk|\n|line drive single, center field|\n|line drive double, third base|\n|intentional walk|\n|strikeout|\n|strikeout|\n|strikeout|\n|strikeout|\n|line drive out, left field|\n|home run, left field, fly ball|\n|walk|\n|fly ball double, center field|\n|intentional walk|\n|third base to second base to first base, ground ball double play|\n|ground ball single, right field|\n|strikeout|\n|third base to second base to first base, ground ball double play|\n|fly ball out, center field|\n|shortstop to first base, ground ball|\n|fly ball out, center field|\n|walk|\n|line drive single, left field|\n|first base to second base, sacrifice hit, bunted ground ball|\n|strikeout|\n|third base to first base, ground ball|\n|shortstop to first base, ground ball|\n|ground ball single, shortstop|\n|line drive double, left field|\n|strikeout|\n|fly ball out, center field|\n|fly ball out, center field|\n|fly ball out, right field|\n|strikeout|\n|second base to first base, ground ball|\n|fly ball out, center field|\n|line drive double, right field|\n|strikeout|\n|fly ball out, left field|\n|strikeout|\n|fly ball out, left field|\n|fly ball out, left field|\n|fly ball out, center field|\n|fly ball double, center field|\n|strikeout|\n|line drive out, left field|\n|strikeout|\n|fly ball out, right field|\n|line drive single, center field|\n|strikeout|\n|catcher to first base, ground ball|\n|fly ball out, right field|\n|strikeout|\n|line drive single, left field|\n|pop fly out, shortstop|\n|pitcher to first base, ground ball|\n|line drive single, center field|\n|third base to first base, ground ball|\n|ground ball single, right field|\n|strikeout|\n|fly ball out, right field|\n|shortstop to first base, ground ball|\n|shortstop to first base, ground ball|\n|walk|\n|second base to first base, ground ball|\n|line drive single, center field|\n|line drive single, center field|\n|ground ball single, right field|\n|F9LF out, right field|\n|strikeout|\n|home run, left field, fly ball|\n|fly ball out, right field|\n|line drive single, left field|\n|line drive single, right field|\n|line drive double, left field|\n|shortstop to first base, ground ball|\n|fly ball double play out, center field|\n|fly ball single, center field|\n|pitcher to second base, sacrifice hit, bunted ground ball|\n|walk|\n|third base to second base to first base, ground ball double play|\n|pop fly out, second base|\n|strikeout|\n|pop fly out, second base|\n|fly ball out, center field|\n|fly ball out, right field|\n|fly ball out, center field|\n|walk|\n|second base to shortstop, force out, ground ball|\n|pitcher to second base, sacrifice hit, bunted ground ball|\n|walk|\n|strikeout|\n|home run, left field, fly ball|\n|strikeout|\n|strikeout|\n|ground ball single, center field|\n|third base to first base, ground ball|\n|third base to first base, ground ball|\n|strikeout|\n|fly ball out, right field|\n|line drive single, center field|\n|fly ball out, center field|\n|line drive single, center field|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"result\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test93353"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|70|\n|73|\n|70|\n|73|\n|72|\n|73|\n|73|\n|74|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"age\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test9341"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|IL-1 \u03b1 Interleukin-1 alpha human, recombinant, E. coli|\n|IL-1 \u03b2 Interleukin-1 beta human, recombinant, E. coli|\n|IL-1 \u03b2 Interleukin 1 beta murine, recombinant, E. coli|\n|IL-1ra Interleukin 1 receptor antagonist human, recombinant, E. coli|\n|IL-6 Interleukin-6, B-cell stimulatory factor human, recombinant, E. coli|\n|IL-6 Interleukin-6, B-cell hybridoma growth factor murine, recombinant, E. coli|\n|IL-15 Interleukin 15 human, recombinant, E. coli|\n|IL-15 Interleukin 15 murine, recombinant, E. coli|\n|KGF-1 Keratinocyte Growth Factor 1 human, recombinant, E. coli|\n|KGF-2 Keratinocyte Growth Factor 2 human, recombinant, E. coli|\n|TNF \u03b1 Tumor Necrosis Factor human, recombinant, E. coli|\n|TNF \u03b1 Tumor Necrosis Factor mouse, recombinant, E. coli|\n|TNF \u03b2 Tumor Necrosis Factor \u03b2 human, recombinant, E. coli|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"product\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test9361"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|White-headed Duck Oxyura leucocephala|\n|Lesser Kestrel Falco naumanni|\n|Sterna nilotica|\n|Whiskered Tern Chlidonias hybrida|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"species\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test93618"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Brazos|\n|Harris|\n|Travis|\n|Bexar|\n|Tarrant|\n|Dallas|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"county\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test93712"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n|Salt Lake|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"county\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test93957"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|7|\n|3|\n|3|\n|1|\n|5|\n|3|\n|4|\n|3|\n|3|\n|4|\n|3|\n|4|\n|3|\n|4|\n|6|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"plays\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test9410"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Medical and Other Precision Equipment|\n|Computer Software|\n|Consumer Credit Card and Related Services|\n|Computers|\n|Diversified Outsourcing Services|\n|Food Production|\n|Financial Data Services|\n|Wholesalers: Electronics and Office Equipment|\n|Packaging, Containers|\n|Chemicals|\n|Insurance: Property and Casualty|\n|Motor Vehicles|\n|Tobacco|\n|Securities|\n|Beverages|\n|Specialty Retailers: Diversified|\n|Industrial and Farm Equipment|\n|Airlines|\n|Engineering, Construction|\n|Electronics|\n|Megabanks|\n|Internet Services and Retailing|\n|Health Care: Medical Facilities|\n|Information Technology Services|\n|Semiconductors|\n|Homebuilders|\n|Specialty Retailers: Apparel|\n|Temporary Help|\n|Hotels, Casinos, Resorts|\n|Food Services|\n|Wholesalers: Health Care|\n|Health Care: Pharmacy and Other Services|\n|Motor Vehicle Parts|\n|Consumer Food Products|\n|Electric and Gas Utilities|\n|Apparel|\n|Insurance: Life and Health|\n|Pharmaceuticals|\n|Mining, Crude-Oil Production|\n|Metals|\n|Soaps and Cosmetics|\n|Food and Drug Stores|\n|Network and Other Communications Equipment|\n|Energy|\n|Real Estate|\n|Electric and Gas Utilities|\n|Petroleum Refining|\n|Telecommunications|\n|Superregional Banks|\n|Trucking, Transportation, Logistics|\n|Aerospace and Defense|\n|Health Care: Insurance and Managed Care|\n|Delivery|\n|Wholesalers: Diversified|\n|General Merchandisers|\n|Entertainment|\n|Forest and Paper Products|\n|Home Equipment, Furnishings|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"industry\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test94712"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Owner name: PHONAK COMMUNICATIONS AG, SWITZERLAND Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:GERBER, LOUIS;GYSIN, STEFAN;REEL\/FRAME:014597\/0098 Effective date: 20031006|\n|Effective date: 20130623|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"description\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test94824"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Patch|\n|Patch|\n|Patch|\n|Patch|\n|Patch|\n|Patch|\n|Patch|\n|Patch|\n|Patch|\n|Patch|\n|Patch|\n|Patch|\n|Patch|\n|Patch|\n|Patch|\n|Patch|\n|Patch|\n|Patch|\n|Patch|\n|Patch|\n|Patch|\n|Patch|\n|Patch|\n|Patch|\n|Patch|\n|Patch|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"class\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test95063"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Hardware See the Application Server Requirements. Software Cisco Unified MeetingPlace Application Server Release 8.5\/Express Media Server (EMS) Cisco Security Agent Release 6.0.1.112 Notes: The Express Media Server is a set of software modules that reside on the Application Server. During installation, you will have the option to choose either the Hardware Media Server or the Express Media Server. For details about the EMS, see the Express Media Server Requirements. The Cisco Security Agent software is packaged and installed during the Application Server installation. For details, see the \"Using Cisco Security Agent (CSA) on the Application Server\" in the Configuration Guide for Cisco Unified MeetingPlace Release 8.5 at http:\/\/www.cisco.com\/en\/US\/products\/sw\/ps5664\/ps5669\/products_installation_and_configuration_guides_list.html. The Cisco Unified MeetingPlace integration for Microsoft Outlook scheduling is included on the Application Server.|\n|An internally deployed Cisco Unified MeetingPlace Web Server can be used for the following: Audio or audio\/video recordings with optional customer-provided SAN\/NAS storage option Installation of the Cisco Unified MeetingPlace integration for IBM Lotus Notes Note: If you plan to use the MeetingPlace web scheduling interface, see the System Requirements for MeetingPlace-Scheduling Deployments instead. Hardware See the Web Server Requirements. Software (Optional) Cisco Security Agent Release 6.0.1.117 for Cisco Unified MeetingPlace (Optional) Cisco Unified MeetingPlace Web Server Release 8.5|\n|Hardware Cisco Media Convergence Server (MCS) For information about physically installing the Cisco MCS, see the documentation at this location: http:\/\/www.cisco.com\/en\/US\/products\/hw\/voiceapp\/ps378\/prod_installation_guides_list.html Note: Make sure that the specific Cisco MCS model supports the number of SIP sessions that are required by your Cisco Unified MeetingPlace system. Software Cisco Unified MeetingPlace Release 8.5 supports the following versions of Cisco Unified Communications Manager (CUCM): CUCM 6.1(5), 7.0(2), 7.1(5), 8.0(1), 8.0(2), 8.0(3), 8.5(1), 8.6(1), 9.0(1), 9.1(1) CUCM-SME 7.1(3), 8.0, 8.5 Notes: CUCM 8.6 is supported in Cisco Unified MeetingPlace Release 8.5.2 and later. Ad-hoc (SCCP) meetings are supported in Cisco Unified MeetingPlace Release 8.5.2 and later. Ad-hoc meetings are not supported with CUCM 8.5. CUCM 8.0(3) is the only release that supports SIP Refers for multinode Cisco Unified MeetingPlace systems (WebEx-scheduling deployments). If you require this support, open a case with Cisco TAC against the Cisco Unified Communications Manager to obtain the latest Engineering Special (ES) or Service Update (SU) version of CUCM 8.0(3).|\n|If your deployment requires a HMS, see the Hardware Media Server Requirements. Notes: During installation, you will have the option to choose either the Hardware Media Server or the Express Media Server. You do not require both. The Hardware Media Server should be on the same local network segment as the Application Server. Cisco Unified MeetingPlace does not support Hardware Media Server blades that are remotely located.|\n|Cisco Unified MeetingPlace PhoneView is available only to Cisco Unified IP Phones that are registered to Cisco Unified Communications Manager. Cisco Unified MeetingPlace PhoneView is not supported with the following: Cisco Unified CallManager Express Cisco Unified Communications Manager Express Cisco Unified MeetingPlace Web Servers with SSL enabled Cisco Unified MeetingPlace Application Servers with SSL enabled Hardware For a list of supported Cisco Unified IP Phones, see Audio Endpoint Compatibility.|\n|See the Video Requirements.|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"requirement\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test95362"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|MS|\n|MS|\n|NC|\n|MS|\n|NC|\n|MS|\n|MS|\n|MS|\n|MS|\n|NC|\n|MS|\n|MS|\n|MS|\n|MS|\n|MS|\n|NC|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"type\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test95594"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|nan|\n|14.0|\n|nan|\n|16.0|\n|nan|\n|nan|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"position\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test957"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Bryophyta|\n|Chlorophyta|\n|Bacillariophyta|\n|Rhodophyta|\n|Pteridophyta|\n|Pinophyta|\n|Hepatophyta|\n|Otros Plantae|\n|Asparagales|\n|Poales|\n|Alismatales|\n|Zingiberales|\n|Arecales|\n|Pandanales|\n|Otros Liliopsida|\n|Rosales|\n|Fabales|\n|Rubiales|\n|Malpighiales|\n|Asterales|\n|Fagales|\n|Magnoliales|\n|Otros Magnoliopsida|\n|Mollusca|\n|Cnidaria|\n|Porifera|\n|Annelida|\n|Otros Animalia|\n|Actinopterygii|\n|Aves|\n|Reptilia|\n|Mammalia|\n|Amphibia|\n|Otros Chordata|\n|Lepidoptera|\n|Diptera|\n|Coleoptera|\n|Hymenoptera|\n|Hemiptera|\n|Orthoptera|\n|Trichoptera|\n|Otros insecta|\n|Arachnida|\n|Malacostraca|\n|Diplopoda|\n|Maxillopoda|\n|Otros arthropoda|\n|Ascomycota|\n|Basidiomycota|\n|Zygomycota|\n|Chytridiomycota|\n|Bacteria|\n|Protozoa|\n|Chromista|\n|Viruses|\n|Archaea|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"order\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test9575"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Mon|\n|Tues|\n|Wed|\n|Thurs|\n|Fri|\n|Sat|\n|Sun|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"order\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test95854"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|4h|\n|8h|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"duration\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test95917"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Loss|\n|Loss|\n|Win|\n|Win|\n|Win|\n|Win|\n|Win|\n|Loss|\n|Win|\n|Win|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"result\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test95951"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|P J Dobbs|\n|P Hanagan|\n|Dane O'Neill|\n|T P O'Shea|\n|R Hills|\n|R Hills|\n|R Hills|\n|R Hills|\n|T P O'Shea|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"jockey\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test95970"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|2.94m|\n|1.00 m|\n|0.67m|\n|D-Ra: 1.11m|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"director\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test96216"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|5|\n|2|\n|51|\n|2|\n|6|\n|5|\n|29|\n|4|\n|1|\n|3|\n|19|\n|1|\n|9|\n|1|\n|12|\n|5|\n|13|\n|4|\n|2|\n|6|\n|1|\n|1|\n|8|\n|7|\n|2|\n|27|\n|8|\n|21|\n|7|\n|5|\n|8|\n|4|\n|3|\n|1|\n|1|\n|6|\n|11|\n|2|\n|1|\n|10|\n|3|\n|2|\n|1|\n|8|\n|10|\n|1|\n|25|\n|8|\n|2|\n|43|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"sales\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test96493"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Calories|\n|Protein|\n|Fat|\n|Carbohydrates|\n|Dietary Fiber|\n|Sugars|\n|Calcium|\n|Iron|\n|Sodium|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"name\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test96513"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|8|\n|3|\n|12|\n|4|\n|2|\n|5|\n|5|\n|3|\n|0|\n|3|\n|2|\n|2|\n|8|\n|2|\n|4|\n|3|\n|7|\n|3|\n|3|\n|4|\n|7|\n|3|\n|5|\n|4|\n|3|\n|4|\n|1|\n|3|\n|2|\n|5|\n|3|\n|1|\n|0|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"plays\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test96525"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|I Want to Live|\n|Plenty Plenty Soul|\n|Demo|\n|Demo|\n|75th Birthday Bash Live!|\n|At Carnegie Hall|\n|Monk on Mondays|\n|75th Birthday Bash Live!|\n|Hallelujah Train|\n|The Godfathers of Groove|\n|Green's Blues|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"album\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test96569"}}
{"prompt":null,"completion":"{\"chosen_semantic_type\": \"director\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test96717"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Management of companies and enterprises|\n|Colleges and universities|\n|Junior colleges|\n|Agents and managers for public figures|\n|Technical and trade schools|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"industry\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test96751"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|34.8|\n|34.4|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"weight\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test96845"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|87.14|\n|8.42|\n|20.23|\n|4.96|\n|9,523|\n|16.5|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"county\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test97038"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|FR Doc.|\n|RIN|\n|TD|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"type\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test97070"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Village Bridge|\n|Route 11|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"area\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test97353"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Adobe PDF|\n|Adobe PDF|\n|Adobe PDF|\n|Adobe PDF|\n|Adobe PDF|\n|Adobe PDF|\n|Adobe PDF|\n|Adobe PDF|\n|Adobe PDF|\n|Adobe PDF|\n|Adobe PDF|\n|Adobe PDF|\n|Adobe PDF|\n|Adobe PDF|\n|Adobe PDF|\n|Adobe PDF|\n|Adobe PDF|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"format\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test97365"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|33.0|\n|29.2|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"weight\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test97657"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Stillingia sylvatica|\n|Stillingia sylvatica|\n|Stillingia sylvatica|\n|Stillingia sylvatica|\n|Stillingia sylvatica|\n|Stillingia sylvatica|\n|Stillingia sylvatica|\n|Stillingia sylvatica|\n|Stillingia sylvatica|\n|Stillingia sylvatica|\n|Stillingia sylvatica|\n|Stillingia uleana|\n|Stilpnopappus speciosus|\n|Stilpnopappus speciosus|\n|Stilpnopappus viridis|\n|Stipecoma peltigera|\n|Stipulicida setacea var. setacea|\n|Stipulicida setacea var. setacea|\n|Stipulicida setacea var. setacea|\n|Stipulicida setacea var. setacea|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"species\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test97669"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|The Life and Times of Jonny Valiant (Deluxe Edition)|\n|Next to Nothing (Deluxe Edition)|\n|The Life and Times of Jonny Valiant (Deluxe Edition)|\n|Next to Nothing (Deluxe Edition)|\n|Bloody Murdah (feat. Tech N9ne) - Single|\n|The Life and Times of Jonny Valiant (Deluxe Edition)|\n|Next to Nothing (Deluxe Edition)|\n|Next to Nothing (Deluxe Edition)|\n|The Life and Times of Jonny Valiant|\n|Next to Nothing (Deluxe Edition)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"album\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test97755"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Alabama|\n|Oregon|\n|Florida State|\n|Ohio State|\n|Baylor|\n|Clemson|\n|Stanford|\n|Auburn|\n|LSU|\n|Oklahoma|\n|Oklahoma St.|\n|Texas A&M|\n|South Carolina|\n|Missouri|\n|Miami (FL)|\n|Michigan St.|\n|UCF|\n|Louisville|\n|UCLA|\n|Wisconsin|\n|N. Illinois|\n|Arizona State|\n|Fresno State|\n|Notre Dame|\n|Texas Tech|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test97990"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Automatic Cork Extractor|\n|Bar Caddy|\n|Bar Cutting Board|\n|Bar Spoon Muddler - With Disc End|\n|Best of British Beer - 4 Bottles|\n|Boston Shaker - Glass 16oz|\n|Boston Shaker - Tin 28oz|\n|Boston Shaker Set|\n|Chrome Stopper|\n|Classic Mesh Soda Syphon|\n|Cobbler - 26oz Cocktail Shaker|\n|Cocktail Mixing Spoon - 28cm|\n|Cocktail Sticks - 1000 Wooden|\n|Corks - Sold in 50's|\n|Curved Pourer|\n|Drainer Tray|\n|England - Bottle Opener|\n|Etoiles Absinthe Spoon|\n|Feuile D'absinthe Spoon|\n|Foil Parasols|\n|Free Flow Pourers|\n|Glass Rimming Set|\n|Glitter Sticks|\n|Half Yard Of Ale - Glass & Holder|\n|Hawthorn Strainer|\n|Ice Bucket & Stand|\n|Ice Pick|\n|Ice Scoop|\n|Ice Tongs|\n|Julep Strainer|\n|Lemon & Sugar Mallets|\n|Lemon And Lime Wedger|\n|Lemon Squeezer|\n|Margarita Rimmer|\n|Measuring Spoon Set - Stainless Steel|\n|Mexican Elbow - Lime Squeezer|\n|Mixing Glass - With Lip|\n|Nickel Bottle Stopper|\n|Optic - 25ml|\n|Optic - 35ml|\n|Optic - 50ml|\n|Peeler|\n|Pocket Model Corkscrew|\n|Professional Bar Bag|\n|Reservoir - Absinthe Glass|\n|Rotary Bar Stand - 6 Bottle|\n|Rotary Shelf Stand - 4 Bottle|\n|Salt & Sugar Rimmer - Chrome|\n|Shelf Bar Bracket - 1 Bottle|\n|Silicone Muddler|\n|Speed Bottle Rack - 6 Bottle|\n|Stirrers - Paddle & Disc Head|\n|Strainer - With Drip Bowl|\n|Thimble Measure - 175ml|\n|Thimble Measure - 250ml|\n|Thimble Measure - 25ml|\n|Thimble Measure - 35ml|\n|Thimble Measure - 50ml|\n|Thimble Measure - 70ml|\n|United States Of Beer - 4 Bottles|\n|Wall Bar Bracket - 1 Bottle|\n|Wall Bar Bracket - 4 Bottle|\n|Wall Bar Bracket - 6 Bottle|\n|Wooden Muddler|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"product\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test98078"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Year of fee payment: 4|\n|Year of fee payment: 8|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"description\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test98145"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|0.0|\n|443.0|\n|384.0|\n|0.0|\n|418.0|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"elevation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test98264"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Transportation|\n|Travel|\n|Travel|\n|Tourism|\n|Travel|\n|Travel|\n|Travel|\n|Travel|\n|Travel|\n|Tourism|\n|Transportation|\n|Booking|\n|Booking|\n|Booking|\n|Booking|\n|Booking|\n|Booking|\n|Travel|\n|Travel|\n|Travel|\n|Photos|\n|Travel|\n|Transportation|\n|Travel|\n|Weather|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"category\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test98411"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|kevin adams|\n|pat garlock|\n|andy shively|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"name\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test98438"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Raphael House, Old Ship Lane|\n|Raphael House, Old Ship Lane|\n|Raphael House, Old Ship Lane|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"address\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test98529"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|TESS|\n|ESI|\n|GES|\n|TECD|\n|SANM|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"symbol\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test9869"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Hamana|\n|Homegrown Racing|\n|Homegrown Racing\/Jacks Bicycle Center|\n|Homegrown Racing\/Jacks Bicycle Center|\n|Homegrown Racing|\n|Homegrown Racing\/Jacks Bicycle Center|\n|Jacks Homegrown|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"team Name\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test98808"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Causes user to skip the next turn.|\n|nan|\n|When it misses, the user takes half damage.|\n|TMTRAINER effect (and others)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"notes\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test98988"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Michael Dinner|\n|Bill Johnson|\n|Dean Parisot|\n|Gwyneth Horder-Payton|\n|Adam Arkin|\n|Don Kurt|\n|Bill Johnson|\n|Peter Werner|\n|Michael Dinner|\n|John Dahl|\n|Jon Avnet|\n|Michael Pressman|\n|Adam Arkin|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"director\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test99032"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|With a list of additional permissions found at https:\/\/tahoe-lafs.org\/trac\/tahoe-lafs\/browser\/trunk\/COPYING.TGPPL.rst.|\n|With a list of additional permissions to combine with other freely licensed works, and convey the result. (https:\/\/tahoe-lafs.org\/trac\/tahoe-lafs\/browser\/trunk\/COPYING.GPL)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"notes\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test99149"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Hellbound and Heartless|\n|Hellbound and Heartless|\n|Hellbound and Heartless|\n|Hellbound and Heartless|\n|Hellbound and Heartless|\n|Hellbound and Heartless|\n|Hellbound and Heartless|\n|Hellbound and Heartless|\n|Hellbound and Heartless|\n|Hellbound and Heartless|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"album\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test99176"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|1951|\n|1958|\n|1962|\n|1991|\n|1992|\n|2005|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"year\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test99207"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|chevrolet|\n|buick|\n|plymouth|\n|amc|\n|ford|\n|ford|\n|chevrolet|\n|plymouth|\n|pontiac|\n|amc|\n|citroen|\n|chevrolet|\n|ford|\n|plymouth|\n|amc|\n|dodge|\n|plymouth|\n|ford|\n|chevrolet|\n|buick|\n|toyota|\n|plymouth|\n|amc|\n|ford|\n|datsun|\n|vw|\n|peugeot|\n|audi|\n|saab|\n|bmw|\n|amc|\n|ford|\n|chevrolet|\n|dodge|\n|hi|\n|datsun|\n|chevrolet|\n|toyota|\n|ford|\n|vw|\n|amc|\n|plymouth|\n|chevrolet|\n|ford|\n|amc|\n|chevrolet|\n|pontiac|\n|ford|\n|plymouth|\n|dodge|\n|ford|\n|pontiac|\n|amc|\n|chevrolet|\n|pontiac|\n|ford|\n|mercury|\n|buick|\n|peugeot|\n|fiat|\n|toyota|\n|datsun|\n|vw|\n|plymouth|\n|toyota|\n|dodge|\n|vw|\n|chevrolet|\n|ford|\n|chevrolet|\n|pontiac|\n|plymouth|\n|ford|\n|amc|\n|mercury|\n|buick|\n|oldsmobile|\n|chrysler|\n|mazda|\n|amc|\n|chevrolet|\n|ford|\n|plymouth|\n|volvo|\n|vw|\n|peugeot|\n|renault|\n|ford|\n|datsun|\n|toyota|\n|dodge|\n|toyota|\n|buick|\n|amc|\n|chevrolet|\n|ford|\n|dodge|\n|mercury|\n|chevrolet|\n|ford|\n|plymouth|\n|chrysler|\n|buick|\n|amc|\n|plymouth|\n|chevrolet|\n|amc|\n|ford|\n|plymouth|\n|vw|\n|chevrolet|\n|ford|\n|plymouth|\n|oldsmobile|\n|amc|\n|toyota|\n|chevrolet|\n|datsun|\n|mazda|\n|ford|\n|mercury|\n|fiat|\n|chevrolet|\n|pontiac|\n|fiat|\n|buick|\n|audi|\n|volvo|\n|dodge|\n|saab|\n|toyota|\n|oldsmobile|\n|plymouth|\n|ford|\n|amc|\n|chevrolet|\n|datsun|\n|ford|\n|toyota|\n|chevrolet|\n|chevrolet|\n|amc|\n|plymouth|\n|ford|\n|buick|\n|dodge|\n|ford|\n|amc|\n|audi|\n|vw|\n|buick|\n|toyota|\n|datsun|\n|dodge|\n|fiat|\n|fiat|\n|honda|\n|subaru|\n|fiat|\n|plymouth|\n|chevrolet|\n|mercury|\n|ford|\n|pontiac|\n|chevrolet|\n|plymouth|\n|ford|\n|buick|\n|chevrolet|\n|amc|\n|plymouth|\n|buick|\n|chevrolet|\n|ford|\n|toyota|\n|ford|\n|amc|\n|pontiac|\n|toyota|\n|vw|\n|datsun|\n|ford|\n|vw|\n|amc|\n|audi|\n|peugeot|\n|volvo|\n|saab|\n|honda|\n|fiat|\n|buick|\n|capri|\n|dodge|\n|renault|\n|chevrolet|\n|dodge|\n|amc|\n|ford|\n|plymouth|\n|chevrolet|\n|ford|\n|amc|\n|chevrolet|\n|chevrolet|\n|vw|\n|honda|\n|dodge|\n|ford|\n|pontiac|\n|amc|\n|vw|\n|datsun|\n|toyota|\n|ford|\n|volvo|\n|plymouth|\n|peugeot|\n|toyota|\n|mercedes|\n|cadillac|\n|chevrolet|\n|ford|\n|dodge|\n|honda|\n|buick|\n|renault|\n|plymouth|\n|datsun|\n|chevrolet|\n|oldsmobile|\n|dodge|\n|mercury|\n|chevrolet|\n|buick|\n|plymouth|\n|ford|\n|pontiac|\n|chevrolet|\n|chrysler|\n|ford|\n|vw|\n|pontiac|\n|toyota|\n|ford|\n|chevrolet|\n|dodge|\n|subaru|\n|vw|\n|datsun|\n|bmw|\n|mazda|\n|vw|\n|ford|\n|mazda|\n|datsun|\n|honda|\n|oldsmobile|\n|dodge|\n|mercury|\n|pontiac|\n|chevrolet|\n|ford|\n|ford|\n|plymouth|\n|amc|\n|buick|\n|mercury|\n|dodge|\n|amc|\n|chevrolet|\n|buick|\n|ford|\n|dodge|\n|chevrolet|\n|toyota|\n|datsun|\n|dodge|\n|toyota|\n|plymouth|\n|oldsmobile|\n|datsun|\n|audi|\n|volvo|\n|saab|\n|peugeot|\n|vw|\n|honda|\n|pontiac|\n|mercury|\n|ford|\n|amc|\n|dodge|\n|chevrolet|\n|ford|\n|mercury|\n|dodge|\n|buick|\n|ford|\n|chevrolet|\n|chrysler|\n|vw|\n|mazda|\n|dodge|\n|amc|\n|mercedes|\n|cadillac|\n|peugeot|\n|oldsmobile|\n|plymouth|\n|plymouth|\n|datsun|\n|fiat|\n|buick|\n|chevrolet|\n|oldsmobile|\n|pontiac|\n|vw|\n|toyota|\n|chevrolet|\n|datsun|\n|chevrolet|\n|ford|\n|amc|\n|dodge|\n|audi|\n|toyota|\n|mazda|\n|datsun|\n|toyota|\n|mazda|\n|dodge|\n|datsun|\n|vw|\n|vw|\n|audi|\n|mercedes|\n|honda|\n|renault|\n|subaru|\n|vw|\n|datsun|\n|mazda|\n|triumph|\n|ford|\n|honda|\n|plymouth|\n|buick|\n|dodge|\n|chevrolet|\n|plymouth|\n|toyota|\n|plymouth|\n|honda|\n|subaru|\n|datsun|\n|toyota|\n|mazda|\n|plymouth|\n|ford|\n|ford|\n|vw|\n|renault|\n|honda|\n|toyota|\n|datsun|\n|mazda|\n|peugeot|\n|saab|\n|volvo|\n|toyota|\n|datsun|\n|buick|\n|oldsmobile|\n|ford|\n|chrysler|\n|chevrolet|\n|chevrolet|\n|chevrolet|\n|pontiac|\n|dodge|\n|pontiac|\n|ford|\n|amc|\n|vw|\n|mazda|\n|mazda|\n|plymouth|\n|mercury|\n|nissan|\n|honda|\n|toyota|\n|honda|\n|honda|\n|datsun|\n|buick|\n|oldsmobile|\n|chrysler|\n|ford|\n|toyota|\n|dodge|\n|chevrolet|\n|ford|\n|vw|\n|dodge|\n|ford|\n|chevrolet|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"manufacturer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test99209"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|USA|\n|USA|\n|France|\n|France|\n|USA|\n|USA|\n|USA|\n|France|\n|USA|\n|France|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"origin\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test99445"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Standard Shipping (USPS First Class Package\u00ae)|\n|Expedited Shipping (USPS Priority Mail\u00ae)|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"service\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test99604"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|33.1|\n|30.3|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"weight\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test99616"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|English|\n|English|\n|English|\n|English|\n|English|\n|English|\n|French|\n|English|\n|English|\n|English|\n|English|\n|English|\n\n**Candidate column type:**\naddress\naffiliate\naffiliation\nage\nalbum\narea\nartist\nbirth Date\nbirth Place\nbrand\ncapacity\ncategory\ncity\nclass\nclassification\nclub\ncode\ncollection\ncommand\ncompany\ncomponent\ncontinent\ncountry\ncounty\ncreator\ncredit\ncurrency\nday\ndepth\ndescription\ndirector\nduration\neducation\nelevation\nfamily\nfile Size\nformat\ngender\ngenre\ngrades\nindustry\nisbn\njockey\nlanguage\nlocation\nmanufacturer\nname\nnationality\nnotes\noperator\norder\norganisation\norigin\nowner\nperson\nplays\nposition\nproduct\npublisher\nrange\nrank\nranking\nregion\nreligion\nrequirement\nresult\nsales\nservice\nsex\nspecies\nstate\nstatus\nsymbol\nteam\nteam Name\ntype\nweight\nyear\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"language\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"SherlockTest","table":"test99709"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Ennis|\n|Bantry|\n|Cork|\n|Cork|\n|Cork|\n|Cork|\n|Mallow|\n|Cork|\n|Cork|\n|Cork|\n|Cork|\n|Bandon|\n|Dunmanway|\n|Cork|\n|Cork|\n|Fermoy|\n|Tabor|\n|Donegal|\n|Killybegs|\n|Letterkenny|\n|Letterkenny|\n|Dublin|\n|Blackrock|\n|Rathfarnham|\n|Dublin|\n|Finglas|\n|Dundrum|\n|Ballyfermot|\n|Temple Street|\n|Clonskeagh|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBook\nBuilding\nCompany\nContinent\nCurrency\nGenre\nHospital\nLanguage\nMammal\nMayor\nMonarch\nMountainRange\nMuseum\nNewspaper\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test1"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|?|\n|---|\n|Ty Cobb|\n|Derek Jeter|\n|Paul Waner|\n|Sam Rice|\n|Eddie Collins|\n|Sam Crawford|\n|Roberto Clemente|\n|Pie Traynor|\n|George Sisler|\n|Tris Speaker|\n|Steve Garvey|\n|Pete Rose|\n|Heinie Manush|\n|Joe Sewell|\n|Michael Young|\n|Kirby Puckett|\n|Arky Vaughan|\n|Charlie Gehringer|\n|Bill Terry|\n|Al Simmons|\n|Frankie Frisch|\n|Harry Heilmann|\n|Rogers Hornsby|\n|Edd Roush|\n|Zack Wheat|\n|Stuffy McInnis|\n|Honus Wagner|\n|Roberto Alomar|\n|Don Mattingly|\n|Tony Gwynn|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMountain\nMovieDirector\nNewspaper\nRadioStation\nScientist\nSportsTeam\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"BaseballPlayer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test10"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|Afghanistan|\n|Albania|\n|Algeria|\n|American Samoa|\n|Andorra|\n|Angola|\n|Antigua and Barbuda|\n|Argentina|\n|Armenia|\n|Aruba|\n|Australia|\n|Austria|\n|Azerbaijan|\n|Bahamas|\n|Bahrain|\n|Bangladesh|\n|Barbados|\n|Belarus|\n|Belgium|\n|Belize|\n|Benin|\n|Bhutan|\n|Bolivia|\n|Bosnia and Herzegovina|\n|Botswana|\n|Brazil|\n|British Virgin Islands|\n|Brunei Darussalam|\n|Bulgaria|\n|Burkina Faso|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nBird\nBook\nCurrency\nFilm\nGovernmentType\nLake\nLanguage\nMayor\nMonarch\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nSaint\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test100"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|Afghanistan|\n|Algeria|\n|Algeria|\n|Angola|\n|Argentina|\n|Argentina|\n|Argentina|\n|Argentina|\n|Argentina|\n|Argentina|\n|Argentina|\n|Armenia|\n|Australia|\n|Australia|\n|Australia|\n|Australia|\n|Australia|\n|Austria|\n|Azerbaijan|\n|Bangladesh|\n|Bangladesh|\n|Bangladesh|\n|Belarus|\n|Belgium|\n|Belgium|\n|Belgium|\n|Belgium|\n|Bolivia|\n|Bolivia|\n|Bolivia|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nContinent\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMonarch\nMountainRange\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test101"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|Afghanistan|\n|Algeria|\n|Andorra|\n|Argentina|\n|Australia|\n|Austria|\n|Bahamas|\n|Bahrain|\n|Barbados|\n|Belgium|\n|Belize|\n|Benin|\n|Bolivia|\n|Brazil|\n|Brunei|\n|Bulgaria|\n|Cameroon|\n|Canada|\n|Cayman Islands|\n|Central African Rep.|\n|Chad|\n|Chile|\n|China|\n|Columbia|\n|Congo|\n|Costa Rica|\n|Cuba|\n|Cyprus (Greek)|\n|Cyprus (Turkish)|\n|Czechoslovakia|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBuilding\nCity\nCompany\nContinent\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMountain\nMountainRange\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test102"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|Afghanistan|\n|Iran|\n|Islamic Republic of|\n|Morocco|\n|Turkey|\n|Algeria|\n|Mauritania|\n|Tunisia|\n|Iraq|\n|Egypt|\n|Libyan Arab Jamahiriya|\n|Oman|\n|Niger|\n|Turkmenistan|\n|Jordan|\n|Korea|\n|Democratic People's Republic of|\n|Senegal|\n|Uzbekistan|\n|Greece|\n|Bahrain|\n|Ireland|\n|Kuwait|\n|Malta|\n|Cyprus|\n|United Arab Emirates|\n|Pakistan|\n|Qatar|\n|Azerbaijan|\n|Georgia|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nHospital\nLake\nMammal\nMonarch\nMountain\nMountainRange\nMovieDirector\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test103"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|Albania|\n|Algeria|\n|Angola|\n|Argentina|\n|Aruba|\n|Australia|\n|Austria|\n|Azerbaijan|\n|Bahamas|\n|Bahrain|\n|Bangladesh|\n|Barbados|\n|Belarus|\n|Belgium|\n|Belize|\n|Bermuda|\n|Bhutan|\n|Bolivia|\n|Bosnia and Herzegovina|\n|Botswana|\n|Brazil|\n|Brunei Darussalam|\n|Bulgaria|\n|Burundi|\n|Canada|\n|Cayman Islands|\n|CFA|\n|CFP|\n|Chile|\n|China|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLanguage\nMonarch\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test104"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|Albania|\n|Algeria|\n|Angola|\n|Argentina|\n|Australia|\n|Austria|\n|Bahamas|\n|Bangladesh|\n|Belgium|\n|Belize|\n|Bhutan|\n|Bolivia|\n|Bosnia and Herzegovina|\n|Brazil|\n|Bulgaria|\n|Burma|\n|Canada|\n|Chile|\n|China|\n|People's Republic of|\n|Croatia|\n|Cuba|\n|Cyprus|\n|Denmark|\n|Djibouti|\n|Ecuador|\n|Egypt|\n|El Salvador|\n|Finland|\n|France|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nBaseballPlayer\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGovernmentType\nHospital\nLanguage\nMammal\nMayor\nMountain\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test105"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|Albania|\n|Algeria|\n|Angola|\n|Argentina|\n|Australia|\n|Austria|\n|Bahamas|\n|Bangladesh|\n|Belgium|\n|Belize|\n|Bhutan|\n|Bolivia|\n|Bosnia and Herzegovina|\n|Brazil|\n|Burma|\n|China|\n|Croatia|\n|Cuba|\n|Djibouti|\n|El Salvador|\n|Finland|\n|France|\n|Gambia|\n|Germany|\n|Greece|\n|Grenada|\n|Hungary|\n|Iran|\n|India|\n|Israel|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nFilm\nGenre\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountainRange\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test106"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|Brazil|\n|M?xico|\n|Philippines|\n|USA|\n|Italy|\n|France|\n|Colombia|\n|Spain|\n|Poland|\n|Argentina|\n|Congo (Dem. Rep.)|\n|Peru|\n|Germany|\n|Venezuela|\n|Nigeria|\n|India|\n|Canada|\n|Ecuador|\n|Uganda|\n|Chile|\n|Tanzania|\n|Guatemala|\n|Angola|\n|Portugal|\n|Bolivia|\n|Dominican Republic|\n|Kenya|\n|Belgium|\n|Ha?ti|\n|Indonesia|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nMayor\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nPoliticalParty\nSaint\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test107"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|Cambodia|\n|Cameroon|\n|Canada|\n|Cape Verde|\n|Cayman Islands|\n|Central African Republic|\n|Chad|\n|Chile|\n|China|\n|Christmas Island|\n|Cocos (Keeling) Islands|\n|Colombia|\n|Comoros|\n|Congo|\n|Congo|\n|The Democratic Republic Of|\n|Cook Islands|\n|Costa Rica|\n|Cote D'ivoire|\n|Croatia|\n|Cuba|\n|Cyprus|\n|Cyprus - TRNC|\n|Czech Republic|\n|Denmark|\n|Djibouti|\n|Dominica|\n|Dominican Republic|\n|East Timor|\n|Ecuador|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nContinent\nCountry\nFilm\nGovernmentType\nLake\nLanguage\nMammal\nMovieDirector\nMuseum\nNewspaper\nPoliticalParty\nSportsTeam\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test108"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|China|\n|India|\n|United States of America|\n|Indonesia|\n|Brazil|\n|Pakistan|\n|Bangladesh|\n|Nigeria|\n|Russia|\n|Japan|\n|Mexico|\n|Philippines|\n|Viet Nam|\n|Ethiopia|\n|Germany|\n|Egypt|\n|Turkey|\n|Congo (Democratic Republic)|\n|Thailand|\n|France|\n|Italy|\n|South Africa|\n|South Korea|\n|Colombia|\n|Tanzania|\n|Argentina|\n|Spain|\n|Kenya|\n|Poland|\n|Algeria|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBaseballPlayer\nBuilding\nCity\nCountry\nCurrency\nFilm\nHospital\nLake\nMammal\nMayor\nMountainRange\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test109"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|???O|\n|---|\n|Jeff Bagwell|\n|John Olerud|\n|Luis Gonzalez|\n|Eric Chavez|\n|Mike Lansing|\n|Jason Kendall|\n|Jose Valentin|\n|Chris Singleton|\n|Todd Helton|\n|Jeff Kent|\n|Neifi Perez|\n|Dante Bichette|\n|Mike Blowers|\n|John Olerud|\n|Alex Rodriguez|\n|Alex Ochoa|\n|John Valentin|\n|John Mabry|\n|Tony Fernandez|\n|Gregg Jefferies|\n|Rondell White|\n|Scott Cooper|\n|Travis Fryman|\n|Jay Buhner|\n|Mark Grace|\n|Andujar Cedeno|\n|Ray Lankford|\n|Dave Winfield|\n|Paul Molitor|\n|Robby Thompson|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nCountry\nCurrency\nFilm\nGovernmentType\nHospital\nLake\nLanguage\nMayor\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"BaseballPlayer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test11"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|Ecuador|\n|Ecuador|\n|Egypt|\n|Egypt|\n|Egypt|\n|Egypt|\n|El Salvador|\n|Eritrea|\n|Estonia|\n|Ethiopia|\n|Finland|\n|France|\n|France|\n|France|\n|France|\n|France|\n|France|\n|France|\n|France|\n|France|\n|France|\n|France|\n|Georgia|\n|Germany|\n|Germany|\n|Germany|\n|Germany|\n|Germany|\n|Germany|\n|Germany|\n\n**Candidate column type:**\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nLake\nMammal\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nRadioStation\nScientist\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test110"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|Gabon|\n|Gambia|\n|Georgia|\n|Germany|\n|Ghana|\n|Gibraltar|\n|Greece|\n|Greenland|\n|Grenada|\n|Guadeloupe|\n|Guam|\n|Guatemala|\n|Guinea|\n|Guinea-Bissau|\n|Guyana|\n|Haiti|\n|Heard and Mcdonald Islands|\n|Honduras|\n|Hong Kong|\n|Hungary|\n|Iceland|\n|India|\n|Indonesia|\n|International Monetary Fund (Imf)|\n|Iran (Islamic Republic Of)|\n|Iraq|\n|Ireland|\n|Israel|\n|Italy|\n|Jamaica|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGovernmentType\nHospital\nLanguage\nMayor\nMonarch\nMovieDirector\nMuseum\nNewspaper\nSaint\nScientist\nSportsTeam\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test111"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|Germany|\n|Ivory Coast|\n|UAE|\n|Nigeria|\n|Mexico|\n|Ghana|\n|Saudi Arabia|\n|Turkey|\n|Ethiopia|\n|Australia|\n|India|\n|Mexico|\n|India|\n|Iran|\n|Saudi Arabia|\n|USA|\n|Syria|\n|Egypt|\n|Algeria|\n|India|\n|India|\n|Kazakhstan|\n|Jordan|\n|India|\n|India|\n|Netherlands|\n|China|\n|Turkey|\n|China|\n|China|\n\n**Candidate column type:**\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nGenre\nGovernmentType\nHospital\nLake\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test112"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|Lao People's Democratic Republic|\n|Latvia|\n|Lebanon|\n|Lesotho|\n|Lesotho (other)|\n|Liberia|\n|Libyan Arab Jamahiriya|\n|Liechtenstein|\n|Lithuania|\n|Luxembourg|\n|Macau|\n|Macedonia|\n|The Former Yugoslav Republic Of|\n|Madagascar|\n|Malawi|\n|Malaysia|\n|Maldives|\n|Mali|\n|Malta|\n|Marshall Islands|\n|Martinique|\n|Mauritania|\n|Mauritius|\n|Mexico|\n|Micronesia|\n|Moldova|\n|Republic Of|\n|Monaco|\n|Mongolia|\n|Montserrat|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBook\nCity\nCompany\nContinent\nCountry\nFilm\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test113"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|Madagascar|\n|Malawi|\n|Malaysia|\n|Mali|\n|Mexico|\n|Mexico|\n|Mexico|\n|Mexico|\n|Mexico|\n|Mexico|\n|Mexico|\n|Mexico|\n|Mexico|\n|Mexico|\n|Mexico|\n|Mexico|\n|Mexico|\n|Mexico|\n|Mexico|\n|Mexico|\n|Mexico|\n|Mexico|\n|Mexico|\n|Mexico|\n|Mexico|\n|Mexico|\n|Mexico|\n|Mexico|\n|Moldova|\n|Mongolia|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nBaseballPlayer\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test114"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|Mexico|\n|Canada|\n|Netherlands|\n|Russia|\n|Germany|\n|Iran|\n|Germany|\n|China|\n|Pakistan|\n|India|\n|China|\n|China|\n|Morocco|\n|Morocco|\n|Italy|\n|Brazil|\n|Germany|\n|Sierra Leone|\n|Germany|\n|USA|\n|Japan|\n|China|\n|China|\n|China|\n|China|\n|China|\n|China|\n|China|\n|Palestine|\n|Turkey|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountainRange\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test115"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|POLAND|\n|UK|\n|SWEDEN|\n|UK|\n|UK|\n|UK|\n|UK|\n|UK|\n|BELGIUM|\n|NORWAY|\n|UK|\n|NORWAY|\n|UK|\n|ITALY|\n|UK|\n|UK|\n|AUSTRALIA|\n|UK|\n|SWEDEN|\n|UK|\n|POLAND|\n|PORTUGAL|\n|ITALY|\n|UK|\n|ITALY|\n|ITALY|\n|POLAND|\n|AUSTRIA|\n|UK|\n|UK|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBook\nCompany\nContinent\nCountry\nGenre\nGovernmentType\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nNewspaper\nPlant\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test116"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|Pakistan|\n|China|\n|India|\n|China|\n|India|\n|Argentina|\n|Philippines|\n|South Korea|\n|Brazil|\n|Russia|\n|Indonesia|\n|Turkey|\n|Thailand|\n|Mexico|\n|Japan|\n|Iran|\n|USA|\n|Congo D.R.|\n|Bangladesh|\n|Nigeria|\n|Egypt|\n|Peru|\n|UK|\n|China|\n|Colombia|\n|Vietnam|\n|China|\n|China|\n|China|\n|Pakistan|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nGenre\nGovernmentType\nHospital\nLanguage\nMammal\nMayor\nMountain\nMountainRange\nMovieDirector\nNewspaper\nRadioStation\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test117"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|Poland|\n|USA|\n|Canada|\n|Russia|\n|Taiwan|\n|P.R.China|\n|Malaysia|\n|USA|\n|Malaysia|\n|P.R.China|\n|P.R.China|\n|USA|\n|P.R.China|\n|P.R.China|\n|P.R.China|\n|P.R.China|\n|Malaysia|\n|USA|\n|Uzbekistan|\n|Kuwait|\n|Kazakhstan|\n|P.R. China|\n|P.R. China|\n|Lithuania|\n|Germany|\n|P.R. China|\n|UAE|\n|USA|\n|P.R. China|\n|Taiwan|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nFilm\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMountain\nMovieDirector\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test118"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|Saudi Arabia|\n|Saudi Arabia|\n|Saudi Arabia|\n|Saudi Arabia|\n|Saudi Arabia|\n|Saudi Arabia|\n|Saudi Arabia|\n|Senegal|\n|Senegal|\n|Sierra Leone|\n|Singapore|\n|Slovak Republic|\n|Somalia|\n|South Africa|\n|South Africa|\n|South Africa|\n|South Africa|\n|South Africa|\n|South Africa|\n|South Africa|\n|South Korea|\n|South Korea|\n|South Korea|\n|South Korea|\n|South Korea|\n|South Korea|\n|South Korea|\n|South Korea|\n|South Korea|\n|South Korea|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nContinent\nCountry\nCurrency\nGenre\nGovernmentType\nHospital\nLake\nMammal\nMonarch\nMovieDirector\nNewspaper\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test119"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|?`?[??|\n|---|\n|Astros|\n|Mariners|\n|Diamondbacks|\n|Athletics|\n|Rockies|\n|Pirates|\n|White Sox|\n|White Sox|\n|Rockies|\n|Giants|\n|Rockies|\n|Rockies|\n|Athletics|\n|Mets|\n|Mariners|\n|Mets|\n|Red Sox|\n|Cardinals|\n|Yankees|\n|Phillies|\n|Expos|\n|Red Sox|\n|Tigers|\n|Mariners|\n|Cubs|\n|Astros|\n|Cardinals|\n|Angels|\n|Brewers|\n|Giants|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBuilding\nCity\nCompany\nContinent\nCurrency\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMuseum\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"SportsTeam\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test12"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|USA|\n|Brazil|\n|China|\n|Spain|\n|India|\n|Germany|\n|Nigeria|\n|Indonesia|\n|Indonesia|\n|Sweden|\n|Nicaragua|\n|Brazil|\n|UK|\n|Myanmar (Burma)|\n|Philippines|\n|Germany|\n|Mozambique|\n|Venezuela|\n|Venezuela|\n|Morocco|\n|France|\n|Iran|\n|Oman|\n|Mexico|\n|Indonesia|\n|Congo D.R.|\n|Saudi Arabia|\n|Indonesia|\n|Colombia|\n|Saudi Arabia|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nGovernmentType\nHospital\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test120"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|USA|\n|Morocco|\n|USA|\n|Japan|\n|Japan|\n|Morocco|\n|USA|\n|Brazil|\n|Russia|\n|USA|\n|USA|\n|USA|\n|Costa Rica|\n|USA|\n|Puerto Rico|\n|Mexico|\n|El Salvador|\n|Yemen|\n|Bolivia|\n|Chile|\n|Dominican Republic|\n|Mexico|\n|Dominican Republic|\n|Brazil|\n|Brazil|\n|Brazil|\n|Brazil|\n|Brazil|\n|Brazil|\n|Japan|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBuilding\nCompany\nContinent\nCurrency\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountainRange\nPlant\nPoliticalParty\nRadioStation\nScientist\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test121"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|USA|\n|USA|\n|France|\n|USA|\n|United Kingdom|\n|USA|\n|Germany|\n|USA|\n|Russia|\n|USA|\n|United Kingdom|\n|USA|\n|United Kingdom|\n|Netherlands|\n|Spain|\n|United Kingdom|\n|United Kingdom|\n|New Zealand|\n|USA|\n|USA|\n|USA|\n|United Kingdom|\n|USA|\n|Spain|\n|USA|\n|USA|\n|Canada|\n|United Kingdom|\n|USA|\n|United Kingdom|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBird\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test122"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|United Kingdom|\n|United States|\n|United States|\n|United States|\n|United States|\n|Netherlands|\n|United Kingdom|\n|Japan|\n|Netherlands|\n|United States|\n|United Kingdom|\n|United States|\n|France|\n|Germany|\n|France|\n|United States|\n|United States|\n|United States|\n|Russia|\n|France|\n|Spain|\n|United States|\n|United States|\n|United States|\n|United Kingdom|\n|France|\n|Germany|\n|Italy|\n|Brazil|\n|China|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBird\nBuilding\nCompany\nContinent\nCountry\nCurrency\nGenre\nGovernmentType\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test123"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|United States|\n|Euro|\n|Great Britain|\n|Switzerland|\n|Japan|\n|Australia|\n|New Zealand|\n|Denmark|\n|Norway|\n|Sweden|\n|Aruba|\n|Austria|\n|Bahamas|\n|Bahrain|\n|Barbados|\n|Belgium|\n|Belize|\n|Bermuda|\n|Brazil|\n|Brunei|\n|Cayman Islands|\n|Chile|\n|China|\n|Colombia|\n|Costa Rica|\n|Cyprus|\n|Czech Republic|\n|Dominican Republic|\n|East Caribbean|\n|Egypt|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBuilding\nCompany\nFilm\nGenre\nLanguage\nMayor\nMonarch\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test124"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|United States|\n|United States|\n|United States|\n|United States|\n|China|\n|Spain|\n|United States|\n|United Kingdom|\n|Netherlands|\n|United Kingdom|\n|France|\n|China|\n|United States|\n|United States|\n|United States|\n|Russia|\n|China|\n|Brazil|\n|France|\n|United States|\n|United Kingdom|\n|China|\n|Germany|\n|France|\n|Germany|\n|United States|\n|France|\n|France|\n|United Kingdom|\n|United States|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBird\nBuilding\nCity\nCountry\nCurrency\nFilm\nHospital\nLanguage\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nPlant\nRadioStation\nSaint\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test125"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|World|\n|China|\n|India|\n|European Union|\n|United States|\n|Indonesia|\n|Brazil|\n|Pakistan|\n|Bangladesh|\n|Russia|\n|Nigeria|\n|Japan|\n|Mexico|\n|Philippines|\n|Vietnam|\n|Germany|\n|Egypt|\n|Ethiopia|\n|Turkey|\n|Iran|\n|Thailand|\n|Congo|\n|Democratic Republic of the|\n|France|\n|United Kingdom|\n|Italy|\n|Korea|\n|South|\n|Ukraine|\n|Burma|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test126"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|class=xl36 style='mso-ignore:colspan'>|\n|USA|\n|USA|\n|USA|\n|USA|\n|USA|\n|USA|\n|USA|\n|USA|\n|USA|\n|USA|\n|USA|\n|USA|\n|USA|\n|USA|\n|USA|\n|USA|\n|USA|\n|USA|\n|New Zealand|\n|USA|\n|USA|\n|USA|\n|USA|\n|USA|\n|USA|\n|USA|\n|USA|\n|USA|\n|Germany|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBook\nBuilding\nCompany\nCountry\nCurrency\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMovieDirector\nNewspaper\nPlant\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test127"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Currency Name \/ Currency Code|\n|---|\n|Dollar (USD)|\n|Euro (EUR)|\n|Pound (GBP)|\n|Franc (CHF)|\n|Yen (JPY)|\n|Dollar (AUD)|\n|Dollar (NZD)|\n|Krone (DKK)|\n|Krone (NOK)|\n|Krona (SEK)|\n|Florin (AWG)|\n|Schilling (ATS)|\n|Dollar (BSD)|\n|Dinar (BHD)|\n|Dollar (BBD)|\n|Franc (BEF)|\n|Dollar (BZD)|\n|Dollar (BMD)|\n|Real (BRL)|\n|Dollar (BND)|\n|Dollar (KYD)|\n|Peso (CLP)|\n|Renminbi (CNY)|\n|Peso (COP)|\n|Colon (CRC)|\n|Pound (CYP)|\n|Koruna (CZK)|\n|Peso (DOP)|\n|Dollar (XCD)|\n|Pound (EGP)|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nGenre\nGovernmentType\nHospital\nLake\nMayor\nMonarch\nMountainRange\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Currency\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test128"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Currency|\n|---|\n|Afghani|\n|Lek|\n|Algerian Dinar|\n|US Dollar|\n|Euro|\n|New Kwanza|\n|East Caribbean Dollar|\n|No universal currency|\n|East Caribbean Dollar|\n|Argentine Peso|\n|Armenian Dram|\n|Aruban Guilder|\n|Australian Dollar|\n|Euro|\n|Azerbaijanian Manat|\n|Bahamian Dollar|\n|Bahraini Dinar|\n|Taka|\n|Barbados Dollar|\n|Belarussian Ruble|\n|Euro|\n|Belize Dollar|\n|CFA Franc BCEAO|\n|Bermudian Dollar|\n|Ngultrum|\n|Indian Rupee|\n|Convertible Marks|\n|Pula|\n|Norwegian Krone|\n|Brazilian Real|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nContinent\nCountry\nFilm\nHospital\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nRadioStation\nSaint\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test129"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Airport Name|\n|---|\n|Akron-Canton Airport|\n|Albany International Airport|\n|Albuquerque International Sunport|\n|Amarillo International Airport|\n|Anchorage International Airport|\n|Atlanta International Airport|\n|Atlantic City International Airport|\n|Austin Straubel International Airport|\n|Austin-Bergstrom International Airport|\n|Baltimore\/Washington International Airport|\n|Baton Rouge International Airport|\n|Billings Logan International Airport|\n|Birmingham International Airport|\n|Bishop International Airport|\n|Blue Grass Airport|\n|Boise Airport|\n|Boston Logan International Airport|\n|Bradley International Airport|\n|Buffalo Niagara International Airport|\n|Burbank Bob Hope Airport|\n|Burlington International Airport|\n|Bush Intercontinental Airport|\n|Cedar Rapids Eastern Iowa Airport|\n|Charleston International Airport|\n|Charlotte\/Douglas International Airport|\n|Chicago Midway Airport|\n|Chicago O\u0092Hare International Airport|\n|Cincinnati\/Northern Kentucky International Airport|\n|Cleveland Hopkins International Airport|\n|Colorado Springs Airport|\n\n**Candidate column type:**\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nCompany\nContinent\nCountry\nFilm\nGovernmentType\nHospital\nLake\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Airport\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test13"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Currency|\n|---|\n|Albanian Lek|\n|Algerian Dinar|\n|Angola Kwanza|\n|Argentine Peso|\n|Aruban Guilder|\n|Australian Dollar|\n|Austrian Schilling|\n|Azerbaijanian Manat|\n|Bahamas Dollar|\n|Bahraini Dinar|\n|Bangladeshi Taka|\n|Barbados Dollar|\n|Belarus Ruble|\n|Belgian Franc|\n|Belize Dollar|\n|Bermudaian Dollar|\n|Bhutan Ngultrum|\n|Bolivia Boliviano|\n|Bosnia Herzegovina Mark|\n|Botswana Pula|\n|Brazilian Real|\n|Brunei Dollar|\n|Bulgarian Lev|\n|Burundi Franc|\n|Canadian Dollar|\n|Cayman Islands Dollar|\n|CFA Franc BCEAO|\n|CFP Franc|\n|Chilean Peso|\n|Chinese Yuan|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nHospital\nLake\nLanguage\nMammal\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Currency\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test130"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Currency|\n|---|\n|British Pound (GBP)|\n|Euro (EUR)|\n|Euro (EUR)|\n|Euro (EUR)|\n|Euro (EUR)|\n|Euro (EUR)|\n|Euro (EUR)|\n|Euro (EUR)|\n|Euro (EUR)|\n|Swiss Franc (CHF)|\n|Euro (EUR)|\n|Euro (EUR)|\n|Euro (EUR)|\n|Euro (EUR)|\n|Swedish Krona (SEK)|\n|Danish Krone (DKK)|\n|Euro (EUR)|\n|Polish Zloty (PLN)|\n|Belarusian Ruble (BYR)|\n|Czech Koruna (CZK)|\n|Ruble (RUB)|\n|Euro (EUR)|\n|Turkish Lira (TRY)|\n|Egyptian Pound (EGP)|\n|Lek (ALL)|\n|Macedonian Denar (MKD)|\n|Serbian Dinar (RSD)|\n|Lev (BGN)|\n|Convertible Mark (BAM)|\n|Kuna (HRK)|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nContinent\nCurrency\nFilm\nGovernmentType\nLake\nLanguage\nMammal\nMayor\nMonarch\nMovieDirector\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Currency\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test131"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Currency|\n|---|\n|CFA Franc BEAC|\n|Dalasi|\n|Lari|\n|Euro|\n|Cedi|\n|Gibraltar Pound|\n|Euro|\n|Danish Krone|\n|East Caribbean Dollar|\n|Euro|\n|US Dollar|\n|Quetzal|\n|Guinea Franc|\n|CFA Franc BCEAO|\n|Guyana Dollar|\n|Gourde|\n|US Dollar|\n|Australian Dollar|\n|Lempira|\n|Hong Kong Dollar|\n|Forint|\n|Iceland Krona|\n|Indian Rupee|\n|Rupiah|\n|SDR|\n|Iranian Rial|\n|Iraqi Dinar|\n|Euro|\n|New Israeli Sheqel|\n|Euro|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMountain\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Currency\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test132"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Currency|\n|---|\n|Kip|\n|Latvian Lats|\n|Lebanese Pound|\n|Loti|\n|Rand|\n|Liberian Dollar|\n|Libyan Dinar|\n|Swiss Franc|\n|Lithuanian Litas|\n|Euro|\n|Pataca|\n|Denar|\n|Malagasy Franc|\n|Kwacha|\n|Malaysian Ringgit|\n|Rufiyaa|\n|CFA Franc BCEAO|\n|Maltese Lira|\n|US Dollar|\n|Euro|\n|Ouguiya|\n|Mauritius Rupee|\n|Mexican Peso|\n|US Dollar|\n|Moldovan Leu|\n|Euro|\n|Tugrik|\n|East Caribbean Dollar|\n|Moroccan Dirham|\n|Metical|\n\n**Candidate column type:**\nCity\nCompany\nContinent\nFilm\nGenre\nGovernmentType\nHospital\nLake\nMayor\nMountain\nMountainRange\nMovieDirector\nNewspaper\nPoliticalParty\nSaint\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test133"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Currency|\n|---|\n|Riel|\n|CFA Franc BEAC|\n|Canadian Dollar|\n|Cape Verde Escudo|\n|Cayman Islands Dollar|\n|CFA Franc BEAC|\n|CFA Franc BEAC|\n|Chilean Peso|\n|Yuan Renminbi|\n|Australian Dollar|\n|Australian Dollar|\n|Colombian Peso|\n|Comoro Franc|\n|CFA Franc BEAC|\n|Franc Congolais|\n|New Zealand Dollar|\n|Costa Rican Colon|\n|CFA Franc BCEAO|\n|Kuna|\n|Cuban Peso|\n|Cyprus Pound|\n|Turkish Lira|\n|Czech Koruna|\n|Danish Krone|\n|Djibouti Franc|\n|East Caribbean Dollar|\n|Dominican Peso|\n|US Dollar|\n|US Dollar|\n|Egyptian Pound|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBird\nBook\nCity\nCompany\nContinent\nGenre\nHospital\nLake\nLanguage\nMammal\nMayor\nMountain\nMovieDirector\nMuseum\nSaint\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test134"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Currency|\n|---|\n|afghani|\n|dinar|\n|euro|\n|austral|\n|dollar|\n|euro|\n|dollar|\n|dinar|\n|dollar|\n|euro|\n|dollar|\n|franc|\n|boliviano|\n|real|\n|dollar|\n|lev|\n|franc|\n|dollar|\n|dollar|\n|franc|\n|franc|\n|peso|\n|yuan|\n|peso|\n|franc|\n|colon|\n|peso|\n|euro|\n|lira|\n|koruna|\n\n**Candidate column type:**\nAirline\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nFilm\nGenre\nGovernmentType\nHospital\nLake\nMammal\nMayor\nMountain\nMountainRange\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test135"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Developer [14][16]|\n|---|\n|Nintendo|\n|Altron|\n|Bottom Up|\n|Bottom Up|\n|Bottom Up|\n|Paradigm Entertainment|\n|Pacific Coast Power & Light|\n|I4|\n|H2O Interactive|\n|Human Entertainment|\n|Acclaim|\n|Acclaim|\n|Acclaim|\n|Smart Dog|\n|Nintendo|\n|Acclaim|\n|3DO|\n|3DO|\n|3DO|\n|Syrox Developments|\n|Titus Software|\n|Treasure|\n|Taito|\n|Rare|\n|Rare|\n|Gear Head Entertainment|\n|Mass Media|\n|Visco Corporation|\n|Kemco|\n|3DO|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nFilm\nGenre\nHospital\nLake\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMuseum\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test136"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Developer|\n|---|\n|2K Games|\n|Acclaim|\n|Acclaim|\n|Acclaim|\n|Acclaim|\n|Acclaim|\n|Acclaim|\n|Acclaim|\n|Acclaim|\n|Activision|\n|Activision|\n|Activision|\n|Activision|\n|Activision|\n|Activision|\n|Activision|\n|Activision|\n|Activision|\n|Activision|\n|Activision|\n|Activision|\n|Activision|\n|Activision|\n|Activision|\n|Activision|\n|Activision|\n|Activision|\n|Activision|\n|Activision|\n|Activision|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nFilm\nGovernmentType\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test137"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Developer|\n|---|\n|CRYPTIC STUDIOS|\n|SPORTS INTERACTIVE|\n|BIOWARE|\n|GSC GAME WORLD|\n|THE SIMS STUDIO|\n|THE SIMS STUDIO|\n|INFINITY WARD|\n|BLIZZARD ENTERTAINMENT|\n|BIOWARE|\n|CREATIVE ASSEMBLY|\n|ROCKSTEADY STUDIOS|\n|BETHESDA|\n|ROCKSTAR TORONTO|\n|VALVE|\n|GEARBOX SOFTWARE|\n|MAXIS|\n|ACES STUDIO|\n|UBISOFT (MONTREAL)|\n|CYANIDE|\n|RELIC|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMountain\nMovieDirector\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test138"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Developer(s)|\n|---|\n|Bethesda Softworks|\n|Rockstar Games|\n|Infinity Ward|\n|Bethesda Softworks|\n|Infinity Ward|\n|Nintendo EAD|\n|Firaxis Games|\n|Bungie|\n|BioWare|\n|Retro Studios|\n|DMA Design|\n|Ion Storm Inc.|\n|Epic Games|\n|Digital Extremes|\n\n**Candidate column type:**\nAirport\nBaseballPlayer\nBook\nContinent\nCountry\nGenre\nGovernmentType\nHospital\nLake\nMammal\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nScientist\nSportsTeam\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test139"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Airport Name|\n|---|\n|Anchorage International Airport|\n|Fairbanks International Airport|\n|Juneau International Airport|\n|Birmingham International Airport|\n|Huntsville International Airport|\n|Northwest Arkansas Regional Airport|\n|Little Rock National Airport|\n|Grand Canyon National Park Airport|\n|Phoenix Sky Harbor International Airport|\n|Tucson International Airport|\n|Burbank Bob Hope Airport|\n|Fresno Air Terminal|\n|Long Beach Airport|\n|Los Angeles International Airport|\n|Oakland International Airport|\n|Ontario International Airport|\n|John Wayne Airport|\n|Palm Springs International Airport|\n|Sacramento International Airport|\n|San Diego International Airport|\n|San Francisco International Airport|\n|San Jose International Airport|\n|Santa Barbara Airport|\n|Colorado Springs Airport|\n|Denver International Airport|\n|Saipan International Airport|\n|Bradley International Airport|\n|Ronald Reagan Washington National Airport|\n|Washington Dulles International Airport|\n|Fort Lauderdale Hollywood International Airport|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nHospital\nLake\nLanguage\nMammal\nMayor\nMountain\nMountainRange\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Airport\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test14"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Developer(s)|\n|---|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Intelligent Systems|\n|Nintendo|\n|Nintendo|\n|Treasure|\n|HAL Laboratory|\n|Pax Softnica|\n|Nintendo|\n|HAL Laboratory|\n|Midway Games|\n|Nintendo Software Technology|\n|Intelligent Systems|\n|Camelot Software|\n|Nintendo EAD|\n|HAL Laboratory|\n|Quest|\n|Dual Corporation|\n|Camelot Software|\n|Hudson Soft|\n|Hudson Soft|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBuilding\nCompany\nContinent\nCountry\nGenre\nGovernmentType\nHospital\nLake\nMammal\nMayor\nMonarch\nMountain\nMuseum\nPlant\nPoliticalParty\nRadioStation\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test140"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Developer(s)|\n|---|\n|Rockstar San Diego|\n|Naughty Dog|\n|Rockstar North|\n|2K Boston\/2K Australia|\n|Nintendo|\n|Capcom|\n|Bungie|\n|Ubisoft Montreal|\n|Nintendo|\n|Bungie|\n|Activision|\n|Namco|\n|Nintendo|\n|Rare|\n|Nintendo|\n|SingleTrac|\n|Rare|\n|SNK|\n|Capcom|\n|Sega|\n|Capcom|\n|Capcom|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nFilm\nGenre\nHospital\nLake\nLanguage\nMonarch\nMountainRange\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test141"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Developer(s)|\n|---|\n|Rocksteady Studios|\n|Nintendo EAD Tokyo Development Group|\n|Naughty Dog Software|\n|Rockstar North Ltd.|\n|Nintendo EAD Tokyo Development Group|\n|Nintendo EAD Software Development Group No. 3|\n|Capcom|\n|Valve Corporation|\n|Nintendo EAD Software Development Group No. 3|\n|Retro Studios|\n|Nintendo|\n|Bungie Studios|\n|Tose|\n|Namco|\n|Nintendo EAD|\n|Rare|\n|Nintendo|\n|Nintendo EAD|\n|Squaresoft|\n|Squaresoft|\n|Nintendo EAD|\n|Nintendo EAD|\n|Sonic Team|\n|Konami|\n|Bullet Proof Software|\n|Sega|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMovieDirector\nNewspaper\nRadioStation\nSaint\nScientist\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test142"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Developer(s)|\n|---|\n|Rocksteady Studios|\n|Nintendo EAD Tokyo Development Group|\n|Naughty Dog|\n|Rockstar North|\n|Nintendo|\n|Nintendo|\n|Capcom|\n|Valve|\n|Nintendo EAD|\n|Retro Studios|\n|Nintendo|\n|DMA Design|\n|Rare|\n|Nintendo|\n|Namco|\n|Nintendo EAD|\n|Rare|\n|Nintendo|\n|Nintendo EAD|\n\n**Candidate column type:**\nAirline\nAirport\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGovernmentType\nHospital\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMovieDirector\nMuseum\nPlant\nSaint\nScientist\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test143"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Director|\n|---|\n|Derek Cianfrance|\n|Giorgos Lanthimos|\n|Peter Chelsom|\n|Tomas Alfredson|\n|Antonio Negret|\n|Terrence Malick|\n|Daniel Alfredson|\n|Niels Arden Oplev|\n|Brad Bird|\n|David Slade|\n|James Bobin|\n|Jannicke Systad Jacobsen|\n|Jason Reitman|\n|Mark Romanek|\n|John Michael McDonagh|\n|Nick Cassavetes|\n|Michael Lehmann|\n|William Friedkin|\n|Nicolas Winding Refn|\n|Brian Henson|\n|Will Gluck|\n|Cameron Crowe|\n|Gareth Edwards|\n|Tomas Alfredson|\n|Lars von Trier|\n|Richard Ayoade|\n|James Frawley|\n|Jesse Peretz|\n|Glenn Ficarra & John Requa|\n|Joe Wright|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBird\nBook\nContinent\nCountry\nFilm\nGenre\nLake\nMonarch\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nSaint\nSportsTeam\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"MovieDirector\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test144"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Director|\n|---|\n|Abrams|\n|J.J.|\n|Abrams|\n|J.J.|\n|Achbar|\n|Mark|\n|Affleck|\n|Ben|\n|Akkad|\n|Moustapha|\n|Aldrich|\n|Robert|\n|Antin|\n|Steve|\n|Ashby|\n|Hal|\n|Ashby|\n|Hal|\n|Atchison|\n|Doug|\n|Attenborough|\n|Richard|\n|Bar-Lev|\n|Amir|\n|Bay|\n|Michael|\n|Becker|\n|Walt|\n|Belber|\n|Stephen|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nHospital\nLake\nLanguage\nMayor\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test145"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Director|\n|---|\n|David Fincher|\n|Christopher Nolan|\n|Tim Burton|\n|Martin Scorsese|\n|Dean DeBlois|\n|Lee Unkrich|\n|James Cameron|\n|David Yates|\n|Carlos Saldanha|\n|Michael Bay|\n|Todd Phillips|\n|Pete Docter|\n|Quentin Tarantino|\n|Neill Blomkamp|\n|Christopher Nolan|\n|Andrew Stanton|\n|Clint Eastwood|\n|Danny Boyle|\n|Gore Verbinski|\n|Ethan Coen|\n|Martin Scorsese|\n|Martin Campbell|\n|Guillermo del Toro|\n|Christopher Nolan|\n|Florian Henckel von Donnersmarck|\n|Frank Miller|\n|Christopher Nolan|\n|Oliver Hirschbiegel|\n|Brad Bird|\n|Nick Cassavetes|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBaseballPlayer\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nPoliticalParty\nRadioStation\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"MovieDirector\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test146"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Director|\n|---|\n|Gil Junger|\n|Sidney Lumet|\n|John Singleton|\n|Stanley Kubrick|\n|NBC Sports|\n|Jon Turteltaub|\n|Magnus Carlsson|\n|Julie Taymor|\n|Milos Forman|\n|Sam Mendes|\n|Tony Kaye|\n|Ron Howard|\n|Paul Provenza|\n|Christopher Nolan|\n|Leslie H. Martinson|\n|Michel Gondry|\n|Dennis Dugan|\n|Tim Burton|\n|Joel Coen|\n|Tamra Davis|\n|Mike Nichols|\n|Ridley Scott|\n|Daniel Myrick|\n|Mel Brooks|\n|Edward Zwick|\n|Blue Man Group|\n|Larry Charles|\n|Doug Liman|\n|Paul Greengrass|\n|Paul Greengrass|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLanguage\nMayor\nMountain\nMountainRange\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"MovieDirector\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test147"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Director|\n|---|\n|class=xl36 style='mso-ignore:colspan'>|\n|Gosnell|\n|Aronofsky|\n|Fincher|\n|Norton?|\n|Anderson|\n|Wachowski|\n|Kitchell|\n|Mamet|\n|Farrelly|\n|Weitz|\n|Hackford|\n|Shyamalan|\n|Ratner|\n|Reynolds|\n|Kasdan|\n|Leder|\n|Anderson|\n|Scott|\n|Jackson|\n|Scorsese|\n|Mitchell|\n|Lahti|\n|Avildsen|\n|Rodriguez|\n|Kastner|\n|Chandrasekhar|\n|Weisman|\n|Roach|\n|Peterson|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMayor\nMonarch\nMountain\nMovieDirector\nPlant\nPoliticalParty\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"MovieDirector\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test148"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Director(s)|\n|---|\n|Bob Fosse|\n|Robert Wiene|\n|Harold Ramis|\n|Brian De Palma|\n|Brian De Palma|\n|Michael Curtiz|\n|Martin Scorsese|\n|Robert Zemeckis|\n|Stanley Donen|\n|Hugh Hudson|\n|Kevin Smith|\n|Rob Marshall|\n|Marcel Carn?|\n|Roman Polanski|\n|Bob Clark|\n|Kar Wai Wong|\n|Giuseppe Tornatore|\n|Orson Welles|\n|Charles Chaplin|\n|Fernando Meirelles|\n|Kevin Smith|\n|Stanley Kubrick|\n|Steven Spielberg|\n|Steven Spielberg|\n|Robert Zemeckis|\n|Jean-Luc Godard|\n|Francis Ford Coppola|\n|Stuart Rosenberg|\n|Ingmar Bergman|\n|Woody Allen|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBuilding\nCity\nCompany\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMayor\nMonarch\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"MovieDirector\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test149"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Airport Name|\n|---|\n|Guam International Airport|\n|Albany International Airport|\n|Albuquerque International Sunport|\n|Lehigh Valley International Airport|\n|Amarillo International Airport|\n|Anchorage International Airport|\n|Atlanta International Airport|\n|Austin-Bergstrom International Airport|\n|Baton Rouge International Airport|\n|Billings Logan International Airport|\n|Birmingham International Airport|\n|Boise Airport|\n|Boston Logan International Airport|\n|Buffalo Niagara International Airport|\n|Burbank Bob Hope Airport|\n|Baltimore\/Washington International Airport|\n|Cedar Rapids Eastern Iowa Airport|\n|Charleston International Airport|\n|Charlotte\/Douglas International Airport|\n|Cyril E King Airport|\n|Chicago Midway Airport|\n|Chicago O\u0092Hare International Airport|\n|Cincinnati\/Northern Kentucky International Airport|\n|Cleveland Hopkins International Airport|\n|Colorado Springs Airport|\n|Columbia Metropolitan Airport|\n|Port Columbus International Airport|\n|Corpus Christi International Airport|\n|Dallas Love Field|\n|Dallas\/Fort Worth International Airport|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Airport\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test15"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Director(s)|\n|---|\n|Danny Boyle|\n|Danny Boyle|\n|Juan Carlos Fresnadillo|\n|Alfred Hitchcock|\n|James Mangold|\n|Spike Jonze|\n|Wolfgang Petersen|\n|Tim Burton|\n|John Hamburg|\n|Sam Mendes|\n|Ridley Scott|\n|Paul Weitz|\n|James B. Rogers|\n|Mary Harron|\n|Adam McKay|\n|John Frankenheimer|\n|Ron Howard|\n|Woody Allen|\n|Francis Ford Coppola|\n|Paul Provenza|\n|Michael Bay|\n|Sam Raimi|\n|Jean-Pierre Melville|\n|Steven Spielberg|\n|Michel Hazanavicius|\n|Andrew Dominik|\n|David Jackson|\n|Dick Lowry|\n|Joe Wright|\n|James Cameron|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nHospital\nLake\nLanguage\nMayor\nMonarch\nMountainRange\nMuseum\nNewspaper\nSaint\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test150"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Director(s)|\n|---|\n|David Fincher|\n|Richard Attenborough|\n|Andrew Niccol|\n|Clyde Bruckman and Buster Keaton|\n|Jerry Zucker|\n|Terry Zwigoff|\n|Ivan Reitman|\n|Ridley Scott|\n|James Foley|\n|Edward Zwick|\n|Francis Ford Coppola|\n|Francis Ford Coppola|\n|Francis Ford Coppola|\n|Charles Chaplin|\n|Guy Hamilton|\n|Victor Fleming|\n|Gus Van Sant|\n|Sergio Leone|\n|Martin Scorsese|\n|Richard Donner|\n|Mike Nichols|\n|Jean Renoir|\n|John Ford|\n|Isao Takahata|\n|Randal Kleiser|\n|Charles Chaplin|\n|John Sturges|\n|Erich von Stroheim|\n|Frank Darabont|\n|George Armitage|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBuilding\nCity\nCompany\nCurrency\nFilm\nGovernmentType\nHospital\nLanguage\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"MovieDirector\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test151"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Director(s)|\n|---|\n|Francis Ford Coppola|\n|Orson Welles|\n|Michael Curtiz|\n|David Lean|\n|Stanley Kubrick|\n|Francis Ford Coppola|\n|Francis Ford Coppola|\n|Quentin Tarantino|\n|Frank Capra|\n|Victor Fleming|\n|Martin Scorsese|\n|Martin Scorsese|\n|Roman Polanski|\n|Ridley Scott|\n|Steven Spielberg|\n|Steven Spielberg|\n|Woody Allen|\n|Martin Scorsese|\n|John Ford|\n|Alfred Hitchcock|\n|Akira Kurosawa|\n|Billy Wilder|\n|Milos Forman|\n|Stanley Kubrick|\n|Joseph L. Mankiewicz|\n|Mike Nichols|\n|Elia Kazan|\n|Frank Darabont|\n|Arthur Penn|\n|Joel Coen|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nFilm\nGenre\nHospital\nLake\nLanguage\nMammal\nMonarch\nMountain\nMuseum\nNewspaper\nPlant\nRadioStation\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test152"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Director(s)|\n|---|\n|Francis Ford Coppola|\n|Quentin Tarantino|\n|Orson Welles|\n|Francis Ford Coppola|\n|George Lucas|\n|Martin Scorsese|\n|Michael Curtiz|\n|Martin Scorsese|\n|Stanley Kubrick|\n|Francis Ford Coppola|\n|Steven Spielberg|\n|Stanley Kubrick|\n|Frank Darabont|\n|Alfred Hitchcock|\n|Irvin Kershner|\n|Steven Spielberg|\n|Jonathan Demme|\n|Milos Forman|\n|Stanley Kubrick|\n|Steven Spielberg|\n|Alfred Hitchcock|\n|Alfred Hitchcock|\n|Roman Polanski|\n|Martin Scorsese|\n|Sam Mendes|\n|Joel Coen|\n|Frank Capra|\n|Steven Spielberg|\n|Bryan Singer|\n|Ridley Scott|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBaseballPlayer\nBird\nBook\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nHospital\nLake\nLanguage\nMonarch\nMountain\nMuseum\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test153"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Director(s)|\n|---|\n|Fritz Lang|\n|Robert Altman|\n|Orson Welles|\n|John Sturges|\n|Paul Thomas Anderson|\n|Spike Lee|\n|John Huston|\n|John Ford|\n|John Frankenheimer|\n|Woody Allen|\n|Robert Stevenson|\n|Andy and Larry Wachowski|\n|Robert Altman|\n|Martin Scorsese|\n|Christopher Nolan|\n|Barry Sonnenfeld|\n|Fritz Lang|\n|John Schlesinger|\n|Joel Coen|\n|Steven Spielberg|\n|Andrei Tarkovsky|\n|Rob Reiner|\n|Charles Chaplin|\n|Pete Docter|\n|Terry Gilliam and Terry Jones|\n|Baz Luhrmann|\n|Frank Capra|\n|David Lynch|\n|Frank Lloyd|\n|George Cukor|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nRadioStation\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"MovieDirector\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test154"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Director(s)|\n|---|\n|Jean Renoir|\n|Michel Gondry|\n|Giuseppe Tornatore|\n|George Lucas|\n|Steven Soderbergh|\n|Howard Hawks|\n|John Hughes|\n|Werner Herzog|\n|Peter Weir|\n|Roman Polanski|\n|Terrence Malick|\n|Mel Brooks|\n|Ingmar Bergman|\n|John Boorman|\n|John Landis|\n|Charles Chaplin|\n|John Carpenter|\n|John Lasseter|\n|F.W. Murnau|\n|Roger Allers and Rob Minkoff|\n|Ron Howard|\n|Alan J. Pakula|\n|Robert Altman|\n|Quentin Tarantino|\n|Joel Coen|\n|Stanley Kubrick|\n|James L. Brooks|\n|Tony Scott|\n|George A. Romero|\n|F.W. Murnau|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nFilm\nGenre\nGovernmentType\nLake\nLanguage\nMammal\nMonarch\nMountainRange\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test155"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Director(s)|\n|---|\n|John Huston|\n|Harold Ramis|\n|Ingmar Bergman|\n|Akira Kurosawa|\n|Leo McCarey|\n|Charles Chaplin|\n|Spike Lee|\n|Ang Lee|\n|Woody Allen|\n|William Wyler|\n|Fritz Lang|\n|Terry Gilliam|\n|Danny Boyle|\n|Stanley Kubrick|\n|Darren Aronofsky|\n|Billy Wilder|\n|Sidney Lumet|\n|Barry Levinson|\n|Rob Reiner|\n|Kevin Costner|\n|Akira Kurosawa|\n|Frank Capra|\n|David Lynch|\n|Vittorio De Sica|\n|Fred Zinnemann|\n|Fritz Lang|\n|John Sturges|\n|Steven Spielberg|\n|Tony Kaye|\n|George Roy Hill|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nCompany\nContinent\nFilm\nGenre\nHospital\nLake\nLanguage\nMammal\nMayor\nMountainRange\nMovieDirector\nMuseum\nPoliticalParty\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"MovieDirector\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test156"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Director(s)|\n|---|\n|Sidney Lumet|\n|Stanley Kubrick|\n|Alfred Hitchcock|\n|Fran?ois Truffaut|\n|Federico Fellini|\n|Spike Jonze|\n|Michael Curtiz and William Keighley|\n|John Huston|\n|Werner Herzog|\n|Jerry Zucker|\n|Jim Abrahams|\n|and David Zucker|\n|Katsuhiro ?tomo|\n|Ron Clements and John Musker|\n|Ridley Scott|\n|James Cameron|\n|Joseph L. Mankiewicz|\n|Lewis Milestone|\n|Alan J. Pakula|\n|Cameron Crowe|\n|Milos Forman|\n|Federico Fellini|\n|Jean-Pierre Jeunet|\n|Sam Mendes|\n|George Lucas|\n|Tony Kaye|\n|Alejandro Gonz?lez I??rritu|\n|Andrei Tarkovsky|\n|John Landis|\n|Woody Allen|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nFilm\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"MovieDirector\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test157"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Director(s)|\n|---|\n|Stanley Donen and Gene Kelly|\n|Billy Wilder|\n|Stanley Kubrick|\n|Woody Allen|\n|Mike Nichols|\n|Clyde Bruckman and Buster Keaton|\n|Howard Hawks|\n|Leo McCarey|\n|John Lasseter|\n|Charles Chaplin|\n|Frank Capra|\n|Jean Renoir|\n|Howard Hawks|\n|Rob Reiner|\n|Robert Zemeckis|\n|Charles Chaplin|\n|Charles Chaplin|\n|George Cukor|\n|Preston Sturges|\n|Billy Wilder|\n|Robert Altman|\n|Harold Ramis|\n|Rob Reiner|\n|Terry Gilliam and Terry Jones|\n|Federico Fellini|\n|Woody Allen|\n|Preston Sturges|\n|Terry Jones|\n|Richard Lester|\n|Rob Reiner|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nCurrency\nFilm\nGenre\nHospital\nLake\nMammal\nMonarch\nMountain\nMountainRange\nMovieDirector\nPlant\nPoliticalParty\nRadioStation\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"MovieDirector\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test158"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Director(s)|\n|---|\n|Stanley Kubrick|\n|Victor Fleming|\n|George Lucas|\n|David Lean|\n|Steven Spielberg|\n|John Ford|\n|Steven Spielberg|\n|Alfred Hitchcock|\n|Akira Kurosawa|\n|Andy and Larry Wachowski|\n|Irvin Kershner|\n|Merian C. Cooper and Ernest B. Schoedsack|\n|David Lean|\n|Peter Jackson|\n|James Cameron|\n|John Lasseter|\n|Robert Zemeckis|\n|John Huston|\n|Peter Jackson|\n|Charles Chaplin|\n|Ridley Scott|\n|George Roy Hill|\n|John Huston|\n|Peter Jackson|\n|Preston Sturges|\n|Rob Reiner|\n|Terry Gilliam and Terry Jones|\n|William Wyler|\n|Steven Spielberg|\n|Michael Curtiz and William Keighley|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nContinent\nCountry\nFilm\nGenre\nGovernmentType\nHospital\nLanguage\nMayor\nMountainRange\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"MovieDirector\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test159"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Airport|\n|---|\n|Hartsfield-Jackson Atlanta International Airport|\n|London Heathrow Airport|\n|Beijing Capital International Airport|\n|O'Hare International Airport|\n|Tokyo International Airport|\n|Paris Charles de Gaulle Airport|\n|Los Angeles International Airport|\n|Dallas-Fort Worth International Airport|\n|Frankfurt Airport|\n|Denver International Airport|\n|Madrid-Barajas Airport|\n|John F. Kennedy International Airport|\n|Hong Kong International Airport|\n|Amsterdam Airport Schiphol|\n|Dubai International Airport|\n|Suvarnabhumi Airport|\n|McCarran International Airport|\n|George Bush Intercontinental Airport|\n|Phoenix Sky Harbor International Airport|\n|San Francisco International Airport|\n|Singapore Changi Airport|\n|Soekarno-Hatta International Airport|\n|Guangzhou Baiyun International Airport|\n|Charlotte Douglas International Airport|\n|Miami International Airport|\n|Leonardo da Vinci Airport|\n|Orlando International Airport|\n|Sydney Airport|\n|Newark Liberty International Airport|\n|Munich Airport|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nCompany\nContinent\nCountry\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMovieDirector\nNewspaper\nRadioStation\nSaint\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test16"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Director(s)|\n|---|\n|Steven Spielberg|\n|Cameron Crowe|\n|Brian De Palma|\n|Martin Brest|\n|Steven Spielberg|\n|Wes Craven|\n|John Ford|\n|Ang Lee|\n|David Fincher|\n|Akira Kurosawa|\n|Ingmar Bergman|\n|Alfred Hitchcock|\n|John Madden|\n|George Stevens|\n|Frank Darabont|\n|Buster Keaton|\n|Stanley Kubrick|\n|Robert Altman|\n|Andrew Adamson and Vicky Jenson|\n|M. Night Shyamalan|\n|Jonathan Demme|\n|Sam Raimi|\n|Frank Miller and Robert Rodriguez|\n|Stanley Donen and Gene Kelly|\n|M. Night Shyamalan|\n|Woody Allen|\n|Tim Burton|\n|Billy Bob Thornton|\n|Guy Ritchie|\n|David Hand|\n\n**Candidate column type:**\nAirline\nAirport\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"MovieDirector\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test160"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|ENTITY|\n|---|\n|Afghanistan|\n|Albania|\n|Algeria|\n|American Samoa|\n|Andorra|\n|Angola|\n|Anguilla|\n|Antarctica|\n|Antigua and Barbuda|\n|Argentina|\n|Armenia|\n|Aruba|\n|Australia|\n|Austria|\n|Azerbaijan|\n|Bahamas|\n|Bahrain|\n|Bangladesh|\n|Barbados|\n|Belarus|\n|Belgium|\n|Belize|\n|Benin|\n|Bermuda|\n|Bhutan|\n|Bosnia and Herzegovina|\n|Botswana|\n|Bouvet Island|\n|Brazil|\n|British Indian Ocean Territory|\n\n**Candidate column type:**\nAirline\nAirport\nBaseballPlayer\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nMonarch\nMountain\nMountainRange\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test161"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|EXCHANGE RATE (USD per Unit)|\n|---|\n|Algerian Dinars|\n|Argentinean Pesos|\n|Australian Dollars|\n|Bahamas Dollars|\n|Barbados Dollars|\n|Bermudan Dollars|\n|Brazilian Real|\n|Bulgarian Lev|\n|Canadian Dollars|\n|Chilean Pesos|\n|Chinese Renminbi|\n|Cyprus Pounds|\n|Czech Koruna|\n|Danish Kroner|\n|Egyptian Pounds|\n|Euro|\n|Fiji Dollars|\n|United Kingdom Pounds|\n|Hong Kong Dollars|\n|Hungarian Forint|\n|Icelandic Krona|\n|Indian Rupees|\n|Indonesian Rupiah|\n|Israeli New Shekels|\n|Jamaican Dollars|\n|Japanese Yen|\n|Jordanian Dinar|\n|Kenyan Shilling|\n|Lebanese Pounds|\n|Malaysian Ringgit|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBird\nBook\nCity\nContinent\nCountry\nCurrency\nGovernmentType\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountainRange\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Currency\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test162"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Editeur|\n|---|\n|Europe 1|\n|Radio France|\n|Radio France|\n|Radio France|\n|Radio France|\n|RTL France|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nContinent\nCountry\nFilm\nGovernmentType\nHospital\nLake\nLanguage\nMayor\nMonarch\nMountain\nMountainRange\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"RadioStation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test163"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Empedocles|\n|---|\n|Johann Gutenberg|\n|Georg Bauer (Agricola)|\n|Andreas Vesalius|\n|William Gilbert|\n|Henri Poincare|\n|Arrhenius|\n|Marie and Pierre Curie|\n|Laplace|\n|Legendre|\n|Edmund Halley|\n|Jean Le Rond d?Alembert|\n|Marcello Malpighi|\n|Daniel Bernoulli|\n|Henry Cavendish|\n|Charles Augustin de Coulomb|\n|Joseph-Louis Lagrange|\n|James Watt|\n|Claude Louis Berthollet|\n|Antoine Francois de Fourcroy|\n|James Smithson|\n|Joseph Fourier|\n|Jean-Baptiste Biot|\n|Amadeo Avogadro|\n|David Brewster|\n|Augustin-Jean Fresnel|\n|Georg Ohm|\n|Felix Savart|\n|Gabriel Lame|\n|Sadi Carnot|\n|Joseph Henry|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBird\nBook\nCity\nCompany\nCountry\nFilm\nLake\nLanguage\nMammal\nMonarch\nMountain\nMountainRange\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Scientist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test164"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Emperor|\n|---|\n|Augustus|\n|Tiberius|\n|Caligula|\n|Claudius|\n|Nero|\n|Galba|\n|Otho|\n|Vitellius|\n|Vespasian|\n|Titus|\n|Domitian|\n|Nerva|\n|Trajan|\n|Hadrian|\n|Antoninus Pius|\n|Lucius Verus|\n|Marcus Aurelius|\n|Commodus|\n|Pertinax|\n|Didius Julianus|\n|Septimius Severus|\n|Caracalla|\n|Geta|\n|Macrinus with Diadumenian|\n|Elagabalus|\n|Alexander Severus|\n|Maximinus Thrax|\n|Gordian I|\n|Gordian II|\n|Pupienus Maximus|\n\n**Candidate column type:**\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nContinent\nCurrency\nFilm\nGenre\nHospital\nLake\nMayor\nMountainRange\nNewspaper\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test165"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Emperor|\n|---|\n|Domitian|\n|Trajan|\n|Hadrian|\n|[Antonins Dynasty]|\n|(Faustina)|\n|Antoninus Pius|\n|(Lucilla) => Lucius Verus|\n|Marcus Aurelius|\n|Commodus|\n|Septimius Severus|\n|Caracalla|\n|(Julia Pia)|\n|Elagabalus|\n|Julia Mamaea|\n|Severus Alexander|\n|Gordian III|\n|Philippus|\n|Decius|\n|Etruscilla|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nCity\nCompany\nContinent\nCountry\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Monarch\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test166"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Endroit|\n|---|\n|Asie|\n|Afrique|\n|Europe|\n|Europe|\n|Afrique|\n|Europe|\n|Europe|\n|Europe|\n|Afrique|\n|Am\u00e9rique Centrale|\n|Moyen-Orient|\n|Am\u00e9rique du Sud|\n|Asie|\n|Europe|\n|Asie|\n|Endroit|\n|Am\u00e9rique Centrale|\n|Moyen-Orient|\n|Asie|\n|Am\u00e9rique Centrale|\n|Europe|\n|Europe|\n|Am\u00e9rique Centrale|\n|Afrique|\n|Am\u00e9rique du Nord|\n|Asie|\n|Asie|\n|Am\u00e9rique du Sud|\n|Europe|\n|Afrique|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountainRange\nMovieDirector\nMuseum\nPlant\nScientist\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Continent\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test167"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Everest|\n|---|\n|K-2|\n|Kangchenjunga|\n|Lhotse|\n|Makalu|\n|Cho Oyu|\n|Dhaulagiri|\n|Manaslu|\n|Nanga Parbat|\n|Annapurna|\n|Gasherbrum I|\n|Broad Peak|\n|Gasherbrum II|\n|Xixabangma Feng (Gosainthan)|\n|Distaghil Sar|\n|Kunyang Chhist|\n|Masherbrum|\n|Nanda Devi|\n|Aling Kangri|\n|Rakaposhi|\n|Batura|\n|Namjagbarwa Feng|\n|Kamet|\n|Kamet|\n|Muztagh Ata|\n|Saltoro Kangri|\n|Muztag|\n|Trivor|\n|Konkur|\n|Tirich Mir|\n|Chogolisa|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nHospital\nLake\nLanguage\nMammal\nMonarch\nMountain\nMountainRange\nMovieDirector\nNewspaper\nPoliticalParty\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mountain\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test168"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Fell Name|\n|---|\n|Allen Crags|\n|Angletarn Pikes|\n|Ard Crags|\n|Armboth Fell|\n|Arnison Crag|\n|Arthur's Pike|\n|Bakestall|\n|Bannerdale Crags|\n|Barf|\n|Barrow|\n|Base Brown|\n|Beda Fell|\n|Binsey|\n|Birkhouse Moor|\n|Birks|\n|Black Fell|\n|Blake Fell?|\n|Blea Rigg|\n|Bleaberry Fell|\n|Blencathra|\n|Bonscale Pike|\n|Bowfell|\n|Bowscale Fell|\n|Brae Fell|\n|Brandreth|\n|Branstree|\n|Brim Fell|\n|Brock Crags|\n|Broom Fell?|\n|Buckbarrow|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nHospital\nLake\nLanguage\nMammal\nMayor\nMountain\nMountainRange\nMuseum\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mountain\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test169"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Airport|\n|---|\n|London Heathrow Airport|\n|Paris-Charles de Gaulle Airport|\n|Frankfurt Airport|\n|Amsterdam Airport Schiphol|\n|Hong Kong International Airport|\n|Singapore Changi Airport|\n|London Gatwick Airport|\n|Narita International Airport|\n|Bangkok International Airport|\n|Incheon International Airport|\n|Dubai International Airport|\n|Barajas Airport|\n|Munich Airport|\n|Istanbul Ataturk Airport[5]|\n|London Stansted Airport|\n|Taoyuan International Airport|\n|Manchester Airport|\n|John F. Kennedy International Airport|\n|Copenhagen Airport|\n|Dublin Airport|\n|Los Angeles International Airport|\n|Z?rich Airport|\n|Toronto Pearson International Airport|\n|Leonardo da Vinci Airport|\n|Malpensa Airport|\n|Brussels Airport|\n|Antalya Airport|\n|Son Sant Joan Airport|\n|Vienna International Airport|\n|Shanghai Pudong International Airport|\n\n**Candidate column type:**\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nLake\nLanguage\nMayor\nMonarch\nMountain\nMountainRange\nPoliticalParty\nSaint\nScientist\nSportsTeam\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test17"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Fell Name|\n|---|\n|Scafell Pike|\n|Scafell|\n|Helvellyn|\n|Skiddaw|\n|Great End|\n|Bowfell|\n|Great Gable|\n|Pillar|\n|Nethermost Pike|\n|Catstye Cam|\n|Esk Pike|\n|Raise|\n|Fairfield|\n|Blencathra - Hallsfell Top|\n|Skiddaw Little Man|\n|White Side|\n|Crinkle Crags - Long Top|\n|Dollywaggon Pike|\n|Great Dodd|\n|Grasmoor|\n|Stybarrow Dodd|\n|St Sunday Crag|\n|Scoat Fell|\n|Crag Hill [Eel Crag]|\n|High Street|\n|Red Pike (Wasdale)|\n|Hart Crag|\n|Steeple|\n|Lingmell|\n|High Stile|\n\n**Candidate column type:**\nAirline\nBaseballPlayer\nBird\nBook\nBuilding\nContinent\nCurrency\nGenre\nGovernmentType\nLanguage\nMammal\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mountain\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test170"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Fianna Fail|\n|---|\n|Fine Gael|\n|Labour Party|\n|Green Party|\n|Independents|\n|Socialist Party|\n|Workers Party|\n|Other|\n|Virtual Candidate Elected on Agenda|\n|Sinn F?in|\n|Fis Nua|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nBird\nBuilding\nCompany\nCountry\nCurrency\nGenre\nLake\nMammal\nMonarch\nNewspaper\nPoliticalParty\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"PoliticalParty\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test171"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Game Title|\n|---|\n|Elder Scrolls IV: Oblivion|\n|WWE Warzone|\n|Turok 2: Seeds of Evil|\n|NBA Jam|\n|Mortal Kombat 2|\n|Mortal Kombat 3|\n|Mortal Kombat 2|\n|Mortal Kombat 3|\n|NBA Jam|\n|Tony Hawk's Pro Skater|\n|Tony Hawk's Pro Skater 2|\n|Tony Hawk's Pro Skater 3|\n|Spider-Man|\n|Tony Hawk's Pro Skater|\n|Tony Hawk's Pro Skater 3|\n|Spider-Man: The Movie|\n|Tony Hawk Underground|\n|Tony Hawk Underground 2|\n|Tony Hawk's Pro Skater 4|\n|True Crime: Streets of LA|\n|Spider-Man: The Movie 2|\n|Guitar Hero|\n|Guitar Hero II|\n|Guitar Hero III: Legends of Rock|\n|Call of Duty: Finest Hour|\n|Shrek 2|\n|Call of Duty 2|\n|Guitar Hero II|\n|Marvel: Ultimate Alliance|\n|Call of Duty 3|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBird\nBuilding\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMountainRange\nMovieDirector\nPoliticalParty\nSaint\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test172"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Game|\n|---|\n|Aliens: Colonial Marines|\n|All-Pro Football 2K8|\n|Alone in the Dark|\n|Alpha Protocol|\n|Army Of Two|\n|Army of Two: The 40th Day|\n|Assassin's Creed|\n|Batman: Arkham Asylum|\n|Bioshock|\n|Blacksite: Area 51|\n|Bladestorm: The Hundred Years War|\n|Blazing Angels: Squadrons of WWII|\n|Blur|\n|Borderlands|\n|Brothers in Arms: Hell's Highway|\n|Burnout Paradise|\n|Call of Duty 3|\n|Call of Duty 4: Modern Warfare|\n|Call of Duty: World at War|\n|Calling All Cars|\n|Civilization Revolution|\n|College Hoops 2K8|\n|Conan|\n|Condemned 2: Bloodshot|\n|Conflict: Denied Ops|\n|Damnation|\n|Dark Sector|\n|Darksiders: Wrath of War|\n|Dead Space|\n|Destroy All Humans! Path of the Furon|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nBaseballPlayer\nBird\nBook\nBuilding\nContinent\nCountry\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"VideoGame\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test173"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Game|\n|---|\n|Batman: Arkham City|\n|Super Mario Galaxy 2|\n|Uncharted 2: Among Thieves|\n|Grand Theft Auto IV|\n|Super Mario Galaxy|\n|The Legend of Zelda: Twilight Princess|\n|Resident Evil 4|\n|Half-Life 2|\n|The Legend of Zelda: The Wind Waker?|\n|Metroid Prime|\n|Halo: Combat Evolved|\n|Metal Gear Solid|\n|Soulcalibur|\n|The Legend of Zelda: Ocarina of Time|\n|GoldenEye 007|\n|Super Mario 64|\n|Chrono Trigger|\n|Final Fantasy VI|\n|The Legend of Zelda: Link's Awakening|\n|The Legend of Zelda: A Link to the Past|\n|Sonic the Hedgehog[130]|\n|Motocross Maniacs|\n|Tetris|\n|Phantasy Star II|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nContinent\nCountry\nCurrency\nFilm\nGovernmentType\nHospital\nLake\nMountain\nPlant\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"VideoGame\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test174"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Game|\n|---|\n|Batman: Arkham City[131]|\n|Super Mario Galaxy 2[132]|\n|Uncharted 2: Among Thieves[133]|\n|Grand Theft Auto IV|\n|Super Mario Galaxy|\n|The Legend of Zelda: Twilight Princess|\n|Resident Evil 4|\n|Half-Life 2|\n|The Legend of Zelda: The Wind Waker|\n|Metroid Prime|\n|Grand Theft Auto III|\n|Perfect Dark|\n|Soulcalibur|\n|The Legend of Zelda: Ocarina of Time|\n|GoldenEye 007|\n|Super Mario 64|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test175"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Game|\n|---|\n|Red Dead Redemption|\n|Uncharted 2: Among Thieves|\n|Grand Theft Auto IV|\n|BioShock|\n|The Legend of Zelda: Twilight Princess|\n|Resident Evil 4|\n|Halo 2|\n|Prince of Persia: Sands of Time|\n|Metroid Prime|\n|Halo Combat Evolved|\n|Tony Hawk's Pro Skater 2|\n|Soul Calibur|\n|The Legend of Zelda: Ocarina of Time|\n|Goldeneye 007|\n|Super Mario 64|\n|Twisted Metal|\n|Donkey Kong Country|\n|Samurai Shodown|\n|Street Fighter II|\n|Sonic the Hedgehog|\n|Strider|\n|Ghouls 'n Ghosts|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nFilm\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMonarch\nMountain\nMovieDirector\nNewspaper\nPlant\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"VideoGame\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test176"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Game|\n|---|\n|The Elder Scrolls V: Skyrim|\n|Final Fantasy XIII-2|\n|The Elder Scrolls V: Skyrim|\n|SoulCalibur V|\n|The Elder Scrolls V: Skyrim|\n|Star Wars: The Old Republic|\n|Final Fantasy XIII|\n|Dark Souls|\n|SoulCalibur V|\n|League of Legends|\n|The Legend of Zelda: Skyward Sword|\n|Pokemon Black Version|\n|Final Fantasy XIII-2|\n|World of Warcraft|\n|Call of Duty: Modern Warfare 3|\n|Kingdoms of Amalur: Reckoning|\n|Resident Evil: Revelations|\n|DC Universe Online|\n|Batman: Arkham City|\n|Mass Effect 3|\n|Ultimate Marvel vs. Capcom 3|\n|Battlefield 3|\n|WWE '12|\n|Mass Effect 2|\n|Final Fantasy VII|\n|Batman: Arkham City|\n|Final Fantasy XIII|\n|Minecraft|\n|Call of Duty: Modern Warfare 3|\n|Katawa Shoujo|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBaseballPlayer\nBird\nContinent\nCountry\nCurrency\nGenre\nGovernmentType\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"VideoGame\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test177"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Game|\n|---|\n|The Elder Scrolls V: Skyrim|\n|Red Dead Redemption|\n|Call of Duty: Modern Warfare 2|\n|Fallout 3|\n|Call of Duty 4: Modern Warfare|\n|The Legend of Zelda: Twilight Princess|\n|Civilization IV|\n|Halo 2|\n|Star Wars: Knights of the Old Republic|\n|Metroid Prime|\n|Grand Theft Auto III|\n|Deus Ex|\n|Unreal Tournament|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCountry\nCurrency\nFilm\nLanguage\nMammal\nMayor\nMonarch\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nSaint\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"VideoGame\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test178"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Game|\n|---|\n|Wii Sports|\n|Super Mario Bros.|\n|Mario Kart Wii|\n|Pok?mon Red \/ Green \/ Blue Version|\n|Wii Sports Resort|\n|Tetris|\n|Wii Play|\n|Duck Hunt|\n|New Super Mario Bros.|\n|Nintendogs|\n|New Super Mario Bros. Wii|\n|Pok?mon Gold \/ Silver Version|\n|Mario Kart DS|\n|Wii Fit|\n|Wii Fit Plus|\n|Grand Theft Auto: San Andreas|\n|Super Mario World|\n|Brain Age: Train Your Brain in Minutes a Day|\n|Super Mario Land|\n|Pok?mon Diamond \/ Pearl Version|\n|Super Mario Bros. 3|\n|Grand Theft Auto: Vice City|\n|Kinect Adventures!|\n|Pok?mon Ruby \/ Sapphire Version|\n|Brain Age 2: More Training in Minutes a Day|\n|Gran Turismo 3: A-Spec|\n|Pok?mon Yellow: Special Pikachu Edition|\n|Call of Duty: Black Ops|\n|Call of Duty: Modern Warfare 3|\n|Grand Theft Auto III|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBook\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"VideoGame\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test179"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Anaximander|\n|---|\n|Pythagoras|\n|Hippocrates of Cos|\n|Democritus of Abdera|\n|Plato|\n|Aristotle|\n|Euclid|\n|Archimedes|\n|Hipparchus|\n|Zhang Heng|\n|Ptolemy|\n|Galen of Pergamum|\n|Al-Khwarizmi|\n|Johannes Gutenberg|\n|Leonardo da Vinci|\n|Nicolas Copernicus|\n|Andreas Vesalius|\n|William Gilbert|\n|Francis Bacon|\n|Galileo Galileo|\n|Johannes Kepler|\n|William Harvey|\n|Johann van Helmont|\n|Rene Descartes|\n|Blaise Pascal|\n|Robert Boyle|\n|Christiann Huygens|\n|Anton van Leeuwenhoek|\n|Robert Hooke|\n|Sir Isaac Newton|\n|Edmund Halley|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nFilm\nHospital\nLake\nLanguage\nMayor\nMountain\nMountainRange\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test18"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Geb?ude|\n|---|\n|Burj Khalifa|\n|Makkah Clock Royal Tower [Abraj Al Bait]|\n|Taipei 101|\n|Shanghai World Financial Center|\n|International Commerce Centre [Union Square]|\n|Petronas Tower 1 [Petronas Towers]|\n|Petronas Tower 2 [Petronas Towers]|\n|Nanjing Greenland Financial Center|\n|Willis Tower|\n|Kingkey Finance Tower|\n|Guangzhou International Finance Center [Guangzhou Twin Towers]|\n|Jin Mao Tower|\n|Two International Finance Centre [International Finance Centre]|\n|Trump International Hotel & Tower|\n|Princess Tower|\n|Al Hamra Tower|\n|23 Marina|\n|CITIC Plaza [CITIC Plaza]|\n|Shun Hing Square [Shun Hing Square]|\n|The Domain [Central Market]|\n|Empire State Building|\n|Elite Residence|\n|Emirates Park Tower 1 [Emirates Park Towers Hotel & Spa]|\n|Emirates Park Tower 2 [Emirates Park Towers Hotel & Spa]|\n|Central Plaza|\n|Bank of China Tower|\n|Bank of America Tower|\n|Almas Tower|\n|The Pinnacle|\n|Emirates Office Tower [Emirates Towers]|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nCurrency\nFilm\nGovernmentType\nHospital\nLanguage\nMammal\nMayor\nMonarch\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test180"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Geb?udename|\n|---|\n|Burj Khalifa|\n|Taipei 101|\n|Petronas Towers|\n|Willis Tower|\n|World Trade Center|\n|Empire State Building|\n|Chrysler Building|\n|The Trump Building|\n|Woolworth Building|\n|Metropolitan Life Tower|\n|Singer Building|\n|Philadelphia City Hall|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Building\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test181"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Genre [10][11][15][18][22][23]|\n|---|\n|Sports\/Snowboarding|\n|Card Game|\n|Sports\/Wrestling\/Sumo|\n|Sports\/Wrestling\/Sumo|\n|Adventure\/Card Games|\n|Simulation\/Flight Combat|\n|Racing\/Automotive|\n|Board Game\/Strategy|\n|Adventure\/Role Playing|\n|Sports\/Stunts|\n|Sports\/Baseball|\n|Sports\/Baseball|\n|Sports\/Baseball|\n|Sports\/Tennis|\n|Simulation\/Living\/Social|\n|Action\/Adventure\/3D Shooter|\n|Action\/Adventure\/3D Shooter|\n|Action\/Adventure\/3D Shooter|\n|Action\/Adventure\/3D Shooter|\n|Arcade\/Action\/Shooter|\n|Racing\/Automobile|\n|Action\/Adventure|\n|Board Game|\n|Adventure\/3D Platformer|\n|Adventure\/3D Platformer|\n|Sports\/Fishing|\n|Sports\/Fishing|\n|Sports\/Fishing|\n|Action\/Adventure|\n|Simulation\/Tank Combat|\n\n**Candidate column type:**\nAcademicJournal\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Genre\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test182"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Genre|\n|---|\n|Action-Adventure: Brawler|\n|Stealth|\n|Platformer|\n|Action-Adventure: (Third-Person) Shooter|\n|Open World: (Third-Person) Shooter|\n|Platformer|\n|Action-Adventure|\n|Survival horror: (Third-Person) Shooter|\n|(First-Person) Shooter|\n|Action-Adventure: Open World|\n|Action-Adventure: (First-Person) Shooter|\n|Action-Adventure: Open World|\n|(First-Person) Shooter|\n|Fighting: Hack & Slash|\n|Action-Adventure: Open World|\n|(First-Person) Shooter|\n|Platformer: Open World|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCurrency\nFilm\nGovernmentType\nHospital\nLanguage\nMammal\nMayor\nMonarch\nMovieDirector\nPlant\nPoliticalParty\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test183"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Genre|\n|---|\n|Action-Adventure: Brawler|\n|Stealth|\n|Platformer|\n|Action-Adventure: (Third-Person) Shooter|\n|Open World: (Third-Person) Shooter|\n|Platformer|\n|Action-adventure|\n|Survival Horror: (Third-Person) Shooter|\n|(First-Person) Shooter|\n|Action-Adventure|\n|(First-Person) Action-Adventure|\n|(First-Person) Shooter|\n|Stealth: Action-Adventure|\n|Fighting: Hack & Slash|\n|Action-Adventure: Open World|\n|(First-Person) Shooter|\n|Platformer: Open World|\n|Role-Playing Game|\n|Role-Playing Game|\n|Action-Adventure|\n|Action-Adventure|\n|(Side-Scrolling) Platformer|\n|Racing|\n|Puzzle|\n|Role-Playing Game|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLanguage\nMammal\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nRadioStation\nScientist\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Genre\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test184"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Genre|\n|---|\n|Adventure|\n|Action|\n|Shooter|\n|Adventure|\n|Action|\n|Action|\n|Shooter|\n|Shooter|\n|Horror|\n|Shooter|\n|Shooter|\n|Racer|\n|Racing|\n|Shooter|\n|Shooter|\n|Shooter|\n|Shooter|\n|Shooter|\n|Racing|\n|Horror|\n|Horror|\n|Action|\n|Shooter|\n|Horror|\n|Action|\n|Horror|\n|Racing|\n|Action|\n|RPG|\n|RPG|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nHospital\nLake\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Genre\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test185"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Genre|\n|---|\n|Open World: (Third-Person) Shooter|\n|Action-adventure|\n|Third-person shooter|\n|Open World|\n|Action|\n|Shooter|\n|Action-adventure|\n|Survival Horror: (Third-Person) Shooter|\n|Shooter|\n|Action-adventure|\n|Action-adventure|\n|Shooter|\n|Sports|\n|Fighting|\n|Action-adventure|\n|Shooter|\n|Action-platformer|\n|Action-driving game|\n|Action-platformer|\n|Fighting|\n|Fighting|\n|Action-platformer|\n|Action-adventure|\n|Action-adventure|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBird\nBuilding\nCity\nCompany\nCountry\nCurrency\nGenre\nHospital\nLake\nLanguage\nMayor\nMonarch\nMountain\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Genre\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test186"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Genre|\n|---|\n|Open World: RPG|\n|Action Adventure|\n|First-person shooter|\n|third-person shooter|\n|RPG|\n|First-person shooter|\n|Action-adventure|\n|Turn-based strategy game|\n|4X|\n|First-person Shooter|\n|RPG|\n|First-person adventure|\n|Action|\n|Action RPG|\n|First-person shooter|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBird\nBook\nBuilding\nCompany\nContinent\nCurrency\nFilm\nGenre\nHospital\nLanguage\nMayor\nMountain\nMountainRange\nNewspaper\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Genre\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test187"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Genre|\n|---|\n|POP|\n|ROCK|\n|POP|\n|POP|\n|OLDIES|\n|OLDIES|\n|COUNTRY|\n|ROCK|\n|POP|\n|ROCK|\n|ROCK|\n|CLASSIC ROCK|\n|ROCK|\n|STANDARDS|\n|ROCK|\n|DISCO|\n|CLASSIC ROCK|\n|COUNTRY|\n|POP|\n|POP|\n|ROCK|\n|POP|\n|COUNTRY|\n|COUNTRY|\n|COUNTRY|\n|ROCK|\n|CLASSIC ROCK|\n|DISCO|\n|POP|\n|POP|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBird\nBook\nCompany\nCountry\nCurrency\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test188"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Genre|\n|---|\n|Shooter|\n|Sports|\n|Survival Horror|\n|RPG|\n|Action|\n|Action|\n|Action|\n|Action|\n|Action|\n|Action|\n|Real Time Strategy|\n|Flight - Action|\n|Racing|\n|Action|\n|First Person Shooter|\n|Racing|\n|First Person Shooter|\n|Shooter|\n|First Person Shooter|\n|Action|\n|Strategy|\n|Sports|\n|Action|\n|Action|\n|Shooter|\n|Action|\n|Action|\n|Action|\n|Action|\n|Action|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nCity\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nPlant\nRadioStation\nScientist\nSportsTeam\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Genre\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test189"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Animal|\n|---|\n|Platypus|\n|Pacific Gray Whale|\n|Least Shrew|\n|Mexican Free-Tail Bat|\n|African Elephant|\n|Koala|\n|Giraffe|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nLake\nMammal\nMayor\nMonarch\nMountain\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nScientist\nSportsTeam\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mammal\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test19"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Genre|\n|---|\n|Sports|\n|Platform|\n|Racing|\n|Role-Playing|\n|Sports|\n|Puzzle|\n|Misc|\n|Shooter|\n|Platform|\n|Simulation|\n|Platform|\n|Role-Playing|\n|Racing|\n|Sports|\n|Sports|\n|Action|\n|Platform|\n|Misc|\n|Platform|\n|Role-Playing|\n|Platform|\n|Action|\n|Misc|\n|Role-Playing|\n|Misc|\n|Racing|\n|Role-Playing|\n|Shooter|\n|Shooter|\n|Action|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMovieDirector\nMuseum\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Genre\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test190"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Gipfel|\n|---|\n|Charenstock|\n|Planggenstock|\n|Wageten|\n|Rautispitz|\n|Wiggis|\n|B\u00e4rensolspitz|\n|Lachnerstock|\n|Br\u00fcckler Br\u00fcggler|\n|Gumenstock|\n|Chli Gumen|\n|Ch\u00f6pfenberg|\n|Schijen|\n|Isikerberg|\n|Br\u00fcnnelistock|\n|Bockmattli|\n|Schwander Grat|\n|Rossalpelispitz|\n|Ruchen|\n|Ebnerberg|\n|Plattenberg|\n|Gl\u00e4rnisch|\n|Schiberg|\n|Zindlenspitz|\n|B\u00e4chistock|\n|Lachenstock|\n|Br\u00fcschstockb\u00fcgel|\n|Inner F\u00fcrberg|\n|B\u00e4chihorn|\n|Usser F\u00fcrberg|\n|Redertenstock|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nLake\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nRadioStation\nScientist\nSportsTeam\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mountain\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test191"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Gipfel|\n|---|\n|Cima della Valletta Mottone della Tappa|\n|Motto di Lev\u00e9n|\n|Monte Stabbiello|\n|Scrigno di Poltrinone|\n|Prato della Basci\u00f3ta|\n|Monte Segor|\n|Gazzirola|\n|Camogh\u00e8|\n|Monte Generoso|\n|Cima Calescio|\n|Forcel|\n|Motton|\n|Mottone|\n|Pizzo Pianaccio|\n|Piz da Termin|\n|Pizzo del Ramulazz|\n|Filo di Revi|\n|Filo di Remia|\n|Torent Alto Torrone Alto|\n|Filo di Bug\u00e8la|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nGovernmentType\nHospital\nLake\nMammal\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nSaint\nSportsTeam\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mountain\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test192"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Gipfel|\n|---|\n|Gross D\u00fcssi Piz Git|\n|Piz Urlaun|\n|Piz Frisal|\n|Stoc Grond|\n|Piz Dado|\n|Bifertenstock Durschin|\n|Glarner T\u00f6di|\n|Piz Russein T\u00f6di|\n|Sandgipfel|\n|Gross Sch\u00e4rhorn|\n|Hinter Schiben|\n|Kistenst\u00f6ckli Muot da Rubi|\n|Vorder Schiben|\n|Claridenhorn|\n|Chammliberg|\n|Piz d'Artgas|\n|Hinter Selbsanft Selbsanft|\n|Clariden|\n|Crap Surtscheins|\n|Bocktschingel|\n|Fil da Rueun|\n|Crap Ner|\n|Muttenbergen|\n|Piz Gavirolas|\n|Crest da Tiarms|\n|Muttenstock|\n|Tgom'Aulta|\n|Piz Fluaz|\n|Crap Tgietschen Rotstock|\n|Crap Sogn Gion|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nBird\nBuilding\nCity\nContinent\nCountry\nGenre\nGovernmentType\nLake\nLanguage\nMammal\nMayor\nMountainRange\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test193"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Government|\n|---|\n|Colony (UK)|\n|Colony (Netherlands)|\n|Constitutional Monarchy|\n|Constitutional Monarchy|\n|Republic|\n|Colony (UK)|\n|Colony (UK)|\n|Federal Monarchy|\n|Colony (UK)|\n|Republic|\n|One Party State|\n|Constitutional Monarchy|\n|Republic|\n|Republic|\n|Constitutional Monarchy|\n|Colony (France)|\n|Republic|\n|Military Dictatorship|\n|Republic|\n|Constitutional Monarchy|\n|Colony (France)|\n|Federal Republic|\n|Colony (UK)|\n|Colony (USA)|\n|Colony (Netherlands)|\n|Republic|\n|Republic|\n|Colony (Norway)|\n|Dependency (USA)|\n|Constitutional Monarchy|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nBird\nBook\nBuilding\nCompany\nCountry\nFilm\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMonarch\nMountain\nMovieDirector\nMuseum\nNewspaper\nRadioStation\nSaint\nSportsTeam\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"GovernmentType\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test194"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Government|\n|---|\n|Dependency (Finland)|\n|Republic|\n|Republic|\n|Republic|\n|Federal Republic|\n|Republic|\n|One Party State|\n|Constitutional Monarchy|\n|Republic|\n|Republic|\n|Republic|\n|Republic|\n|Republic|\n|Constitutional Monarchy|\n|Republic|\n|Dependency (Denmark)|\n|Republic|\n|Republic|\n|Republic|\n|Federal Republic|\n|Colony (UK)|\n|Republic|\n|Dependency (Denmark)|\n|Dependency (UK)|\n|Republic|\n|Republic|\n|Republic|\n|Dependency (UK)|\n|Republic|\n|Colony (Norway)|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nHospital\nLake\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test195"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Government|\n|---|\n|Federal Republic|\n|Republic|\n|Colony (Norway)|\n|Federal Republic|\n|Republic|\n|Republic|\n|Republic|\n|Dependency (UK)|\n|Colony (France)|\n|Constitutional Monarchy|\n|Republic|\n|Republic|\n|Dependency (UK)|\n|Republic|\n|Republic|\n|Republic|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBird\nBook\nBuilding\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nLake\nLanguage\nMonarch\nMountain\nMuseum\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"GovernmentType\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test196"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Government|\n|---|\n|Military Dictatorship|\n|One Party State|\n|Republic|\n|Republic|\n|One Party State|\n|Military Dictatorship|\n|Republic|\n|Republic|\n|One Party State|\n|One Party State|\n|One Party State|\n|No effective government|\n|Republic|\n|One Party State|\n|Military Dictatorship|\n|One Party State|\n|Republic|\n|One Party State|\n|Military Dictatorship|\n|Republic|\n|One Party State|\n|Republic|\n|One Party State|\n|Republic|\n|Republic|\n|No effective government|\n|One Party State|\n|Republic|\n|Republic|\n|Republic|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nHospital\nLake\nMammal\nMayor\nMountain\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test197"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Government|\n|---|\n|No effective government|\n|Absolute Monarchy|\n|Republic|\n|Theocratic Monarchy|\n|Colony (UK)|\n|Absolute Monarchy|\n|Military Dictatorship|\n|Republic|\n|One Party State|\n|Republic|\n|Federal Republic|\n|Republic|\n|Theocratic Republic|\n|No effective government|\n|Republic|\n|Constitutional Monarchy|\n|Monarchy|\n|One Party State|\n|Absolute Monarchy|\n|One Party State|\n|One Party State|\n|One Party State|\n|Federal Monarchy|\n|Republic|\n|Monarchy|\n|One Party State|\n|Absolute Monarchy|\n|Republic|\n|Republic|\n|Republic|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMountain\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"GovernmentType\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test198"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Government|\n|---|\n|emerging democracy|\n|republic|\n|republic; multiparty presidential regime|\n|republic|\n|federal parliamentary democracy|\n|federal republic|\n|constitutional parliamentary democracy|\n|parliamentary democracy|\n|democracy|\n|parliamentary democracy|\n|(possibly outdated) absolute monarchy; special treaty relationship with India; note - transition to a constitutional monarchy is expected in 2008 constitutional monarchy; special treaty relationship with India|\n|republic|\n|emerging federal democratic republic|\n|federal republic|\n|military junta|\n|socialist republic|\n|presidential\/parliamentary democracy|\n|socialist republic|\n|republic|\n|republic|\n|republic|\n|republic|\n|republic|\n|federal republic|\n|parliamentary republic|\n|parliamentary democracy|\n|parliamentary democracy|\n|theocratic republic|\n|federal republic|\n|parliamentary democracy|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMountainRange\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"GovernmentType\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test199"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Consular (\u0093Acisculus.\u0094 Valeria gens).|\n|Domitian|\n|Trajan|\n|Hadrian|\n|Antoninus Pius|\n|Faustina senr.|\n|Faustina junr.|\n|Septimius Severus|\n|Geta|\n|Blagabalus|\n|Julia Soaemias|\n|Julia Maesa.|\n|Severus Alexander|\n|Julia Mamma|\n|Gordianus III.|\n|Valerianus I.|\n|Gallienus|\n|Salonina|\n|Claudius Gothicus|\n|Postumus|\n|Victorinus I.|\n|Marius|\n|Tetricus I.|\n|Tetricus II.|\n|Tacitus|\n|Probus|\n|Diocletian|\n|Carausius|\n|Allectus|\n|Constantius Chlorus|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nBaseballPlayer\nBird\nBook\nCity\nContinent\nGenre\nGovernmentType\nHospital\nLake\nMammal\nMonarch\nMountain\nMuseum\nNewspaper\nPlant\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Monarch\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test2"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Antoninus Pius|\n|---|\n|Marcus Aurelius|\n|Lucius Verus|\n|Commodus|\n|Pertinax|\n|Didius Julianus|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nCurrency\nFilm\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountainRange\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Monarch\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test20"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Government[53]|\n|---|\n|Parliamentary Democracy|\n|Republic|\n|Republic; Multiparty Presidential Regime|\n|Republic|\n|Federal Parliamentary Democracy|\n|Federal Republic|\n|Constitutional Monarchy with a parliamentary system of government|\n|Parliamentary Democracy|\n|Federal Parliamentary Democracy under Constitutional Monarchy|\n|Parliamentary Democracy|\n|Constitutional Monarchy|\n|Republic|\n|Emerging Federal Democratic Republic|\n|Federal Republic|\n|Parliamentary Democracy|\n|Military Junta|\n|Federal Parliamentary Democracy|\n|republic|\n|Communist State|\n|presidential\/parliamentary democracy|\n|Communist state|\n|republic[71]|\n|constitutional monarchy|\n|republic|\n|republic|\n|republic|\n|republic|\n|republic|\n|republic|\n|republic|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"GovernmentType\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test200"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Granting Institution|\n|---|\n|University of Alberta|\n|University of British Columbia|\n|Hebrew University|\n|Cornell University|\n|University of Lw?w|\n|Georg-August-Universit?t G?ttingen|\n|Universit?t K?nigsberg|\n|Friedrich-Alexander-Universit?t Erlangen-N?rnberg|\n|Rheinische Friedrich-Wilhelms-Universit?t Bonn|\n|Philipps - Universit?t Marburg|\n|Georg-August-Universit?t G?ttingen|\n|Universit?t Helmstedt|\n|Georg-August-Universit?t G?ttingen|\n|Universit?t Leipzig|\n|Martin-Luther-Universit?t Halle-Wittenberg|\n|Martin-Luther-Universit?t Halle-Wittenberg|\n|Universit?t Berlin|\n|Rheinische Friedrich-Wilhelms-Universit?t Bonn|\n|unknown|\n|unknown|\n|unknown|\n|Universit?t Basel|\n|unknown|\n|unknown|\n|Friedrich-Alexander-Universit?t Erlangen-N?rnberg|\n|unknown|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBird\nBook\nCompany\nContinent\nCurrency\nGenre\nGovernmentType\nLake\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nScientist\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"University\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test201"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Great white pelican|\n|---|\n|Pink-backed pelican|\n|Little grebe|\n|Great cormorant|\n|Long-tailed cormorant|\n|African darter|\n|African finfoot|\n|Little bittern|\n|Black-crowned night-heron|\n|Cattle egret|\n|Common squacco heron|\n|Madagascar pond-heron|\n|Striated heron|\n|Rufous-bellied heron|\n|Little egret|\n|Intermediate egret|\n|Great egret|\n|Goliath heron|\n|Purple heron|\n|Grey heron|\n|Black-headed heron|\n|Hamerkop|\n|Yellow-billed stork|\n|Wooly-necked stork|\n|African open-billed stork|\n|Saddle-billed stork|\n|Marabou stork|\n|Shoebill|\n|Sacred ibis|\n|Hadada ibis|\n|Glossy ibis|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nGovernmentType\nLake\nLanguage\nMammal\nMayor\nMountain\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nSportsTeam\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Bird\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test202"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Himal|\n|---|\n|Khumbu|\n|Annapurna|\n|Anapurrna|\n|Anapurrna|\n|Anapurrna|\n|Anapurrna|\n|Gurans|\n|Byas-Rikhi|\n|Barun|\n|Mansiri|\n|Mahalangur|\n|Peri|\n|Rolwaling|\n|Khumbu|\n|Khumbu|\n|Mahalangur|\n|Dhaulagiri|\n|Khumbu|\n|Kanchenjunga|\n|Mukut|\n|Dhaulagiri|\n|Dhaulagiri|\n|Dhaulagiri|\n|Dhaulagiri|\n|Dhaulagiri|\n|Dhaulagiri|\n|Rolwaling|\n|Saipal|\n|Saipal|\n|Ganesh|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mountain\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test203"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Hospital Name|\n|---|\n|6th Medical Group - MacDill Air Force Base|\n|96th Medical Group - United States Air Force Eglin Regional Hospital|\n|Aventura Hospital and Medical Center|\n|Baptist Hospital|\n|Baptist Hospital of Miami|\n|Baptist Medical Center Beaches|\n|Baptist Medical Center Downtown|\n|Baptist Medical Center Nassau|\n|Baptist Medical Center South|\n|Bartow Regional Medical Center|\n|Bascom Palmer Eye Institute|\n|Bay Medical|\n|Bay Pines VA Healthcare System|\n|Bayfront Medical Center|\n|Bert Fish Medical Center|\n|Bethesda Memorial Hospital|\n|Blake Medical Center|\n|Boca Raton Community Hospital|\n|Brandon Regional Hospital|\n|Brooksville Regional Hospital|\n|Broward General Medical Center|\n|Cape Canaveral Hospital|\n|Cape Coral Hospital|\n|Capital Regional Medical Center|\n|Central Florida Regional Hospital|\n|Charlotte Regional Medical Center|\n|Citrus Memorial Hospital|\n|Cleveland Clinic in Florida - Weston|\n|Columbia Hospital|\n|Community Hospital|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nCompany\nContinent\nCountry\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Hospital\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test204"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Hospital|\n|---|\n|Concord Repatriation General Hospital|\n|Hunter Integrated Pain Service|\n|Liverpool Hospital|\n|Nepean Hospital|\n|Prince of Wales\/Prince Henry\/ Sydney Children's Hospitals|\n|Royal North Shore Hospital|\n|Royal Prince Alfred Hospital|\n|St Vincent's Hospital|\n|The Children's Hospital at Westmead|\n|Westmead Hospital|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Hospital\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test205"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Hospital name|\n|---|\n|Morriston Hospital (Swansea)|\n|Singleton Hospital (Swansea)|\n|Princess of Wales Hospital (Bridgend)|\n|Neville Hall Hospital (Abergavenny)|\n|Royal Gwent Hospital (Newport)|\n|University Hospital Llandough|\n|University Hospital of Wales (Cardiff)|\n|Prince Charles Hospital (Merthyr Tydfil)|\n|Royal Glamorgan Hospital (Llantrisant)|\n|Bronglais Hospital (Aberystwyth)|\n|Prince Philip Hospital (Llanelli)|\n|Glangwili Hospital (Carmarthen)|\n|Withybush Hospital (Haverford West)|\n|Ysbyty Gwynedd (Bangor)|\n|Ysbyty Glan Clwyd (Rhyl)|\n|Maelor Hospital (Wrexham)|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nContinent\nCountry\nFilm\nGenre\nLake\nMammal\nMayor\nMonarch\nMountain\nMuseum\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test206"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|H\u00f4pital|\n|---|\n|Vancouver General Hospital|\n|Richmond General Hospital|\n|Lion\u0092s Gate|\n|Powell River|\n|St. Mary\u0092s Hospital|\n|Squamish Hospital|\n|Victoria General|\n|Royal Jubilee|\n|Children\u0092s and Women\u0092s Health Center|\n|Peter Lougheed|\n|Rockyview General|\n|Foothills Hospital|\n|Alberta Children\u0092s Hospital|\n|Rockyview Hospital|\n|University of Alberta Hospital|\n|Stollery Children\u0092s Hospital|\n|Royal University Hospital|\n|Universit\u00e9 du Manitoba|\n|Maladies infectieuses p\u00e9diatriques|\n|St. Joseph\u0092s Health care|\n|Children\u0092s Hospital of Western Ontario|\n|Victoria Hospital|\n|University Hospital|\n|Toronto Western Hospital|\n|Toronto General Hospital|\n|Princess Margaret Hospital|\n|Mount Sinai Hospital|\n|Sunnybrook Health Science Centre|\n|The Hospital for Sick Children|\n|Kingston General Hospital|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBaseballPlayer\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nGovernmentType\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test207"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|ISO 4217|\n|---|\n|ALGERIA|\n|ARGENTINA|\n|AUSTRALIA|\n|BAHAMAS|\n|BARBADOS|\n|BERMUDA|\n|BRAZIL|\n|BULGARIA|\n|CANADA|\n|CHILE|\n|CHINA|\n|CYPRUS|\n|CZECH REPUBLIC|\n|DENMARK|\n|EGYPT|\n|EURO|\n|FIJI|\n|GREAT BRITAIN|\n|HONG KONG|\n|HUNGARY|\n|ICELAND|\n|INDIA|\n|INDONESIA|\n|ISRAEL|\n|JAMAICA|\n|JAPAN|\n|JORDAN|\n|KENYA|\n|LEBANON|\n|MALAYSIA|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGovernmentType\nLake\nMammal\nMayor\nMountain\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nScientist\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test208"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Isaac Newton|\n|---|\n|Albert Einstein|\n|Neils Bohr|\n|Charles Darwin|\n|Louis Pasteur|\n|Sigmund Freud|\n|Galileo Galilei|\n|Antoine Laurent Lavoisier|\n|Johannes Kepler|\n|Nicolaus Copernicus|\n|Michael Faraday|\n|James Clerk Maxwell|\n|Claude Bernard|\n|Franz Boas|\n|Werner Heisenberg|\n|Linus Pauling|\n|Rudolf Virchow|\n|Erwin Schrodinger|\n|Ernest Rutherford|\n|Paul Dirac|\n|Andreas Vesalius|\n|Tycho Brahe|\n|Comte de Buffon|\n|Ludwig Boltzmann|\n|Max Planck|\n|Marie Curie|\n|William Herschel|\n|Charles Lyell|\n|Pierre Simon de Laplace|\n|Edwin Hubble|\n|Joseph J. Thomson|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Scientist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test209"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Appears In|\n|---|\n|The Southern Fells|\n|The Southern Fells|\n|The Eastern Fells|\n|The Northern Fells|\n|The Southern Fells|\n|The Southern Fells|\n|The Western Fells|\n|The Western Fells|\n|The Eastern Fells|\n|The Eastern Fells|\n|The Southern Fells|\n|The Eastern Fells|\n|The Eastern Fells|\n|The Northern Fells|\n|The Northern Fells|\n|The Eastern Fells|\n|The Southern Fells|\n|The Eastern Fells|\n|The Eastern Fells|\n|The North Western Fells|\n|The Eastern Fells|\n|The Eastern Fells|\n|The Western Fells|\n|The North Western Fells|\n|The Far Eastern Fells|\n|The Western Fells|\n|The Eastern Fells|\n|The Western Fells|\n|The Southern Fells|\n|The Western Fells|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountainRange\nMovieDirector\nPlant\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"MountainRange\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test21"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Italian|\n|---|\n|Tirana|\n|Algeri|\n|Pago Pago|\n|Jerevan|\n|Canberra|\n|AC|\n|Vienna|\n|Dacca|\n|Bruxelles|\n|Thimbu|\n|Georgetown|\n|Pechino|\n|Bogot?|\n|Zagrabia|\n|L?Avana|\n|Praga|\n|Copenaghen|\n|Gibuti|\n|Il Cairo|\n|Addis Abeba|\n|Parigi|\n|Caienna|\n|Tbilisi|\n|Berlino|\n|Gibilterra|\n|Atene|\n|Citt? del Guatemala|\n|Citt? del Vaticano|\n|Nuova Delhi|\n|Giacarta|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nGovernmentType\nHospital\nLanguage\nMayor\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nRadioStation\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test210"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Journal Name|\n|---|\n|ACADEMIC EMERGENCY MEDICINE|\n|AMERICAN JOURNAL OF GASTROENTEROLOGY|\n|AMERICAN JOURNAL OF PHYSIOLOGY-HEART AND CIRCULATORY PHYSIOLOGY|\n|AMERICAN SURGEON|\n|ANALYTICAL CHEMISTRY|\n|ANNALS OF EMERGENCY MEDICINE|\n|APPLIED PHYSICS LETTERS|\n|ASTROPHYSICAL JOURNAL|\n|ATMOSPHERIC ENVIRONMENT|\n|BIOCHEMICAL AND BIOPHYSICAL RESEARCH COMMUNICATIONS|\n|BIOCHEMISTRY|\n|BIOLOGICAL PSYCHIATRY|\n|BIOPHYSICAL JOURNAL|\n|BRAIN RESEARCH|\n|CANCER|\n|CANCER EPIDEMIOLOGY|\n|BIOMARKERS & PREVENTION|\n|CANCER RESEARCH|\n|CHEST|\n|CIRCULATION|\n|CMES-COMPUTER MODELING IN ENGINEERING & SCIENCES|\n|DEVELOPMENT|\n|DEVELOPMENTAL BIOLOGY|\n|ENVIRONMENTAL SCIENCE & TECHNOLOGY|\n|EPILEPSIA|\n|EUROPEAN JOURNAL OF NEUROSCIENCE|\n|EXPERIMENTAL NEUROLOGY|\n|FASEB JOURNAL|\n|GENETICS|\n|GEOPHYSICAL RESEARCH LETTERS|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nLake\nLanguage\nMayor\nMonarch\nMountain\nMuseum\nNewspaper\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AcademicJournal\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test211"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Journal|\n|---|\n|Science|\n|Nature|\n|Proceedings of the National Academy of Sciences of the United States of America|\n|royal gazette|\n|New England Journal of Medicine|\n|The Astrophysical Journal|\n|The Journal of Biological Chemistry|\n|The Lancet|\n|Journal of the American Medical Association|\n|British Medical Journal|\n|Zootaxa|\n|Bulletins of American Paleontology|\n|Icarus|\n|International Journal of Solar System Studies|\n|Cell|\n|Journal of the American Chemical Society|\n|The Astronomical Journal|\n|Molecular and Cellular Biology|\n|Nucleic Acids Research|\n|Annals of Internal Medicine|\n|Astronomy & Astrophysics|\n|Tissue Antigens|\n|Pediatrics|\n|The Cochrane Database of Systematic Reviews|\n|Neurology|\n|The American Journal of Psychiatry|\n|Physical Review Letters|\n|International Journal of Systematic and Evolutionary Microbiology|\n|The Journal of Virology|\n|The American Journal of Clinical Nutrition|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBook\nBuilding\nCompany\nContinent\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test212"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Kanton|\n|---|\n|GL|\n|GL|\n|GL|\n|GL|\n|GL|\n|GL|\n|SZ|\n|GL|\n|GL|\n|GL|\n|GL\/SZ|\n|GL|\n|ZH|\n|GL\/SZ|\n|SZ|\n|GL|\n|GL\/SZ|\n|GL|\n|ZH|\n|GL\/SZ|\n|GL|\n|GL\/SZ|\n|GL\/SZ|\n|GL|\n|GL\/SZ|\n|SZ|\n|GL|\n|GL|\n|GL|\n|GL\/SZ|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nLake\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AdministrativeRegion\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test213"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Kanton|\n|---|\n|TI\/I|\n|TI|\n|TI\/I|\n|TI|\n|TI\/I|\n|TI\/I|\n|TI\/I|\n|TI|\n|TI|\n|TI|\n|GR|\n|GR\/TI|\n|GR\/TI|\n|GR\/TI|\n|GR\/TI|\n|GR\/TI|\n|GR\/TI|\n|GR\/TI|\n|GR\/TI|\n|GR\/TI|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCurrency\nGovernmentType\nHospital\nLake\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nPlant\nPoliticalParty\nRadioStation\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mountain\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test214"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Kanton|\n|---|\n|VS|\n|VS\/I|\n|VS|\n|VS|\n|VS|\n|VS|\n|BE\/VS|\n|VS|\n|VS|\n|VS|\n|VS|\n|VS|\n|BE\/VS|\n|VS|\n|BE\/VS|\n|BE\/VS|\n|GR|\n|VS|\n|VS|\n|VS|\n|BE|\n|VS|\n|VS|\n|GR\/I|\n|VS\/F|\n|BE\/VS|\n|VS|\n|VS\/I|\n|VS|\n|VS|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGovernmentType\nHospital\nLanguage\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test215"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Kanton|\n|---|\n|Valais\/Wallis|\n|Valais\/Wallis|\n|Ticino|\n|Ticino|\n|Valais\/Wallis|\n|Valais\/Wallis|\n|Uri|\n|Graub\u00fcnden\/Grigioni|\n|Graub\u00fcnden\/Grigioni|\n|Valais\/Wallis|\n|St. Gallen|\n|Glarus|\n|Graub\u00fcnden\/Grigioni|\n|Graub\u00fcnden \/ Italia|\n|Ticino|\n|Graub\u00fcnden\/Grigioni|\n|Vaud|\n|Valais\/Wallis|\n|Valais\/Wallis|\n|Graub\u00fcnden\/Grigioni|\n|Graub\u00fcnden\/Grigioni|\n|Bern|\n|Ticino|\n|Schwyz|\n|Bern|\n|Bern|\n|Ticino|\n|Graub\u00fcnden\/Grigioni|\n|Vaud|\n|Valais\/Wallis|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AdministrativeRegion\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test216"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Label|\n|---|\n|ATARI|\n|SEGA|\n|EA GAMES|\n|BITCOMPOSER|\n|EA GAMES|\n|EA GAMES|\n|ACTIVISION|\n|BLIZZARD|\n|EA GAMES|\n|SEGA|\n|EIDOS|\n|BETHESDA SOFTWORKS|\n|ROCKSTAR|\n|EA GAMES|\n|2K GAMES|\n|EA GAMES|\n|MICROSOFT|\n|UBISOFT|\n|FOCUS HOME INTERACTIVE|\n|THQ|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBird\nBuilding\nCompany\nContinent\nCurrency\nFilm\nGenre\nGovernmentType\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountainRange\nMuseum\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test217"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Lake Name|\n|---|\n|Bony Lake|\n|Buffalo Lake|\n|Buskey Bay|\n|Chippewa|\n|Cranberry Lake T44N R09W S30|\n|Devils Lake|\n|Eagle Lake (Murray|\n|Inch)|\n|Eau Claire Lake|\n|Lower*|\n|Eau Claire Lake|\n|Middle|\n|Eau Claire Lake|\n|Upper|\n|Flynn Lake T46N R08W S03|\n|Ghost Lake|\n|Hart Lake (Heart|\n|Wiehe)|\n|Hildur (Bluebird) Lake|\n|Jackson Lake|\n|McCarry Lake|\n|Millicent Lake (Pike)|\n|Muskellunge Lake (Butte)|\n|Namekagon Lake(Spring|\n|Garden)|\n|Pacwawong Lake*|\n|Pike Lake|\n|Shunenberg Lake|\n|Smith Lake|\n|Swett Lake (Sweet)|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nFilm\nGenre\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Lake\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test218"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Lake Name|\n|---|\n|H Neely Henry Lake *|\n|Logan Martin Lake|\n|Weiss Lake|\n|Gleniffer Lake|\n|Alamo Lake|\n|Bartlett Reservoir|\n|Blue Ridge Reservoir|\n|Pleasant|\n|Lake *|\n|Sunrise Lake|\n|Beaver Lake|\n|Columbia|\n|Lake *|\n|DeGray Lake|\n|Erling|\n|Lake *|\n|Greers Ferry Lake|\n|Greeson|\n|Lake|\n|Monticello|\n|Lake *|\n|Castaic Lake Also includes Pyramid Lake|\n|CA|\n|Diamond Valley Lake|\n|El Capitan Lake|\n|Isabella Lake|\n|Lopez Lake * Also includes Santa Margarita Lake|\n|CA|\n|Loveland Reservoir *|\n|Perris Reservoir|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Lake\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test219"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Ashton-under-Lyne|\n|---|\n|Aylesbury \/ Bucks|\n|Banbury|\n|Barnet|\n|Barnstaple\/Devon|\n|Bebington|\n|Bedford|\n|Bishop Auckland|\n|Boston|\n|Bucks|\n|Burnley|\n|Bury St Edmunds|\n|Cambridge|\n|Canterbury|\n|Cheltenham|\n|Chichester|\n|Colchester|\n|Combe Park|\n|Cottingham\/East Yorkshire|\n|Crewe|\n|Darlington|\n|Davyhulme|\n|Derby|\n|Derriford|\n|Doncaster|\n|Dorchester|\n|Dorset|\n|East Sussex|\n|Enfield|\n|Epping|\n|Epsom|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nHospital\nLake\nMammal\nMayor\nMountainRange\nNewspaper\nPoliticalParty\nSaint\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test22"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Lake|\n|---|\n|Greifensee|\n|Lake Biel|\n|Lake Brienz|\n|Lake Constance|\n|Lake Geneva|\n|Lake Lucerne|\n|Lake Lugano|\n|Lake Maggiore|\n|Lake Murten|\n|Lake Neuch?tel|\n|Lake Thun|\n|Lake Zug|\n|Lake Zurich|\n|Walensee|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Lake\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test220"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Lake|\n|---|\n|Klingnauer Stausee|\n|Lake H?v?z|\n|Stausee Ferden|\n|Lake Wohlen \/ Wohlensee|\n|Lake St. Clair|\n|Lake Arapuni|\n|Milton Pond|\n|Gibson Lake|\n|R?cksta Tr?sk|\n|Lake Sagami|\n|Lake Cristallina|\n|Northeast Pond|\n|Brandy Pond|\n|Champagne Pool|\n|Prospect reservoir|\n|Sicklasj?n|\n|Devils Lake|\n|Lough Derg|\n|Derwent Water|\n|Lake Biel \/ Bielersee \/ Lac de Bienne|\n|Veluwemeer|\n|Hacksj?n|\n|Kamloops Lake|\n|Malham Tarn|\n|Lac d'Anterne|\n|Graham Lake|\n|Grand Lac de Clairvaux|\n|Laduviken|\n|Esthwaite Water|\n|Treh?rningen|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nGovernmentType\nLake\nMammal\nMayor\nMonarch\nNewspaper\nPlant\nPoliticalParty\nSaint\nSportsTeam\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Lake\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test221"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Lake|\n|---|\n|Lake Superior|\n|Lake Huron|\n|Lake Michigan|\n|Lake Erie|\n|Lake Ontario|\n|Great Salt Lake|\n|Lake of the Woods|\n|Iliamna Lake|\n|Lake Oahe|\n|Lake Okeechobee|\n|Lake Pontchartrain|\n|Lake Sakakawea|\n|Lake Champlain|\n|Becharof Lake|\n|Lake St. Clair|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCompany\nFilm\nGovernmentType\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Lake\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test222"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Language|\n|---|\n|English|\n|English|\n|Gaelic|\n|French|\n|German|\n|Spanish|\n|Italian|\n|Italian|\n|Dutch|\n|Dutch|\n|French|\n|French|\n|German|\n|German|\n|Greek|\n|French|\n|Norwegian|\n|Swedish|\n|Danish|\n|Finnish|\n|Polish|\n|Belarusian|\n|Russian|\n|Czech|\n|Russian|\n|Slovak|\n|Turkish|\n|Arabic|\n|Albanian|\n|Macedonian|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nCity\nCompany\nContinent\nCurrency\nGenre\nGovernmentType\nHospital\nLake\nMammal\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test223"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Languages|\n|---|\n|English|\n|English|\n|English|\n|English Spanish Yucatec|\n|English French many others|\n|Spanish|\n|Spanish|\n|Spanish|\n|Spanish|\n|English|\n|Spanish Quiche Cakchiqul Mam Kekchi|\n|French|\n|Spanish Lenca English|\n|English|\n|Spanish Nahuatl Yucatec many others|\n|Dutch Papiamento|\n|Spanish|\n|Spanish Cuna|\n|Spanish English|\n|English|\n|English Spanish French many others|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nHospital\nMammal\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test224"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Languages|\n|---|\n|Arabic French Kabyle|\n|Mbundu Portuguese Kongo|\n|Fon French|\n|Tswana English Bushmen|\n|More French|\n|Rundi French|\n|Fang Bulu Yaunde Fulani English French|\n|Portuguese|\n|Sango French Gbaya Banda|\n|Sara Arabic French|\n|Comoran French Arabic|\n|Lingala Kongo French|\n|Kingwana Luba Kongo Lingala French many others|\n|Arabic Afar Somali French|\n|Arabic|\n|Fang Spanish|\n|Tigrinya Tigre|\n|Amharic Tigrinya Galla Sidamo Somali English many others|\n|Fang French many others|\n|Wolof Malinke English|\n|Twi Fanti Ewe English|\n|Fulani Malinke French|\n|Balante Fulani Portuguese|\n|Dyula French many others|\n|Swahili English Kikuyu Kamba Luo|\n|Sotho English|\n|Kpelle English|\n|Arabic Tamashek|\n|Malagasay|\n|Nyanja English Yao|\n\n**Candidate column type:**\nAirline\nAirport\nBaseballPlayer\nBird\nBuilding\nCompany\nContinent\nCountry\nCurrency\nGenre\nGovernmentType\nLake\nMammal\nMonarch\nMountain\nMovieDirector\nNewspaper\nRadioStation\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test225"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Languages|\n|---|\n|Farsi Pashto Uzbek|\n|Arabic|\n|Bengali Urdu|\n|Jonkha|\n|Malay|\n|Burmese Karen Shan|\n|Khmer French Vietnamese|\n|Mandarin Cantonese Fukien Wu Tibetan Uigur|\n|Portuguese|\n|Hindi Urdu Punjabi Kashmiri Gujarati Bengali Assamese Oriya Marathi Kannada Telugu Tamil Malayalam English many others|\n|Indonesian Javanese Sundanese Madurese Minagkabau Achinese Batak Buginese many others|\n|Farsi Baluchi Kurdish Azeri Armenian|\n|Arabic Kurdish|\n|Hebrew Arabic English Russian|\n|Japanese Ainu|\n|Arabic|\n|Kazakh|\n|Arabic|\n|Kirgiz Uzbek|\n|Lao|\n|Arabic French Armenian|\n|Malay|\n|Maldivian|\n|Mongolian Kazakh|\n|Nepalese Bihari Newari Tibetan Murmi|\n|Korean|\n|Arabic|\n|Urdu Kashmiri Pashto Baluchi Sindhi|\n|Pidgin English many others|\n|Tagalog English Cebuano Hiligaynon Samaran Ilocano many others|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBird\nBook\nCity\nCompany\nContinent\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Language\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test226"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Languages|\n|---|\n|Spanish Italian German|\n|Spanish Aymara Quechua Guarani|\n|Portuguese Tupi Arawak Guarani|\n|Spanish German Mapuche|\n|Spanish Arawak Carib|\n|Spanish Quechua|\n|English|\n|French|\n|English Arawak|\n|Spanish Guarani|\n|Spanish Quechua|\n|Dutch Pidgin English|\n|Spanish|\n|Spanish|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBuilding\nContinent\nCountry\nCurrency\nFilm\nGenre\nHospital\nLake\nLanguage\nMammal\nMonarch\nMountain\nMountainRange\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Language\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test227"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Languages|\n|---|\n|Swedish|\n|Albanian|\n|Catalan|\n|Armenian Azeri|\n|German|\n|Azeri|\n|Belarussian|\n|French Flemish|\n|Croatian Serbian|\n|Bulgarian Turkish|\n|Croatian|\n|Greek Turkish|\n|Czech|\n|Danish|\n|Estonian Russian|\n|Faeroes|\n|Finnish Swedish|\n|French Provencial Breton Basque German|\n|Georgian|\n|German Sorbian Danish|\n|English Spanish|\n|Greek Turkish|\n|Hungarian|\n|Icelandic|\n|English Gaelic|\n|Italian Sardinian|\n|Albanian Serbian|\n|Latvian|\n|German|\n|Lithuanian|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nGenre\nHospital\nLake\nMammal\nMonarch\nMountainRange\nMuseum\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test228"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Laureate|\n|---|\n|Jacobus Henricus van 't Hoff|\n|Hermann Emil Fischer|\n|Svante August Arrhenius|\n|Sir William Ramsay|\n|Johann Friedrich Wilhelm Adolf von Baeyer|\n|Henri Moissan|\n|Eduard Buchner|\n|Ernest Rutherford|\n|Wilhelm Ostwald|\n|Otto Wallach|\n|Marie Curie|\n|n?e Sklodowska|\n|Victor Grignard|\n|France|\n|Alfred Werner|\n|Theodore William Richards|\n|Richard Martin Willst?tter|\n|Fritz Haber|\n|Walther Hermann Nernst|\n|Frederick Soddy|\n|Francis William Aston|\n|Fritz Pregl|\n|Richard Adolf Zsigmondy|\n|The (Theodor) Svedberg|\n|Heinrich Otto Wieland|\n|Adolf Otto Reinhold Windaus|\n|Arthur Harden|\n|Germany|\n|Hans Fischer|\n|Carl Bosch|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nBird\nBuilding\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nPoliticalParty\nScientist\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Scientist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test229"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Asia|\n|---|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n|Asia|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nCompany\nContinent\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nPoliticalParty\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Continent\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test23"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Location|\n|---|\n|Aargau|\n|H?v?z|\n|Ferden|\n|Valais|\n|Canton of Berne|\n|Great Lakes|\n|North Island|\n|Strafford County|\n|New Hampshire; York County|\n|Maine|\n|Gibson Generating Station|\n|Montgomery Township|\n|Indiana|\n|Kanagawa|\n|Ticino|\n|Strafford County|\n|New Hampshire; York County|\n|Maine|\n|Naples|\n|Maine|\n|Waiotapu|\n|North Island|\n|Prospect|\n|New South Wales|\n|Lincoln County|\n|Oregon|\n|Lake District|\n|Canton of Berne|\n|British Columbia|\n|Yorkshire Dales|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nGovernmentType\nHospital\nLanguage\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AdministrativeRegion\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test230"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Location|\n|---|\n|Atlanta|\n|Georgia|\n|United States|\n|Hillingdon|\n|Greater London|\n|England|\n|United Kingdom|\n|Chaoyang|\n|Beijing|\n|China|\n|Chicago|\n|Illinois|\n|United States|\n|?ta|\n|Tokyo|\n|Japan|\n|Roissy-en-France|\n|Val d'Oise|\n|?le-de-France|\n|France|\n|Los Angeles|\n|California|\n|United States|\n|Dallas\/Fort Worth|\n|Texas|\n|United States|\n|Flughafen (Frankfurt am Main)|\n|Frankfurt|\n|Hesse|\n|Germany|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nContinent\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test231"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Location|\n|---|\n|Hillingdon|\n|Greater London|\n|United Kingdom|\n|Seine-et-Marne\/Seine-Saint-Denis\/Val-d'Oise|\n|?le-de-France|\n|France|\n|Frankfurt|\n|Hesse|\n|Germany|\n|Haarlemmermeer|\n|North Holland|\n|The Netherlands|\n|New Territories|\n|Hong Kong|\n|Changi|\n|East Region|\n|Singapore|\n|Crawley|\n|West Sussex|\n|South East|\n|England|\n|United Kingdom|\n|Narita|\n|Chiba|\n|Kant?|\n|Honsh?|\n|Japan|\n|Bangkok|\n|Thailand|\n|Incheon|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCurrency\nFilm\nGovernmentType\nHospital\nLake\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test232"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Location|\n|---|\n|MI-MN-WI-Ontario|\n|MI-Ontario|\n|IL-IN-MI-WI|\n|MI-NY-OH-PA-Ontario|\n|NY-Ontario|\n|Utah|\n|MN-Manitoba-Ontario|\n|Alaska|\n|ND-SD|\n|Florida|\n|Louisiana|\n|North Dakota|\n|NY-VT-Quebec|\n|Alaska|\n|MI-Ontario|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AdministrativeRegion\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test233"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|MOUNTAIN|\n|---|\n|Mount Everest|\n|K-2 (Godwin Austin)|\n|Kanchenjunga|\n|Lhotse|\n|Makalu I|\n|Dhaulagiri I|\n|Manaslu|\n|Cho Uyo|\n|Nanga Parbat|\n|Annapurna I|\n|Gasherbrum I|\n|Broad Peak I|\n|Gasherbrum II|\n|Shisha Pangma (Gasainthan)|\n|Gasherbrum III|\n|Annapurna II|\n|Gasherbrum IV|\n|Cyachug Kang|\n|Kangbachen|\n|Disteghil Sar I|\n|Himal Chuli|\n|Khinyang Chchish|\n|Nuptse|\n|Gasherbrum East|\n|Nanda Devi|\n|Chomo Lonzo|\n|Ngojumba Ri I|\n|Rakaposhi|\n|Batura Muztagh I|\n|Zemu Gap Peak|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mountain\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test234"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Manufacturer|\n|---|\n|Atari|\n|Exidy|\n|Mystique|\n|dB-soft|\n|NEC|\n|Midway (later Warner Bros. Interactive)|\n|Digital Pictures|\n|id Software|\n|Maxis|\n|3D Realms|\n|Eidos|\n|SCi|\n|Interplay Entertainment|\n|Ripcord Games|\n|Rockstar Games|\n|Interplay Entertainment|\n|Resistance Records|\n|Rockstar Games|\n|Running with Scissors|\n|Rockstar Games|\n|Tecmo|\n|EA Games|\n|Rockstar Games|\n|Danny Ledonne|\n|Rockstar Games|\n|Bethesda Softworks|\n|IO Interactive|\n|Ubisoft|\n|Left Behind Games|\n|Insomniac Games|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nGovernmentType\nLake\nMammal\nMountain\nMuseum\nPlant\nSaint\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test235"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Mathematician|\n|---|\n|Keith F. Taylor|\n|Anthony To-Ming Lau|\n|Edmond E. Granirer|\n|Harry Kesten|\n|Mark Kac|\n|Hugo Steinhaus|\n|David Hilbert|\n|C. L. Ferdinand Lindemann|\n|C. Felix Klein|\n|Julius Pl?cker|\n|Christian Ludwig Gerling|\n|Carl Friedrich Gauss|\n|Johann Friedrich Pfaff|\n|Abraham Gotthelf Kaestner|\n|Christian August Hausen|\n|Christian Andreas Siber|\n|Rudolf Lipschitz|\n|Gustav Peter Lejeune Dirichlet|\n|Simeon Denis Poisson|\n|Jean-Baptiste Fourier|\n|Joseph Louis Lagrange|\n|Leonhard Euler|\n|Johann Bernoulli|\n|Jacob Bernoulli|\n|Martin Ohm|\n|Karl Christian von Langsdorf|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nBird\nBook\nCity\nCountry\nFilm\nHospital\nLake\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Scientist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test236"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Mayor|\n|---|\n|Abdul Aziz ibn 'Ayyaf Al Migrin|\n|Adil Faqeeh|\n|Osama Al-Bar|\n|Abdulaziz Bin Majid|\n|Dhaifallah al-'Utaybi|\n|Dhaifallah al-'Utaybi|\n|n\/k|\n|n\/k|\n|Khalifa Sall|\n|Herbert-George Williams|\n|Lee Hsien Loong|\n|Milan Ft\u00e1cnik|\n|Mohamud Ahmed Tarzan|\n|Amos Masondo|\n|Patricia de Lille|\n|Gwen Ramokgopa|\n|Amos Masondo (Johannesburg)|\n|Nondumiso Maphasi|\n|Obed Mlama|\n|n\/k|\n|Oh Se-hoon|\n|Hur Nam-sik|\n|Song Young-gil|\n|Kim Bum-il|\n|Yum Hong-chul|\n|Kang Un-tae|\n|Bak Maeng-woo|\n|n\/k|\n|n\/k|\n|n\/k|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBuilding\nCompany\nCountry\nCurrency\nFilm\nGovernmentType\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPoliticalParty\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mayor\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test237"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Mayor|\n|---|\n|Eruviel \u00c1vila Villegas|\n|Stephen Mandel|\n|R van Gijzel|\n|Eugene Porunov|\n|Andreas Bausewein|\n|Morteza Saqaeian Nejad|\n|Reinhard Pa\u00df|\n|n\/k|\n|Rana Zahid Tauseef|\n|n\/k|\n|n\/k|\n|n\/k|\n|n\/k|\n|n\/k|\n|Matteo Renzi|\n|Luizianne Lins|\n|Petra Roth|\n|Herbert-George Williams|\n|Dieter Salomon|\n|Ashley Swearengin|\n|Hiroshi Yoshida|\n|n\/k|\n|Wang Yang|\n|n\/k|\n|Sun Yunfei|\n|Yuan Rongxiang|\n|X\u00ece Y\u00ecs\u00ae\u0095|\n|n\/k|\n|n\/k|\n|n\/k|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBook\nCompany\nContinent\nCountry\nCurrency\nGenre\nGovernmentType\nHospital\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nRadioStation\nScientist\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mayor\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test238"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Mayor|\n|---|\n|Fazlur Rehman|\n|Han Zheng|\n|Shraddha Jadhav|\n|Guo Jinlong|\n|Kanwar Sain|\n|Mauricio Macri|\n|Alfredo S Lim|\n|Oh Se-hoon|\n|Gilberto Kassab|\n|Sergei Sobyanin|\n|Fauzi Bowo|\n|Kadir Topbas|\n|Sukhumbhand Paribatra|\n|Marcelo Ebrard|\n|Shintaro Ishihara|\n|Mohammad Bagher Ghalibaf|\n|Michael Bloomberg|\n|Andr\u00e9 Kimbuta Yango|\n|Sadeque Hossain Khosa|\n|n\/k|\n|Abdul Azim Wazir|\n|Susana Villaran|\n|Boris Johnson|\n|Huang Xingguo|\n|Samuel Moreno Rojas|\n|Pham Phuong Thao|\n|Donald Tsang|\n|Wan Qingliang|\n|Li Yuquan|\n|Mian Amir Mahmood|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test239"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Author|\n|---|\n|Mark Twain|\n|Dav Pilkey|\n|Mark Twain|\n|Phyllis Reynolds Naylor|\n|Robert Penn Warren|\n|Luis J. Rodriguez|\n|Bret Easton Ellis|\n|Theodore Dreiser|\n|William Powell|\n|Lois Lowry|\n|Justin Richardson and Peter Parnell|\n|Louise Rennison|\n|Nancy Garden|\n|Judy Blume|\n|Michael Bellasiles|\n|Ron Koertge|\n|William Faulkner|\n|Joanna Cole|\n|Chris Crutcher|\n|Toni Morrison|\n|Richard Wright|\n|Rudolfo A. Anaya|\n|Annette Curtis Klause|\n|Judy Blume|\n|Toni Morrison|\n|Louis Sachar|\n|Wardell Pomeroy|\n|Aldous Huxley|\n|Katherine Paterson|\n|Harry Allard|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBird\nBook\nCompany\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMayor\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nRadioStation\nScientist\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Writer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test24"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Mayor|\n|---|\n|Jaime Nebot|\n|Augusto Barrera|\n|Abdul Azim Wazir|\n|Adel Labib|\n|n\/k|\n|n\/k|\n|Norman Quijano|\n|n\/k|\n|Edgar Savisaar|\n|Kuma Demeksa|\n|Jussi Pajunen|\n|Bertrand Delano\u00eb|\n|Jean-Claude Gaudin|\n|G\u00e9rard Collomb|\n|Pierre Cohen|\n|Christian Estrosi|\n|Jean-Marc Ayrault|\n|Roland Rie|\n|H\u00e9l\u00e8ne Mandroux-Colas|\n|Alain Jupp\u00e9|\n|Martine Aubry|\n|Daniel Delaveau|\n|Giorgi Ugulava|\n|Klaus Wowereit|\n|Olaf Scholz|\n|Christian Ude|\n|J\u00fcrgen Roters|\n|Petra Roth|\n|Wolfgang Schuster|\n|Ullrich Sierau|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mayor\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test240"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Mayor|\n|---|\n|Kevin Johnson|\n|n\/k|\n|Francis G. Slay|\n|Hayato Shimizu|\n|Keisuke Kiharac|\n|n\/k|\n|Ralph Becker|\n|Jo\u00e3o Henrique Carneiro|\n|Viktor Tarkhov|\n|Julian Castro|\n|Jerry Sanders|\n|n\/k|\n|Johnny Araya|\n|Chuck Reed|\n|Jorge A. Santini Padilla|\n|Jorge Lozano Armengol|\n|Norman Quijano|\n|Abdulrahman al-Akwaa|\n|Percy Fernandez|\n|Pablo Zalaquett Said|\n|Gilberto Serulle|\n|Francisco Dom\u00ednguez Servien|\n|Roberto Salcedo|\n|Jo\u00e3o Paulo Tavares Papa|\n|Luiz Marinho|\n|n\/k|\n|Eduardo Cury|\n|Jo\u00e3o Castelo|\n|Gilberto Kassab|\n|Fumio Ueda|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLanguage\nMayor\nMountain\nMountainRange\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nSaint\nSportsTeam\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mayor\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test241"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Mayor|\n|---|\n|Marcel Philipp|\n|Pierre Dj\u00e9dji Amondji|\n|Khalifa bin Zayed Al Nahyan|\n|Muhammad Adamu Aliero|\n|Manuel A\u00f1orve Bola\u00f1os|\n|Alfred Vanderpuije|\n|Dhaifallah al-'Utaybi|\n|Ayta\u00e7 Durak|\n|Kuma Demeksa|\n|Stephen Yarwood|\n|Anjula Singh Mahaur|\n|Gabriel Arellano Espinoza|\n|Kanaji Thakor|\n|Saeed Mombeini|\n|n\/k|\n|Gerald Jennings|\n|Ma'an Al-Shibli|\n|Adel Labib|\n|Tayeb Zitouni|\n|n\/k|\n|Jitendr Nath Singh|\n|Akhmetzhan Yesimov|\n|Omar Maani|\n|n\/k|\n|Shawet Malik|\n|Eberhard van der Laan|\n|n\/k|\n|Melih G\u00f6k\u00e7ek|\n|n\/k|\n|n\/k|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nLanguage\nMountain\nMountainRange\nNewspaper\nPlant\nScientist\nSportsTeam\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test242"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Mayor|\n|---|\n|Mohammad Yunus Noandesh|\n|Tayeb Zitouni|\n|Saddek Benkada|\n|Jos\u00e9 Maria Ferraz dos Santos|\n|Mauricio Macri|\n|Daniel Giacomino|\n|n\/k|\n|Miguel Lifschitz|\n|Pablo Bruera|\n|Domingo Amaya|\n|V\u00edctor Fayad|\n|Gagik Beglaryan|\n|Clover Moore|\n|Robert Doyle|\n|Lisa Scaffidi|\n|Campbell Newman|\n|Stephen Yarwood|\n|Michael H\u00e4upl|\n|Hajibala Abutalybov|\n|Sadeque Hossain Khosa|\n|Mohammed Manjur Alam|\n|Talukder Abdul Khaleque|\n|Nikolai Ladutko|\n|Freddy Thielemans|\n|Patrick Janssens|\n|Dani\u00ebl Termont|\n|Patrick Moenaert|\n|Percy Fernandez|\n|Luis Antonio Revilla Herrero|\n|n\/k|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mayor\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test243"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Mayor|\n|---|\n|n\/k|\n|Jos\u00e9 C\u00edcero Soares de Almeida|\n|n\/k|\n|Alberto Ruiz-Gallard\u00f3n|\n|Thenmozhi Gopinathan|\n|Lutz Tr\u00fcmper|\n|n\/k|\n|Ilham Arief Sirajuddin|\n|n\/k|\n|Ilmar Reepalu|\n|Daisy Torres|\n|Amazonino Mendes|\n|Mavis Smitheman|\n|Phone Zaw Han|\n|Alfredo S Lim|\n|Peter Kurz|\n|David Simango|\n|Eveling Trejo|\n|Humberto Prieto|\n|n\/k|\n|Jean-Claude Gaudin|\n|Mohammad Pejman|\n|n\/k|\n|n\/k|\n|n\/k|\n|n\/k|\n|Osama Al-Bar|\n|Rahudman Harahap|\n|Alonso Salazar Jaramillo|\n|Abdulaziz Bin Majid|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBird\nCity\nCompany\nContinent\nCountry\nFilm\nGenre\nGovernmentType\nLake\nLanguage\nMammal\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nRadioStation\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test244"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Mayor|\n|---|\n|n\/k|\n|n\/k|\n|Dato Ahmed Fuad Ismail|\n|Adama B. Sangar\u00e9|\n|Marcelo Ebrard|\n|Fernando Larrazabal|\n|Blanca Alcala Ruiz|\n|Eruviel \u00c1vila Villegas|\n|Jorge Aristoteles Sandoval|\n|Carlos Bustamante|\n|Jos\u00e9 Reyes Ferriz|\n|Hector Vielma Ordo\u00f1ez|\n|Edgar Ces\u00e1reo Navarro S\u00e1nchez|\n|Ricardo Sheffield|\n|Eduardo Olmos Castro|\n|n\/k|\n|Azucena Olivares Villag\u00f3mez|\n|Francisco Dom\u00ednguez Servien|\n|Maria Elena Barrera Tapia|\n|C\u00e9sar Boj\u00f3rquez Zapata|\n|Manuel A\u00f1orve Bola\u00f1os|\n|n\/k|\n|Jorge Lozano Armengol|\n|Arturo Ugalde Meneses|\n|Gabriel Arellano Espinoza|\n|n\/k|\n|n\/k|\n|n\/k|\n|Dorin Chirtoaca|\n|n\/k|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCountry\nFilm\nGenre\nGovernmentType\nHospital\nLake\nMayor\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPoliticalParty\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mayor\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test245"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Media|\n|---|\n|Dainik Jagran|\n|Dainik Bhaskar|\n|Aajtak TV|\n|CNN Editions (International)|\n|Dinakaran|\n|Malayala Manorama|\n|Divya Bhaskar|\n|Dinamalar|\n|Huffington Post|\n|foxnews|\n|bbc Hindi|\n|indosiar|\n|Softpedia|\n|Dina Thanthi|\n|CNN|\n|People's Daily (Renmin Ri Bao)|\n|USA Today|\n|Navbharat Times|\n|Sahara Samay english|\n|Punjab Kesari|\n|More Media >>|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nCity\nCompany\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test246"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Media|\n|---|\n|Dainik Jagran|\n|Dainik Bhaskar|\n|CNN Editions (International)|\n|CNN|\n|NDTV|\n|Times of India|\n|Globo|\n|Dailymail|\n|Malayala Manorama|\n|Dinamalar|\n|WALL STREET JOURNAL USA|\n|foxnews|\n|New York Times|\n|Gujarat Samachar|\n|Telecinco|\n|IBN live|\n|USA Today|\n|The Sun|\n|Joong Ang Ilbo|\n|AARP Bulletin|\n|More Media >>|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMovieDirector\nMuseum\nNewspaper\nPoliticalParty\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Newspaper\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test247"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Media|\n|---|\n|Dainik Jagran|\n|NDTV|\n|Dainik Bhaskar|\n|CNN Editions (International)|\n|CNN|\n|Times of India|\n|Aajtak TV|\n|Rajasthan Patrika|\n|Dina Thanthi|\n|Eenadu|\n|Times Now|\n|ddinews|\n|IBN live|\n|WALL STREET JOURNAL USA|\n|Amar Ujala|\n|Punjab Kesari|\n|Dinamalar|\n|Dinakaran|\n|Anandabazar Patrika|\n|zee news|\n|More Media >>|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nGovernmentType\nHospital\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMovieDirector\nMuseum\nPlant\nRadioStation\nSportsTeam\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test248"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Middle East|\n|---|\n|Afghanistan|\n|Bahrain|\n|Iran|\n|Iraq|\n|Israel|\n|Jordon|\n|Kuwait|\n|Lebanon|\n|Oman|\n|Qatar|\n|Saudi Arabia|\n|Syria|\n|Turkey|\n|United Arab Emir.|\n|Yemen|\n|North Africa|\n|Algeria|\n|Egypt|\n|Libya|\n|Morocco|\n|Sudan|\n|Tunisia|\n|Western Europe|\n|Andorra|\n|Austria|\n|Belgium|\n|Cyprus|\n|Denmark|\n|Finland|\n|France|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nHospital\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test249"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Author|\n|---|\n|Miguel de Cervantes|\n|Leo Tolstoy|\n|James Joyce|\n|Marcel Proust|\n|Feodor Dostoevsky|\n|Herman Melville|\n|Gustave Flaubert|\n|George Eliot|\n|Thomas Mann|\n|Murasaki Shikibu|\n|Jane Austen|\n|Charles Dickens|\n|Leo Tolstoy|\n|Mark Twain|\n|Henry Fielding|\n|Charles Dickens|\n|William Faulkner|\n|Henry James|\n|Gabriel Garcia Marquez|\n|F. Scott Fitzgerald|\n|Virginia Woolf|\n|Feodor Dostoevsky|\n|William Faulkner|\n|William Makepeace Thackeray|\n|Ralph Ellison|\n|James Joyce|\n|Robert Musil|\n|Thomas Pynchon|\n|Henry James|\n|D. H. Lawrence|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nFilm\nGenre\nHospital\nLake\nLanguage\nMammal\nMayor\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPoliticalParty\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Writer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test25"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Movie|\n|---|\n|Blue Valentine|\n|Dogtooth|\n|Serendipity|\n|Tinker Tailor Soldier Spy|\n|Transit|\n|The Tree of Life|\n|The Girl Who Played with Fire|\n|The Girl with the Dragon Tattoo|\n|Mission: Impossible - Ghost Protocol|\n|30 Days of Night|\n|The Muppets|\n|Turn Me On|\n|Dammit!|\n|Young Adult|\n|Never Let Me Go|\n|The Guard|\n|The Notebook|\n|Heathers|\n|The French Connection|\n|Drive|\n|The Muppet Christmas Carol|\n|Friends with Benefits|\n|Pearl Jam Twenty|\n|Monsters|\n|Let the Right One In|\n|Melancholia|\n|Submarine|\n|The Muppet Movie|\n|Our Idiot Brother|\n|Crazy|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test250"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Movie|\n|---|\n|Mission Impossible 3|\n|Super 8|\n|The Corporation|\n|Gone Baby Gone|\n|Lion of the Desert|\n|Emperor of the North|\n|Burlesque|\n|Harold and Maude|\n|Coming Home|\n|Akeelah and the Bee|\n|A Bridge Too Far|\n|The Tillman Story|\n|The Island|\n|Wild Hogs|\n|Management|\n|Nobody's Fool|\n|Mao's Last Dancer|\n|Friday Night Lights|\n|Improbable Collapse|\n|Crude|\n|The Hurt Locker|\n|Last Picture Show|\n|Seven Men from Now|\n|Slumdog Millionaire|\n|Limitless|\n|The Lucky Ones|\n|Ed Wood|\n|The China Syndrome|\n|Avatar|\n|Casino Royale|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMuseum\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test251"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Museum|\n|---|\n|Albright-Knox Art Gallery|\n|Allen Memorial Art Museum|\n|Amon Carter Museum|\n|Andy Warhol Museum|\n|Arkansas Arts Center|\n|Art Institute of Chicago|\n|Artpace|\n|Asia Society|\n|Baltimore Museum of Art|\n|Barnes Foundation|\n|Bass Museum|\n|Birmingham Museum of Art|\n|Blue Star Contemporary Art Center|\n|Boston Museum of Fine Arts|\n|Bowdoin College Museum of Art|\n|Brandywine River Museum|\n|Brooklyn Museum|\n|California Palace of the Legion of Honor|\n|Carnegie Museum of Art|\n|Chrysler Museum of Art|\n|Cincinnati Art Museum|\n|Clark Art Institute|\n|Columbia Museum of Art|\n|Columbus Museum of Art|\n|Cooper-Hewitt Museum|\n|Corcoran Gallery of Art|\n|Cranbrook Art Museum|\n|Currier Museum of Art|\n|Dahesh Museum|\n|Dallas Museum of Art|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCurrency\nGovernmentType\nLake\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Museum\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test252"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Museum|\n|---|\n|MoMA The Museum of Modern Art|\n|Metropolitan Museum of Art|\n|Acropolis Museum|\n|Mus?e du Louvre|\n|Guggenheim Museum|\n|Tate Modern|\n|Design Museum|\n|City Museum|\n|Creation Museum|\n|Museo del Prado|\n|Centre Pompidou|\n|The Getty Museum|\n|Victoria & Albert Museum|\n|Whitney Museum of American Art|\n|British Museum|\n|New Museum|\n|Salvador Dali Museum|\n|National Museum of the American Indian|\n|Natural History Museum|\n|American Museum of Natural History|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nFilm\nGenre\nGovernmentType\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Museum\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test253"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Museum|\n|---|\n|MoMA The Museum of Modern Art|\n|Metropolitan Museum of Art|\n|Acropolis Museum|\n|Mus?e du Louvre|\n|Guggenheim Museum|\n|Tate Modern|\n|Design Museum|\n|City Museum|\n|Museo del Prado|\n|Centre Pompidou|\n|Creation Museum|\n|Victoria & Albert Museum|\n|The Getty Museum|\n|Whitney Museum of American Art|\n|British Museum|\n|New Museum|\n|Salvador Dali Museum|\n|Natural History Museum|\n|National Museum of the American Indian|\n|American Museum of Natural History|\n\n**Candidate column type:**\nAcademicJournal\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nLake\nLanguage\nMammal\nMonarch\nMountain\nMountainRange\nMovieDirector\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test254"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Museum|\n|---|\n|MoMA The Museum of Modern Art|\n|Metropolitan Museum of Art|\n|Acropolis Museum|\n|Mus?e du Louvre|\n|Guggenheim Museum|\n|Tate Modern|\n|Design Museum|\n|Museo del Prado|\n|City Museum|\n|Centre Pompidou|\n|Victoria & Albert Museum|\n|Creation Museum|\n|British Museum|\n|Whitney Museum of American Art|\n|The Getty Museum|\n|New Museum|\n|Salvador Dali Museum|\n|Natural History Museum|\n|American Museum of Natural History|\n|National Museum of the American Indian|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test255"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Museum|\n|---|\n|MoMA The Museum of Modern Art|\n|Metropolitan Museum of Art|\n|Acropolis Museum|\n|Mus?e du Louvre|\n|Tate Modern|\n|Design Museum|\n|Guggenheim Museum|\n|City Museum|\n|The Getty Museum|\n|Salvador Dali Museum|\n|Museo del Prado|\n|Victoria & Albert Museum|\n|Centre Pompidou|\n|British Museum|\n|Whitney Museum of American Art|\n|Creation Museum|\n|Natural History Museum|\n|National Museum of the American Indian|\n|American Museum of Natural History|\n|New Museum|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nContinent\nCountry\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test256"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Museum|\n|---|\n|Museum of Modern Art (MoMA)|\n|Metropolitan Museum of Art|\n|Mus?e du Louvre|\n|National Gallery of Art|\n|Victoria and Albert Museum|\n|J. Paul Getty Museum|\n|Deutsches Historisches Museum|\n|Los Angeles County Museum of Art (LACMA)|\n|State Hermitage Museum|\n|Brooklyn Museum of Art|\n|National Maritime Museum|\n|Museum of Fine Arts (MFA)|\n|National Gallery|\n|Rijksmuseum|\n|Museo Nacional del Prado|\n|Royal Academy of Arts|\n|Tate Britain|\n|Museum of New Zealand Te Papa Tongarewa|\n|Philadelphia Museum of Art|\n|Minneapolis Institute of Arts|\n|Indianapolis Museum of Art|\n|Ashmolean Museum|\n|Detroit Institute of Arts (DIA)|\n|Museo Thyssen-Bornemisza|\n|Seattle Art Museum|\n|Saint Louis Art Museum (SLAM)|\n|Art Gallery of Ontario (AGO)|\n|Manchester Art Gallery|\n|Corcoran Gallery of Art|\n|National Gallery of Scotland \/National Portrait Gallery|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nContinent\nCountry\nGenre\nGovernmentType\nLake\nLanguage\nMammal\nMayor\nMountainRange\nMuseum\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Museum\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test257"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Ado FM|\n|BBC World Service Arabic|\n|BBC World Service English|\n|Beur FM|\n|BFM|\n|Ch?rie FM|\n|Contact FM|\n|Europe 1|\n|FG DJ Radio|\n|FIP|\n|France Bleu ?le de France|\n|France Culture|\n|France Info|\n|France Inter|\n|France Musique|\n|Fun Radio|\n|Jazz Radio|\n|Juda?ques FM|\n|Latina|\n|Le Mouv'|\n|Medi 1 Radio M?diterran?e Int.|\n|Monte Carlo Doualiya|\n|Nostalgie|\n|NRJ|\n|OUI FM|\n|Radio Alfa|\n|Radio Classique|\n|Radio Courtoisie|\n|Radio J|\n|Radio Notre Dame|\n\n**Candidate column type:**\nAirline\nAirport\nBird\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nMammal\nMayor\nMonarch\nMovieDirector\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"RadioStation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test258"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Afghanistan|\n|Albania|\n|Algeria|\n|Angola|\n|Antigua and Barbuda|\n|Argentina|\n|Armenia|\n|Australia|\n|Austria|\n|Azerbaijan|\n|Bahamas|\n|The|\n|Bahrain|\n|Bangladesh|\n|Belarus|\n|Belgium|\n|Belize|\n|Benin|\n|Bhutan|\n|Bolivia|\n|Bosnia and Herzegovina|\n|Botswana|\n|Brazil|\n|Brunei Darussalam|\n|Bulgaria|\n|Burkina Faso|\n|Burundi|\n|Cambodia|\n|Cameroon|\n|Canada|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nBaseballPlayer\nBird\nBuilding\nContinent\nCountry\nFilm\nHospital\nLake\nMammal\nMountain\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test259"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Basin countries|\n|---|\n|Switzerland|\n|Hungary|\n|Switzerland|\n|Switzerland|\n|Canada|\n|United States|\n|New Zealand|\n|United States|\n|United States|\n|Sweden|\n|Japan|\n|Switzerland|\n|United States|\n|United States|\n|New Zealand|\n|Australia|\n|Sweden|\n|United States|\n|Ireland|\n|United Kingdom|\n|Switzerland|\n|Netherlands|\n|Sweden|\n|Canada|\n|United Kingdom|\n|France|\n|United States|\n|France|\n|Sweden|\n|United Kingdom|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBaseballPlayer\nBird\nCompany\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMuseum\nPlant\nPoliticalParty\nSaint\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test26"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Afghanistan|\n|Bahrain|\n|Bangladesh|\n|Bhutan|\n|British Indian Ocean Territory|\n|Brunei|\n|Burma (Myanmar)|\n|Cambodia|\n|China|\n|East Timor|\n|India|\n|Indonesia|\n|Iran|\n|Iraq|\n|Israel|\n|Japan|\n|Jordan|\n|Kazakhstan|\n|Kuwait|\n|Kyrgyzstan|\n|Laos|\n|Lebanon|\n|Malaysia|\n|Maldives|\n|Mongolia|\n|Nepal|\n|North Korea|\n|Oman|\n|Pakistan|\n|Papua New Guinea|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nCountry\nFilm\nGenre\nGovernmentType\nHospital\nLanguage\nMammal\nMonarch\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test260"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Afrika (englische Version)|\n|Alan Wake|\n|Alien vs. Predator|\n|Assassins Creed|\n|Assassins Creed - Brotherhood (D1 Edition)|\n|Batman: Arkham Asylum (Platinum)|\n|Battlefield 3 - Limited Edition (AT|\n|uncut)|\n|Battlefield Bad Company 2 (Limited Edition)|\n|Bioshock|\n|Bioshock 2 (UK|\n|uncut)|\n|Borderlands (AT|\n|uncut)|\n|Burnout Paradise|\n|Burnout Revenge|\n|Call of Duty - Modern Warfare 2|\n|Call of Duty - World at War|\n|Call of Duty 2|\n|Call of Duty 3|\n|Call of Duty 4 - Modern Warfare|\n|Colin McRae Dirt|\n|Condemned|\n|Condemned 2|\n|Crackdown|\n|Crysis 2 - Limited Edition (AT|\n|uncut)|\n|Dead Rising|\n|Dead Rising 2 (UK|\n|uncut)|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBird\nBook\nCity\nCompany\nContinent\nCurrency\nGenre\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"VideoGame\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test261"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Aland Islands|\n|Albania|\n|Andorra|\n|Armenia|\n|Austria|\n|Azerbaijan|\n|Belarus|\n|Belgium|\n|Bosnia-Hercegovina|\n|Bulgaria|\n|Croatia|\n|Cyprus|\n|Czech Republic|\n|Denmark|\n|Estonia|\n|Faeroe Islands|\n|Finland|\n|France|\n|Georgia|\n|Germany|\n|Gibraltar|\n|Greece|\n|Greenland|\n|Guernsey|\n|Hungary|\n|Iceland|\n|Ireland|\n|Isle of Man|\n|Italy|\n|Jan Mayen|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBook\nCity\nCompany\nContinent\nCurrency\nGenre\nGovernmentType\nLake\nMountain\nMovieDirector\nMuseum\nNewspaper\nPlant\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test262"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Algeria|\n|Angola|\n|Benin|\n|Botswana|\n|Burkina Faso|\n|Burundi|\n|Cameroon|\n|Cape Verde|\n|Central African Republic|\n|Chad|\n|Comoros|\n|Congo (Brazzaville)|\n|Congo|\n|Djibouti|\n|Egypt|\n|Equatorial Guinea|\n|Eritrea|\n|Ethiopia|\n|Gabon|\n|Gambia|\n|Ghana|\n|Guinea|\n|Guinea-Bissaau|\n|Ivory Coast|\n|Kenya|\n|Lesotho|\n|Liberia|\n|Libya|\n|Malagasy Republic|\n|Malawi|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBird\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nGovernmentType\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test263"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Anguilla|\n|Antigua and Barbuda|\n|Aruba|\n|Bahamas|\n|Barbados|\n|Belize|\n|Bermuda|\n|British Virgin Islands|\n|Canada|\n|Cayman Islands|\n|Costa Rica|\n|Cuba|\n|Dominica|\n|Dominican Republic|\n|El Salvador|\n|Grenada|\n|Guadeloupe|\n|Guatemala|\n|Haiti|\n|Honduras|\n|Jamaica|\n|Martinique|\n|Mexico|\n|Montserrat|\n|Navassa Island|\n|Netherlands Antilles|\n|Nicaragua|\n|Panama|\n|Peter Island|\n|Puerto Rico|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nMammal\nMayor\nMonarch\nMountain\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nRadioStation\nScientist\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test264"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Arcadius|\n|Theodosius II|\n|Marcian|\n|Leo I|\n|Leo II|\n|Zeno|\n|Anastasius|\n|Glycerinus|\n|Justin I|\n|Justinian I|\n|Justin II|\n|Maurice|\n|Phocas|\n|Heraclius|\n|Constantine III|\n|Constans II|\n|Constantine IV|\n|Justinian II|\n|Leontius|\n|Tiberius II|\n|Justinian II restored|\n|Philippicus (Bardan)|\n|Anastasius II|\n|Theodosius II|\n|Leo III the Isaurian|\n|Constantine V Copronymus|\n|Leo IV|\n|Constantine VI|\n|Irene|\n|Nicephorus I|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nBuilding\nCity\nCompany\nFilm\nGenre\nLake\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Monarch\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test265"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Argentina|\n|Bolivia|\n|Bouvet Island|\n|Brazil|\n|Chile|\n|Colombia|\n|Ecuador|\n|Falkland Islands|\n|French Guiana|\n|Guyana|\n|Paraguay|\n|Peru|\n|South Georgia|\n|Suriname|\n|Uruguay|\n|Venezuela|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBird\nCity\nCompany\nCurrency\nFilm\nGenre\nGovernmentType\nLake\nMammal\nMayor\nMonarch\nMountain\nMovieDirector\nMuseum\nNewspaper\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test266"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Dufourspitze (Pointe Dufour)|\n|Zumsteinspitze|\n|Dom|\n|Nadelhorn|\n|Grand Combin de Grafeneire|\n|Lenzspitze|\n|Finsteraarhorn|\n|Zinalrothorn|\n|Alphubel|\n|Rimpfischhorn|\n|Aletschhorn|\n|Strahlhorn|\n|Jungfrau|\n|Bishorn|\n|M?nch|\n|Grosses Fiescherhorn|\n|Piz Bernina|\n|Allalinhorn|\n|Hinter Fiescherhorn|\n|Fletschhorn|\n|Eiger|\n|Ulrichshorn|\n|Gross Wannenhorn|\n|Piz Pal?|\n|Aiguille d'Argenti?re|\n|Mittaghorn|\n|Gr?negghorn|\n|Cima di Jazzi|\n|Balfrin|\n|Breithorn (L?tschentaler)|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nScientist\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mountain\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test267"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|George E. Palade|\n|Frederic Passy|\n|Boris Pasternak|\n|Wolfgang Pauli|\n|Linus Carl Pauling|\n|Iwan Petrowitsc Pawlow|\n|Octavio Paz|\n|Lester Bowles Pearson|\n|Charles Pedersen|\n|Arno Penzias|\n|Shimon Peres|\n|Jean-Baptiste Perrin|\n|Saint-John Perse|\n|Luigi Pirandello|\n|Dominique Georg Pire|\n|Max Planck|\n|John Charles Polanyi|\n|Henrik Pontoppidan|\n|John Pople|\n|George Porter|\n|Rodney R. Porter|\n|Cecil Powell|\n|Fritz Pregl|\n|Vladimir Prelog|\n|Ilya Prigogine|\n|Michailowitsch Prochorow|\n|Edward Mills Purcell|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nCompany\nContinent\nCurrency\nFilm\nGenre\nGovernmentType\nLake\nLanguage\nMammal\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Scientist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test268"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Grande Dixence|\n|Mauvoisin|\n|Luzzone|\n|Contra|\n|Emosson|\n|Zeuzier|\n|G\u00f6scheneralp|\n|Curnera|\n|Zervreila|\n|Moiry|\n|Gigerwald|\n|Limmern|\n|Valle di Lei|\n|Punt dal Gall|\n|Sambuco|\n|Nalps|\n|Hongrin Nord|\n|Gebidem|\n|Mattmark|\n|Santa Maria|\n|Albigna|\n|Spitallamm|\n|Cavagnoli|\n|Schr\u00e4h|\n|Oberaar|\n|R\u00e4terichsboden|\n|Malvaglia|\n|Marmorera (Castiletto)|\n|Hongrin Sud|\n|Cleuson|\n\n**Candidate column type:**\nAcademicJournal\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nHospital\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test269"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Body of Water|\n|---|\n|Alder Pond|\n|Attean Pond|\n|Austin Pond|\n|Austin Pond|\n|Austin Pond (Little)|\n|Baker Lake|\n|Baker Pond|\n|Baker Pond|\n|Baker Pond|\n|Baker Pond|\n|Baker Pond|\n|Bald Mountain Pond|\n|Barker Pond|\n|Barrett Pond|\n|Bartley Pond (Big)|\n|Basin Pond|\n|Beans Pond|\n|Beck Pond|\n|Berry Pond (Little)|\n|Bill Morris Pond|\n|Black Brook Pond|\n|Black Brook Pond|\n|Black Hill Pond|\n|Blakeslee Lake|\n|Bob's Pond|\n|Brassua Lake|\n|Butler Pond|\n|Butler Pond|\n|Cambridge Pond|\n|Canada Falls lake|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nCountry\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Lake\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test27"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Honorius|\n|Gildo|\n|Marcus|\n|Gratian|\n|Konstantin (III.)|\n|Priscus Attalus|\n|Maximus|\n|Jovinus|\n|Heraclianus|\n|Constantius III.|\n|Johannes|\n|Valentinian III.|\n|Vortigern|\n|Pirrus|\n|Petronius Maximus|\n|Avitus|\n|Majorian|\n|Marcellus|\n|Libius Severus|\n|Aegidius|\n|Anthemius|\n|Arvandus|\n|Romanus|\n|Olybrius|\n|Glycerius|\n|Julius Nepos|\n|Romulus Augustulus|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nCity\nCompany\nCountry\nCurrency\nFilm\nLake\nLanguage\nMammal\nMonarch\nMountain\nMountainRange\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Monarch\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test270"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Kaspisches-Meer|\n|Oberer-See|\n|Victoriasee|\n|Huronsee|\n|Michigansee|\n|Tanganjikasee|\n|Baikalsee|\n|Gro?er-B?rensee|\n|Malawisee|\n|Gro?er-Sklavensee|\n|Eriesee|\n|Winnipegsee|\n|Ontariosee|\n|Balchaschsee|\n|Ladogasee|\n|Aralsee|\n|Wostoksee|\n|Onegasee|\n|Titicacasee|\n|Nicaraguasee|\n|Athabascasee|\n|Turkanasee|\n|Reindeer-Lake|\n|Issyk-Kul|\n|Urmia-See|\n|Koko-Nor|\n|V?nern|\n|Lake-Winnipegosis|\n|Albertsee|\n|Mwerusee|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nGenre\nGovernmentType\nHospital\nLanguage\nMammal\nMountain\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test271"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Scafell Pike|\n|Sca Fell|\n|Helvellyn|\n|Skiddaw|\n|Great End|\n|Bow Fell|\n|Great Gable|\n|Pillar|\n|Nethermost Pike|\n|Catstye Cam|\n|Esk Pike|\n|Raise|\n|Fairfield|\n|Blencathra|\n|Skiddaw Little Man|\n|White Side|\n|Crinkle Crags|\n|Dollywaggon Pike|\n|Great Dodd|\n|Grasmoor|\n|Stybarrow Dodd|\n|St Sunday Crag|\n|Scoat Fell|\n|Crag Hill (Eel Crag)|\n|High Street|\n|Red Pike (Wasdale)|\n|Hart Crag|\n|Steeple|\n|Lingmell|\n|High Stile|\n\n**Candidate column type:**\nAirline\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMovieDirector\nNewspaper\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test272"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name|\n|---|\n|Warsaw TV Mast|\n|KVLY Tower|\n|C. N. Tower|\n|Ostankino Tower|\n|Taipei 101|\n|Pearl of the Orient|\n|Petronas Towers|\n|Sears Tower|\n|KL Tower|\n|Jin Mao Tower|\n|Tianjin Radio and TV Tower|\n|World Trade Center|\n|2 International Finance Centre|\n|Central Radio and TV Tower|\n|Citic Plaza|\n|Shun Hing Square|\n|Plaza Rakyat|\n|Empire State Building|\n|Tashkent Tower|\n|Liberation Tower|\n|Alma-Ata Tower|\n|Central Plaza|\n|Bank of China|\n|Television Tower|\n|Television Tower|\n|Post & Communications Building|\n|Emirates Towers One|\n|Stratosphere Tower|\n|The Centre|\n|Tuntex & Chientai Tower|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBuilding\nCompany\nContinent\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMonarch\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Building\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test273"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name of Attraction|\n|---|\n|British Museum|\n|Tate Modern|\n|National Gallery|\n|Natural History Museum|\n|Science Museum|\n|Victoria and Albert Museum|\n|National Portrait Gallery|\n|Tate Britain|\n|Royal Observatory Greenwich|\n|British Library|\n|Old Royal Naval College|\n|Imperial War Museum|\n|Ashmolean Museum|\n|Merseyside Maritime Museum|\n|Museums Sheffield: Millennium Gallery|\n|National Maritime Museum|\n|Holkham NNR|\n|World Museum Liverpool|\n|Birmingham Museum & Art Gallery|\n|National Railway Museum|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Museum\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test274"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name of Currency|\n|---|\n|Dinar|\n|New Kwanza|\n|CFA franc|\n|Pula|\n|CFA franc|\n|Brundi franc|\n|CFA franc|\n|Escudo|\n|CFA franc|\n|CFA franc|\n|Comorian franc|\n|CFA franc|\n|CFA franc|\n|CFA franc|\n|Djib franc|\n|Egyptian|\n|Pound|\n|CFA franc|\n|Nakfa|\n|Birr|\n|CFA franc|\n|Dalasi|\n|Cedi|\n|Guinean franc|\n|Guinea-Bissau peso|\n|Kenya shilling|\n|Malito (Loti)|\n|Liberian dollar|\n|Libyan dinar|\n|Madagasy franc|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nFilm\nGovernmentType\nHospital\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMovieDirector\nMuseum\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test275"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name of Water Body|\n|---|\n|Lake Superior|\n|Lake Huron|\n|Lake Erie|\n|Lake Ontario|\n|Lake Nipigon|\n|Lake of the Woods|\n|Lac Seul|\n|Lake St. Clair|\n|Rainy Lake|\n|Lake Abitibi|\n|Lake Nipissing|\n|Lake Simcoe|\n|Big Trout Lake|\n|Sandy Lake|\n|St. Joseph Lake|\n|Trout Lake|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBird\nBuilding\nCity\nCompany\nContinent\nCurrency\nGovernmentType\nHospital\nLake\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Lake\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test276"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name of Young|\n|---|\n|Platypus|\n|Calf|\n|Shrew|\n|Pup|\n|Calf|\n|Joey|\n|Calf|\n\n**Candidate column type:**\nAcademicJournal\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nPoliticalParty\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mammal\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test277"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name of party|\n|---|\n|The Moderate Party (M)|\n|The Centre Party (C)|\n|The Liberal Party (FP)|\n|Christian Democrats (KD)|\n|Social Democrats (S)|\n|Left Party (V)|\n|The Green Party (MP)|\n|June List (JL)|\n|Sweden Democrats (SD)|\n|Other parties (\u00d6VR)|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCurrency\nFilm\nGenre\nGovernmentType\nLake\nLanguage\nMammal\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nSportsTeam\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"PoliticalParty\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test278"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Name of the Peaks|\n|---|\n|Ama Dablam|\n|Annapurna I|\n|Annapurna II|\n|Annapurna III|\n|Annapurna IV|\n|Annapurna|\n|Api|\n|Api West|\n|Barun Tse|\n|Baudha|\n|Chamlang|\n|Cheo Himal|\n|Chobuje|\n|Cholatse|\n|Cho-oyu|\n|Cho polu|\n|Churen|\n|Chhukungri|\n|Drahmo|\n|Dhampus|\n|Dhaulagiri I|\n|Dhaulagiri II|\n|Dhaulagiri III|\n|Dhaulagiri IV|\n|Dhaulagiri V|\n|Dhaulagiri VI|\n|Drangnag Ri|\n|Fimkof|\n|Fimkof West|\n|Ganesh II|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nContinent\nCountry\nFilm\nGenre\nGovernmentType\nHospital\nLake\nMonarch\nMountain\nMountainRange\nMovieDirector\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mountain\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test279"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Brand|\n|---|\n|Microsoft|\n|GE|\n|Coca-Cola|\n|China Mobile|\n|Marlboro|\n|Wal-Mart|\n|Google|\n|IBM|\n|Citibank|\n|Toyota|\n|McDonald's|\n|Bof America|\n|Home Depot|\n|Nokia|\n|Intel|\n|Vodafone|\n|BMW|\n|Disney|\n|UPS|\n|Cisco|\n|HP|\n|TIM|\n|NTT Docomo|\n|Louis Vuitton|\n|American Express|\n|Dell|\n|Gillette|\n|Mercedes|\n|Apple|\n|Tesco|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCurrency\nFilm\nGenre\nLake\nLanguage\nMammal\nMayor\nMonarch\nMuseum\nNewspaper\nPlant\nSaint\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test28"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Nepal\/Tibet|\n|---|\n|Pakistan|\n|Nepal\/India|\n|Nepal|\n|Nepal\/Tibet|\n|Nepal\/Tibet|\n|Nepal|\n|Nepal|\n|Pakistan|\n|Nepal|\n|Pakistan|\n|Pakistan|\n|Pakistan|\n|China\/Nepal|\n|Pakistan|\n|Pakistan|\n|Pakistan|\n|India|\n|Tibet|\n|Pakistan|\n|Pakistan|\n|Tibet|\n|India|\n|Tibet\/India|\n|China|\n|Pakistan|\n|China|\n|Pakistan|\n|China|\n|Pakistan|\n|Pakistan|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountainRange\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test280"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Nom du plan d'eau|\n|---|\n|Nettilling Lake|\n|Dubawnt Lake|\n|Amadjuak Lake|\n|Nueltin Lake|\n|Baker Lake|\n|Yathkyed Lake|\n|Aberdeen Lake|\n|Napaktulik Lake|\n|Garry Lake|\n|Contwoyto Lake|\n|Ennadai Lake|\n|Tulemalu Lake|\n|Kamilukuak Lake|\n|Kaminak Lake|\n|Ferguson Lake|\n|Tebesjuak Lake|\n|Qamanirjuaq Lake|\n|Lake Hazen|\n|Princess Mary Lake|\n|South Henik Lake|\n|Angikuni Lake|\n|Hall Lake|\n|Tehek Lake|\n|Mallery Lake|\n|MacAlpine Lake|\n|Bluenose Lake|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBird\nBook\nBuilding\nCity\nContinent\nFilm\nHospital\nLake\nMammal\nMayor\nMonarch\nMountainRange\nMuseum\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Lake\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test281"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Nom en anglais|\n|---|\n|Afghanistan|\n|South Afrique|\n|Albania|\n|Alderney|\n|Algeria|\n|Germany|\n|Andorra|\n|England|\n|Angola|\n|Antigua and Barbuda|\n|Saudi Arabia|\n|Argentina|\n|Armenia|\n|Austria|\n|Azerbaijan|\n|Nom en anglais|\n|Bahamas|\n|Bahrain|\n|Bangladesh|\n|Barbados|\n|Belarus|\n|Belgium|\n|Belize|\n|Benin|\n|Bermuda|\n|Bhutan|\n|Burma|\n|Bolivia|\n|Bosnia and Herzegovina|\n|Botswana|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMountainRange\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test282"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|OAU State|\n|---|\n|Algeria|\n|Angola|\n|Benin|\n|Bostwana|\n|Burkina Faso|\n|Burundi|\n|Cameroon|\n|Cape Verde|\n|Central African Republic|\n|Chad|\n|Comoros|\n|Congo|\n|Democratic Republic of the|\n|Congo|\n|Repulic Of|\n|Cote d'Ivoire|\n|Dijibouti|\n|Egypt|\n|Equatorial Guinea|\n|Eritrea|\n|Ethiopia|\n|Gabon|\n|Gambia|\n|The|\n|Ghana|\n|Guinea|\n|Guinea-Bissau|\n|Kanya|\n|Lesotho|\n|Liberia|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBaseballPlayer\nBird\nBook\nCompany\nContinent\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMonarch\nMountainRange\nNewspaper\nRadioStation\nScientist\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test283"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Official Language|\n|---|\n|Arabic|\n|Portuguese|\n|French|\n|English|\n|French|\n|Rundi\/French|\n|French\/Eng.|\n|Portuguese|\n|French|\n|Sango|\n|Arabic|\n|French|\n|Comorian|\n|French|\n|French|\n|French|\n|Arabic|\n|French|\n|Arabic|\n|Spanish|\n|nan|\n|Amharic|\n|French|\n|English|\n|English|\n|French|\n|Portuguese|\n|Swahili|\n|English|\n|Sotho|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBuilding\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Language\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test284"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|PEAK|\n|---|\n|Allen Crags|\n|Angletarn Pikes|\n|Ard Crags|\n|Armboth Fell|\n|Arnison Crag|\n|Arthur's Pike|\n|Bakestall|\n|Bannerdale Crags|\n|Barf|\n|Barrow|\n|Base Brown|\n|Beda Fell|\n|Binsey|\n|Birkhouse Moor|\n|Birks|\n|Black Fell (Black Crag)|\n|Blake Fell|\n|Blea Rigg|\n|Bleaberry Fell|\n|Blencathra|\n|Bonscale Pike|\n|Bow Fell|\n|Bowscale Fell|\n|Brae Fell|\n|Brandreth|\n|Branstree|\n|Brim Fell|\n|Brock Crags|\n|Broom Fell|\n|Buckbarrow|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nLake\nMammal\nMonarch\nMountain\nMuseum\nNewspaper\nPlant\nScientist\nSportsTeam\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mountain\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test285"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Party|\n|---|\n|Conservative|\n|Labour|\n|Lib-Dem|\n|SNP|\n|PC|\n|Green|\n|BNP|\n|UKIP|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBuilding\nCompany\nContinent\nCountry\nCurrency\nGovernmentType\nLanguage\nMammal\nMountain\nMountainRange\nMovieDirector\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"PoliticalParty\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test286"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Party|\n|---|\n|Democratic Unionist Party (DUP)|\n|Sinn F\u00e9in (SF)|\n|Social Democratic and Labour Party (SDLP)|\n|Ulster Unionist Party (UUP)|\n|Alliance Party of Northern Ireland (APNI)|\n|Green Party (Green)|\n|United Kingdom Unionist Party (UKUP)|\n|Independent (Ind)|\n|Independent Republican (Ind Rep)|\n|Independent Unionist (Ind U)|\n|Progressive Unionist Party (PUP)|\n|Conservative Party (Con)|\n|Independent Republican (Ind Rep) [RSF]|\n|Socialist Environmental Alliance (SEA)|\n|United Kingdom Independence Party (UKIP)|\n|Workers' Party (WP)|\n|People Before Profit (PBP)|\n|Socialist Party (SP)|\n|Make Politicians History (MPH)|\n|Labour (Lab)|\n|Pro-Capitalism (ProC)|\n|Total|\n\n**Candidate column type:**\nBaseballPlayer\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nHospital\nLake\nLanguage\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test287"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Party|\n|---|\n|Democratic Unionist Party (DUP)|\n|Sinn F\u00e9in (SF)|\n|Ulster Unionist Party (UUP)|\n|Social Democratic and Labour Party (SDLP)|\n|Alliance Party of Northern Ireland (APNI)|\n|Green Party|\n|Progressive Unionist Party (PUP)|\n|United Unionist Coalition (UUC)|\n|Newtownabbey Ratepayers Association|\n|Socialist Environmental Alliance (SEA)|\n|Conservative Party|\n|Workers' Party (WP)|\n|Socialist Party|\n|Northern Ireland Women's Coalition (NIWC)|\n|United Kingdom Unionist Party (UKUP)|\n|Independent Candidates|\n|Total|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBird\nBuilding\nCompany\nContinent\nCurrency\nFilm\nGovernmentType\nHospital\nLake\nLanguage\nMayor\nMonarch\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test288"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Party|\n|---|\n|Social Democratic Party|\n|Moderate Party|\n|Green Party|\n|Left Party|\n|Liberal People's Party|\n|Sweden Democrats|\n|Christian Democrats|\n|Pirate Party|\n|Centre Party|\n|June List|\n|Feminist Initiativ|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nCity\nContinent\nCurrency\nFilm\nGenre\nHospital\nMammal\nMayor\nMonarch\nMountainRange\nMovieDirector\nNewspaper\nPlant\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test289"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|COUNTRY|\n|---|\n|ALBANIA|\n|ALGERIA|\n|ARAB EMIRATES|\n|ARGENTINA|\n|ARMENIA|\n|AUSTRALIA|\n|AUSTRIA|\n|AZERBAIYAN|\n|BAHAMAS|\n|BANGLADESH|\n|BELGIUM|\n|BIELORUSSIA|\n|BOLIVIA|\n|BOSNIA-H.|\n|BRAZIL|\n|BULGARY|\n|CAMEROON|\n|CANADA|\n|CHILE|\n|CHINA|\n|COLOMBIA|\n|COSTA RICA|\n|CROATIA|\n|CUBA|\n|CYPRUS|\n|CZECK REPUBLIC|\n|DENMARK|\n|DOMINICAN REPUBLIC|\n|ECUADOR|\n|EGYPT|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMonarch\nMountain\nMountainRange\nMovieDirector\nNewspaper\nPlant\nRadioStation\nScientist\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test29"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Party|\n|---|\n|Unity List|\n|Socialist Party|\n|Social Democrats|\n|Social Liberal Party|\n|Christian Democrats|\n|New Alliance|\n|Liberal Party|\n|Conservative Party|\n|Danish People's Party|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"PoliticalParty\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test290"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Player (2011 TBs)|\n|---|\n|Hank Aaron|\n|Stan Musial|\n|Willie Mays|\n|Barry Bonds|\n|Ty Cobb|\n|Babe Ruth|\n|Pete Rose|\n|Carl Yastrzemski|\n|Eddie Murray|\n|Rafael Palmeiro|\n|Frank Robinson|\n|Ken Griffey Jr.|\n|Dave Winfield|\n|Alex Rodriguez (172)|\n|Cal Ripken Jr.|\n|Tris Speaker|\n|Lou Gehrig|\n|George Brett|\n|Mel Ott|\n|Jimmie Foxx|\n|Ted Williams|\n|Honus Wagner|\n|Paul Molitor|\n|Al Kaline|\n|Reggie Jackson|\n|Manny Ram?rez|\n|Andre Dawson|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nGenre\nLake\nMayor\nMountain\nMountainRange\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test291"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Player (2011 Ws)|\n|---|\n|Cy Young?|\n|Walter Johnson?|\n|Grover Cleveland Alexander?|\n|Christy Mathewson?|\n|Pud Galvin?|\n|Warren Spahn?|\n|Kid Nichols?|\n|Greg Maddux|\n|Roger Clemens|\n|Tim Keefe?|\n|Steve Carlton?|\n|John Clarkson?|\n|Eddie Plank?|\n|Nolan Ryan?|\n|Don Sutton?|\n|Phil Niekro?|\n|Gaylord Perry?|\n|Tom Seaver?|\n|Charley Radbourn?|\n|Mickey Welch?|\n|Tom Glavine|\n|Randy Johnson|\n|Lefty Grove?|\n|Early Wynn?|\n|Bobby Mathews|\n|Tommy John|\n|Bert Blyleven?|\n|Robin Roberts?|\n|Ferguson Jenkins?|\n|Tony Mullane|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nGovernmentType\nLake\nLanguage\nMammal\nMayor\nMountain\nMountainRange\nMovieDirector\nMuseum\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"BaseballPlayer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test292"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Player|\n|---|\n|Rogers Hornsby|\n|Lou Gehrig|\n|Player|\n|Willard Hershberger|\n|Carl Hubbell|\n|Babe Ruth|\n|Mel Ott|\n|Player|\n|Joe DiMaggio|\n|Honus Wagner|\n|Bob Feller|\n|Player|\n|Robin Roberts|\n|Stan Musial|\n|Warren Spahn|\n|Jim Umbricht|\n|Eddie Mathews|\n|Mickey Mantle|\n|Player|\n|Lou Boudreau|\n|Willie Mays|\n|Frank Robinson|\n|Pie Traynor|\n|Sandy Koufax|\n|Roy Campanella|\n|Jackie Robinson|\n|Yogi Berra|\n|Bill Dickey|\n|Roberto Clemente|\n|Gil Hodges|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"BaseballPlayer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test293"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Political Party|\n|---|\n|Christian Democrats (The National Party)|\n|Christian Solidarity Party|\n|Communist Party of Ireland|\n|Fianna F\u00e1il|\n|Fine Gael|\n|Green Party|\n|Labour Party|\n|Progressive Democrats|\n|Sinn F\u00e9in|\n|Socialist Party|\n|Socialist Workers Party|\n|South Kerry Independent Alliance|\n|The Workers Party|\n|Total|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nGenre\nLanguage\nMonarch\nMountain\nMuseum\nNewspaper\nPlant\nRadioStation\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test294"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Pompey the Great|\n|---|\n|Sextus Pompey|\n|Julius Caesar|\n|Brutus|\n|Cassius|\n|Ahenobarbus|\n|Marcus Antonius|\n|Lepidus|\n|Augustus (Octavian)|\n|Agrippa|\n|Tiberius|\n|Drusus|\n|Nero Claudius Drusus|\n|Germanicus|\n|Caligula|\n|Claudius|\n|Britannicus|\n|Nero|\n|Clodius Macer|\n|Galba|\n|Otho|\n|Vitellius|\n|Vespasian|\n|Titus|\n|Domitian|\n|Nerva|\n|Trajan|\n|Hadrian|\n|Aelius|\n|Antoninus Pius|\n|Marcus Aurelius|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nCompany\nGovernmentType\nHospital\nLanguage\nMonarch\nMountainRange\nMuseum\nNewspaper\nPlant\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Monarch\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test295"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Province|\n|---|\n|Colombie-Britannique|\n|Alberta|\n|Saskatchewan|\n|Manitoba|\n|Ontario|\n|Qu\u00e9bec|\n|Nouveau-Brunswick|\n|Nouvelle-\u00c9cosse|\n|Terre-Neuve-et-Labrador|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMonarch\nMountain\nMovieDirector\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AdministrativeRegion\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test296"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Pr\u00e9nom Nom|\n|---|\n|Alberto Hurtado|\n|Alphonse Rodriguez|\n|Alphonse Rodriguez|\n|Andr? Bobola|\n|Antoine Baldinucci|\n|Antoine Daniel|\n|Bernardin Realino|\n|Bernardo de Hoyos|\n|Charles Garnier|\n|Charles Spinola|\n|Claude La Colombi?re|\n|Diego Luis de San Vitores|\n|Dominique Collins|\n|Edmond Campion|\n|Etienne Prongracz|\n|Fran?ois de Borgia|\n|Fran?ois Garate|\n|Fran\u00e7ois de G\u00e9ronimo|\n|Fran\u00e7ois Pacheco|\n|Fran?ois Xavier|\n|Gabriel Lallemant|\n|Guillaume Saultemouche|\n|Ignace de Azevedo|\n|Ignace de Loyola|\n|Isaac Jogues|\n|Jacques Berthieu|\n|Jacques Bonnaud|\n|Jacques Kisai|\n|Jacques Sal?s|\n|Jean Berchmans|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nLanguage\nMammal\nMayor\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nRadioStation\nSaint\nScientist\nSportsTeam\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Saint\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test297"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Publication|\n|---|\n|Daily Mail|\n|Sunday People|\n|Daily Mirror|\n|Mail on Sunday|\n|News of the World|\n|Sunday Mirror|\n|Best Magazine|\n|Evening Standard|\n|The Observer|\n|Daily Sport|\n|Sunday Times|\n|The People|\n|Daily Express|\n|Weekend Magazine (Daily Mail)|\n|Sunday Express|\n|The Sun|\n|Closer Magazine|\n|Sunday Sport|\n|Night and Day (Mail on Sunday)|\n|Sunday Business News|\n|Daily Record|\n|Saturday (Express)|\n|Sunday Mirror Magazine|\n|Real Magazine|\n|Woman?s Own|\n|Daily Mirror Magazine|\n|Mail in Ireland|\n|Daily Star|\n|Marie Claire|\n|Personal Magazine|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBird\nBuilding\nContinent\nCountry\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMayor\nMovieDirector\nNewspaper\nPlant\nSaint\nScientist\nSportsTeam\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Newspaper\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test298"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Publisher [10][11][14][17][18]|\n|---|\n|Nintendo|\n|Altron|\n|Bottom Up|\n|Bottom Up|\n|Bottom Up|\n|Video System|\n|ASCII Entertainment|\n|I4|\n|THQ|\n|Human Entertainment|\n|Acclaim|\n|Acclaim|\n|Acclaim|\n|Ubisoft|\n|Nintendo|\n|Acclaim|\n|3DO|\n|3DO|\n|3DO|\n|Crave Entertainment|\n|Titus Software Taito|\n|ESP|\n|Taito|\n|Nintendo|\n|Nintendo|\n|Take-Two Interactive|\n|THQ|\n|Visco Corporation|\n|Ubisoft|\n|3DO|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nContinent\nCountry\nCurrency\nLake\nLanguage\nMayor\nMountain\nMountainRange\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test299"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Democritus|\n|Isaac Newton|\n|John Dalton|\n|Michael Faraday|\n|J. Plucker|\n|Dmitri Mendeleev|\n|James Clerk Maxwell|\n|Sir William Crookes|\n|E. Goldstein|\n|G.J. Stoney|\n|Wilhelm Roentgen|\n|Henri Becquerel|\n|J.J. Thomson|\n|J.J. Thomson|\n|Rutherford|\n|Marie Sklodowska Curie|\n|Soddy|\n|Max Planck|\n|Nagaoka|\n|Abegg|\n|Albert Einstein|\n|Hans Geiger|\n|R.A. Millikan|\n|Ernest Rutherford|\n|H.G.J. Moseley|\n|Aston|\n|Niels Bohr|\n|de Broglie|\n|Heisenberg|\n|Cockcroft \/ Walton|\n\n**Candidate column type:**\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nLake\nLanguage\nMammal\nMonarch\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Scientist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test3"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|CREATOR|\n|---|\n|Louis Braille|\n|Blaise Pascal|\n|Galileo Galilei|\n|Edwin Land|\n|George Westinghouse|\n|Guglielmo Marconi|\n|Joshua Lederberg|\n|Thomas Edison|\n|Carl Gauss|\n|John Nash|\n|Brian Josephson|\n|James Hillier|\n|Isaac Newton|\n|Louis Parker|\n|Srinivasa Ramanujan|\n|Satyendra Bose|\n|Paul Dirac|\n|Richard Feynman|\n|Walt Disney|\n|Max Perutz|\n|James Clerk Maxwell|\n|Enrico Fermi|\n|Earnest Rutherford|\n|George Eastman|\n|James Watson|\n|Louis Pasteur|\n|Henri Poincare|\n|Albert Einstein|\n|Niels Bohr|\n|Werner Heisenberg|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nFilm\nGenre\nGovernmentType\nHospital\nLake\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Scientist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test30"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Publisher|\n|---|\n|5pb.|\n|THQ|\n|Artdink|\n|Idea Factory|\n|Konami|\n|CyberFront Corporation|\n|Microsoft Game Studios|\n|Electronic Arts|\n|Atari|\n|Activision|\n|Idea Factory|\n|From Software|\n|From Software|\n|Electronic Arts|\n|Electronic Arts|\n|Codemasters|\n|Ubisoft|\n|Ubisoft|\n|Ubisoft|\n|THQ|\n|505 Games|\n|Atari|\n|Atari|\n|THQ|\n|Activision|\n|Microsoft Game Studios|\n|Eidos Interactive|\n|Aksys Games (NA) Arc System Works (JP)|\n|Electronic Arts|\n|Electronic Arts|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nCity\nCompany\nContinent\nCountry\nGenre\nGovernmentType\nLake\nLanguage\nMayor\nMonarch\nMountain\nMountainRange\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test300"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Publisher|\n|---|\n|NAMCO BANDAI GAMES|\n|SEGA|\n|ELECTRONIC ARTS|\n|KOCH MEDIA|\n|ELECTRONIC ARTS|\n|ELECTRONIC ARTS|\n|ACTIVISION BLIZZARD|\n|ACTIVISION BLIZZARD|\n|ELECTRONIC ARTS|\n|SEGA|\n|SQUARE ENIX EUROPE|\n|BETHESDA SOFTWORKS|\n|TAKE 2|\n|ELECTRONIC ARTS|\n|TAKE 2|\n|ELECTRONIC ARTS|\n|MICROSOFT|\n|UBISOFT|\n|THQ|\n|THQ|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nContinent\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test301"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Publisher|\n|---|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Konami|\n|Capcom|\n|Konami|\n|Nintendo|\n|Irem|\n|Capcom|\n|Nintendo|\n|Konami|\n|Square Enix|\n|Capcom|\n|Nintendo|\n|Nintendo|\n|Capcom|\n|Nintendo|\n|Capcom|\n|Nintendo|\n|Nintendo|\n|Konami|\n|Konami|\n|Nintendo|\n|Hudson Soft|\n|Nintendo|\n|Natsume|\n|Capcom|\n|Factor 5|\n|Irem|\n|Namco Bandai Games|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nGovernmentType\nHospital\nLake\nMammal\nMayor\nMountain\nMountainRange\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test302"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Publisher|\n|---|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Konami|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBook\nBuilding\nCompany\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test303"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Publisher|\n|---|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|D3P|\n|Nintendo|\n|Capcom|\n|Nintendo|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBird\nBuilding\nCity\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLanguage\nMammal\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test304"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Publisher|\n|---|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Take-Two Interactive|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Take-Two Interactive|\n|Microsoft|\n|Nintendo|\n|Nintendo|\n|Sony Computer Entertainment|\n|Nintendo|\n|Activision|\n|Activision|\n|Capcom|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBaseballPlayer\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test305"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Publisher(s)|\n|---|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Nintendo|\n|Square Enix|\n|Nintendo|\n|Nintendo|\n|Hudson Soft|\n\n**Candidate column type:**\nAirline\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nContinent\nFilm\nGenre\nGovernmentType\nHospital\nLake\nMonarch\nMountain\nMountainRange\nNewspaper\nPlant\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test306"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|RANGE|\n|---|\n|Himalayas|\n|Karakoram|\n|Himalayas|\n|Himalayas|\n|Himalayas|\n|Himalayas|\n|Himalayas|\n|Himalayas|\n|Himalayas|\n|Himalayas|\n|Karakoram|\n|Karakoram|\n|Karakoram|\n|Himalayas|\n|Karakoram|\n|Himalayas|\n|Karakoram|\n|Himalayas|\n|Himalayas|\n|Karakoram|\n|Himalayas|\n|Karakoram|\n|Himalayas|\n|Karakoram|\n|Himalayas|\n|Himalayas|\n|Himalayas|\n|Karakoram|\n|Karakoram|\n|Himalayas|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"MountainRange\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test307"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Saint|\n|---|\n|Abraham the Syrian|\n|Adalbert of Magdeburg|\n|Adalbert of Prague|\n|Adelaide of Italy|\n|Pope Adeodatus I|\n|Adrian of Nicomedia|\n|Pope Adrian III|\n|Pope Agapitus I|\n|Pope Agatho|\n|Agnes|\n|Aidan of Lindisfarne|\n|Alban|\n|Pope Alexander I|\n|Alphege|\n|Ambrose of Milan|\n|Pope Anacletus|\n|Pope Anastasius I|\n|Andrew|\n|Pope Anicetus|\n|Anselm|\n|Pope Antheros|\n|Anthony the Great|\n|Anthony of Padua|\n|Athanasius of Alexandria|\n|Augustine of Hippo|\n|Augustine of Canterbury|\n|Barbara[?]|\n|Barnabas|\n|Bartholomew|\n|Basil the Great|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Saint\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test308"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Scientific Name|\n|---|\n|Abutilon indicum|\n|Abutilon theophrasti|\n|Acacia aulacocarpa|\n|Acacia auriculiformis|\n|Acacia boliviana|\n|Acacia confusa|\n|Acacia crassicarpa|\n|Acacia farnesiana|\n|Acacia glauca|\n|Acacia longifolia|\n|Acacia mangium|\n|Acacia mearnsii|\n|Acacia melanoxylon|\n|Acacia nilotica|\n|Acacia sinuata|\n|Acalypha alopecuroides|\n|Acanthocereus tetragonus|\n|Acmella uliginosa|\n|Adiantum raddianum|\n|Aeschynomene americana|\n|Aeschynomene indica|\n|Agave americana|\n|Agave sisalana|\n|Ageratina riparia|\n|Ailanthus altissima|\n|Ajuga reptans|\n|Albizia chinensis|\n|Albizia lebbeck|\n|Alstonia macrophylla|\n|Alternanthera caracasana|\n\n**Candidate column type:**\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nGenre\nGovernmentType\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Plant\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test309"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|CURRENCY|\n|---|\n|Afghani|\n|Lek|\n|Algerian Dinar|\n|US Dollar|\n|Spanish Peseta|\n|French Franc|\n|Andorran Peseta|\n|New Kwanza|\n|Kwanza Reajustado|\n|East Caribbean Dollar|\n|No universal currency|\n|East Caribbean Dollar|\n|Argentine Peso|\n|Armenian Dram|\n|Aruban Guilder|\n|Australian Dollar|\n|Schilling|\n|Azerbaijanian Manat|\n|Bahamian Dollar|\n|Bahraini Dinar|\n|Taka|\n|Barbados Dollar|\n|Belarussian Ruble|\n|Belgian Franc|\n|Belize Dollar|\n|CFA Franc BCEAO|\n|Bermudian Dollar|\n|Indian Rupee|\n|Ngultrum|\n|Convertible Marks|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Currency\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test31"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Scientific name\/Nom scientifique|\n|---|\n|Abies alba|\n|Abies amabilis|\n|Abies balsamea|\n|Abies fraseri|\n|Abies grandis|\n|Abies lasiocarpa|\n|Abies nordmanniana|\n|Acer negundo|\n|Acer pensylvanicum|\n|Acer platanoides|\n|Acer pseudoplanatus|\n|Acer rubrum|\n|Acer saccharum|\n|Alnus cordata|\n|Alnus cremastogyne|\n|Alnus firma|\n|Alnus formosana|\n|Alnus glutinosa|\n|Alnus hirsuta|\n|Alnus hirsuta turcz. var. microphylla nakai|\n|Alnus incana|\n|Alnus incana ssp. rugosa|\n|Alnus incana ssp. tenuifolia|\n|Alnus japonica|\n|Alnus jorullensis|\n|Alnus rubra|\n|Alnus viridis|\n|Alnus viridis ssp. crispa|\n|Alnus viridis ssp. sinuata|\n|Arbutus menziesii|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nRadioStation\nScientist\nSportsTeam\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test310"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Service|\n|---|\n|Europe 1|\n|France Culture|\n|France Info|\n|France Inter|\n|France Musique|\n|RTL France|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLanguage\nMammal\nMonarch\nMountain\nMountainRange\nMuseum\nPlant\nPoliticalParty\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test311"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Site|\n|---|\n|Ayrshire Central|\n|The Ayr Hospital|\n|Crosshouse Hospital|\n|Dykebar Hospital|\n|Dumfries & Galloway Royal Infirmary|\n|Forth Valley Royal Hospital|\n|Gartnavel General|\n|Gartnavel Royal Hospital|\n|Glasgow Royal Infirmary|\n|Golden Jubilee National Hospital|\n|Hairmyres Hospital|\n|Inverclyde Royal Hospital|\n|Leverndale Hospital|\n|Monklands Hospital|\n|Parkhead Hospital|\n|Princess Royal Maternity|\n|Queen Mothers Hospital|\n|Royal Alexandra Hospital|\n|Ravenscraig|\n|Yorkhill|\n|Southern General Hospital|\n|Stobhill Hospital|\n|Victoria Infirmary|\n|Wishaw General Hospital|\n|Western Infirmary|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nFilm\nGovernmentType\nLake\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nNewspaper\nRadioStation\nSaint\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test312"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Species|\n|---|\n|Achnatherum hymenoides|\n|Achnatherum lettermanii|\n|Achnatherum nelsonii|\n|Achnatherum richardsonii|\n|Achnatherum speciosa|\n|Achnatherum thurberianum|\n|Agropyron cristatum|\n|Agropyron desertorum|\n|Agrostis exarata|\n|Agrostis gigantea|\n|Agrostis scabra|\n|Agrostis stolonifera|\n|Andropogon cabanisii|\n|Andropogon gerardii|\n|Andropogon hallii|\n|Andropogon ternarius|\n|Andropogon virginicus|\n|Arctagrostis latifolia|\n|Aristida purpurea|\n|Aristida stricta|\n|Arundo donax|\n|Arundinaria gigantea|\n|Arundinaria gigantea subsp. gigantea|\n|Arundinaria gigantea subsp. tecta|\n|Bolboschoenus robustus|\n|Bothriochloa barbinodis|\n|Bouteloua barbata|\n|Bouteloua curtipendula|\n|Bouteloua eriopoda|\n|Bouteloua gracilis|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nCompany\nContinent\nCountry\nGovernmentType\nLake\nLanguage\nMammal\nMayor\nMonarch\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Plant\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test313"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Species|\n|---|\n|Horned Grebe|\n|Pied-billed Grebe *|\n|Common Loon|\n|Herring Gull *|\n|Ring-billed Gull *|\n|Franklin's Gull|\n|Greater Black-Backed Gull|\n|Bonaparte's Gull|\n|Caspian Tern *|\n|Forster's Tern *|\n|Common Tern *|\n|Black Tern *|\n|Double-crested Cormorant *|\n|American White Pelican *|\n|Common Merganser *|\n|Red-breasted Merganser|\n|Hooded Merganser *|\n|Mallard *|\n|American Black Duck *|\n|Gadwall *|\n|American Wigeon *|\n|Eurasion Wigeon|\n|Green-winged Teal *|\n|Blue-winged Teal *|\n|Northern Shoveler *|\n|Northern Pintail *|\n|Wood Duck *|\n|Redhead *|\n|Canvasback *|\n|Greater Scaup|\n\n**Candidate column type:**\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCountry\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMonarch\nMountain\nMountainRange\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Bird\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test314"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|St Dympna|\n|---|\n|Cavan General Hospital|\n|Mid-Western Regional Hospital|\n|Bantry General Hospital|\n|Bon Secours Hospital|\n|Cork Medical Centre|\n|Cork University Hospital|\n|Erinville Hospital|\n|Mallow General Hospital|\n|Marymount Hospital|\n|Mercy Hospital|\n|Shanakiel Hospital|\n|South Infirmary Victoria University Hospital|\n|Bandon Community Hospital|\n|St. Anthony's Hospital (Cork)|\n|St. Finbarr's Hospital|\n|St. Mary's Orthopaedic Hospital|\n|St. Patrick's Hospital|\n|Tabor Lodge|\n|Donegal Hospital|\n|Killybegs Community Hospital|\n|Letterkenny General Hospital|\n|St. Conal's Psychiatric Hospital|\n|Beaumont Hospital|\n|Blackrock Clinic|\n|Bloomfield Care Centre|\n|Bon Secours Hospital|\n|Cappagh National Orthopaedic Hospital|\n|Central Mental Hospital|\n|Cherry Orchard Hospital|\n|Children's University Hospital|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBaseballPlayer\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nMammal\nMayor\nMonarch\nMountain\nMovieDirector\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Hospital\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test315"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Staat(en)|\n|---|\n|Aserbaidschan Russland Kasachstan Turkmenistan Iran|\n|USA-Kanada|\n|Kenia Tansania Uganda|\n|USA-Kanada|\n|USA|\n|Tansania DR-Kongo Sambia Burundi|\n|Russland|\n|Kanada|\n|Malawi Mosambik Tansania|\n|Kanada|\n|USA-Kanada|\n|Kanada|\n|USA-Kanada|\n|Kasachstan|\n|Russland|\n|Kasachstan Usbekistan|\n|Antarktis|\n|Russland|\n|Bolivien-Peru|\n|Nicaragua|\n|Kanada|\n|Kenia-?thiopien|\n|Kanada|\n|Kirgisistan|\n|Iran|\n|VR-China|\n|Schweden|\n|Kanada|\n|Uganda DR-Kongo|\n|Sambia DR-Kongo|\n\n**Candidate column type:**\nAirline\nBaseballPlayer\nBird\nBuilding\nContinent\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test316"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Stadt|\n|---|\n|Dubai|\n|Mekka|\n|Taipei|\n|Shanghai|\n|Hong Kong|\n|Kuala Lumpur|\n|Kuala Lumpur|\n|Nanjing|\n|Chicago|\n|Shenzhen|\n|Guangzhou|\n|Shanghai|\n|Hong Kong|\n|Chicago|\n|Dubai|\n|Kuweit Stadt|\n|Dubai|\n|Guangzhou|\n|Shenzhen|\n|Abu Dhabi|\n|New York City|\n|Dubai|\n|Dubai|\n|Dubai|\n|Hong Kong|\n|Hong Kong|\n|New York City|\n|Dubai|\n|Guangzhou|\n|Dubai|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMonarch\nMountain\nMuseum\nNewspaper\nScientist\nSportsTeam\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test317"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Stadt|\n|---|\n|Dubai|\n|Taipei|\n|Kuala Lumpur|\n|Chicago|\n|New York City|\n|New York City|\n|New York City|\n|New York City|\n|New York City|\n|New York City|\n|New York City|\n|Philadelphia|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBaseballPlayer\nBird\nCity\nCompany\nContinent\nCountry\nFilm\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test318"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Stadt|\n|---|\n|New York|\n|New York|\n|Athen|\n|Paris|\n|London|\n|London|\n|New York|\n|St Louis|\n|Los Angeles|\n|Saint Petersburg|\n|Madrid|\n|London|\n|Paris|\n|London|\n|New York|\n|Petersburg|\n|London|\n|Washington D.C.|\n|New York|\n|New York|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBook\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nMammal\nMountainRange\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test319"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Call Letters|\n|---|\n|KABC (ABC Radio Networks)|\n|KALI AM|\n|KAZN (Asian Radio)|\n|KBLA|\n|KBRT (K-Bright)|\n|KDIS (Radio Disney)|\n|KFI (More Stimulating Talk Radio)|\n|KFOX (Radio Seoul)|\n|KFRN (Family Radio Network)|\n|KFWB (News 98)|\n|KHJ (La Ranchera)|\n|KIRN (Radio Iran)|\n|KLAC|\n|KLTX (Nueva Vida)|\n|KMNY|\n|KMPC (Sporting News Radio)|\n|KMRB|\n|KMXE|\n|KNX (CBS Radio)|\n|KRLA (Smart Talk)|\n|KSPA (Station of the Stars)|\n|KSPN (ESPN Radio)|\n|KSUR|\n|KTNQ (10-20)|\n|KTYM|\n|KVNR (Radio Vietnam)|\n|KWKW (13-30)|\n|KXMX|\n|KXTA (Fox Sports)|\n|KYPA (Radio Korea)|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCurrency\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountainRange\nMuseum\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"RadioStation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test32"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Stadt|\n|---|\n|New York|\n|New York|\n|Athen|\n|Paris|\n|New York|\n|London|\n|London|\n|Madrid|\n|St Louis|\n|Paris|\n|London|\n|Petersburg|\n|London|\n|New York|\n|Los Angeles|\n|New York|\n|Saint Petersburg|\n|London|\n|New York|\n|Washington D.C.|\n\n**Candidate column type:**\nAirline\nAirport\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nMammal\nMayor\nMonarch\nMountain\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test320"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Stadt|\n|---|\n|New York|\n|New York|\n|Athen|\n|Paris|\n|New York|\n|London|\n|London|\n|St Louis|\n|Madrid|\n|Paris|\n|Petersburg|\n|London|\n|Los Angeles|\n|New York|\n|London|\n|New York|\n|Saint Petersburg|\n|London|\n|Washington D.C.|\n|New York|\n\n**Candidate column type:**\nAirline\nBaseballPlayer\nBird\nBook\nCompany\nCountry\nCurrency\nFilm\nGenre\nHospital\nLake\nLanguage\nMammal\nMayor\nMountain\nMountainRange\nMovieDirector\nMuseum\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test321"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Stadt|\n|---|\n|New York|\n|New York|\n|Athen|\n|Paris|\n|New York|\n|London|\n|London|\n|St Louis|\n|Petersburg|\n|Madrid|\n|Paris|\n|Los Angeles|\n|London|\n|New York|\n|London|\n|New York|\n|Saint Petersburg|\n|Washington D.C.|\n|London|\n|New York|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBook\nCompany\nContinent\nCurrency\nFilm\nGenre\nLake\nMammal\nMayor\nMonarch\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test322"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|State|\n|---|\n|New York|\n|Ohio|\n|Texas|\n|Pennsylvania|\n|Arkansas|\n|Illinois|\n|Texas|\n|New York|\n|Maryland|\n|Pennsylvania|\n|Florida|\n|Alabama|\n|Texas|\n|Massachusetts|\n|Maine|\n|Pennsylvania|\n|New York|\n|California|\n|Pennsylvania|\n|Virginia|\n|Ohio|\n|Massachusetts|\n|South Carolina|\n|Ohio|\n|New York|\n|D.C.|\n|Michigan|\n|New Hampshire|\n|New York|\n|Texas|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nFilm\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMountainRange\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nSaint\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test323"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|State, Province, Territory, Country, etc|\n|---|\n|Vatican City|\n|Monaco|\n|Nauru|\n|Tuvalu|\n|San Marino|\n|Liechtenstein|\n|Washington DC|\n|Marshall Islands|\n|American Samoa|\n|St Kitts and Nevis|\n|Maldives|\n|Malta|\n|Grenada|\n|US Virgin Islands|\n|St Vincent and the Grenadines|\n|Barbados|\n|Antigua and Barbuda|\n|Seychelles|\n|Andorra|\n|Northern Marianas|\n|Guam|\n|St Lucia|\n|Bahrain|\n|Singapore|\n|Micronesia|\n|Tonga|\n|Dominica|\n|Kiribati|\n|Sao Tome and Principe|\n|Comoros|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBook\nCompany\nContinent\nGenre\nGovernmentType\nHospital\nLake\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"AdministrativeRegion\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test324"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|State\/Province|\n|---|\n|Alabama|\n|Alabama|\n|Alabama|\n|Alberta|\n|Arizona|\n|Arizona|\n|Arizona|\n|Arizona|\n|Arizona|\n|Arkansas|\n|Arkansas|\n|Arkansas|\n|Arkansas|\n|Arkansas|\n|Arkansas|\n|Arkansas|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|California|\n|Colorado|\n|Colorado|\n|Colorado|\n|Colorado|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBaseballPlayer\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nGovernmentType\nHospital\nLake\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMuseum\nPlant\nPoliticalParty\nRadioStation\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test325"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Storage|\n|---|\n|Atkinson Dam|\n|Bill Gunn Dam|\n|Bjelke Petersen Dam|\n|Burdekin Falls Dam|\n|Burnett Barrage|\n|Callide Dam|\n|Cedar Pocket Dam|\n|Coolmunda Dam|\n|Eungella Dam|\n|Fairbairn Dam|\n|Fred Haigh Dam|\n|Glenlyon Dam|\n|Kinchant Dam|\n|Kolan River Barrage|\n|Leslie Dam|\n|Maroon Dam|\n|Moogerah Dam|\n|Peter Faust Dam|\n|Tinaroo Falls Dam|\n|Wivenhoe Dam|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Lake\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test326"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Summit|\n|---|\n|Allt Lwyd|\n|Allt-fawr|\n|Aran Benllyn|\n|Aran Fawddwy|\n|Arenig Fach|\n|Arenig Fawr|\n|Arenig Fawr South Ridge Top|\n|Arenig Fawr South Top|\n|Bache Hill|\n|Bera Bach|\n|Bera Mawr|\n|Black Mixen|\n|Black Mountain|\n|Black Mountain South Top|\n|Bwlch y Ddwyallt|\n|Cadair Berwyn|\n|Cadair Berwyn New Top|\n|Cadair Bronwen|\n|Cadair Bronwen East Top|\n|Cadair Idris|\n|Carnedd Dafydd|\n|Carnedd Llechwedd-llyfn|\n|Carnedd Llewelyn|\n|Carnedd y Ddelw|\n|Carnedd y Filiast (Arenigs)|\n|Carnedd y Filiast (Glyders)|\n|Carnedd y Filiast North Top|\n|Castell y Gwynt|\n|Cefn Gwyntog|\n|Cefn yr Ystrad|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nGenre\nLake\nMammal\nMonarch\nMountain\nMovieDirector\nPlant\nPoliticalParty\nRadioStation\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mountain\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test327"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Summit|\n|---|\n|Buck Mountain|\n|Cumberland Knob|\n|Fisher Peak|\n|Fulcher Mountain|\n|Fulcher Mountain|\n|Lens Knob|\n|Long Branch Mountain|\n|Pilot Mountain|\n|Racoon Mountain|\n|Raven Knob|\n|Round Peak|\n|Saddle Mountain|\n|Skull Camp Mountain|\n|Slate Mountain|\n|Slate Mountain|\n|Stott Knob|\n|Turner Mountain|\n|Warrior Mountain|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBaseballPlayer\nBird\nBook\nCompany\nContinent\nCountry\nCurrency\nHospital\nLake\nMammal\nMountain\nMovieDirector\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Mountain\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test328"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Supervisor|\n|---|\n|Anthony To-Ming Lau|\n|Edmond E. Granirer|\n|Harry Kesten|\n|Mark Kac|\n|Hugo Steinhaus|\n|David Hilbert|\n|C. L. Ferdinand Lindemann|\n|C. Felix Klein|\n|Julius Pl?cker and Rudolf Lipschitz|\n|Christian Gerling|\n|Carl Friedrich Gauss|\n|Johann Friedrich Pfaff|\n|Abraham Gotthelf Kaestner|\n|Christian August Hausen|\n|Christian Andreas Siber|\n|unknown|\n|Gustav Dirichlet and Martin Ohm|\n|Simeon Poisson and Jean-Baptiste Fourier|\n|Joseph Lagrange|\n|Joseph Louis Lagrange|\n|Leonhard Euler|\n|Johann Bernoulli|\n|Jacob Bernoulli|\n|unknown|\n|Karl Christian von Langsdorf|\n|unknown|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nPlant\nPoliticalParty\nRadioStation\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Scientist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test329"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Call Letters|\n|---|\n|KABC (Talk Radio)|\n|KALI AM (simulcast of KBLA)|\n|KAVL (Fox Sports 610)|\n|KAHZ (simulcast of KAZN)|\n|KAZN (Asian Radio)|\n|KBLA (Radio Zion)|\n|KBRT (K-Brite)|\n|KDIS (Radio Disney)|\n|KEZY (Nueva Vida)|\n|KFI (More Stimulating Talk Radio)|\n|KFOX (Radio Seoul)|\n|KFRN (Family Radio)|\n|KFWB (News 98)|\n|KGIL (Retro 1260)|\n|KHJ (La Ranchera)|\n|KIRN (Radio Iran)|\n|KLAA (AM 830)|\n|KLAC (AM 570 Sports)|\n|KLTX (Nueva Vida)|\n|KMPC (Radio Korea)|\n|KMRB|\n|KNX (News Radio)|\n|KRLA (News Talk)|\n|KSDO (Nueva Vida)|\n|KSPA (Talk from the Spa)|\n|KSPN (710 ESPN)|\n|KTNQ (1020 Radio AM)|\n|KTPI (Magic 1340 AM)|\n|KTYM|\n|KUTY (La Mera Mera 1470)|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nScientist\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test33"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Tameside General Hospital|\n|---|\n|Stoke Mandeville Hospital|\n|Horton General Hospital|\n|Barnet General Hospital|\n|North Devon District Hospital|\n|Clatterbridge Hospital|\n|Bedford Hospital|\n|Bishop Auckland General Hospital|\n|Pilgrim Hospital|\n|Wycombe General Hospital|\n|Burnley General Hospital|\n|West Suffolk Hospital NHS Trust|\n|Addenbrookes Hospital|\n|Kent & Canterbury Hospital|\n|Cheltenham General Hospital|\n|St Richard's Hospital|\n|Essex County Hospital|\n|Royal United Hospital (North)|\n|Castle Hill Hospital|\n|Leighton Hospital|\n|Darlington Memorial Hospital|\n|Trafford General Hospital|\n|Derby City General Hospital|\n|Derriford Hospital|\n|Doncaster Royal Infirmary|\n|Dorset County Hospital|\n|Royal Bournemouth Hospital|\n|Eastbourne District General Hospital|\n|Chase Farm Hospital|\n|St Margarets Hospital|\n|Epsom General Hospital|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBird\nBook\nBuilding\nCity\nContinent\nCountry\nFilm\nGenre\nGovernmentType\nLake\nLanguage\nMountain\nMountainRange\nMovieDirector\nPoliticalParty\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test330"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Team|\n|---|\n|Cardinals|\n|Yankees|\n|Team|\n|Reds|\n|Giants|\n|Yankees|\n|Giants|\n|Team|\n|Yankees|\n|Pirates|\n|Indians|\n|Team|\n|Phillies|\n|Cardinals|\n|Braves|\n|Astros|\n|Braves|\n|Yankees|\n|Team|\n|Indians|\n|Giants|\n|Orioles|\n|Pirates|\n|Dodgers|\n|Dodgers|\n|Dodgers|\n|Yankees|\n|Yankees|\n|Pirates|\n|Mets|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nGovernmentType\nMayor\nMonarch\nMountain\nMountainRange\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"SportsTeam\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test331"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Titel|\n|---|\n|Super Mario Bros. 3|\n|Super Smash Bros.|\n|Super Smash Bros. Melee|\n|The Legend Of Zelda: Twilight Princess|\n|New Super Mario Bros. Wii|\n|Mafia|\n|The Legend Of Zelda - Link's Awakening|\n|Super Smash Bros. Brawl|\n|The Secret Of Monkey Island|\n|Worms Armageddon|\n|The Legend Of Zelda - A Link To The Past|\n|The Elder Scrolls III: Morrowind|\n|Golden Sun|\n|The Legend of Zelda: A Link to the Past|\n|Super Mario Galaxy 2|\n|Wii Fit|\n|Paper Mario 2|\n|Donkey Kong Land 2|\n|Crash Team Racing|\n|FIFA 09|\n|Pro Evolution Soccer 6|\n|Super Mario All-Stars + Super Mario World|\n|Final Fantasy VII|\n|Command & Conquer: Der Tiberiumkonflikt|\n|Monkey Island 2: LeChuck's Revenge|\n|Speedball II: Brutal Deluxe|\n|Wario Land 2|\n|Banjo-Tooie|\n|Pok?mon Stadium 2|\n|GoldenEye 007|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nBaseballPlayer\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGovernmentType\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"VideoGame\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test332"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Big Momma's House|\n|Pi|\n|Fight Club|\n|Keeping The Faith|\n|Royal Tenenbaums|\n|Matrix|\n|Berkeley In The Sixties|\n|State And Main|\n|There's Something About Mary|\n|Down To Earth|\n|Proof Of Life|\n|Unbreakable|\n|Family Man|\n|Count Of Monte Cristo|\n|Orange County|\n|Pay It Forward|\n|Rushmore|\n|Black Hawk Down|\n|Lord Of The Rings: The Fellowship Of The Ring|\n|Taxi Driver|\n|Deuce Bigelow Male Jigilo|\n|My First Mister|\n|Karate Kid|\n|Faculty|\n|French Exit|\n|Super Troopers|\n|What's The Worst That Could Happen?|\n|Austin Powers: International Man Of Mystery|\n|Das Boot|\n|Super Troopers|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBaseballPlayer\nBook\nBuilding\nCompany\nCountry\nCurrency\nGenre\nGovernmentType\nHospital\nLanguage\nMammal\nMonarch\nMountain\nMountainRange\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test333"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|10 Things I Hate About You|\n|12 Angry Men|\n|2 Fast 2 Furious|\n|2001: A Space Odyssey|\n|2008 NHL Winter Classic|\n|3 Ninjas|\n|7 Television Commercials|\n|Across the Universe|\n|Amadeus|\n|American Beauty|\n|American History X|\n|Apollo 13|\n|Aristocrats|\n|The|\n|Batman Begins|\n|Batman the Movie|\n|Be Kind Rewind|\n|Big Daddy|\n|Big Fish|\n|Big Lebowski|\n|The|\n|Billy Madison|\n|Birdcage|\n|The|\n|Black Hawk Down|\n|Blair Witch Project|\n|The|\n|Blazing Saddles|\n|Blood Diamond|\n|Blue Man Group Audio|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test334"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|11eyes CrossOver|\n|50 Cent: Blood on the Sand|\n|A-Train HX|\n|Absolute: Blazing Infinity|\n|Adrenalin Misfits|\n|Akatsuki no Amaneka to Aoi Kyojin|\n|Alan Wake|\n|Alice: Madness Returns|\n|Alone in the Dark|\n|Apache: Air Assault|\n|Apocalypse: Desire Next|\n|Armored Core 4|\n|Armored Core: For Answer|\n|Army of Two|\n|Army of Two: The 40th Day|\n|Ashes Cricket 2009|\n|Assassin's Creed|\n|Assassin's Creed II|\n|Assassin's Creed: Brotherhood|\n|Avatar: The Last Airbender ? The Burning Earth|\n|Backbreaker|\n|Backyard Sports: Rookie Rush|\n|Backyard Sports: Sandlot Sluggers|\n|Baja: Edge of Control|\n|Bakugan|\n|Banjo-Kazooie: Nuts & Bolts|\n|Batman: Arkham Asylum|\n|Battle Fantasia|\n|Battlefield: Bad Company|\n|Battlefield: Bad Company 2|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMountain\nMountainRange\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"VideoGame\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test335"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|12 Angry Men|\n|2001: A Space Odyssey|\n|The 39 Steps|\n|The 400 Blows|\n|8 1\/2|\n|Adaptation.|\n|The Adventures of Robin Hood|\n|The African Queen|\n|Aguirre: The Wrath of God|\n|Airplane!|\n|Akira|\n|Aladdin|\n|Alien|\n|Aliens|\n|All about Eve|\n|All Quiet on the Western Front|\n|All the President's Men|\n|Almost Famous|\n|Amadeus|\n|Amarcord|\n|Am?lie|\n|American Beauty|\n|American Graffiti|\n|American History X|\n|Amores perros|\n|Andrei Rublev|\n|Animal House|\n|Annie Hall|\n|The Apartment|\n|Apocalypse Now|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nHospital\nLake\nLanguage\nMammal\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test336"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|127 Hours|\n|28 Days Later|\n|28 Weeks Later|\n|The 39 Steps|\n|3:10 to Yuma|\n|Adaptation|\n|Air Force One|\n|Alice in Wonderland|\n|Along Came Polly|\n|American Beauty|\n|American Gangster|\n|American Pie|\n|American Pie 2|\n|American Psycho|\n|Anchorman: The Legend of Ron Burgundy|\n|Andersonville|\n|Angels & Demons|\n|Annie Hall|\n|Apocalypse Now Redux|\n|The Aristocrats|\n|Armageddon|\n|Army of Darkness|\n|Army of Shadows|\n|Artificial Intelligence: AI|\n|The Artist|\n|The Assassination of Jesse James by the Coward Robert Ford|\n|Atomic Train|\n|Atonement|\n|Avatar|\n|The Aviator|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nHospital\nLake\nMammal\nMayor\nMountain\nMuseum\nPoliticalParty\nRadioStation\nSaint\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test337"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|2001: A Space Odyssey|\n|The Wizard of Oz|\n|Star Wars|\n|Lawrence of Arabia|\n|E.T. the Extra-Terrestrial|\n|The Searchers|\n|Raiders of the Lost Ark|\n|North by Northwest|\n|The Seven Samurai|\n|The Matrix|\n|The Empire Strikes Back|\n|King Kong|\n|The Bridge on the River Kwai|\n|The Lord of the Rings: The Fellowship of the Ring|\n|Titanic|\n|Toy Story|\n|Back to the Future|\n|The Treasure of the Sierra Madre|\n|The Lord of the Rings: The Return of the King|\n|The Gold Rush|\n|Gladiator|\n|Butch Cassidy and the Sundance Kid|\n|The African Queen|\n|The Lord of the Rings: The Two Towers|\n|Sullivan's Travels|\n|The Princess Bride|\n|Monty Python and the Holy Grail|\n|Ben-Hur|\n|Jurassic Park|\n|The Adventures of Robin Hood|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nHospital\nLake\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test338"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Adventures of Huckleberry Finn|\n|The Adventures of Super Diaper Baby|\n|The Adventures of Tom Sawyer|\n|Alice series|\n|All the King's Men|\n|Always Running|\n|American Psycho|\n|An American Tragedy|\n|The Anarchist Cookbook|\n|Anastasia Again!|\n|And Tango Makes Three|\n|Angus|\n|Thongs and Full-Frontal Snogging|\n|Annie on My Mind|\n|Are You There God? It's Me|\n|Margaret|\n|Arming America|\n|Arizona Kid|\n|As I Lay Dying|\n|Asking About Sex and Growing Up|\n|Athletic Shorts|\n|Beloved|\n|Black Boy|\n|Bless Me|\n|Ultima|\n|Blood and Chocolate|\n|Blubber|\n|The Bluest Eye|\n|The Boy Who Lost His Face|\n|Boys and Sex|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBook\nBuilding\nCompany\nCountry\nCurrency\nFilm\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMuseum\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test339"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Call letters|\n|---|\n|KNBR|\n|KNBR|\n|KSAN|\n|KTHU|\n|KATA|\n|KNCO|\n|KEZK|\n|KMFB|\n|KESP|\n|KPRL|\n|KJFK|\n|KCTC|\n|KKJL|\n|KION|\n|KUIK|\n|KJDX|\n|KPUA|\n|KRKC|\n|KBLF|\n|KFIG|\n|KKXS|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBaseballPlayer\nBird\nBook\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nLake\nMammal\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"RadioStation\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test34"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Cabaret|\n|The Cabinet of Dr. Caligari|\n|Caddyshack|\n|Carlito's Way|\n|Carrie|\n|Casablanca|\n|Casino|\n|Cast Away|\n|Charade|\n|Chariots of Fire|\n|Chasing Amy|\n|Chicago|\n|Children of Paradise|\n|Chinatown|\n|A Christmas Story|\n|Chungking Express|\n|Cinema Paradiso|\n|Citizen Kane|\n|City Lights|\n|City of God|\n|Clerks.|\n|A Clockwork Orange|\n|Close Encounters of the Third Kind|\n|The Color Purple|\n|Contact|\n|Contempt|\n|The Conversation|\n|Cool Hand Luke|\n|Cries and Whispers|\n|Crimes and Misdemeanors|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCountry\nGenre\nGovernmentType\nHospital\nMayor\nMonarch\nMountain\nMovieDirector\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test340"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Donkey Kong Country|\n|F-Zero|\n|SimCity|\n|Super Castlevania IV|\n|Street Fighter II: The World Warrior|\n|Super Probotector: Alien Rebels|\n|Super Mario World|\n|R-Type III: The Third Lightning|\n|Super Ghouls'n Ghosts|\n|The Legend of Zelda: A Link to the Past|\n|The Legend of the Mystical Ninja|\n|ActRaiser|\n|Final Fight|\n|Donkey Kong Country 2: Diddy's Kong Quest|\n|Kirby's Dream Course|\n|Street Fighter II' Turbo: Hyper Fighting|\n|Kirby's Ghost Trap|\n|Breath of Fire II|\n|Vegas Stakes|\n|Mario's Super Picross (900 Wii Points)|\n|Gradius III (900 Wii Points)|\n|Axelay|\n|Super Metroid|\n|Cybernator|\n|Donkey Kong Country 3: Dixie Kong's Double Trouble!|\n|Harvest Moon|\n|Super Street Fighter II: The New Challengers|\n|Super Turrican|\n|Super R-Type|\n|Pac-Attack|\n\n**Candidate column type:**\nAirport\nBaseballPlayer\nBird\nBuilding\nCountry\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"VideoGame\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test341"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Gotcha|\n|Death Race|\n|Custer's Revenge|\n|177|\n|J.B. Harold Murder Club|\n|Mortal Kombat series|\n|Night Trap|\n|Doom|\n|SimCopter|\n|Duke Nukem 3D|\n|Tomb Raider|\n|Carmageddon|\n|Postal|\n|Grand Theft Auto series|\n|Kingpin: Life of Crime|\n|Ethnic Cleansing|\n|State of Emergency|\n|Postal II|\n|Manhunt and Manhunt 2|\n|Dead or Alive Xtreme Beach Volleyball|\n|The Sims 2|\n|Grand Theft Auto: San Andreas|\n|Super Columbine Massacre RPG!|\n|Bully|\n|The Elder Scrolls IV: Oblivion|\n|Hitman: Blood Money|\n|Mind Quiz|\n|Left Behind: Eternal Forces|\n|Resistance: Fall of Man|\n|RapeLay|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLanguage\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"VideoGame\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test342"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|M|\n|M*A*S*H|\n|The Magnificent Ambersons|\n|The Magnificent Seven|\n|Magnolia|\n|Malcolm X|\n|The Maltese Falcon|\n|The Man Who Shot Liberty Valance|\n|The Manchurian Candidate|\n|Manhattan|\n|Mary Poppins|\n|The Matrix|\n|McCabe & Mrs. Miller|\n|Mean Streets|\n|Memento|\n|Men in Black|\n|Metropolis|\n|Midnight Cowboy|\n|Miller's Crossing|\n|Minority Report|\n|The Mirror|\n|Misery|\n|Modern Times|\n|Monsters|\n|Inc.|\n|Monty Python and the Holy Grail|\n|Moulin Rouge!|\n|Mr. Smith Goes to Washington|\n|Mulholland Dr.|\n|Mutiny on the Bounty|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBird\nBook\nBuilding\nCity\nGenre\nGovernmentType\nHospital\nMayor\nMonarch\nMountain\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test343"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|STAR TREK ONLINE|\n|FOOTBALL MANAGER 2010|\n|MASS EFFECT 2|\n|S.T.A.L.K.E.R. CALL OF PRIPYAT|\n|THE SIMS 3|\n|THE SIMS 3: WORLD ADVENTURES|\n|CALL OF DUTY: MODERN WARFARE 2|\n|WORLD OF WARCRAFT: WRATH OF LICH KING|\n|DRAGON AGE: ORIGINS|\n|EMPIRE: TOTAL WAR|\n|BATMAN: ARKHAM ASYLUM|\n|FALLOUT 3: GAME OF THE YEAR EDITION|\n|GRAND THEFT AUTO IV|\n|LEFT 4 DEAD 2|\n|BORDERLANDS|\n|SPORE|\n|MICROSOFT FLIGHT SIMULATOR X GOLD|\n|JAMES CAMERON'S AVATAR: THE GAME|\n|BLOOD BOWL|\n|WARHAMMER 40|\n|000: DAWN OF WAR II|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCountry\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMovieDirector\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test344"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Saving Private Ryan|\n|Say Anything?|\n|Scarface|\n|Scent of a Woman|\n|Schindler's List|\n|Scream|\n|The Searchers|\n|Sense and Sensibility|\n|Seven|\n|The Seven Samurai|\n|The Seventh Seal|\n|Shadow of a Doubt|\n|Shakespeare in Love|\n|Shane|\n|The Shawshank Redemption|\n|Sherlock|\n|Jr.|\n|The Shining|\n|Short Cuts|\n|Shrek|\n|Signs|\n|The Silence of the Lambs|\n|A Simple Plan|\n|Sin City|\n|Singin' in the Rain|\n|The Sixth Sense|\n|Sleeper|\n|Sleepy Hollow|\n|Sling Blade|\n|Snatch.|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nGovernmentType\nLake\nLanguage\nMammal\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test345"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Singin' in the Rain|\n|Some Like It Hot|\n|Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb|\n|Annie Hall|\n|The Graduate|\n|The General|\n|Bringing Up Baby|\n|Duck Soup|\n|Toy Story|\n|City Lights|\n|It Happened One Night|\n|The Rules of the Game|\n|His Girl Friday|\n|This Is Spinal Tap|\n|Forrest Gump|\n|The Gold Rush|\n|Modern Times|\n|The Philadelphia Story|\n|Sullivan's Travels|\n|The Apartment|\n|M*A*S*H|\n|Groundhog Day|\n|The Princess Bride|\n|Monty Python and the Holy Grail|\n|La Dolce Vita|\n|Manhattan|\n|The Lady Eve|\n|Life of Brian|\n|A Hard Day's Night|\n|When Harry Met Sally?|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nHospital\nLake\nMammal\nMayor\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test346"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Sonic Chronicles: The Dark Brotherhood|\n|Mario Kart DS|\n|Castlevania: Dawn of Sorrow|\n|Advance Wars: Dual Strike|\n|Kirby Super Star Ultra|\n|Osu! Tatakae! Ouendan!|\n|New Super Mario Bros.|\n|Bomberman Land Touch!|\n|Meteos|\n|Picross DS|\n|Mario & Luigi: Partners in Time|\n|Kirby: Canvas Curse|\n|Metroid Prime: Hunters|\n|Pokemon Pearl|\n|Pokemon Diamond|\n|Elite Beat Agents|\n|Animal Crossing: Wild World|\n|Spectrobes: Beyond the Portals|\n|Nintendogs: Chihuahua and Friends|\n|Tetris DS|\n|Nintendogs: Labrador and Friends|\n|Nintendogs: Dachshund and Friends|\n|Clubhouse Games|\n|Shin Megami Tensei: Devil Survivor|\n|Age of Empires: Age of Kings|\n|Dragon Quest Heroes: Rocket Slime|\n|Tony Hawk's American Sk8land|\n|Mario vs. Donkey Kong: Minis March Again!|\n|Asphalt Urban GT|\n|Trauma Center: Under the Knife|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nCity\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nMammal\nMayor\nMonarch\nMountain\nMovieDirector\nMuseum\nNewspaper\nPoliticalParty\nSaint\nSportsTeam\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"VideoGame\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test347"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Super Mario 64|\n|Mario Kart 64|\n|Legend of Zelda: Ocarina of TimeThe Legend of Zelda: Ocarina of Time|\n|Star Fox 64|\n|F-Zero X|\n|Paper Mario|\n|Wave Race 64|\n|Yoshi's Story|\n|Sin and Punishment|\n|Pok?mon Snap|\n|1080? Snowboarding|\n|Kirby 64: The Crystal Shards|\n|Cruis'n USA|\n|Pok?mon Puzzle League|\n|Mario Golf|\n|Legend of Zelda: Majora's MaskThe Legend of Zelda: Majora's Mask|\n|Super Smash Bros.|\n|Ogre Battle 64: Person of Lordly Caliber|\n|Mario Tennis|\n|Mario Party 2|\n|Bomberman Hero|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBird\nBook\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nLake\nMammal\nMayor\nMonarch\nMuseum\nNewspaper\nRadioStation\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"VideoGame\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test348"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|Super Smash Bros. Melee|\n|Pikmin 2|\n|Legend of Zelda: Collector's Edition|\n|Legend of Zelda: The Wind Waker|\n|Metal Gear Solid: Twin Snakes|\n|Mario Party 7|\n|The Legend of Zelda: Twilight Princess|\n|Mario Kart: Double Dash|\n|Wario World|\n|Super Mario Sunshine|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBuilding\nFilm\nGenre\nGovernmentType\nLake\nLanguage\nMammal\nMayor\nMountain\nMovieDirector\nNewspaper\nPlant\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"VideoGame\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test349"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Capital City|\n|---|\n|Jamestown|\n|Basseterre|\n|Castries|\n|Saint-Pierre|\n|Kingstown|\n|Apia|\n|San Marino|\n|Sao Tome|\n|Riyadh|\n|Dakar|\n|Belgrade|\n|Victoria|\n|Freetown|\n|Singapore|\n|Bratislava|\n|Ljubljana|\n|Honiara|\n|Mogadishu|\n|Pretoria|\n|none; Grytviken on South Georgia is the garrison town|\n|Seoul|\n|Madrid|\n|Colombo|\n|Khartoum|\n|Paramaribo|\n|Longyearbyen|\n|Mbabane; note - Lobamba is the royal and legislative capital|\n|Stockholm|\n|Bern|\n|Damascus|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nCity\nContinent\nFilm\nGenre\nGovernmentType\nLake\nMayor\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nPoliticalParty\nSaint\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test35"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|The Game|\n|Gandhi|\n|Gattaca|\n|The General|\n|Ghost|\n|Ghost World|\n|Ghostbusters|\n|Gladiator|\n|Glengarry Glen Ross|\n|Glory|\n|The Godfather|\n|The Godfather: Part II|\n|The Godfather: Part III|\n|The Gold Rush|\n|Goldfinger|\n|Gone with the Wind|\n|Good Will Hunting|\n|The Good|\n|the Bad and the Ugly|\n|Goodfellas|\n|The Goonies|\n|The Graduate|\n|The Grand Illusion|\n|The Grapes of Wrath|\n|Grave of the Fireflies|\n|Grease|\n|The Great Dictator|\n|The Great Escape|\n|Greed|\n|The Green Mile|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nBaseballPlayer\nBird\nBuilding\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nLake\nMammal\nMayor\nMonarch\nMovieDirector\nMuseum\nNewspaper\nPlant\nRadioStation\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test350"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|The Godfather|\n|Citizen Kane|\n|Casablanca|\n|Lawrence of Arabia|\n|Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb|\n|Apocalypse Now|\n|The Godfather: Part II|\n|Pulp Fiction|\n|It's a Wonderful Life|\n|Gone with the Wind|\n|Raging Bull|\n|Taxi Driver|\n|Chinatown|\n|Blade Runner|\n|Schindler's List|\n|E.T. the Extra-Terrestrial|\n|Annie Hall|\n|Goodfellas|\n|The Searchers|\n|North by Northwest|\n|The Seven Samurai|\n|Sunset Blvd.|\n|One Flew over the Cuckoo's Nest|\n|A Clockwork Orange|\n|All about Eve|\n|The Graduate|\n|On the Waterfront|\n|The Shawshank Redemption|\n|Bonnie and Clyde|\n|Fargo|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPoliticalParty\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test351"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|The Godfather|\n|Pulp Fiction|\n|Citizen Kane|\n|The Godfather: Part II|\n|Star Wars|\n|Goodfellas|\n|Casablanca|\n|Taxi Driver|\n|2001: A Space Odyssey|\n|Apocalypse Now|\n|Schindler's List|\n|Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb|\n|The Shawshank Redemption|\n|Psycho|\n|The Empire Strikes Back|\n|Raiders of the Lost Ark|\n|The Silence of the Lambs|\n|One Flew over the Cuckoo's Nest|\n|A Clockwork Orange|\n|Jaws|\n|Rear Window|\n|Vertigo|\n|Chinatown|\n|Raging Bull|\n|American Beauty|\n|Fargo|\n|It's a Wonderful Life|\n|Saving Private Ryan|\n|The Usual Suspects|\n|Blade Runner|\n\n**Candidate column type:**\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test352"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|The Grand Illusion|\n|Eternal Sunshine of the Spotless Mind|\n|Cinema Paradiso|\n|American Graffiti|\n|Traffic|\n|His Girl Friday|\n|The Breakfast Club|\n|Aguirre: The Wrath of God|\n|Dead Poets Society|\n|Rosemary's Baby|\n|The Thin Red Line|\n|Blazing Saddles|\n|Wild Strawberries|\n|Deliverance|\n|Animal House|\n|The Gold Rush|\n|The Thing|\n|Toy Story 2|\n|Nosferatu|\n|The Lion King|\n|Apollo 13|\n|All the President's Men|\n|M*A*S*H|\n|Kill Bill: Vol. 2|\n|Miller's Crossing|\n|Eyes Wide Shut|\n|As Good as It Gets|\n|True Romance|\n|Night of the Living Dead|\n|Sunrise|\n\n**Candidate column type:**\nAirline\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nMammal\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Film\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test353"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|The Legend of Zelda: Twilight Princess|\n|Mario Party 7|\n|Paper Mario: The Thousand-Year Door|\n|Super Smash Bros. Melee|\n|Legend of Zelda: Collector's Edition|\n|Mario Kart: Double Dash|\n|Naruto: Clash of Ninja 2|\n|Super Mario Strikers|\n|Resident Evil 4 (2 disc game)|\n|Super Mario Sunshine|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBird\nBook\nCompany\nContinent\nCountry\nCurrency\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMonarch\nMountain\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test354"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|The Social Network|\n|Inception|\n|Alice in Wonderland|\n|Shutter Island|\n|How to Train Your Dragon|\n|Toy Story 3|\n|Avatar|\n|Harry Potter and the Half-Blood Prince|\n|Ice Age: Dawn of the Dinosaurs|\n|Transformers: Revenge of the Fallen|\n|The Hangover|\n|Up|\n|Inglourious Basterds|\n|District 9|\n|The Dark Knight|\n|WALL?E|\n|Gran Torino|\n|Slumdog Millionaire|\n|Pirates of the Caribbean: At World's End|\n|No Country for Old Men|\n|The Departed|\n|Casino Royale|\n|Pan's Labyrinth|\n|The Prestige|\n|The Lives of Others|\n|Sin City|\n|Batman Begins|\n|Downfall|\n|The Incredibles|\n|The Notebook|\n\n**Candidate column type:**\nAdministrativeRegion\nBaseballPlayer\nBook\nBuilding\nCompany\nContinent\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMovieDirector\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test355"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title|\n|---|\n|The Treasure of the Sierra Madre|\n|Groundhog Day|\n|The Seventh Seal|\n|Rash?mon|\n|Duck Soup|\n|City Lights|\n|Do the Right Thing|\n|Crouching Tiger|\n|Hidden Dragon|\n|Manhattan|\n|Ben-Hur|\n|M|\n|Twelve Monkeys|\n|Trainspotting|\n|Paths of Glory|\n|Requiem for a Dream|\n|The Apartment|\n|Network|\n|Rain Man|\n|This Is Spinal Tap|\n|Dances with Wolves|\n|Ran|\n|Mr. Smith Goes to Washington|\n|Mulholland Dr.|\n|The Bicycle Thief|\n|High Noon|\n|Metropolis|\n|The Great Escape|\n|Indiana Jones and the Last Crusade|\n|American History X|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBaseballPlayer\nBird\nCity\nCountry\nGovernmentType\nHospital\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test356"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title of Great Novel|\n|---|\n|Don Quixote|\n|War and Peace|\n|Ulysses|\n|In Search of Lost Time|\n|The Brothers Karamazov|\n|Moby-Dick|\n|Madame Bovary|\n|Middlemarch|\n|The Magic Mountain|\n|The Tale of Genji|\n|Emma|\n|Bleak House|\n|Anna Karenina|\n|Adventures of Huckleberry Finn|\n|Tom Jones|\n|Great Expectations|\n|Absalom|\n|Absalom!|\n|The Ambassadors|\n|One Hundred Years of Solitude|\n|The Great Gatsby|\n|To The Lighthouse|\n|Crime and Punishment|\n|The Sound and the Fury|\n|Vanity Fair|\n|Invisible Man|\n|Finnegans Wake|\n|The Man Without Qualities|\n|Gravity's Rainbow|\n|The Portrait of a Lady|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nHospital\nLake\nLanguage\nMammal\nMountain\nMovieDirector\nMuseum\nRadioStation\nSaint\nSportsTeam\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Book\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test357"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Title(s) [10][11][12][13]|\n|---|\n|1080? Snowboarding|\n|64 Hanafuda: Tenshi no Yakusoku|\n|64 ?zum?|\n|64 ?zum? 2|\n|64 Trump Collection: Alice no Waku Waku Trump World|\n|Aerofighters Assault ?Sonic Wings AssaultJP|\n|AeroGauge|\n|AI Shogi 3|\n|Aidyn Chronicles: The First Mage|\n|Air Boarder 64|\n|All-Star Baseball 99|\n|All-Star Baseball 2000|\n|All-Star Baseball 2001|\n|All Star Tennis '99 ?Yannick Noah All Star Tennis '99FRA|\n|Animal Crossing ?D?butsu no MoriJP|\n|Armorines: Project S.W.A.R.M.|\n|Army Men: Air Combat|\n|Army Men: Sarge's Heroes|\n|Army Men: Sarge's Heroes 2|\n|Asteroids Hyper 64|\n|Automobili Lamborghini ?Super Speed Race 64JP|\n|Bakuretsu Muteki Bangai-?|\n|Bakush? Jinsei 64: Mezase! Resort ?|\n|Banjo-Kazooie ?Banjo to Kazooie no DaibokenJP|\n|Banjo-Tooie ?Banjo to Kazooie no Daiboken 2JP|\n|Bass Hunter 64|\n|Bass Masters 2000|\n|Bass Rush: ECOGEAR PowerWorm Championship|\n|Batman Beyond: Return of the Joker ?Batman of the Future: Return of the JokerPAL|\n|BattleTanx|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBaseballPlayer\nBird\nBook\nContinent\nCountry\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test358"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|University Location|\n|---|\n|Abilene (TX)|\n|Garden City (NY)|\n|Albany (GA)|\n|Alcorn State (MS)|\n|Springfield (MA)|\n|Anderson (IN)|\n|Berrien Springs (MI)|\n|San Angelo (TX)|\n|Tempe (AZ)|\n|State University (AR)|\n|Savannah (GA)|\n|Ashland (OH)|\n|Auburn (AL)|\n|Montgomery (AL)|\n|Augusta (GA)|\n|Sioux Falls (SD)|\n|Aurora (IL)|\n|Clarksville (TN)|\n|Azusa (CA)|\n|Baldwin City (KS)|\n|Muncie (IN)|\n|Miami Shores (FL)|\n|Wilson (NC)|\n|Waco (TX)|\n|Louisville (KY)|\n|Nashville (TN)|\n|Saint Paul (MN)|\n|Binghamton (NY)|\n|La Mirada (CA)|\n|Quincy (IL)|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nCountry\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMayor\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test359"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Capital City|\n|---|\n|Libreville|\n|Banjul|\n|T'bilisi|\n|Berlin|\n|Accra|\n|Gibraltar|\n|none|\n|Athens|\n|Nuuk (Godthab)|\n|Saint George's|\n|Basse-Terre|\n|Hagatna (Agana)|\n|Guatemala|\n|Saint Peter Port|\n|Conakry|\n|Bissau|\n|Georgetown|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nHospital\nLake\nLanguage\nMayor\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test36"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|University Name|\n|---|\n|Abilene Christian University|\n|Adelphi University|\n|Albany State University|\n|Alcorn State University|\n|American International College|\n|Anderson University|\n|Andrews University|\n|Angelo State University|\n|Arizona State University|\n|Arkansas State University|\n|Armstrong Atlantic State University|\n|Ashland University|\n|Auburn University|\n|Auburn University - Montgomery|\n|Augusta State University|\n|Augustana College|\n|Aurora University|\n|Austin Peay State University|\n|Azusa Pacific University|\n|Baker University|\n|Ball State University|\n|Barry University|\n|Barton College|\n|Baylor University|\n|Bellarmine University|\n|Belmont University|\n|Bethel University|\n|Binghamton University|\n|Biola University|\n|Blessing-Rieman College of Nursing|\n\n**Candidate column type:**\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nContinent\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nMammal\nMonarch\nMountain\nMountainRange\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"University\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test360"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Vespasian|\n|---|\n|Titus|\n|Domitian|\n|Nerva|\n|Trajan|\n|Hadrian|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nBaseballPlayer\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMovieDirector\nMuseum\nNewspaper\nPoliticalParty\nSaint\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Monarch\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test361"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Ville|\n|---|\n|Vancouver|\n|Vancouver|\n|Vancouver|\n|Vancouver|\n|Vancouver|\n|Vancouver|\n|Vancouver|\n|Vancouver|\n|Vancouver|\n|Calgary|\n|Calgary|\n|Calgary|\n|Calgary|\n|Calgary|\n|Edmonton|\n|Edmonton|\n|Saskatoon|\n|Winnipeg|\n|Winnipeg|\n|London|\n|London|\n|London|\n|London|\n|Toronto|\n|Toronto|\n|Toronto|\n|Toronto|\n|Toronto|\n|Toronto|\n|Kingston|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test362"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Winner1|\n|---|\n|Wilhelm Conrad R?ntgen|\n|Hendrik A. Lorentz|\n|Henri Becquerel|\n|Lord Rayleigh|\n|Philipp Lenard|\n|J.J. Thomson|\n|Albert A. Michelson|\n|Gabriel Lippmann|\n|Guglielmo Marconi|\n|Johannes Diderik van der Waals|\n|Wilhelm Wien|\n|Gustaf Dal?n|\n|Heike Kamerlingh Onnes|\n|Max von Laue|\n|William Bragg|\n|nan|\n|Charles Glover Barkla|\n|Max Planck|\n|Johannes Stark|\n|Charles Edouard Guillaume|\n|Albert Einstein|\n|Niels Bohr|\n|Robert A. Millikan|\n|Manne Siegbahn|\n|James Franck|\n|Jean Baptiste Perrin|\n|Arthur H. Compton|\n|Owen Willans Richardson|\n|Louis de Broglie|\n|Venkata Raman|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBird\nBuilding\nCompany\nCountry\nGovernmentType\nHospital\nLake\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Scientist\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test363"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Wrestler|\n|---|\n|Akeem\/One Man Gang|\n|Andre The Giant|\n|Arn Anderson|\n|Bad News Brown|\n|Bam Bam Bigelow|\n|Barry Horowitz|\n|Bart Gunn|\n|Batista|\n|Big Daddy|\n|Big Show|\n|Bill Goldberg|\n|Billy Gunn|\n|Billy\/Benny McGuire|\n|BlackJack Bradshaw|\n|BlackJack Wyndham|\n|Bob Backlund|\n|Bob Holly|\n|Bret Hart|\n|Brian Christopher|\n|Brian Nobbs|\n|Brian Pillman|\n|British Bulldog|\n|Brock Lesnar|\n|Brooklyn Brawler|\n|Bruce|\n|Brutus Beefcake|\n|Buff Bagwell|\n|Bushwacker Butch|\n|Bushwacker Luke|\n|Chris Benoit|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nBaseballPlayer\nBird\nBuilding\nCity\nContinent\nCountry\nFilm\nGovernmentType\nLake\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Wrestler\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test364"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Writer|\n|---|\n|Karen McCullah Lutz|\n|Reginald Rose|\n|Michael Brandt|\n|Arthur C. Clarke|\n|nan|\n|Edward Emanuel|\n|Thom Yorke|\n|Dick Clement|\n|Peter Shaffer|\n|Alan Ball|\n|David McKenna|\n|William Broyles|\n|Jr.|\n|nan|\n|Christopher Nolan|\n|Lorenzo Semple|\n|Jr.|\n|Michel Gondry|\n|Steve Franks|\n|John August|\n|Ethan Coen|\n|Tim Herlihy|\n|Elaine May|\n|Ken Nolan|\n|Eduardo Sanchez|\n|Mel Brooks|\n|Charles Leavitt|\n|Blue Man Group|\n|Sacha Baron Cohen|\n|Tony Gilroy|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBird\nBuilding\nCity\nCompany\nContinent\nCurrency\nFilm\nGenre\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Writer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test365"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|country|\n|---|\n|Mauritius|\n|Mayotte (Fr.)|\n|Reunion (Fr.)|\n|Comoros|\n|Rwanda|\n|Burundi|\n|Seychelles|\n|S?o Tom? and Pr?ncipe|\n|Nigeria|\n|Gambia|\n|Uganda|\n|Cape Verde|\n|Togo|\n|Malawi|\n|Ghana|\n|Sierra Leone|\n|Lesotho|\n|Egypt|\n|Morocco (excluding Western Sahara)|\n|Swaziland|\n|Benin|\n|Ethiopia|\n|Tunisia|\n|Senegal|\n|Kenya|\n|C?te d'Ivoire|\n|Burkina Faso|\n|Tanzania|\n|Guinea-Bissau|\n|Eritrea|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBook\nCity\nContinent\nCountry\nFilm\nGenre\nGovernmentType\nHospital\nLanguage\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test366"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|r\u00f6mischer Kaiser|\n|---|\n|Augustus|\n|Tiberius|\n|Claudius|\n|Nero|\n|Domitian|\n|Trajan|\n|Hadrian|\n|Marc Aurel|\n|Commodus|\n|Caracalla|\n|Diokletian|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nCompany\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nSaint\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Monarch\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test367"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Capital City|\n|---|\n|Macau|\n|Skopje|\n|Antananarivo|\n|Lilongwe|\n|Kuala Lumpur|\n|Male|\n|Bamako|\n|Valletta|\n|Douglas|\n|Majuro|\n|Fort-de-France|\n|Nouakchott|\n|Port Louis|\n|Mamoutzou|\n|Mexico|\n|Palikir|\n|none; administered from Washington|\n|DC|\n|Chisinau|\n|Monaco|\n|Ulaanbaatar|\n|Podgorica|\n|Plymouth|\n|Rabat|\n|Maputo|\n|Rangoon (regime refers to the capital as Yangon)|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCurrency\nFilm\nGenre\nHospital\nLanguage\nMammal\nMountain\nMountainRange\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test37"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Capital City|\n|---|\n|Nassau|\n|Manama|\n|none|\n|Dhaka|\n|Bridgetown|\n|none|\n|Minsk|\n|Brussels|\n|Belmopan|\n|Porto-Novo (official capital) Cotonou (seat of government)|\n|Hamilton|\n|Thimphu|\n|La Paz (seat of government); Sucre (legal capital and seat of judiciary)|\n|Sarajevo|\n|Gaborone|\n|none|\n|Brasilia|\n|Road Town|\n|none|\n|Bandar Seri Begawan|\n|Sofia|\n|Ouagadougou|\n|Rangoon (regime refers to the capital as Yangon)|\n|Bujumbura|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGovernmentType\nHospital\nLake\nLanguage\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nPlant\nPoliticalParty\nSaint\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test38"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Capital City|\n|---|\n|Phnom Penh|\n|Yaounde|\n|Ottawa|\n|Praia|\n|George Town|\n|Bangui|\n|N'Djamena|\n|Santiago|\n|Beijing|\n|The Settlement|\n|none|\n|West Island|\n|Bogota|\n|Moroni|\n|Kinshasa|\n|Brazzaville|\n|Avarua|\n|none|\n|San Jose|\n|Yamoussoukro|\n|Zagreb|\n|Havana|\n|Nicosia|\n|Prague|\n\n**Candidate column type:**\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nCompany\nContinent\nCountry\nFilm\nGenre\nHospital\nLake\nLanguage\nMammal\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test39"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Fianna F\u00e1il|\n|Fine Gael|\n|Labour Party|\n|Progressive Democrats|\n|Green Party|\n|Sinn F\u00e9in|\n|Socialist Party|\n|Total|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"PoliticalParty\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test4"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Capital|\n|---|\n|Algiers|\n|Luanda|\n|Porto-Novo|\n|Gaborone|\n|Ouagadougou|\n|Bujumbuna|\n|Yaounde|\n|Praia|\n|Bangui|\n|N'Ojamena|\n|Moroni|\n|Kinshasa|\n|Brazaville|\n|Abidjan|\n|Djibouti|\n|Cairo|\n|Malabo|\n|Asmara|\n|Addis Ababa|\n|Libreville|\n|Benjul|\n|Accra|\n|Conakry|\n|Bissau|\n|Nairobi|\n|Maseru|\n|Monrovia|\n|Tripoli|\n|Antananarivo|\n|Lilongwe|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nBuilding\nCompany\nContinent\nFilm\nGenre\nHospital\nLanguage\nMammal\nMountain\nMountainRange\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test40"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Capital|\n|---|\n|Algiers|\n|Luanda|\n|Porto-Novo|\n|Gaborone|\n|Ouagadougou|\n|Bujumbura|\n|Yaounde|\n|Praia|\n|Bangui|\n|N'Djamena|\n|Moroni|\n|Brazzaville|\n|Kinshasa|\n|Djibouti|\n|Cairo|\n|Malabo|\n|Asmara|\n|Addis Ababa|\n|Libreville|\n|Banjul|\n|Accra|\n|Conakry|\n|Bissau|\n|Abidjan|\n|Nairobi|\n|Maseru|\n|Monrovia|\n|Tripoli|\n|Antananarivo|\n|Lilongwe|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nCity\nCountry\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test41"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Capital|\n|---|\n|Buenos Aires|\n|La Paz|\n|Brasilia|\n|Santiago|\n|Bogota|\n|Quito|\n|Stanley|\n|Cayenne|\n|Georgetown|\n|Asuncion|\n|Lima|\n|Grytviken|\n|Paramaribo|\n|Montevideo|\n|Caracas|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMonarch\nMountainRange\nMuseum\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test42"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Capital|\n|---|\n|Kabul|\n|Manama|\n|Dhaka|\n|Thimphu|\n|Diego Garcia|\n|Bandar Seri Begawan|\n|Rangoon|\n|Phnom Penh|\n|Beijing|\n|Dili|\n|New Delhi|\n|Jakarta|\n|Tehran|\n|Baghdad|\n|Tel Aviv|\n|Tokyo|\n|Amman|\n|Astana|\n|Kuwait City|\n|Bishtek|\n|Vientiane|\n|Beirut|\n|Kuala Lumpur|\n|Male|\n|Ulaan Baatar|\n|Kathmandu|\n|Pyongyang|\n|Muscat|\n|Islamabad|\n|Port Moresby|\n\n**Candidate column type:**\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nMonarch\nMountain\nMovieDirector\nNewspaper\nPlant\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test43"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Capital|\n|---|\n|Kabul|\n|Tirana|\n|Algiers|\n|Pago Pago|\n|Andorra La Vella|\n|Luanda|\n|The Valley|\n|St. John?s|\n|Antigua|\n|Buenos Aires|\n|BA|\n|Yerevan|\n|Oranjestad|\n|Canberra|\n|AC|\n|Vienna|\n|Baku|\n|Ponta Delgada|\n|Sao Miguel|\n|Nassau (Int?l)|\n|Manama|\n|Dhaka|\n|Bridgetown|\n|Minsk (Int?l 1)|\n|Brussels (National)|\n|Belmopan|\n|Porto Novo-Cotonou|\n|Hamilton|\n|Thimphu|\n|La Paz|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nCountry\nCurrency\nGenre\nGovernmentType\nLake\nLanguage\nMammal\nMonarch\nMountain\nMountainRange\nMuseum\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test44"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Capital|\n|---|\n|Kabul|\n|Tirana|\n|Algiers|\n|Pago Pago|\n|Andorra la Vella|\n|Luanda|\n|The Valley|\n|Saint John's|\n|Buenos Aires|\n|Yerevan|\n|Oranjestad|\n|Canberra|\n|Vienna|\n|Baku (Baki)|\n|Nassau|\n|Manama|\n|Dhaka|\n|Bridgetown|\n|Minsk|\n|Brussels|\n|Belmopan|\n|Porto-Novo ?|\n|Hamilton|\n|Thimphu|\n|La Paz \/ Sucre|\n|Sarajevo|\n|Gaborone|\n|Brasilia|\n|Road Town|\n|Bandar Seri Begawan|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nGenre\nGovernmentType\nLake\nMonarch\nMountain\nMovieDirector\nMuseum\nPoliticalParty\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test45"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Capital|\n|---|\n|Kabul|\n|Tirana|\n|Algiers|\n|Pago Pago|\n|Andorra la Vella|\n|Luanda|\n|The Valley|\n|Saint John's|\n|Buenos Aires|\n|Yerevan|\n|Oranjestad|\n|Canberra|\n|Vienna|\n|Baku|\n|Nassau|\n|Manama|\n|Dhaka|\n|Bridgetown|\n|Minsk|\n|Brussels|\n|Belmopan|\n|Porto-Novo|\n|Hamilton|\n|Thimphu|\n|Sucre|\n|Sarajevo|\n|Gaborone|\n|Brasilia|\n|Road Town|\n|Bandar Seri Begawan|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBaseballPlayer\nBuilding\nCity\nCompany\nContinent\nCurrency\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMountain\nMountainRange\nMuseum\nNewspaper\nPoliticalParty\nSaint\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test46"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Capital|\n|---|\n|Kabul|\n|Tirane|\n|Algiers|\n|Pago Pago|\n|Andorra la Vella|\n|Luanda|\n|W. Indies|\n|Buenos Aires|\n|Yerevan|\n|Oranjestad|\n|Canberra|\n|Vienna|\n|Baku|\n|Nassau|\n|Manama|\n|Dhaka|\n|Bridgetown|\n|Minsk|\n|Brussels|\n|Belmopan|\n|Porto-Novo (constitutional cotonou (seat of gvnt)|\n|Thimphu|\n|La Paz (adm.)\/sucre (legislative)|\n|Sarajevo|\n|Gaborone|\n|Brasilia|\n|Road Town|\n|Bandar Seri Begawan|\n|Sofia|\n|Ouagadougou|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test47"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Capital|\n|---|\n|London|\n|Dublin|\n|Paris|\n|Berlin|\n|Madrid|\n|Rome|\n|Vatican City|\n|Amsterdam|\n|Brussels|\n|Bern|\n|Vienna|\n|Athens|\n|Monte Carlo|\n|Oslo|\n|Stockholm|\n|Copenhagen|\n|Helsinki|\n|Warsaw|\n|Minsk|\n|Prague|\n|Moscow|\n|Bratislava|\n|Istanbul|\n|Cairo|\n|Tirana|\n|Skopje|\n|Belgrade|\n|Sofia|\n|Sarajevo|\n|Zagreb|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBird\nBuilding\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMovieDirector\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test48"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Capital|\n|---|\n|Mariehamn|\n|Tirane|\n|Andorra La Vella|\n|Yerevan|\n|Vienna|\n|Baku|\n|Minsk|\n|Brussels|\n|Sarajevo|\n|Sofia|\n|Zagreb|\n|Nicosia|\n|Prague|\n|Copenhagan|\n|Tallinn|\n|Torshavn|\n|Helsinki|\n|Paris|\n|Tbilisi|\n|Berlin|\n|Gibraltar|\n|Athens|\n|Nuuk|\n|St Peter Port|\n|Budapest|\n|Reykjavik|\n|Dublin|\n|Douglas|\n|Rome|\n|St Helier|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCurrency\nGenre\nGovernmentType\nHospital\nLake\nMammal\nMayor\nMonarch\nMountainRange\nMovieDirector\nMuseum\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test49"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Fianna F\u00e1il|\n|Fine Gael|\n|Labour Party|\n|Progressive Democrats|\n|Green Party|\n|Sinn F\u00e9in|\n|Socialist Party|\n|Total 1|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBird\nBook\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nLake\nLanguage\nMammal\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"PoliticalParty\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test5"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Capital|\n|---|\n|The Valley|\n|Saint John's|\n|Oranjestad|\n|Nassau|\n|Bridgetown|\n|Belmopan|\n|Hamilton|\n|Road Town|\n|Ottawa|\n|Georgetown|\n|San Jose|\n|Havana|\n|Roseau|\n|Santo Domingo|\n|San Salvador|\n|Saint George's|\n|Basse-Terre|\n|Guatemala City|\n|Port-au-Prince|\n|Tegucigalpa|\n|Kingston|\n|Port-de-France|\n|Mexico City|\n|Plymouth|\n|Willemstad|\n|Mangua|\n|Panama City|\n|San Juan|\n|Basseterre|\n|Castries|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nGenre\nGovernmentType\nHospital\nMammal\nMayor\nMonarch\nMountainRange\nMovieDirector\nNewspaper\nPoliticalParty\nSaint\nScientist\nSportsTeam\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test50"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Capitale|\n|---|\n|Kabul|\n|Pretoria|\n|Tirane|\n|Algiers|\n|Berlin|\n|Andorra la Vella|\n|London|\n|Luanda|\n|Saint John's|\n|Riyadh|\n|Buenos Aires|\n|Yerevan|\n|Vienna|\n|Baku|\n|Capitale|\n|Nassau|\n|Manama|\n|Dhaka|\n|Bridgetown|\n|Minsk|\n|Bruxelles|\n|Belmopan|\n|Porto-Novo|\n|Hamilton|\n|Thimphu|\n|Rangoon|\n|La Paz et Sucre|\n|Sarajevo|\n|Gaborone|\n|Basilia|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGovernmentType\nHospital\nLanguage\nMammal\nMountain\nMountainRange\nMovieDirector\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test51"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Catcheur|\n|---|\n|Lex Luger|\n|Ric Flair|\n|Blackjack Mulligan|\n|Montel Vontavious Porter|\n|Greg Valentine|\n|Rick Rude|\n|Chris Benoit|\n|Nikita Koloff|\n|Sgt. Slaughter|\n|Magnum T.A.|\n|Wahoo McDaniel|\n|Barry Windham|\n|Booker T|\n|Ricky Steamboat|\n|Steve Austin|\n|Shelton Benjamin|\n|Sting|\n|Jimmy Snuka|\n|Dustin Rhodes|\n|John Cena|\n|Roddy Piper|\n|Jeff Jarrett|\n|Harley Race|\n|Bret Hart|\n|Orlando Jordan|\n|Scott Steiner|\n|Paul Jones|\n|Eddie Guerrero|\n|Konnan|\n|Diamond Dallas Page|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBird\nBook\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLanguage\nMammal\nMayor\nMountain\nMovieDirector\nMuseum\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test52"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Category|\n|---|\n|RPG|\n|Driving|\n|Action|\n|Strategy|\n|Action|\n|Music|\n|Platform|\n|Puzzle|\n|Puzzle|\n|Puzzle|\n|RPG|\n|Platform|\n|Shooter|\n|RPG|\n|RPG|\n|Music|\n|RPG|\n|Action|\n|Other|\n|Puzzle|\n|Other|\n|Other|\n|Cards|\n|RPG|\n|Strategy|\n|RPG|\n|Sports|\n|Action|\n|Sports|\n|Action|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBird\nBook\nCity\nCountry\nCurrency\nGenre\nGovernmentType\nLake\nLanguage\nMammal\nMayor\nMonarch\nMovieDirector\nMuseum\nNewspaper\nPlant\nRadioStation\nSaint\nSportsTeam\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Genre\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test53"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Centre|\n|---|\n|Institute of Psychiatry & Neurology|\n|Royal Hallamshire Hospital|\n|Uppsala University Hospital|\n|University Hospital of North Staffordshire|\n|Western General Hospital|\n|The National Hospital for Neurology & Neurosurgery|\n|Arrowe Park Hospital|\n|Southend University Hospital|\n|Cliniques Universitaires St Luc|\n|University Hospital Trondheim|\n|Norfolk and Norwich University Hospital|\n|Ulleval Sykehus|\n|Nottingham City Hospital|\n|Ospedale Di Citta' di Castello|\n|Guy's & St.Thomas Hospital|\n|Darlington and Bishop Auckland Hospitals|\n|Nambour General Hospital|\n|University Hospital Aintree|\n|Danderyd Hospital|\n|University Hospital of Wales|\n|SPZZOZ w Sandomierzu|\n|UAVC. Centro Hospitalar de Tr?s-os-Montes e Alto Douro|\n|Nuovo Ospedale Civile \"S.Agostino-Estense\"|\n|Derby Royal Hospital|\n|Ospedale Beato Giacomo Villa - Citta' della Pieve|\n|Ospedale Di Branca|\n|Medical University of Gdansk|\n|Landesklinikum Donauregion Tulln|\n|Addenbrookes Hospital|\n|St George's Healthcare NHS Trust|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBaseballPlayer\nBuilding\nContinent\nCurrency\nFilm\nGenre\nGovernmentType\nLake\nMammal\nMayor\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test54"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|City|\n|---|\n|ANTANANARIVO|\n|LILONGWE|\n|KUALA LUMPUR|\n|BAMAKO|\n|MEXICO CITY|\n|Monterrey|\n|Puebla|\n|Ecatepec|\n|Guadalajara|\n|Tijuana|\n|Ciudad Juarez|\n|Zapopan|\n|Nezahualcoyotl|\n|Leon|\n|Torreon|\n|Mexicali|\n|Naucalpan|\n|Santiago de Queretaro|\n|Toluca|\n|Merida|\n|Acapulco|\n|Chihuahua|\n|San Luis Potosi|\n|Tlalnepantla de Baz|\n|Aguascalientes|\n|Culiacan|\n|Matamoros|\n|Tampico|\n|CHISINAU|\n|ULAANBAATAR|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nBook\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nMammal\nMayor\nMountain\nMountainRange\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test55"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|City|\n|---|\n|Aachen|\n|Abidjan|\n|ABU DHABI|\n|ABUJA|\n|Acapulco|\n|ACCRA|\n|Ad-Dammam|\n|Adana|\n|ADDIS ABABA|\n|Adelaide|\n|Agra|\n|Aguascalientes|\n|Ahmadabad|\n|Ahwaz|\n|Al-Hufuf|\n|Albany|\n|Aleppo|\n|Alexandria|\n|ALGIERS|\n|Aligarh|\n|Allahabad|\n|ALMATY|\n|AMMAN|\n|Amravati|\n|Amritsar|\n|AMSTERDAM|\n|Ankang|\n|ANKARA|\n|Anqiu|\n|Anshan|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nLake\nLanguage\nMountain\nMovieDirector\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test56"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|City|\n|---|\n|Agana|\n|Albany|\n|Albuquerque|\n|Allentown|\n|Amarillo|\n|Anchorage|\n|Atlanta|\n|Austin|\n|Baton Rouge|\n|Billings|\n|Birmingham|\n|Boise|\n|Boston|\n|Buffalo|\n|Burbank|\n|BWI Airport|\n|Cedar Rapids|\n|Charleston|\n|Charlotte|\n|Charlotte Amalie|\n|Chicago|\n|Chicago|\n|Cincinnati|\n|Cleveland|\n|Colorado Springs|\n|Columbia|\n|Columbus|\n|Corpus Christi|\n|Dallas|\n|Dallas|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test57"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|City|\n|---|\n|Anchorage|\n|Fairbanks|\n|Juneau|\n|Birmingham|\n|Huntsville|\n|Fayetteville|\n|Little Rock|\n|Grand Canyon|\n|Phoenix|\n|Tucson|\n|Burbank|\n|Fresno|\n|Long Beach|\n|Los Angeles|\n|Oakland|\n|Ontario|\n|Orange County|\n|Palm Springs|\n|Sacramento|\n|San Diego|\n|San Francisco|\n|San Jose|\n|Santa Barbara|\n|Colorado Springs|\n|Denver|\n|Saipan Island|\n|Windsor Locks|\n|Washington|\n|Washington|\n|Fort Lauderdale|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBook\nBuilding\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nLake\nLanguage\nMammal\nMayor\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test58"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|City|\n|---|\n|Buffalo|\n|Oberlin|\n|Fort Worth|\n|Pittsburgh|\n|Little Rock|\n|Chicago|\n|San Antonio|\n|New York|\n|Baltimore|\n|Lower Merion Township|\n|Miami Beach|\n|Birmingham|\n|San Antonio|\n|Boston|\n|Brunswick|\n|Chadds Ford|\n|New York|\n|San Francisco|\n|Pittsburgh|\n|Norfolk|\n|Cincinnati|\n|Williamston|\n|Columbia|\n|Columbus|\n|New York|\n|Washington|\n|D.C.|\n|Detroit|\n|Manchester|\n|New York|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBuilding\nCity\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nMammal\nMonarch\nMountain\nMountainRange\nMuseum\nPoliticalParty\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test59"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|Roberto Alomar|\n|Bert Blyleven|\n|Pat Gillick|\n|Andre Dawson|\n|Doug Harvey|\n|Whitey Herzog|\n|Joe Gordon|\n|Rickey Henderson|\n|Jim Rice|\n|Barney Dreyfuss|\n|Rich Gossage|\n|Bowie Kuhn|\n|Walter O'Malley|\n|Billy Southworth|\n|Dick Williams|\n|Tony Gwynn|\n|Cal Ripken|\n|Raymond Brown|\n|Willard Brown|\n|Andy Cooper|\n|Frank Grant|\n|Pete Hill|\n|Biz Mackey|\n|Effa Manley|\n|Jose Mendez|\n|Alex Pompez|\n|Cum Posey|\n|Louis Santop|\n|Bruce Sutter|\n|Mule Suttles|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBook\nCity\nCompany\nCurrency\nGenre\nGovernmentType\nLake\nLanguage\nMammal\nMayor\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"BaseballPlayer\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test6"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|City|\n|---|\n|Ecatepec|\n|Edmonton|\n|Einhoven|\n|Ekaterinburg|\n|Erfurt|\n|Esfahan|\n|Essen|\n|Ezhou|\n|Faisalabad|\n|Faridabad|\n|Feicheng|\n|Fengcheng|\n|Fes|\n|Fez|\n|Florence|\n|Fortaleza|\n|Frankfurt|\n|FREETOWN|\n|Freiburg|\n|Fresno|\n|Fukuoka|\n|Fuqing|\n|Fushun|\n|Fuxin|\n|Fuyang|\n|Fuzhou (Fujian)|\n|Fuzhou (Jiangxi)|\n|Gaozhou|\n|Gaza|\n|Gaziantep|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nGenre\nGovernmentType\nHospital\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nPoliticalParty\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test60"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|City|\n|---|\n|Guayaquil|\n|QUITO|\n|CAIRO|\n|Alexandria|\n|Giza|\n|Subra al-Haymah|\n|SAN SALVADOR|\n|ASMARA|\n|TALLINN|\n|ADDIS ABABA|\n|HELSINKI|\n|PARIS|\n|Marseille|\n|Lyon|\n|Toulouse|\n|Nice|\n|Nantes|\n|Strasbourg|\n|Montpellier|\n|Bordeaux|\n|Lille|\n|Rennes|\n|TBILISI|\n|BERLIN|\n|Hamburg|\n|Munich|\n|Cologne|\n|Frankfurt|\n|Stuttgart|\n|Dortmund|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBuilding\nCity\nContinent\nCurrency\nFilm\nGovernmentType\nHospital\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test61"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|City|\n|---|\n|KABUL|\n|ALGIERS|\n|Oran|\n|LUANDA|\n|BUENOS AIRES|\n|Cordoba|\n|La Matanza|\n|Rosario|\n|La Plata|\n|Tucuman|\n|Mendoza|\n|YEREVAN|\n|Sydney|\n|Melbourne|\n|Perth|\n|Brisbane|\n|Adelaide|\n|VIENNA|\n|BAKU|\n|DHAKA|\n|Chittagong|\n|Khulna|\n|MINSK|\n|BRUSSELS|\n|Antwerp|\n|Gent|\n|Bruges|\n|Santa Cruz|\n|LA PAZ|\n|Cochabamba|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nLake\nLanguage\nMayor\nMountain\nMuseum\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test62"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|City|\n|---|\n|Karachi|\n|Shanghai|\n|Mumbai (Bombay)|\n|BEIJING|\n|DELHI|\n|BUENOS AIRES|\n|MANILA METRO|\n|SEOUL|\n|Sao Paulo|\n|MOSCOW|\n|JAKARTA|\n|Istanbul|\n|BANGKOK|\n|MEXICO CITY|\n|TOKYO|\n|TEHRAN|\n|New York City|\n|KINSHASA|\n|DHAKA|\n|Lagos|\n|CAIRO|\n|LIMA|\n|LONDON|\n|Tianjin|\n|BOGOTA|\n|Ho Chi Minh City|\n|Hong Kong|\n|Guangzhou|\n|Dongguan|\n|Lahore|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nHospital\nLanguage\nMayor\nMonarch\nMountain\nMovieDirector\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test63"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|City|\n|---|\n|MacAllen|\n|Maceio|\n|Macheng|\n|MADRID|\n|Madurai|\n|Magdeburg|\n|Maiduguri|\n|Makasar|\n|Malang|\n|Malmo|\n|MANAGUA|\n|Manaus|\n|Manchester|\n|Mandalay|\n|MANILA METRO|\n|Mannheim|\n|MAPUTO|\n|Maracaibo|\n|Maracay|\n|Marrakech|\n|Marseille|\n|Mashhad|\n|Masqat-Matrah|\n|Matamoros|\n|Mataram|\n|Mbuji-Mayi|\n|Mecca|\n|Medan|\n|Medellin|\n|Medina|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nCity\nContinent\nCurrency\nFilm\nGovernmentType\nHospital\nMonarch\nMountain\nMountainRange\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test64"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|City|\n|---|\n|North Canton|\n|Albany|\n|Albuquerque|\n|Amarillo|\n|Anchorage|\n|Atlanta|\n|Egg Harbor Twp|\n|Green Bay|\n|Austin|\n|BWI Airport|\n|Baton Rouge|\n|Billings|\n|Birmingham|\n|Flint|\n|Lexington|\n|Boise|\n|Boston|\n|Windsor Locks|\n|Buffalo|\n|Burbank|\n|South Burlington|\n|Houston|\n|Cedar Rapids|\n|Charleston|\n|Charlotte|\n|Chicago|\n|Chicago|\n|Cincinnati|\n|Cleveland|\n|Colorado Springs|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBuilding\nCity\nContinent\nCountry\nCurrency\nFilm\nHospital\nLake\nLanguage\nMammal\nMonarch\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test65"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|City|\n|---|\n|Plock|\n|Blanchard|\n|ND|\n|Toronto|\n|Moscow|\n|Taipei|\n|Shanghai|\n|Kuala Lumpur|\n|Chicago|\n|IL|\n|Kuala Lumpur|\n|Shanghai|\n|Tianjin|\n|New York|\n|NY|\n|Hong Kong|\n|Beijing|\n|Guangzhou|\n|Shenzhen|\n|Kuala Lumpur|\n|New York|\n|NY|\n|Tashkent|\n|Kuwait City|\n|Alma-Ata|\n|Hong Kong|\n|Hong Kong|\n|Vilnius|\n|Berlin|\n|Xiamen|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCurrency\nGenre\nGovernmentType\nLake\nLanguage\nMammal\nMayor\nMountain\nMountainRange\nMuseum\nNewspaper\nPoliticalParty\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test66"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|City|\n|---|\n|RIYADH|\n|Jeddah|\n|Mecca|\n|Medina|\n|Ad-Dammam|\n|Dammam|\n|Al-Hufuf|\n|Pikine-Guediawaye|\n|DAKAR|\n|FREETOWN|\n|SINGAPORE|\n|BRATISLAVA|\n|MOGADISHU|\n|Johannesburg|\n|Cape Town|\n|TSHWANE (PRETORIA)|\n|Soweto|\n|Port Elizabeth|\n|Durban|\n|Vereeniging|\n|SEOUL|\n|Busan|\n|Incheon|\n|Daegu|\n|Daejeon|\n|Gwangju|\n|Ulsan|\n|Suwon|\n|Goyang|\n|Seongnam|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBird\nBook\nBuilding\nCity\nCurrency\nFilm\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nNewspaper\nPlant\nPoliticalParty\nSportsTeam\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test67"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|City|\n|---|\n|Sacramento|\n|Safi|\n|Saint Louis|\n|Saitama|\n|Sakai|\n|Sal\u00e9|\n|Salt Lake City|\n|Salvador da Bahia|\n|Samara|\n|San Antonio|\n|San Diego|\n|San Francisco|\n|SAN JOSE|\n|San Jose|\n|SAN JUAN|\n|San Luis Potosi|\n|SAN SALVADOR|\n|SANAA|\n|Santa Cruz|\n|SANTIAGO|\n|Santiago de los Caballeros|\n|Santiago de Queretaro|\n|SANTO DOMINGO|\n|Santos|\n|Sao Bernardo do Campo|\n|Sao Goncalo|\n|Sao Jose dos Campos|\n|Sao Luis|\n|Sao Paulo|\n|Sapporo|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nBaseballPlayer\nBird\nBuilding\nCompany\nContinent\nFilm\nGenre\nHospital\nLake\nMammal\nMayor\nMonarch\nMovieDirector\nScientist\nSportsTeam\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test68"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|City|\n|---|\n|San Francisco|\n|San Jose|\n|Oakland|\n|CA|\n|San Francisco|\n|San Jose|\n|Oakland|\n|CA|\n|San Francisco|\n|San Jose|\n|Oakland|\n|CA|\n|Chico|\n|Eureka|\n|CA|\n|Grass Valley|\n|CA|\n|Medford|\n|OR|\n|Mendocino|\n|CA|\n|Modesto|\n|Paso Robles|\n|CA|\n|Reno|\n|Sacramento|\n|San Luis Obispo|\n|Salinas|\n|Hillsboro\/Portland|\n|OR|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBird\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nHospital\nLake\nLanguage\nMammal\nMayor\nMountain\nMountainRange\nMovieDirector\nMuseum\nPoliticalParty\nSportsTeam\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"City\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test69"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Column|\n|---|\n|United Kingdom|\n|Ireland|\n|France|\n|Germany|\n|Spain|\n|Italy|\n|Vatican City|\n|Netherlands|\n|Belgium|\n|Switzerland|\n|Austria|\n|Greece|\n|Monaco|\n|Norway|\n|Sweden|\n|Denmark|\n|Finland|\n|Poland|\n|Belarus|\n|Czech Republic|\n|Russia|\n|Slovakia|\n|Turkey|\n|Egypt|\n|Albania|\n|Macedonia|\n|Serbia|\n|Bulgaria|\n|Bosnia Herzagovina|\n|Croatia|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test7"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common Name|\n|---|\n|Mountain Quail|\n|California Quail|\n|Gambel's Quail|\n|Northern Bobwhite|\n|Wild Turkey|\n|Ruffed Grouse|\n|Common Pheasant|\n|Mallard|\n|Ruddy Duck|\n|Wedge-tailed Shearwater|\n|Townsend's Shearwater|\n|Band-rumped Storm Petrel|\n|Pied-billed Grebe|\n|Green Heron|\n|Cattle Egret|\n|Turkey Vulture|\n|American Kestrel|\n|Merlin|\n|Peregrine Falcon|\n|Sharp-shinned Hawk|\n|Cooper's Hawk|\n|Northern Goshawk|\n|Red-shouldered Hawk|\n|Broad-winged Hawk|\n|Red-tailed Hawk|\n|Roughleg|\n|Black Rail|\n|Virginia Rail|\n|Sora|\n|American Coot|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Bird\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test70"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Common Name|\n|---|\n|Red-throated Loon|\n|Pacific Loon|\n|Common Loon|\n|Pied-billed Grebe|\n|Horned Grebe|\n|Red-necked Grebe|\n|Eared Grebe|\n|Western Grebe|\n|Clark's Grebe|\n|Wandering Albatross|\n|Pink-footed Shearwater|\n|Flesh-footed Shearwater|\n|Sooty Shearwater|\n|Brown Pelican|\n|Brandt's Cormorant|\n|Double-crested Cormorant|\n|Pelagic Cormorant|\n|Magnificent Frigatebird|\n|Great Blue Heron|\n|Great Egret|\n|Snowy Egret|\n|Cattle Egret|\n|Green Heron|\n|Black-crowned Night-Heron|\n|Turkey Vulture|\n|Canada Goose|\n|Brant|\n|Wood Duck|\n|American Wigeon|\n|Mallard|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMonarch\nMountain\nMountainRange\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nSaint\nScientist\nSportsTeam\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test71"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Company|\n|---|\n|37Signals|\n|Accelrys|\n|AccuQuote|\n|Achilles|\n|Adidas|\n|Admiral Taverns|\n|aiCache|\n|Alcoa|\n|All My Sons|\n|Altia|\n|Amadeus|\n|Amazon Web Services|\n|Analog Devices|\n|Aprilaire|\n|Aras|\n|ArcelorMittal|\n|Argus|\n|Arvixe|\n|Asda|\n|AutoNation|\n|Avis (UK)|\n|Avnet|\n|BBC|\n|Ben Locker & Associates|\n|Bigelow Tea|\n|BlackBerry|\n|Blackstone|\n|Blockbuster|\n|Blurb|\n|Book of Odds|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBird\nBuilding\nCity\nCompany\nContinent\nCountry\nFilm\nGovernmentType\nLake\nLanguage\nMammal\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nScientist\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test72"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Company|\n|---|\n|3M|\n|Alcoa|\n|American Express|\n|AT&T|\n|Bank of America|\n|Boeing|\n|Caterpillar|\n|Chevron Corporation|\n|Citigroup|\n|Coca-Cola|\n|DuPont|\n|ExxonMobil|\n|General Electric|\n|General Motors|\n|Hewlett-Packard|\n|The Home Depot|\n|Intel|\n|IBM|\n|Johnson & Johnson|\n|JPMorgan Chase|\n|Kraft Foods|\n|McDonald\u0092s|\n|Merck|\n|Microsoft|\n|Pfizer|\n|Procter & Gamble|\n|United Technologies Corporation|\n|Verizon Communications|\n|Wal-Mart|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBird\nBook\nCity\nCompany\nCountry\nFilm\nHospital\nMayor\nMonarch\nMovieDirector\nMuseum\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test73"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Company|\n|---|\n|Abbott Laboratories|\n|Adobe Systems|\n|Aetna|\n|Alcoa|\n|Apple|\n|Aramark|\n|Archer Daniels Midland|\n|Automatic Data Processing|\n|Avnet|\n|BASF|\n|Becton Dickinson|\n|Berkshire Hathaway|\n|BMW|\n|C.H. Robinson Worldwide|\n|Caterpillar|\n|Cisco Systems|\n|Coca-Cola|\n|Costco Wholesale|\n|CVS\/Caremark|\n|DaVita|\n|E.ON|\n|EMCOR Group|\n|Exxon Mobil|\n|FMC Technologies|\n|FPL Group|\n|General Electric|\n|Goldman Sachs Group|\n|Google|\n|Herman Miller|\n|IBM|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nContinent\nCountry\nGenre\nGovernmentType\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test74"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Company|\n|---|\n|COMPANY NAME|\n|Starbucks|\n|Boeing|\n|Time Warner|\n|Target|\n|Masco|\n|IBM|\n|Texas Instruments|\n|Lincoln National|\n|Caterpillar|\n|General Motors|\n|Home Depot|\n|Pfizer|\n|Sprint Nextel|\n|Abercrombie & Fitch|\n|Deere & Company|\n|Harley-Davidson|\n|Microsoft|\n|Huntsman|\n|Burlington Santa Fe|\n|UAL|\n|SPX|\n|Intel|\n|Walt Disney|\n|Wynn Resorts|\n|Eaton|\n|Clear Channel|\n|Deere & Co.|\n|ConocoPhillips|\n|Hertz Global Holdings|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nCity\nCompany\nContinent\nFilm\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMuseum\nNewspaper\nRadioStation\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test75"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Company|\n|---|\n|Citigroup|\n|Bank of America|\n|HSBC|\n|General Electric|\n|JPMorgan Chase & Co.|\n|American International Group|\n|ExxonMobil|\n|Royal Dutch Shell|\n|UBS|\n|ING Group|\n|BP|\n|Toyota|\n|Royal Bank of Scotland|\n|BNP Paribas|\n|Allianz|\n|Berkshire Hathaway|\n|Wal-Mart|\n|Barclays|\n|Chevron|\n|Total S.A.|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nCity\nContinent\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test76"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Company|\n|---|\n|Fort Detrick Campus (Army|\n|National Cancer Institute and other tenants|\n|Frederick County Board of Education|\n|Frederick Memorial Healthcare System|\n|Bechtel Corporation|\n|Frederick County Government|\n|SAIC-Frederick|\n|Wells Fargo Home Mortgage|\n|Frederick Community College|\n|Frederick City Government|\n|United Health Care|\n|State Farm Insurance Co.|\n|Wal-Mart|\n|National Emergency Training Center (US Fire Academy|\n|FEMA|\n|and other tenants|\n|Wegman's|\n|Mount Saint Mary's University|\n|Home Call|\n|NVR Building Products|\n|Lonza Bio Science Walkersville|\n|Inc|\n|Hood College|\n|Plamondon Companies|\n|RR Donnelley|\n|Stulz Air Technology Systems|\n|Inc.|\n|Frederick County Family YMCA|\n|Home Depot|\n|Homewood Retirement Center|\n\n**Candidate column type:**\nAdministrativeRegion\nCity\nCompany\nCountry\nCurrency\nFilm\nGovernmentType\nHospital\nLake\nLanguage\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test77"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Company|\n|---|\n|HSBC Holdings|\n|General Electric|\n|Bank of America|\n|JPMorgan Chase|\n|ExxonMobil|\n|Royal Dutch Shell|\n|BP|\n|Toyota Motor|\n|ING Group|\n|Berkshire Hathaway|\n|Royal Bank of Scotland|\n|AT&T|\n|BNP Paribas|\n|Allianz|\n|Total|\n|Wal-Mart Stores|\n|Chevron|\n|American Intl Group|\n|Gazprom|\n|AXA Group|\n|Banco Santander|\n|ConocoPhillips|\n|Goldman Sachs Group|\n|Citigroup|\n|Barclays|\n|EDF Group|\n|E.ON|\n|ENI|\n|Petrobras-Petr?leo Brasil|\n|PetroChina|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBaseballPlayer\nBird\nContinent\nCountry\nCurrency\nFilm\nGenre\nHospital\nLake\nLanguage\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test78"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Company|\n|---|\n|JPMorgan Chase|\n|General Electric|\n|Bank of America|\n|ExxonMobil|\n|ICBC|\n|Banco Santander|\n|Wells Fargo|\n|HSBC Holdings|\n|Royal Dutch Shell|\n|BP|\n|BNP Paribas|\n|PetroChina|\n|AT&T|\n|Wal-Mart Stores|\n|Berkshire Hathaway|\n|Gazprom|\n|China Construction Bank|\n|Petrobras-Petr\u00f3leo Brasil|\n|Total|\n|Chevron|\n|Barclays|\n|Bank of China|\n|Allianz|\n|GDF Suez|\n|E.ON|\n|Goldman Sachs Group|\n|EDF Group|\n|AXA Group|\n|Lloyds Banking Group|\n|Procter & Gamble|\n\n**Candidate column type:**\nAdministrativeRegion\nAirport\nBird\nBook\nCompany\nCountry\nCurrency\nLanguage\nMayor\nMountain\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test79"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|1998 Data Country|\n|---|\n|United States|\n|Norway|\n|Singapore|\n|Japan|\n|U. A. Emirates|\n|Switzerland|\n|Denmark|\n|Belgium|\n|France|\n|Kuwait|\n|Netherlands|\n|Canada|\n|Italy|\n|Australia|\n|Austria|\n|United Kingdom|\n|Germany (1)|\n|Finland|\n|Sweden|\n|Ireland|\n|New Zealand|\n|Israel|\n|Qatar|\n|Spain|\n|Portugal|\n|Cyprus (2)|\n|Taiwan|\n|Korea|\n|South|\n|Bahrain|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCurrency\nFilm\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMountain\nMountainRange\nMovieDirector\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test8"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Company|\n|---|\n|Paccar Inc.|\n|Lamar Advertis|\n|Cintas Corp.|\n|Fiserv Inc.|\n|Paychex Inc.|\n|Apollo Grp A|\n|Career Educatn|\n|Sigma Aldrich|\n|Autodesk Inc.|\n|Synopsys Inc.|\n|Sun MicroSys|\n|Apple Comptr|\n|Dell Computer|\n|Network Aplnce|\n|Juniper Netwks|\n|Cisco Systems|\n|Qlogic Corp.|\n|Cognizant Tech|\n|Level 3 Comm|\n|Genzyme Genrl|\n|Gilead Science|\n|Invitrogn Corp|\n|Medimmune Inc|\n|Millenium Phrm|\n|Sepracor Inc.|\n|Chiron Corp|\n|Biogn Idec Inc|\n|Celgene Corp.|\n|Amgen Inc.|\n|Teva Pharm ADR|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nHospital\nLake\nLanguage\nMonarch\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test80"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Company|\n|---|\n|PetroChina|\n|ExxonMobil|\n|General Electric|\n|China Mobile|\n|Gazprom|\n|ICBC|\n|Microsoft|\n|Petrobras-Petr?leo Brasil|\n|Royal Dutch Shell|\n|Berkshire Hathaway|\n|AT&T|\n|BP|\n|Procter & Gamble|\n|Wal-Mart Stores|\n|BHP Billiton|\n|Nestl?|\n|Sinopec-China Petroleum|\n|Total|\n|HSBC Holdings|\n|Chevron|\n|Bank of America|\n|Johnson & Johnson|\n|Toyota Motor|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLanguage\nMammal\nMountain\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test81"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Company|\n|---|\n|Sam's Club|\n|Publix|\n|A credit union|\n|Chick-fil-A|\n|Subway|\n|Starbucks|\n|H.E.B.|\n|Winn-Dixie|\n|Aldi|\n|Sonic Drive-in|\n|Kroger|\n|ShopRite|\n|Amazon.com|\n|PNC|\n|Pizza Hut|\n|Target|\n|Walgreens|\n|Arby's|\n|Whole Foods|\n|Hy-Vee|\n|BJ's Wholesale Club|\n|Lowe's|\n|Dunkin Donuts|\n|Taco Bell|\n|Wendy's|\n|Food Lion|\n|Little Caesar's|\n|Giant Eagle|\n|Safeway|\n|Stop & Shop|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nContinent\nCurrency\nGenre\nGovernmentType\nLanguage\nMammal\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nSaint\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test82"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Company|\n|---|\n|Sony \/ Sony Pictures|\n|Dell|\n|Hitachi|\n|Hewlett-Packard Company|\n|Panasonic (Matsushita)|\n|Pioneer|\n|Philips|\n|Samsung|\n|Metro-Goldwyn-Mayer Inc. (MGM)|\n|The Walt Disney Co.|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBaseballPlayer\nBird\nCity\nContinent\nCurrency\nFilm\nGenre\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nPlant\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test83"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Company|\n|---|\n|USAA|\n|Edward Jones|\n|Courtyard by Marriott|\n|Sam's Club|\n|Lowe's|\n|Kohl's|\n|Marriott|\n|Hyatt|\n|BJs Wholesale Club|\n|Costco|\n|Walgreens|\n|Vanguard|\n|Southwest Airlines|\n|Old Navy|\n|Hilton|\n|Regions|\n|Hampton Inn|\n|Charles Schwab|\n|Target|\n|Rite Aid|\n|Discover|\n|A credit union|\n|Fidelity Investments|\n|American Express|\n|JCPenney|\n|Macy's|\n|Barnes Noble|\n|eBay|\n|JetBlue Airlines|\n|State Farm|\n\n**Candidate column type:**\nAcademicJournal\nAirport\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nLake\nLanguage\nMammal\nMayor\nMountain\nMovieDirector\nMuseum\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test84"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Company|\n|---|\n|Wal-Mart Stores|\n|Exxon Mobil|\n|Royal Dutch Shell|\n|BP|\n|Toyota Motor|\n|Chevron|\n|ING Group|\n|Total|\n|General Motors|\n|ConocoPhillips|\n|Daimler|\n|General Electric|\n|Ford Motor|\n|Fortis|\n|AXA|\n|Sinopec|\n|Citigroup|\n|Volkswagen|\n|Dexia Group|\n|HSBC Holdings|\n|BNP Paribas|\n|Allianz|\n|Cr?dit Agricole|\n|State Grid|\n|China National Petroleum|\n|Deutsche Bank|\n|ENI|\n|Bank of America Corp.|\n|AT&T|\n|Berkshire Hathaway|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBaseballPlayer\nBuilding\nCity\nCompany\nContinent\nCountry\nFilm\nLake\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nNewspaper\nRadioStation\nSaint\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test85"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Company\/Organization|\n|---|\n|3M Co.|\n|Alcoa Inc.|\n|American Express Co.|\n|American International Group Inc.|\n|AT&T Inc.|\n|Bank of America|\n|Boeing Co.|\n|Caterpillar Inc.|\n|Chevron Corp.|\n|Citigroup Inc.|\n|Coca-Cola Co.|\n|E.I. DuPont de Nemours & Co.|\n|Exxon Mobil Corp.|\n|General Electric Co.|\n|General Motors Corp.|\n|Hewlett-Packard Co.|\n|Home Depot Inc.|\n|Intel Corp.|\n|International Business Machines Corp.|\n|Johnson & Johnson|\n|JPMorgan Chase & Co.|\n|McDonald's Corp.|\n|Merck & Co. Inc.|\n|Microsoft Corp.|\n|Pfizer Inc.|\n|Procter & Gamble Co.|\n|United Technologies Corp.|\n|Verizon Communications Inc.|\n|Wal-Mart Stores Inc.|\n|Walt Disney Co.|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirport\nBird\nCity\nCompany\nCountry\nCurrency\nFilm\nGovernmentType\nLake\nLanguage\nMonarch\nMountain\nMountainRange\nPlant\nPoliticalParty\nRadioStation\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Company\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test86"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Company??|\n|---|\n|3M|\n|Alcoa|\n|American Express|\n|AT&T|\n|Bank of America|\n|Boeing|\n|Caterpillar|\n|Chevron Corporation|\n|Citigroup|\n|Coca-Cola|\n|DuPont|\n|ExxonMobil|\n|General Electric|\n|General Motors|\n|Hewlett-Packard|\n|Home Depot|\n|Intel|\n|IBM|\n|Johnson & Johnson|\n|JPMorgan Chase|\n|Kraft Foods|\n|McDonald's|\n|Merck|\n|Microsoft|\n|Pfizer|\n|Procter & Gamble|\n|United Technologies Corporation|\n|Verizon Communications|\n|Walmart|\n|Walt Disney|\n\n**Candidate column type:**\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBook\nBuilding\nCity\nContinent\nCurrency\nFilm\nGenre\nHospital\nLanguage\nMammal\nMayor\nMonarch\nMountainRange\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test87"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Continent|\n|---|\n|Asia|\n|Europe|\n|Africa|\n|Oceania|\n|Europe|\n|Africa|\n|Americas|\n|Americas|\n|Americas|\n|Asia|\n|Americas|\n|Oceania|\n|Europe|\n|Asia|\n|Americas|\n|Asia|\n|Asia|\n|Americas|\n|Europe|\n|Europe|\n|Americas|\n|Africa|\n|Americas|\n|Asia|\n|Americas|\n|Europe|\n|Africa|\n|Americas|\n|Americas|\n|Asia|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nFilm\nGenre\nGovernmentType\nLake\nLanguage\nMammal\nMayor\nMountain\nMountainRange\nMuseum\nNewspaper\nSaint\nSportsTeam\nUniversity\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test88"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country \/ Territory|\n|---|\n|World|\n|People's Republic of China|\n|India|\n|United States|\n|Indonesia|\n|Brazil|\n|Pakistan|\n|Russia|\n|Bangladesh|\n|Nigeria|\n|Japan|\n|Mexico|\n|Vietnam|\n|Philippines|\n|Germany|\n|Ethiopia|\n|Egypt|\n|Turkey|\n|Iran|\n|Thailand|\n|France|\n|United Kingdom|\n|Italy|\n|Democratic Republic of the Congo|\n|Myanmar|\n|South Korea|\n|South Africa|\n|Ukraine|\n|Colombia|\n|Spain|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test89"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|1Time|\n|---|\n|Adria Airways|\n|Aegean Airlines|\n|Aer Arann|\n|Aer Lingus|\n|Aero|\n|Aero Republica|\n|Aeroflot Russian Airlines|\n|Aeroline GmbH|\n|Aerolineas Argentinas|\n|Aeromar|\n|Aeromexico|\n|Aerosur|\n|Aerosvit|\n|Afriqiyah Airways|\n|Aigle Azur|\n|Air Algerie|\n|Air Alps|\n|Air Arabia|\n|Air Astana|\n|Air Austral|\n|Air Bosna|\n|Air Botswana|\n|Air Caledonie International|\n|Air Canada|\n|Air Canada Jazz|\n|Air Caraibes|\n|Air Chathams|\n|Air China|\n|Air Europa|\n|Air France|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCompany\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Airline\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test9"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country Name (Click For Destination Guides)|\n|---|\n|Bahamas|\n|The|\n|Bahrain|\n|Baker Island|\n|Bangladesh|\n|Barbados|\n|Bassas da India|\n|Belarus|\n|Belgium|\n|Belize|\n|Benin|\n|Bermuda|\n|Bhutan|\n|Bolivia|\n|Bosnia and Herzegovina|\n|Botswana|\n|Bouvet Island|\n|Brazil|\n|British Virgin Islands|\n|British Indian Ocean Territory|\n|Brunei|\n|Bulgaria|\n|Burkina Faso|\n|Burma or Myanmar|\n|Burundi|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBuilding\nCompany\nContinent\nCurrency\nGovernmentType\nLake\nLanguage\nMonarch\nMountainRange\nMovieDirector\nNewspaper\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test90"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country Name (Click For Destination Guides)|\n|---|\n|Cambodia|\n|Cameroon|\n|Canada|\n|Cape Verde|\n|Cayman Islands|\n|Central African Republic|\n|Chad|\n|Chile|\n|China|\n|Christmas Island|\n|Clipperton Island|\n|Cocos (Keeling) Islands|\n|Colombia|\n|Comoros|\n|Congo|\n|Democratic Republic of the|\n|Congo|\n|Republic of the|\n|Cook Islands|\n|Coral Sea Islands|\n|Costa Rica|\n|Cote d'Ivoire|\n|Croatia|\n|Cuba|\n|Cyprus|\n|Czech Republic|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nCountry\nCurrency\nGenre\nGovernmentType\nHospital\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test91"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country Name (Click For Destination Guides)|\n|---|\n|Gabon|\n|Gambia|\n|The|\n|Georgia|\n|Germany|\n|Ghana|\n|Gibraltar|\n|Glorioso Islands|\n|Greece|\n|Greenland|\n|Grenada|\n|Guadeloupe|\n|Guam|\n|Guatemala|\n|Guernsey|\n|Guinea|\n|Guinea Bissau|\n|Guyana|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBaseballPlayer\nBird\nBook\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGenre\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nPlant\nPoliticalParty\nRadioStation\nScientist\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test92"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country Name (Click For Destination Guides)|\n|---|\n|Macau|\n|Macedonia|\n|The Former Yugoslav Republic of|\n|Madagascar|\n|Malawi|\n|Malaysia|\n|Maldives|\n|Mali|\n|Malta|\n|Man|\n|Isle of|\n|Marshall Islands|\n|Martinique|\n|Mauritania|\n|Mauritius|\n|Mayotte|\n|Mexico|\n|Micronesia|\n|Federated States of|\n|Midway Islands|\n|Moldova|\n|Monaco|\n|Mongolia|\n|Montenegro|\n|Montserrat|\n|Morocco|\n|Mozambique|\n|Myanmar (Burma)|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBaseballPlayer\nBook\nCity\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nLanguage\nMountain\nMountainRange\nMovieDirector\nMuseum\nPlant\nSaint\nScientist\nUniversity\nWrestler\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test93"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country Name (Click For Destination Guides)|\n|---|\n|South America Continent|\n|Saint Helena|\n|Saint Kitts and Nevis|\n|Saint Lucia|\n|Saint Pierre and Miquelon|\n|Saint Vincent and the Grenadines|\n|Samoa|\n|San Marino|\n|Sao Tome and Principe|\n|Saudi Arabia|\n|Senegal|\n|Serbia|\n|Seychelles|\n|Sierra Leone|\n|Singapore|\n|Slovakia|\n|Slovenia|\n|Solomon Islands|\n|Somalia|\n|South Africa|\n|South America Continent|\n|South Georgia and the South Sandwich Islands|\n|South Korea|\n|Spain|\n|Sri Lanka|\n|Sudan|\n|Suriname|\n|Svalbard|\n|Swaziland|\n|Sweden|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nSaint\nUniversity\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test94"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country Name:|\n|---|\n|China|\n|India|\n|United States of America|\n|Indonesia|\n|Brazil|\n|Pakistan|\n|Bangladesh|\n|Nigeria|\n|Russia|\n|Japan|\n|Mexico|\n|Phillipines|\n|Vietnam|\n|Germany|\n|Ethopia|\n|Egypt|\n|Iran|\n|Turkey|\n|Congo (Dem. Rep. of )|\n|France|\n|Thailand|\n|United Kingdom (UK)|\n|Italy|\n|Myanmar|\n|South Africa|\n|Korea (South)|\n|Spain|\n|Ukraine|\n|Colombia|\n|Tanzania|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nCountry\nCurrency\nFilm\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMountain\nMountainRange\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test95"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|Afghanistan|\n|Albania|\n|Algeria|\n|American Samoa|\n|Andorra|\n|Angola|\n|Anguilla|\n|Antarctica|\n|Antigua and Barbuda|\n|Argentina|\n|Armenia|\n|Aruba|\n|Australia|\n|Austria|\n|Azerbaijan|\n|Bahamas|\n|Bahrain|\n|Bangladesh|\n|Barbados|\n|Belarus|\n|Belgium|\n|Belize|\n|Benin|\n|Bermuda|\n|Bhutan|\n|Bhutan (other)|\n|Bosnia and Herzegovina|\n|Botswana|\n|Bouvet Island|\n|Brazil|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBaseballPlayer\nBook\nBuilding\nCity\nContinent\nCurrency\nFilm\nGenre\nHospital\nLake\nLanguage\nMammal\nMayor\nMonarch\nMountain\nMountainRange\nMovieDirector\nMuseum\nNewspaper\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test96"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|Afghanistan|\n|Albania|\n|Algeria|\n|American Samoa|\n|Andorra|\n|Angola|\n|Anguilla|\n|Antigua and Barbuda|\n|Argentina|\n|Armenia|\n|Aruba|\n|Australia|\n|Austria|\n|Azerbaijan|\n|Azores Islands|\n|Portugal|\n|Bahamas|\n|The|\n|Bahrain|\n|Bangladesh|\n|Barbados|\n|Belarus|\n|Belgium|\n|Belize|\n|Benin|\n|Bermuda|\n|Bhutan|\n|Bolivia|\n|Bosnia-Herzegovina|\n|Botswana|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nBaseballPlayer\nBird\nBuilding\nCompany\nCurrency\nGenre\nGovernmentType\nHospital\nMonarch\nMountainRange\nMuseum\nNewspaper\nPlant\nPoliticalParty\nRadioStation\nSaint\nScientist\nSportsTeam\nUniversity\nVideoGame\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test97"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|Afghanistan|\n|Albania|\n|Algeria|\n|American Samoa|\n|Andorra|\n|Angola|\n|Anguilla|\n|Antigua and Barbuda|\n|Argentina|\n|Armenia|\n|Aruba|\n|Australia|\n|Austria|\n|Azerbaijan|\n|Bahamas|\n|The|\n|Bahrain|\n|Bangladesh|\n|Barbados|\n|Belarus|\n|Belgium|\n|Belize|\n|Benin|\n|Bermuda|\n|Bhutan|\n|Bolivia|\n|Bosnia and Herzegovina|\n|Botswana|\n|Brazil|\n|British Virgin Islands|\n\n**Candidate column type:**\nAcademicJournal\nAdministrativeRegion\nAirline\nAirport\nBaseballPlayer\nBird\nBook\nBuilding\nCity\nCompany\nContinent\nGenre\nGovernmentType\nHospital\nLanguage\nMammal\nMayor\nMonarch\nMountainRange\nMovieDirector\nMuseum\nPlant\nPoliticalParty\nSaint\nScientist\nUniversity\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"None\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test98"}}
{"prompt":"# Task Description: Please look at the input column and determine the semantic type that can describe *every single* instance the input column. Please only choose one semantic type from the candidate list, and remember that the type you choose has to accurately describe every single entity in the column. If no candidate column type can suitably describe every single instance in the column, please return 'None'. Please only choose one type from the candidate list below, and *do not* create new types.\n\n## Input:\n**Column:**\n|Country|\n|---|\n|Afghanistan|\n|Albania|\n|Algeria|\n|American Samoa|\n|Andorra|\n|Angola|\n|Anguilla|\n|Antigua and Barbuda|\n|Argentina|\n|Armenia|\n|Aruba|\n|Australia|\n|Austria|\n|Azerbaijan|\n|Bahamas|\n|The|\n|Bahrain|\n|Bangladesh|\n|Barbados|\n|Belarus|\n|Belgium|\n|Belize|\n|Benin|\n|Bermuda|\n|Bhutan|\n|Bolivia|\n|Bosnia and Herzegovina|\n|Botswana|\n|Brazil|\n|British Virgin Islands|\n\n**Candidate column type:**\nAcademicJournal\nAirline\nAirport\nBuilding\nContinent\nCountry\nCurrency\nFilm\nGenre\nGovernmentType\nHospital\nLake\nLanguage\nMammal\nMonarch\nMountain\nMountainRange\nMuseum\nNewspaper\nPoliticalParty\nRadioStation\nSaint\nScientist\nUniversity\nVideoGame\nWrestler\nWriter\n\nReturn the final result as JSON in the format {\"chosen_semantic_type\": \"<an entry from the candidate list or None>\"}.\n\n## Output:\n","completion":"{\"chosen_semantic_type\": \"Country\"}","metadata":{"task":"ColumnTypeAnnotation","num_fewshots":0,"seed":1,"dataset":"T2DTest","table":"test99"}}
