{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|N\u00e1zev (podzna\u010dka)|\n|---|\n|No.7|\n|Desert Sweet|\n|Camacho Connecticut Machitos Pack|\n|Blue Classic Blue|\n|Mediterranean Rich|\n|Dusk Obscure|\n|CORONAS JUNIOR|\n|Casa De Garcia Robusto Connecticut|\n|Torpedo Black Line|\n|EDGE TORO COROJO|\n|Coconut|\n|OFICIOS (CDH)|\n|Havao Treble (Toro)|\n|Davidoff Winston Churchill Petit Corona|\n|Blue Blue Big Pack Original Blue|\n|Ice Apple|\n|Orginal|\n|Cellar Reserve Edicion Especial Koi|\n|Camacho Ecuador Robusto|\n|Solera Dominican Sun Grown Fantastico|\n|Duo Figurados|\n|SqueeZ|\n|Seleccion Robustos|\n|Crystal Churchill|\n|CENTROFINOS|\n|original|\n|Sticks Deep Electric Yellow|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['original', 'Orginal']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table1"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|COMPETITION|\n|---|\n|World Grand Prix|\n|US Masters|\n|Brisbane Masters|\n|BDO W Champs|\n|W.Matchplay|\n|Euro Tour 3|\n|World Series|\n|Vegas Classic|\n|Euro Tour 6|\n|PDC World Cup|\n|Euro Tour 5|\n|Euro Tour 1|\n|PDC World Champs|\n|Euro Tour 8|\n|Euro Tour 12|\n|Sydney Masters|\n|BDO World Trophy|\n|World Series Finals|\n|BDO World Champs|\n|UK Open|\n|US Open|\n|players chmps|\n|Euro Tour 9|\n|players champs|\n|Euro Tour 11|\n|Dutch Masters|\n|Euro Tour 10|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['players champs', 'players chmps']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table10"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|ORGANIZATION|\n|---|\n|HolaDoctor|\n|State of South Dakota; Department of Social Services|\n|State of Colorado - HCPF|\n|State of Florida - Agency for Health Care Administration|\n|Department of Vermont Health Access|\n|Xerox|\n|Accenuture|\n|CSpring|\n|Verisk Health|\n|Intel - GE Care Innovations|\n|State of Tennessee Office of eHealth Initiatives|\n|State of Connecticut|\n|DHMH- State of Maryland|\n|RelayHealth|\n|ILHIEA|\n|State of Connecticut Department of Social Services|\n|William Larkin Consulting|\n|Arkansas Department of Human Services|\n|TEKsystems|\n|Mississippi Division of Medicaid|\n|Public Knowledge|\n|Progress Software|\n|Noblis|\n|Health & Human Services Commission|\n|White Hat Proposals|\n|Accenture|\n|Deltek|\n|Acer Exhibits & Events|\n|Equifax|\n|MN Department of Human Services|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Accenture', 'Accenuture']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table100"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|FIRST NAME|\n|---|\n|Bill|\n|Carlos|\n|CAPT Godwin|\n|Kathleen|\n|Thangappan|\n|Gabriel|\n|Marnie|\n|Troy|\n|Lorrie|\n|Gloria|\n|Jeannette|\n|Lee Ann|\n|Theresa|\n|Jinnifer|\n|Nancy|\n|Carie|\n|Jess|\n|Seabreeze|\n|Shalece|\n|Deirdre|\n|Brandon|\n|Dan|\n|Adnan|\n|Jeffrey|\n|Terri|\n|Worth|\n|Darren|\n|Bud|\n|Jennifer|\n|Justin|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Jennifer', 'Jinnifer']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table101"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|City|\n|---|\n|Budapest|\n|Chiasso|\n|Richmond Upon Thames|\n|Munich|\n|Belfast|\n|Zurich|\n|Birmingham|\n|Florence|\n|Ipswich|\n|Cagliari|\n|Lyon|\n|Geneva|\n|Praha|\n|Manchester|\n|Riga|\n|Ukraine|\n|Tallinn|\n|Ticino|\n|Worthing|\n|Glarus|\n|Gibraltar|\n|Zutphen|\n|Porto|\n|Duesseldorf|\n|Amsterdam|\n|Verona|\n|Brussels|\n|Zuerich|\n|Napoli|\n|Barcelona|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Zurich', 'Zuerich']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table102"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|StudnetLastName|\n|---|\n|Garland|\n|Rich|\n|Souza|\n|Leyva|\n|Murrell|\n|Buckingham|\n|Gauthier|\n|Orta|\n|Ragland|\n|Albert|\n|Outlaw|\n|Pettigrew|\n|Swank|\n|Battle|\n|Walling|\n|Sloan|\n|Rainey|\n|Presley|\n|Purcell|\n|Raynor|\n|Neely|\n|Guillory|\n|Ginn|\n|Otero|\n|Luckett|\n|Nadeau|\n|Pressley|\n|Chan|\n|Campos|\n|Neil|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Presley', 'Pressley']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table103"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Facility Name|\n|---|\n|WELLINGTON ISD|\n|St. John's Episcopal School McAllen|\n|RED LICK ISD|\n|SANTA ANNA ISD|\n|Primrose School of Bedford|\n|NEW BRAUNFELS ISD|\n|FABENS ISD|\n|WALLER ISD|\n|Good Shephard Episcopal School|\n|COMMERCE ISD|\n|INSPIRED VISION ACADEMY|\n|TEXARKANA ISD|\n|LIVINGSTON ISD|\n|BURLESON ISD|\n|BUCKHOLTS ISD|\n|PEARLAND ISD|\n|LORAINE ISD|\n|Primrose School of Sienna|\n|HAMSHIRE-FANNETT ISD|\n|AMIGOS POR VIDA-FRIENDS FOR LIFE PUB CHT|\n|RIESEL ISD|\n|Good Shepherd Episcopal School|\n|PEGASUS SCHOOL OF LIBERAL ARTS AND SCIEN|\n|DEW ISD|\n|First Baptist School - Caldwell|\n|HOLY ROSARY CATHOLIC SCHOOL|\n|BUFFALO ISD|\n|STS PETER & PAUL CATHOLIC SCH|\n|Primrose School of West Allen|\n|MELISSA ISD|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Good Shephard Episcopal School', 'Good Shepherd Episcopal School']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table104"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Town|\n|---|\n|Barre City|\n|West Windsor|\n|Randolph|\n|Belmont|\n|Vershire|\n|Pomfret|\n|Cuttingsville|\n|West Dover|\n|Wilder|\n|Graniteville|\n|South Barre|\n|Clarendon|\n|Windsor|\n|Manchester Center|\n|Braintree|\n|Pittsfield|\n|Underhill|\n|Westminster Town|\n|Salisbury|\n|Warren|\n|Brandon|\n|Stockbridge|\n|Barnard|\n|Randlolph|\n|East Thetford|\n|Newbury|\n|Springfield|\n|Sharon|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Randolph', 'Randlolph']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table105"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Street|\n|---|\n|SKENDEBEU|\n|ORROBERDA|\n|SKENDERBEU|\n|PREKALL|\n|SKENDERBEU|\n|VRELLE|\n|V.FRASHERI|\n|TRUBUHOVC|\n|CERKOLEZ|\n|MEHMET AKIF|\n|SKEDERBEU|\n|M. MAKSUTAJ|\n|RR.DRINI|\n|HYSNI ZAJMI|\n|STARADRAN|\n|Q. HAKAJ|\n|AMERIKA|\n|SYRIGAN|\n|SHABAN MANAJ|\n|ZABLLAQ|\n|GURRAKOC|\n|GURR|\n|RRUGA E DUBRAVES|\n|LAGJA DUSHKAJA|\n|nan|\n|ARBEN JANUZAJ|\n|HYSEN KADRI BUJUPI|\n|REXHE MURATI|\n|HYSEN  BUJUPI|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['SKENDERBEU', 'SKEDERBEU']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table106"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|City|\n|---|\n|WILLIAMSPORT|\n|BISMARCK|\n|BOISE|\n|GRAND ISLAND|\n|FORT WALTON BEACH|\n|CHERRY HILL|\n|LUFKIN|\n|BOSTON|\n|DOTHAN|\n|MILWAUKEE|\n|VICTORVILLE|\n|LORAIN|\n|CORPUS CHRISTI|\n|BUTTE|\n|MINNEAPOLIS|\n|STATE COLLEGE|\n|PORTAGE|\n|ATHENS|\n|PORTSMOUTH|\n|THOMASVILLE|\n|NASHVILLE|\n|RICHMOND|\n|JACKSON|\n|LONG BEACH|\n|MT PLEASANT|\n|AKRON|\n|CENTERVILLE|\n|BOWLING GREEN|\n|PONCE|\n|FT WALTON BEACH|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['FT WALTON BEACH', 'FORT WALTON BEACH']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table107"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|MSA Name|\n|---|\n|Wisconsin Rapids-Marshfield|\n|Maryville|\n|Washington|\n|Waycross|\n|Cumberland - Chebeague Island Town|\n|Florence-Muscle Shoals|\n|Cadillac|\n|Rockingham - Fremont Town|\n|Worcester - Templeton Town|\n|Lewiston|\n|Cumberland - Scarborough Town|\n|Cumberland - Frye Island Town|\n|Vermillion|\n|Middlesex - Wayland Town|\n|Albemarle|\n|Forest City|\n|Middlesex - Woburn City|\n|Orangeburg|\n|Augusta-Waterville|\n|Craig|\n|Camden|\n|Naples-Immokalee-Marco Island|\n|Cumberland - Freeport Town|\n|Marshalltown|\n|Brevard|\n|Forrest City|\n|Tullahoma-Manchester|\n|Madison|\n|Evanston|\n|Penobscot - Woodville Town|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Forrest City', 'Forest City']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table108"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Term Descr Long|\n|---|\n|2010 Fall|\n|2013 Fall|\n|2011 Fall|\n|2009 Fall|\n|2012 Fall|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table109"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Univerza|\n|---|\n|Universidad De Las Palmas De Gran Canaria|\n|University of Zagreb Faculty of Education and Rehabilitation Sciences|\n|HAN University of Applied Sciences Nijmegen|\n|HAN University of Applied Sciences|\n|Via University College Peter Sabroe Department of Social Education|\n|University of Huelva|\n|Politecnico Do Porto|\n|Politecnico do Porto Escola Superior de Educacao do Porto|\n|VIA University College|\n|University of Barcelona|\n|University of Lapland Faculty of Education|\n|Accademia di Belle Arti di Venezia|\n|University of Warsaw|\n|Universidad Compultense de Madrid|\n|Pedagogical University of Cracow|\n|University of Oulu|\n|HAN University of Applied Sciences Hogenschool van Arnhem en Nijmegen|\n|TU Dortmund University|\n|Masaryk University|\n|Instituto Politecnico do Porto|\n|Radboud University Nijmegen Faculty of Social Sciences|\n|Thomas More College Department of Speech and Language Audiology|\n|Universidad Complutense de Madrid|\n|University of Tampere|\n|Umea Universitet|\n|The University of Jan Evangelista Purkyne in Usti nad Labem|\n|Faculdade de Belas-Artes of the Universidade de Lisboa|\n|The Eugeniusz Geppert Academy of Art and Design in Wroclaw|\n|Avans University of Applied Sciences|\n|University of Latvia|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Universidad Complutense de Madrid', 'Universidad Compultense de Madrid']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table11"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Miejsce wykonywania \u015bwiadcze\u01442|\n|---|\n|Wojska Polskiego 144|\n|Batorego 3|\n|27|\n|Jana Susika 4|\n|Mickiewicza 12|\n|Stefana 2|\n|Wschodnia 41|\n|Szkolna 37|\n|Paderewskiego 11|\n|Mazowiecka 34|\n|Szkolna 48|\n|1-go-Maja 28 B|\n|Sporna 83|\n|Armii Krajowej 34|\n|Rolnicza 1|\n|Piotrkowska 100|\n|Lumumby 3|\n|Kopernika 23|\n|19 Stycznia 12|\n|Orkana 6\/D\/E\/F|\n|Przybyszewskiego 163|\n|Aleja Pokoju 7|\n|Wigury 19|\n|Grunwaldzka 2|\n|Wodna 5|\n|Zamknieta 12\/14|\n|Szadkowska 2|\n|Fabryczna 36|\n|Senatorska 2|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table110"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Location|\n|---|\n|18XX N MOORE ST|\n|S 15 ST\/S JOYCE ST|\n|28XX N GLEBE RD|\n|5TH RD S\/S CARLIN SPRINGS RD|\n|ARLINGTON BL\/N JACKSON ST|\n|80X S WALTER REED DR|\n|47XX N GLEBE RD|\n|16XX S WASHINGTON BL|\n|27XX WASHINGTON BL|\n|S 12 ST\/S HAYES ST|\n|19XX N DINWIDDIE ST|\n|21XX S WASHINGTON BL|\n|19XX S BELL ST|\n|14XX S JOYCE ST|\n|76X S JEFFERSON ST|\n|73X N GEORGE MASON DR|\n|N KENSINGTON ST\/ WASHINGTON BL|\n|11XX S THOMAS ST|\n|32XX S 24 ST|\n|50XX S COLUMBIA PK|\n|N I395 RT\/S JEFFERSON DAVIS HW|\n|10XX N NELSON ST|\n|31XX COLUMBIA PK|\n|42X 23RD ST S|\n|15XX CLARENDON BL|\n|61X S WALTER REED DR|\n|ARLINGTON BL\/S WASHINGTON BL|\n|W 66 RT\/ LEE HW|\n|95X N STAFFORD ST|\n|16XX N EDISON ST|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table111"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|MSRP|\n|---|\n|$100-$149|\n|$400-$449|\n|$1500-$2999|\n|$50-$99|\n|$650-$699|\n|$250-$499|\n|$10_000-$12_499|\n|$0-$249|\n|$9_000-$9_999|\n|$8_000-$8_999|\n|$250-$399|\n|$300-$399|\n|$3_000-$3_499|\n|$1_250-$1_499|\n|$300-$349|\n|$6_000-$7_499|\n|$7_500-$7_999|\n|$500-$549|\n|$3_500-$3_999|\n|$0-$49|\n|$700-$749|\n|$400-$499|\n|$450-$499|\n|$500-$749|\n|$4_000-$4_999|\n|$2_000-$2_499|\n|$350-$399|\n|$850-$999|\n|$1_500-$1_749|\n|$12_500-$14_999|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table112"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Combined|\n|---|\n|EducationExtended_OnlyRecertified_RefurbTablet1$750-$999|\n|EnterpriseADH_ExtendedNewTV2$750-$849|\n|EducationADH_ExtendedRecertified_RefurbTablet3$400-$499|\n|EducationADH_ExtendedUsedTablet3$500-$749|\n|EnterpriseExtended_OnlyRecertified_RefurbMonitors2$700-$749|\n|EnterpriseExtended_OnlyRecertified_RefurbTV3$10_000-$12_499|\n|EnterpriseExtended_OnlyRecertified_RefurbPrinters2$650-$699|\n|EnterpriseADH_ExtendedNewTV5$9_000-$9_999|\n|EducationADH_ExtendedUsedChromebook_Laptop3$1000-$1499|\n|EnterpriseADH_ExtendedRecertified_RefurbTV4$7_500-$7_999|\n|EnterpriseExtended_OnlyNewChromebook_Laptop3$1500-$2999|\n|EnterpriseADH_ExtendedRecertified_RefurbTV4$3_000-$3_499|\n|EducationExtended_OnlyUsedChromebook_Laptop1$1000-$1499|\n|EnterpriseADH_ExtendedNewTV2$6_000-$7_499|\n|EducationExtended_OnlyNewChromebook_Laptop1$300-$399|\n|EnterpriseADH_ExtendedNewChromebook_Laptop1$1500-$2999|\n|EnterpriseExtended_OnlyRecertified_RefurbPrinters3$300-$349|\n|EnterpriseExtended_OnlyRecertified_RefurbTV3$12_500-$14_999|\n|EnterpriseExtended_OnlyNewPrinters3$300-$349|\n|EnterpriseExtended_OnlyRecertified_RefurbPrinters5$250-$299|\n|EnterpriseExtended_OnlyRecertified_RefurbMonitors3$150-$199|\n|EnterpriseADH_ExtendedRecertified_RefurbTV5$500-$749|\n|EnterpriseExtended_OnlyNewTV3$1_000-$1249|\n|EnterpriseExtended_OnlyNewMonitors3$500-$549|\n|EducationExtended_OnlyUsedTablet2$1000-$1499|\n|EnterpriseExtended_OnlyRecertified_RefurbTV2$2_500-$2_999|\n|EducationExtended_OnlyNewTablet3$0-$249|\n|EnterpriseExtended_OnlyNewMonitors3$50-$99|\n|EnterpriseExtended_OnlyRecertified_RefurbTV4$750-$849|\n|EducationADH_ExtendedUsedTablet3$250-$399|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table113"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Produkt|\n|---|\n|D|\n|B|\n|I|\n|C|\n|G|\n|F|\n|J|\n|H|\n|E|\n|A|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table114"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|NOME|\n|---|\n|ALEX SANDRO CASTILHO DA SILVA|\n|MOISES LUIZ DE MELO|\n|ELISETE SILVA DE CASTRO FIORENTINO|\n|MIRIAN SANTOS PIMENTA|\n|CAROLINE DESIRRE MENDES|\n|WILKER COSTA PAES|\n|MOACIR ROCHA JUNIOR|\n|SILVIO SIMPLICIO DE LIMA|\n|EDILSON JORGE CORREA|\n|MAURO BENEDITO FERREIRA DENSER|\n|LAURA ARLETE APARECIDA NOVAIS|\n|JOSE DIAS DUVAL|\n|NELIO DA CONCEICAO ALVES|\n|MARIA CRISTINA LOPES MOURA|\n|IZABELLA SILVA ODORICO|\n|SUELI CARMO DO VALE|\n|REGINALDO DE OLIVEIRA|\n|CARLOS EDUARDO CUSTODIO|\n|CLAUDINEIA DE SOUZA|\n|LUIS CARLOS GIMEMES|\n|FLAVIO APARECIDO PIROLA|\n|DOMINGUES PAULO DOS SANTOS|\n|ANTONIO SILVESTRE LEITE|\n|WAGNER HENRIQUE DE SOUZA|\n|SERGIO ROBERTO MIRANDA DO NASCIMENTO|\n|EDUARDO MARTINEZ GUEBARA|\n|SERGIO GONCALVES|\n|FABIO DE LIMA XAVIER|\n|ISAC ALENCAR REIS|\n|CLOVIS ROBERTO DE FARIAS|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table115"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|RAKING CATEGORIA|\n|---|\n|25\/289|\n|128\/213|\n|1\/213|\n|24\/289|\n|175\/213|\n|145\/213|\n|18\/76|\n|20\/80|\n|14\/151|\n|37\/200|\n|112\/213|\n|135\/213|\n|163\/213|\n|185\/213|\n|15\/79|\n|63\/86|\n|181\/213|\n|12\/213|\n|79\/213|\n|45\/70|\n|203\/255|\n|104\/213|\n|7\/213|\n|130\/213|\n|5\/213|\n|71\/166|\n|44256|\n|54\/151|\n|62\/213|\n|225\/255|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table116"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Desc|\n|---|\n|FALSE PRETENSES\/SWINDLE|\n|THEFT FROM MOTOR VEHICLE|\n|ROBBERY|\n|DESTRUCTION\/DAMAGE\/VANDALISM|\n|TRESPASS OF REAL PROPERTY|\n|THEFT FROM BUILDING|\n|FORCIBLE RAPE|\n|DRUNKENNESS|\n|EMBEZZLEMENT|\n|POCKET-PICKING|\n|CREDIT CARD\/ATM FRAUD|\n|SIMPLE ASSAULT|\n|ALL OTHER OFFENSES|\n|PROSTITUTION|\n|LIQUOR LAW VIOLATIONS|\n|DRIVING UNDER THE INFLUENCE|\n|WEAPON LAW VIOLATIONS|\n|BAD CHECKS|\n|BURGLARY\/BREAKING AND ENTERING|\n|SHOPLIFTING|\n|IMPERSONATION|\n|ALL OTHER LARCENY|\n|EXTORTION\/BLACKMAIL|\n|DRUG\/NARCOTIC VIOLATIONS|\n|COUNTERFEITING\/FORGERY|\n|AGGRAVATED ASSAULT|\n|FORCIBLE FONDLING (CHILD)|\n|STOLEN PROPERTY OFFENSES|\n|DISORDERLY CONDUCT|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table117"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Ort|\n|---|\n|Lilla Edet|\n|Torsby|\n|Jokkmokk|\n|Skoghall|\n|Sala|\n|Karlstad|\n|Arboga|\n|Storfors|\n|Ludvika|\n|Mora|\n|Hultsfred|\n|Vilhelmina|\n|Kristianstad|\n|Skinnskatteberg|\n|Visby|\n|Viskafors|\n|Angered|\n|Vaggeryd|\n|Grums|\n|Boden|\n|Gustavsberg|\n|Krokom|\n|Kisa|\n|Munkfors|\n|Edsbyn|\n|Lund|\n|Hallstahammar|\n|Fjugesta|\n|Tingsryd|\n|Bollebygd|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table118"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Race|\n|---|\n|B\/W|\n|B\/W\/B|\n|B|\n|W\/B\/W|\n|W|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table119"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|MARCA|\n|---|\n|CHERY|\n|PEUGEOT|\n|KING LONG|\n|AUDI|\n|FALCON|\n|DONGFENG|\n|COMIL|\n|TOYOTA|\n|DONG FENG|\n|CHONGQING|\n|VENTURA|\n|TATA|\n|MACK|\n|GROVE|\n|CARMIX|\n|KENWORTH|\n|JAC|\n|MODASA - SCANIA|\n|VOLVO|\n|RADICAL|\n|VOLLKSWAGEN|\n|VOLKSWAGEN|\n|FAW|\n|MAHINDRA|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['VOLKSWAGEN', 'VOLLKSWAGEN']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table12"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|NSLP  Provision  Status|\n|---|\n|Provision 1|\n|CEP|\n|Provision 3|\n|Lunch Provision 2|\n|Breakfast Provision 2|\n|Provision 2|\n|Multiple Provision Types|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table120"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Circuit or Region|\n|---|\n|09 OC Circuit|\n|04 Circuit|\n|01 Circuit|\n|18 Circuit|\n|Statewide|\n|07 Circuit|\n|Northeast Region|\n|05 Circuit|\n|15 Circuit|\n|20 Circuit|\n|17 Circuit|\n|16 Circuit|\n|South Region|\n|12 Circuit|\n|03 Circuit|\n|14 Circuit|\n|Northwest Region|\n|10 Circuit|\n|11 Circuit|\n|08 Circuit|\n|19 Circuit|\n|Central Region|\n|09 OS Circuit|\n|13 Circuit|\n|06 Circuit|\n|02 Circuit|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table121"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Positionsindehaver|\n|---|\n|Alden Global Distressed Opportunities Master Fund|\n|Kerrisdale Advisers LLC|\n|Henderson Global Investors Limited|\n|Maverick Capital Ltd.|\n|BlueCrest Capital Management LLP|\n|AQR Capital Management LLC|\n|D. E. Shaw & Co. L.P.|\n|Perceptive Advisors LLC|\n|SFM UK Management LLP|\n|Sunrise Partners Limited Partnership|\n|Perella Weinberg Partners Capital Management Europ|\n|Lansdowne Partners Limited|\n|Rotella Acrospire LLC|\n|Bryn Mawr Capital Management Inc.|\n|Georgetown Asset Holdings Ltd|\n|J.P. Morgan Asset Management (UK) Limited|\n|Arrowgrass Capital Partners LLP|\n|Blue Ridge Capital LLC|\n|Citadel Advisors II LLC|\n|Coastal Investment Management Ltd|\n|North Tide Capital LLC|\n|Abaco Asset Management LLP|\n|SCGE Management L.P.|\n|Fil Investments International|\n|WorldQuant LLC|\n|Greenlight Capital Inc.|\n|Susa Fund Management LLP|\n|BlueCrest Capital Management Limited|\n|Eton Park International LLP|\n|AKO Capital LLP|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table122"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Provider type|\n|---|\n|Unknown|\n|Not applicable|\n|Independent Learning Provider|\n|Independent Specialist College|\n|Sixth Form College|\n|General Further Education\/Tertiary College|\n|Special College|\n|Specialist Further Education|\n|Employer|\n|Community Learning and Skills|\n|Higher Education Institution|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table123"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Organisation code|\n|---|\n|RWV|\n|R1E|\n|RW5|\n|RLN|\n|RX4|\n|RGN|\n|RAL|\n|NR5|\n|RGM|\n|RBD|\n|RRJ|\n|RAS|\n|RWW|\n|RQX|\n|REP|\n|RBQ|\n|RYA|\n|RYW|\n|RYD|\n|RNZ|\n|RRP|\n|RTD|\n|RR1|\n|RM1|\n|R1C|\n|RW4|\n|RK9|\n|RT5|\n|RVR|\n|RL1|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table124"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Highway|\n|---|\n|Interstate 94 Exit Ramp|\n|MN Highway 9|\n|MN Highway 115|\n|West Broadway Avenue|\n|US Highway 2|\n|Interstate 694|\n|CSAH 24|\n|US Highway 12|\n|34th Avenue S|\n|MN Highway 70|\n|MN Highway 44|\n|Little Canada Road|\n|France Ave S|\n|11th Street North|\n|Interstate 35W|\n|US Highway 61|\n|MN Highway 15|\n|MN Highway 97|\n|MN Highway 913A|\n|MN Highway 61|\n|Mill Street|\n|MN Highway 108|\n|MN Highway 36|\n|MN Highway 73|\n|Brockton Lane|\n|County Road 55|\n|MN Highway 114|\n|MN Highway 99|\n|John Ireland Boulevard|\n|US Highway 952A|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table125"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|\u4e8b\u696d\u6240\u540d|\n|---|\n|ReLife|\n|OUR HOUSE|\n|PICFA|\n|IROIRO|\n|WE DO RECOVER|\n|JOY|\n|Wa.to.Wa|\n|Ciente|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table126"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|NOMIS name2|\n|---|\n|Security and Intelligence Services|\n|Insolvency Service|\n|Ordnance Survey (until 2011)|\n|General Register Office for Scotland (until 2011)|\n|Government Procurement Service (from 2011)|\n|Defence Support Group (from 2009)|\n|Tribunals Service (until 2011)|\n|Scottish Fisheries Protection Agency (until 2009)|\n|Energy and Climate Change Department for (from 2009)|\n|Government Decontamination Services (until 2009)|\n|Serious Fraud Office|\n|Environment Food and Rural Affairs Department for (excl agencies)|\n|Office for Standards in Education|\n|Business Innovation and Skills (incl agencies)|\n|Attorney General's Departments|\n|Scotland Office (from 2013)|\n|HM Courts and Tribunals Service (from 2012)|\n|DWP Shared Services (until 2009)|\n|Crown Office and Procurator Fiscal Service|\n|Office of Government Commerce (until 2010)|\n|Justice Ministry of (incl agencies)|\n|Treasury Solicitor|\n|Jobcentre Plus (until 2011)|\n|Food and Environment Research Agency|\n|Government Car Service (until 2013)|\n|DARA (MOD) : until 2008|\n|Child Support Agency (until 2008)|\n|HM Treasury (incl agencies) (from 2014)|\n|Office for Security and Counter-Terrorism (until 2008)|\n|Foreign and Commonwealth Office (incl agencies)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table127"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Tiimi|\n|---|\n|Osaamisen aika|\n|Resurssiviisas alue|\n|Koulutuksen vanhat hankkeet|\n|KulttuuriVOS|\n|Yhteiskunnallinen koulutus - Salkkutaso|\n|Kiertotalous|\n|Juhlavuosi & Ratkaisu 100|\n|Vaikuttavuusinvestoimisen tuki|\n|Hiilineutraali kiertotalous - Salkkutaso|\n|Suomi Showroom|\n|Vaikuttavuusarviointi|\n|Vaikuttavuusinvestoiminen|\n|Palvelujohtamisen mahdollistaminen|\n|World Circular Economy Forum WCEF|\n|Sosiaali- ja terveyspalveluiden rahoitus|\n|Teolliset symbioosit|\n|Ecosystem policy|\n|Uudistumiskyky - Salkkutaso|\n|Julkisen sektorin johtaminen|\n|Kansanvallan peruskorjaus|\n|Kansallinen ennakointi|\n|Lakiasiat - Salkkutaso|\n|Ennakointi - Salkkutaso|\n|Osaamisverkosto|\n|Taloushallinto|\n|Hallinto - Salkkutaso|\n|Johto - Salkkutaso|\n|Sitra Lab|\n|Edu research|\n|Resurssiviisas kansalainen|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table128"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|District Name|\n|---|\n|Romeo Community Schools|\n|Michigan Great Lakes Virtual Academy|\n|Riverside Academy|\n|Northview Public Schools|\n|Grand River Preparatory High School|\n|Lapeer Community Schools|\n|Oakridge Public Schools|\n|Columbia School District|\n|Madison Academy|\n|Pinconning Area Schools|\n|Kent City Community Schools|\n|Kalamazoo RESA|\n|Marshall Academy|\n|W-A-Y Academy|\n|Fitzgerald Public Schools|\n|East Jordan Public Schools|\n|Eau Claire Public Schools|\n|Birmingham Public Schools|\n|Onekama Consolidated Schools|\n|Mendon Community School District|\n|Gobles Public School District|\n|Summit Academy North|\n|Capac Community Schools|\n|Dryden Community Schools|\n|Warren Woods Public Schools|\n|Saginaw ISD|\n|Mackinaw City Public Schools|\n|Ithaca Public Schools|\n|Old Redford Academy|\n|Countryside Academy|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table129"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Org Desc|\n|---|\n|BAHSB Central Provision|\n|OBNUM General|\n|CPACA BIOS Gen Ops|\n|FFASO Off-Campus Emp -  264|\n|BOOPT AA Temp Instruc Costs|\n|yjcnr russel reserve|\n|FFASO Off-Campus Emp -  119|\n|USSAS SSGA J Comm|\n|MDNST NS AES AWARDS|\n|JDURD PR Conference\/Seminar|\n|AZCSS Service Region 2|\n|PHYSI Support Service Ops|\n|ZABUD-2BDel Nonresid Tuition|\n|EWSUM  Art Practice|\n|SRIIS Matrix Administration|\n|AIDVO Telemarketing|\n|ALPDC Green Building Program|\n|AZCSS RA Academic Personnel|\n|JBSSL SSL Contracts & Grants|\n|UCIMO Discr Special Project|\n|ACBUD Financial Systems|\n|JNWWS External Hosting|\n|COREC Biostats_Research_PI|\n|FJPPS Inspection Svcs|\n|OJDRS Angelo Operations|\n|BCHCI Misc Funds|\n|UKHDS Athltc FoodP|\n|HGEAL East Asian Lang Gen Ops|\n|AQCPE Phys & Env Plnng Sp Proj|\n|yjcnr russell reserve|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['yjcnr russel reserve', 'yjcnr russell reserve']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table13"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Project Size|\n|---|\n|Less than $10 M|\n|$10 M to $100 M|\n|$175 M - $230 M|\n|$250 M to $350 M|\n|$100 M to $150 M|\n|$10 M to $20 M|\n|$50 M to $75 M|\n|$75 M to $125 M|\n|Greater than $100 M|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table130"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|VA Medical Center|\n|---|\n|(2V08) (673) Tampa FL|\n|(5V20) (531) Boise ID|\n|(1V04) (646) Pittsburgh PA|\n|(3V10) (553) Detroit MI|\n|(3V10) (655) Saginaw MI|\n|(2V08) (675) Orlando FL|\n|(5V22) (600) Long Beach CA|\n|(1V04) (642) Philadelphia PA|\n|(1V05) (540) Clarksburg WV|\n|(3V12) (695) Milwaukee WI|\n|(1V04) (542) Coatesville PA|\n|(3V12) (578) Hines IL|\n|(4V16) (598) Little Rock AR|\n|(1V06) (652) Richmond VA|\n|(4V19) (442) Cheyenne WY|\n|(5V21) (459) Honolulu HI|\n|(1V01) (608) Manchester NH|\n|(1V01) (405) White River Junction VT|\n|(5V20) (692) White City OR|\n|(2V07) (619) Central Alabama Veterans HCS AL|\n|(5V20) (653) Roseburg OR|\n|(5V20) (668) Spokane WA|\n|(4V16) (564) Fayetteville AR|\n|(1V04) (693) Wilkes-Barre PA|\n|(5V18) (501) New Mexico HCS|\n|(4V19) (575) Grand Junction CO|\n|(3V10) (515) Battle Creek MI|\n|(1V04) (460) Wilmington DE|\n|(3V10) (541) Cleveland OH|\n|(2V07) (679) Tuscaloosa AL|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table131"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|DEEDED OWNER|\n|---|\n|COMMUNITY DEVELOPMENT|\n|CITY OF GARY|\n|DEPARTMENT OF REDEVELOPMENT|\n|PARKS DEPARTMENT|\n|PUBLIC WORKS|\n|GUEA|\n|CITY OF GARY\/CARMEUSE LIME INC.|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table132"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|AGENCY|\n|---|\n|420 - National Labor Relations Board|\n|474 - Institute of Museum and Library Services|\n|514 - Broadcasting Board of Governors|\n|920 - Financing Vehicles and the Board of Governors of the Federal Reserve|\n|385 - Legal Services Corporation|\n|413 - National Council on Disability|\n|360 - Federal Election Commission|\n|584 - Indian Law and Order Commission|\n|542 - Council of the Inspectors General on Integrity and Efficiency|\n|900 - Allowances|\n|525 - Election Assistance Commission|\n|421 - National Mediation Board|\n|512 - Presidio Trust|\n|367 - Federal Mediation and Conciliation Service|\n|431 - Nuclear Waste Technical Review Board|\n|376 - United States Interagency Council on Homelessness|\n|362 - Federal Financial Institutions Examination Council|\n|573 - Northern Border Regional Commission|\n|435 - Office of Navajo and Hopi Indian Relocation|\n|154 - Federal Drug Control Programs|\n|349 - District of Columbia|\n|387 - Marine Mammal Commission|\n|368 - Federal Mine Safety and Health Review Commission|\n|372 - Harry S Truman Scholarship Foundation|\n|393 - National Archives and Records Administration|\n|526 - Public Company Accounting Oversight Board|\n|465 - Christopher Columbus Fellowship Foundation|\n|458 - United States Institute of Peace|\n|487 - Morris K. Udall and Stewart L. Udall Foundation|\n|581 - Bureau of Consumer Financial Protection|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table133"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Cat|\n|---|\n|MV45|\n|FV45|\n|FU20|\n|MSEN|\n|FV35|\n|MV65|\n|FSEN|\n|FV65|\n|MU20|\n|MV35|\n|MV55|\n|FV55|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table134"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|SOC Code2|\n|---|\n|53-6031|\n|35-0000|\n|51-4011|\n|13-1071|\n|53-3000|\n|41-9011|\n|11-9141|\n|43-5051|\n|53-7061|\n|51-2022|\n|51-4121|\n|53-0000|\n|43-4051|\n|21-1000|\n|41-9000|\n|15-1151|\n|43-3051|\n|37-3000|\n|31-2021|\n|25-1081|\n|19-3031|\n|13-2011|\n|49-9041|\n|43-4071|\n|53-7064|\n|11-2000|\n|53-7000|\n|43-0000|\n|39-7012|\n|41-1011|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table135"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|DEPARTAMENTO|\n|---|\n|ANTIOQUIA|\n|DISTRITO CAPITAL|\n|NORTE DE SANTANDER|\n|SANTANDER|\n|CUNDINAMARCA|\n|RISARALDA|\n|TOLIMA|\n|HUILA|\n|CALDAS|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table136"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|APELLIDOS Y NOMBRES|\n|---|\n|ROZO PARRADO ANGI MARCELA|\n|PULIDO JEREZ FABIAN ORLANDO|\n|CASTIBLANCO MONCADA LEIDY JULIANA|\n|BELTRAN DIAZ KAREM IBETH|\n|CALDERON DIAZ GABRIELA|\n|RODRIGUEZ AREVALO JUAN DAVID|\n|CALDERON PEREZ NICOLAS|\n|MURILLAS RODRIGUEZ SANDRA CATALINA|\n|SALAZAR SANCHEZ JAVIER ALEJANDRO|\n|ROJAS VILLA CAROLINA|\n|PAREDES ROJAS MARIA CAMILA|\n|GOMEZ BALLEN MARGARITA MARIA|\n|NOVOA ROJAS NAZLY CAMILA|\n|TORRES PEREZ DANIELA|\n|ALDANA PINZON TATIANA JULIETH|\n|VARELA VALENCIA JUAN JOSE|\n|PADILLA GONZALEZ KATHERINE PAOLA|\n|CESARINO VARGAS PAULA ANDREA|\n|GONZALEZ SERNA LUISA|\n|CHARRY BARBOZA CHRISTIAN JOSE|\n|MARTINEZ LOYO JOSE IGNACIO|\n|CARVAJAL CASAS SANTIAGO|\n|NARVAEZ JIMENEZ CARLOS ANDRES|\n|HOLGUIN ALFARO ALBERTO|\n|GAITAN RODRIGUEZ JOSE MIGUEL|\n|AMAYA HINCAPIE ALEJANDRO|\n|HERNANDEZ CAMPOS LUISA MARIA|\n|GARCIA CARVAJAL HAROLD JOSE|\n|VELEZ ACEVEDO KATHERINE|\n|MOSQUERA CORDOBA YESENIA|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table137"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|TableGroupLabel|\n|---|\n|Capital Adequacy|\n|SBP. Market risk|\n|Benchmarking - Initial Market Valuation|\n|General Information - AE|\n|Credit Risk|\n|SBP. General Information|\n|Market Risk|\n|Benchmarking - Market risk|\n|Funding Plans - Section 3|\n|General Information - COREP|\n|FINREP part 4|\n|FINREP part 1|\n|General Information - FINREP|\n|General Information - FP|\n|Funding templates. Section1|\n|Funding Plans - General Information|\n|Resolution SRB - General Information|\n|AE - General Information|\n|Operational Risk|\n|Stable Funding|\n|SBP. Initial Market Valuation|\n|Resolution EBA - Critical Functions and Core Business Lines|\n|FINREP part 2|\n|Leverage Ratio (Consolidated Only)|\n|Additional Liquidity Monitoring|\n|Liquidity Coverage|\n|Sovereign exposures|\n|Large Exposures|\n|Resolution EBA - General Information|\n|Leverage Ratio|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table138"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Bairro|\n|---|\n|LIMOEIRO|\n|CANECA FINA|\n|COTIA|\n|BARREIRA|\n|CENTRO|\n|ICONHA|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table139"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|CLUB NAME|\n|---|\n|precison racing|\n|Triad Racing|\n|Team Velocity|\n|Champions Inline Racing|\n|Ocala Speed Inline Racing|\n|precision racing|\n|Tiffany's Inline Speedskating Team|\n|Monroe Roller Hockey League|\n|Xtreme Speed|\n|Anderson Speed Team|\n|Rollin' 253 Speed Team|\n|Oaks Speed Skating Club|\n|Stallions Racing|\n|GR Speed|\n|Mach Racing Speed|\n|Team New England|\n|Texas Speed Club|\n|Fury Racing|\n|Synergy -VA|\n|Middlesex Racing Team|\n|Piedmont Speed Club|\n|Team Fast|\n|Pattisons Inline Racing|\n|Valley Speed Team|\n|Claremore Chaos|\n|Rolling Warriors|\n|Auburn Speed Team|\n|Fury Racing - Danville|\n|UNATTACHED- SPEED|\n|Bethlehem Stars|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['precision racing', 'precison racing']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table14"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Product Line|\n|---|\n|Kitchen & Housewares|\n|Jewelry|\n|Tools & Hardware|\n|Magazine Subscriptions|\n|Kindle eBooks|\n|Video Games|\n|Sports & Outdoors|\n|Apparel & Accessories|\n|Watches|\n|Books|\n|Software|\n|VHS|\n|DVD|\n|Automotive|\n|Cell Phones & Service|\n|Office Products|\n|Health & Personal Care Appliances|\n|Toys & Games|\n|Musical Instruments|\n|Baby|\n|Beauty|\n|Electronics|\n|Video On Demand Videos|\n|Kindle Hardware|\n|Music|\n|Pet Supplies|\n|Other|\n|MP3 Downloads|\n|Health & Personal Care|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table140"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|DESCR4|\n|---|\n|Cyprus|\n|Mexico|\n|Bouvet Island|\n|Norway|\n|Angola|\n|Oman|\n|Dominica|\n|Romania|\n|Kuwait|\n|Mali|\n|Ceuta|\n|San Marino|\n|Cook Islands|\n|Nauru|\n|Faroe Islands|\n|Stores and provisions within the framework of trade with Third Countries|\n|Bangladesh|\n|Comoros (excluding Mayotte)|\n|Bonaire Sint Eustatius and Saba|\n|United States of America|\n|France|\n|Pakistan|\n|Lesotho|\n|India|\n|Tuvalu|\n|Andorra|\n|Kazakhstan|\n|Anguilla|\n|Guatemala|\n|Kosovo (As defined by United Nations Security Council Resolution 1244 of 10 June 1999)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table141"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Sucursal|\n|---|\n|MORELIA|\n|PTO. VALLARTA|\n|MOR \/ COL|\n|CELAYA|\n|TEPIC|\n|QUERETARO|\n|AGUASCALIENTES|\n|TEP \/ PTV|\n|COLIMA|\n|LEON|\n|GUADALAJARA|\n|IRAPUATO|\n|S.L.P.|\n|ZACATECAS|\n|LAZARO CARDENAS|\n|FUERA DE TERRITORIO|\n|ZAC \/ AGS|\n|MOR QRO.|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table142"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Vakbond|\n|---|\n|AC BRIO|\n|CGSLB|\n|BBTK|\n|ACLVB|\n|ABVV|\n|ABBV|\n|AVW|\n|ACV-CSC|\n|FGTB|\n|GSLB|\n|csc|\n|ACV|\n|ABVV-FGTB|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table143"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|SOC Title|\n|---|\n|Cooks Fast Food|\n|Interior Designers|\n|Network and Computer Systems Administrators|\n|Geoscientists Except Hydrologists and Geographers|\n|Cooks Restaurant|\n|Civil Engineers|\n|Mining and Geological Engineers Including Mining Safety Engineers|\n|Coaches and Scouts|\n|Loan Interviewers and Clerks|\n|Home Appliance Repairers|\n|Hazardous Materials Removal Workers|\n|Logisticians|\n|Preschool Teachers Except Special Education|\n|Commercial Pilots|\n|Library Assistants Clerical|\n|Bus Drivers School or Special Client|\n|Civil Engineering Technicians|\n|Firefighters|\n|Substance Abuse and Behavioral Disorder Counselors|\n|Computer Occupations All Other|\n|Secretaries and Administrative Assistants Except Legal Medical and Executive|\n|Veterinarians|\n|Claims Adjusters Examiners and Investigators|\n|Special Education Teachers All Other|\n|Airline Pilots Copilots and Flight Engineers|\n|Sheet Metal Workers|\n|Food Preparation and Serving Related Workers All Other|\n|Teacher Assistants|\n|Psychiatric Technicians|\n|Computer Science Teachers Postsecondary|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table144"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|NOMBRE_SEDE|\n|---|\n|BUENAVISTA (sede principal)|\n|OCTAVIO|\n|MAZAMORRERO|\n|EL MORAL|\n|LAS JUNTAS|\n|EL CENTRO|\n|SEVILLA (sede principal)|\n|EL CREDO|\n|SAN MIGUEL|\n|LA GRANJA|\n|LA ESPERANZA  SANTA CRUZ|\n|EL TAJO|\n|PLACER ALTO|\n|VISTA HERMOSA|\n|YARUMAL|\n|ESCUELA RURAL MIXTA AGUA CLARA|\n|OBREGONES SAN FRANCISCO|\n|SAN ANTONIO|\n|LA UNION - LLANITO (sede principal)|\n|EL POTRERITO|\n|GUANGUBIO (sede principal)|\n|EL ARRAYAN|\n|ALTO DEL PALO|\n|VEREDAS UNIDAS BARRAGAN (sede principal)|\n|TEMUEY|\n|SAN RAFAEL (sede principal)|\n|MIRASOLES|\n|LAS CASITAS|\n|CAMPOALEGRE (sede principal)|\n|CASCAJERO (sede principal)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table145"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Fund Name|\n|---|\n|Aberdeen Strategic Bond Fund I Inc|\n|Emerging Markets Local Currency Corporate Bond Fund Z1 (USD)|\n|Aberdeen UK Equity Income Fund Acc A Share OEIC|\n|Aberdeen North American Equity Fund Acc I Share OEIC|\n|Liquidity Fund (Lux) - Euro Fund J3 (EUR)|\n|Aberdeen European Property Share Fund I Inc|\n|ABERDEEN MULTI-MANAGER DIVERSITY FUND D NET (ACC)|\n|Aberdeen Emerging Markets Bond Fund A Inc|\n|Euro Corporate Bond Fund A1 (EUR)|\n|Smart Beta Low Volatility Global Equity Income Fund A1 (USD)|\n|Brazil Bond Fund A1 (USD)|\n|Select Euro High Yield Bond Fund W1 (EUR)|\n|Aberdeen Responsible UK Equity Fund Acc I Share OEIC|\n|Asian Smaller Companies Fund E1 (EUR)|\n|ABERDEEN UK EQUITY INDEX MANAGED FUND A NET (INC)|\n|Canadian Dollar Bond Fund A1 (CAD)|\n|Aberdeen UK Equity Income Fund Inc A Share OEIC|\n|Aberdeen Emerging Markets Equity Fund Inc I Share OEIC|\n|Global Sovereign Opportunities Bond Fund Z1 (USD)|\n|Select Euro High Yield Bond Fund Z1 (EUR)|\n|Global Loans Fund I1 (USD)|\n|Emerging Markets Corporate Bond Fund X1 (USD)|\n|Brazil Bond Fund E1 (EUR)|\n|Select Emerging Markets Bond Fund A1 (EUR)|\n|Aberdeen Emerging Markets Bond Fund I Acc|\n|Aberdeen Diversified Growth I Acc|\n|Aberdeen Strategic Bond Fund A Acc|\n|Aberdeen Financial Equity Fund A Inc|\n|Japanese Equity Fund A1 (EUR)|\n|Aberdeen UK Property Feeder Unit Trust I ACC|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table146"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Club Name|\n|---|\n|Pietersburg Fotografie Klub|\n|Klerksdorp Fotografie Klub|\n|Tafelberg  Fotografieklub|\n|Benoni Camera Club|\n|Southern Suburbs Camera Club|\n|Beachcombers Photography Club|\n|Scottburgh Camera Club|\n|Durban Camera Club|\n|Laeveld Fotografiese Klub|\n|Kriel Foto Club|\n|Harties Fotografie Studiegroep|\n|Rustenburg Photographic Society|\n|Musina|\n|Bloemfontein Kameraklub|\n|George Camera Club|\n|On the Rocks Camera Club|\n|Brandpuntkameraklub|\n|AFO Photography Club|\n|Tygerberg Photographic Society|\n|F-Stop Fotografiese Vereniging|\n|Edenvale Photographic Club|\n|Krugersdorp Camera Club|\n|Heigel Fotoklub|\n|Bethal Fotografie Klub|\n|Maritzburg Camera Club|\n|Springs Photographic Club|\n|Uitenhage Camera Club|\n|Boksburg Camera Club|\n|Randburg Foto Klub-Randburg Photo Club|\n|National Photographic Club|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table147"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Titre|\n|---|\n|Scientific writing for young astronomers|\n|Astronomical spectrography for amateurs|\n|An introduction to planetary atmosphere|\n|Cadrans solaires sur les chemins de Compostelle|\n|Henri Bouasse un regard sur l'enseignement et la recherche|\n|Observer avec des jumelles|\n|Dans les secrets du ciel - Rencontres avec des savants remarquables|\n|L'origine des constellations|\n|Le destin de l'univers|\n|L'univers en 200 questions|\n|Dialogues avec l'univers|\n|Cambridge illustrated dictionary of Astronomy|\n|45 years of Heck in professionnal astronomy|\n|Splendeurs du ciel profond Vol. 5 Atlas du ciel austral|\n|David Levy's guide to eclipses transits and occultations|\n|La guerre des astronomes 3 Vol.|\n|Astrophotographie|\n|La Terre d'un clic - Du bon usage des satellites|\n|Big Bang comprendre l'univers depuis ici et maintenant|\n|Big questions - L'univers|\n|Les secrets du cosmos|\n|Extra-solar planets|\n|Photographier le ciel de jour comme de nuit|\n|Photographier les astres en toutes saisons|\n|Carnets de voyages relativistes - De la Terre vers les trous noirs|\n|Histoire de l'observatoire royal de Belgique|\n|Lunettes et lorgnettes|\n|L'univers multi dimensionnel|\n|Combien de doigts a un extra-terrestre ?|\n|Voyage sur les flots de galaxies - Laniakea notre nouvelle adresse|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table148"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|TableGroupLabel|\n|---|\n|SBP. Market risk|\n|Leverage Ratio (Consolidated Only)|\n|Capital Adequacy|\n|Large Exposures|\n|Funding templates. Section1|\n|SBP. Initial Market Valuation|\n|General Information - COREP|\n|Operational Risk|\n|Asset Encumbrance|\n|FINREP part 1|\n|Liquidity Coverage|\n|FINREP part 1 (GAAP only)|\n|SBP. Credit Risk|\n|SBP. General Information|\n|Additional Liquidity Monitoring|\n|Market Risk|\n|General Information - FP|\n|General Information - AE|\n|Leverage Ratio|\n|FINREP part 3|\n|Credit Risk|\n|Funding templates. Section3|\n|Group Solvency|\n|FINREP part 2|\n|General Information - FINREP|\n|Stable Funding|\n|Funding templates. Section2|\n|FINREP part 4|\n|LCR. Delegated Act|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table149"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Province|\n|---|\n|HESSEN|\n|LEICESTERSHIRE|\n|NOVA SCOTIA|\n|CORK|\n|DORSET|\n|NEW BRUNSWICK|\n|NORFOLK|\n|DERBYSHIRE|\n|nan|\n|BUCKINGHAMSHIRE|\n|TAMAULIPAS|\n|MANITOBA|\n|CEDEX|\n|ONTARIO|\n|OXFORD|\n|SURREY|\n|MIYAGI PREFECTURE|\n|ATHENS|\n|LINCOLNSHIRE|\n|NUEVO LEON|\n|WESTERN AUSTRALIA|\n|MALOPOLSKA|\n|KOWLOON|\n|SASKATCHEWAN|\n|NOVIA SCOTIA|\n|BRITISH COLUMBIA|\n|VAUD|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['NOVIA SCOTIA', 'NOVA SCOTIA']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table15"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|SectorActivity code|\n|---|\n|30-20-58-03-01-078|\n|60-21-05-66-40-145|\n|30-30-99-99-01-046|\n|40-33-70-99-01-020|\n|60-11-05-99-40-142|\n|10-22-99-99-01-033|\n|20-40-02-39-01-046|\n|20-04-99-99-01-090|\n|10-22-99-99-01-048|\n|15-35-80-34-03-009|\n|10-07-99-99-01-074|\n|40-05-69-99-01-051|\n|60-21-61-61-40-167|\n|60-03-11-05-51-000|\n|30-20-64-99-01-020|\n|30-39-76-99-73-186|\n|60-03-28-05-56-000|\n|30-20-58-03-01-001|\n|30-99-99-99-01-077|\n|15-35-85-20-03-008|\n|60-21-05-66-40-158|\n|15-35-80-82-03-009|\n|30-30-49-11-10-000|\n|15-35-87-89-03-002|\n|10-22-99-99-01-045|\n|10-38-99-99-11-071|\n|30-27-49-11-10-000|\n|60-11-05-99-40-147|\n|40-99-99-99-01-077|\n|60-21-05-64-40-150|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table150"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|N\u00b0 Facture|\n|---|\n|Fact399|\n|Fact313|\n|Fact457|\n|Fact266|\n|Fact422|\n|Fact90|\n|Fact7|\n|Fact255|\n|Fact258|\n|Fact45|\n|Fact126|\n|Fact429|\n|Fact9|\n|Fact395|\n|Fact78|\n|Fact359|\n|Fact307|\n|Fact471|\n|Fact278|\n|Fact404|\n|Fact469|\n|Fact502|\n|Fact370|\n|Fact367|\n|Fact223|\n|Fact134|\n|Fact436|\n|Fact277|\n|Fact494|\n|Fact280|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table151"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Matric Goal|\n|---|\n|Undecided|\n|Transfer|\n|Unknown|\n|GED|\n|New Career|\n|Cert\/Lic|\n|Ed. Dvlp|\n|Discover|\n|Voc. Cert.|\n|Non\/Credit|\n|4 yr Req.|\n|2 Yr AA|\n|Adv. Job|\n|2 Yr Voc.|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table152"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Occupation Title|\n|---|\n|Kindergarten Teachers Except Special Education|\n|Arbitrators Mediators and Conciliators|\n|Camera Operators Television Video and Motion Picture|\n|Loan Officers|\n|Fine Artists Including Painters Sculptors and Illustrators|\n|Jewelers and Precious Stone and Metal Workers|\n|Helpers--Installation Maintenance and Repair Workers|\n|Dentists General|\n|Artists and Related Workers All Other|\n|Genetic Counselors|\n|Petroleum Pump System Operators Refinery Operators and Gaugers|\n|Medical and Clinical Laboratory Technicians|\n|Mining Machine Operators All Other|\n|First-Line Supervisors of Protective Service Workers All Other|\n|Wholesale and Retail Buyers Except Farm Products|\n|Logging Equipment Operators|\n|Designers All Other|\n|Agents and Business Managers of Artists Performers and Athletes|\n|Epidemiologists|\n|Mining and Geological Engineers Including Mining Safety Engineers|\n|Human Resources Managers|\n|Textile Winding Twisting and Drawing Out Machine Setters Operators and Tenders|\n|Helpers--Painters Paperhangers Plasterers and Stucco Masons|\n|Aircraft Structure Surfaces Rigging and Systems Assemblers|\n|First-Line Supervisors of Non-Retail Sales Workers|\n|Furnace Kiln Oven Drier and Kettle Operators and Tenders|\n|Radio Cellular and Tower Equipment Installers and Repairs|\n|Metal Workers and Plastic Workers All Other|\n|Log Graders and Scalers|\n|Therapists All Other|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table153"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Province_Name|\n|---|\n|Enga Province|\n|Gulf Province|\n|Western Province|\n|Southern Highlands Province|\n|Hela Province|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table154"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Country|\n|---|\n|Somalia|\n|Central African Republic|\n|#country|\n|Syria|\n|Mali|\n|Cameroon|\n|Kenya|\n|DRC|\n|Ukraine|\n|South Sudan|\n|Palestine|\n|Iraq|\n|Afghanistan|\n|Nigeria|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table155"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Main fuel |\n|---|\n|Other non renewable|\n|Wind|\n|Hydro|\n|Nuclear|\n|Other renewable|\n|Biomass and biogas|\n|Natural gas|\n|Coal|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table156"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|ktname|\n|---|\n|TG|\n|AR|\n|NW|\n|GR|\n|SH|\n|GL|\n|VS|\n|VD|\n|SZ|\n|NE|\n|FR|\n|SG|\n|LU|\n|ZG|\n|BE|\n|AG|\n|BS|\n|SO|\n|UR|\n|GE|\n|BL|\n|AI|\n|JU|\n|OW|\n|ZH|\n|TI|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table157"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|TaxonomyCode|\n|---|\n|FINREP|\n|FINREP 2017-A-ED|\n|AE 2017-A|\n|AE 2014-07|\n|COREP 2016-B|\n|FP 2016-B|\n|FINREP 2015-B-Ind|\n|FINREP 2015-A-Ind|\n|AE 2014-03|\n|COREP|\n|AE 2016-A|\n|COREP 2015-A|\n|FINREP 2016-B-Ind|\n|AE 2016-B|\n|COREP 2017-A|\n|FINREP 2015-A|\n|FINREP 2017-A-Ind-ED|\n|FP 2015-A|\n|FINREP 2014-03|\n|FINREP 2014-07|\n|FP 2014-07|\n|SBP 2015-A|\n|FP 2016-A|\n|FP 2017-A|\n|SBP 2015-B|\n|FINREP 2016-A-Ind|\n|FP 2015-A-1|\n|COREP 2015-B-1|\n|FINREP 2015-B|\n|FINREP 2017-A-Ind|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table158"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|RESP FINANCEIRA|\n|---|\n|ULS Norte Alentejano|\n|ARS CENTRO|\n|ARS NORTE|\n|ARS ALENTEJO|\n|ULS Matosinhos|\n|ULS Litoral Alentejano|\n|ULS Baixo Alentejo|\n|ULS Alto Minho|\n|ULS Castelo Branco|\n|ARS ALGARVE|\n|ULS NORDESTE|\n|ARS LVT|\n|ULS Guarda|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table159"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Description|\n|---|\n|Northwestern Indiana Nursery and Landscape Association|\n|Mid East Honors Association|\n|Association of Governing Boards|\n|National League for Nursing|\n|National Association of Basketball Coaches|\n|Indianan Association of Chiefs of Police|\n|NAHB Research Center|\n|Construction Owners Association of America|\n|Council on Library and Information Resources|\n|American Association of Colleges for Teacher Education|\n|American Society of Engineering Education|\n|Federation of Associates in Behavioral & Brain Sciences|\n|America China Society of Indiana|\n|Religious Conference Management Association|\n|Council of International Schools|\n|Indiana Space Grant Consortium|\n|Association of International education Administrators|\n|Greater Elkhart Chamber of Commerce|\n|Indiana Campus Compact|\n|The Bacchus Network|\n|National Association for Biomedical Research|\n|National Association of College and University Attorneys|\n|Earthquake Engineering Research Institute|\n|Greater Lafayette Commerce|\n|Association for Assessment and Accreditation of Laboratory Animal Care|\n|American Physical Society|\n|National Association of Campus Card Users|\n|American Society for Engineering Education|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['American Society for Engineering Education', 'American Society of Engineering Education']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table16"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Measure|\n|---|\n|5. Proportion of students achieving at or above the proficient standard in Civics and Citizenship: Year 6-Level 2 (%) *|\n|1(d) NAPLAN participation: Proportion of students participating in NAPLAN for Numeracy Year 5 (%)|\n|1(e) Apparent retention rates from Year 10 to Year 12: Indigenous school students (%)|\n|2(a) Proportion of students achieving at or above the national minimum standard for Reading: Year 9-Band 6 (%)|\n|7(a) Proportion of the 20 to 24-year-old population having attained at least Year 12 or equivalent or AQF Certificate II or above (ABS Survey of Education and Work) (%)|\n|2(a) Proportion of students achieving at or above the national minimum standard for Reading: Year 5-Band 4 (%)|\n|6. Proportion of students achieving at or above the proficient standard in ICT Literacy: Year 6-Level 3 (%) *|\n|1(d) NAPLAN participation: Proportion of students participating in NAPLAN for Numeracy Year 7 (%)|\n|1(d) NAPLAN participation: Proportion of students participating in NAPLAN for Numeracy Year 3 (%)|\n|3(a) Proportion of students achieving at or above the national minimum standard for Numeracy: Year 3-Band 2 (%)|\n|1(a) Enrolment: Proportion of children aged 6 to 15 years who are enrolled in school (National Schools Statistics Collection) (%)|\n|3(a) Proportion of students achieving at or above the national minimum standard for Numeracy: Year 9-Band 6 (%)|\n|5. Proportion of students achieving at or above the proficient standard in Civics and Citizenship: Year 10-Level 3 (%) *|\n|1(e) Apparent retention rates from Year 10 to Year 12: Non-Indigenous students (%)|\n|1(d) NAPLAN participation: Proportion of students participating in NAPLAN for Writing Year 3 (%)|\n|1(c) Attendance level: The proportion of full-time students in Years 1-10 whose attendance rate in Semester 1 is equal to or greater than 90 per cent (%)|\n|3(b) NAPLAN mean scale scores for Numeracy Year 3|\n|2(c) Proportion of students achieving at or above the national minimum standard for Writing: Year 3-Band 2 (%)|\n|7(a) Proportion of the 20 to 24-year-old population having attained at least Year 12 or equivalent or AQF Certificate II or above (Census of Population and Housing) (%) ***|\n|1(d) NAPLAN participation: Proportion of students participating in NAPLAN for Reading Year 9 (%)|\n|2(d) NAPLAN mean scale scores for Writing Year 9|\n|1(e) Apparent retention rates from Year 10 to Year 12: All students (%)|\n|7(b) Proportion of the 20 to 24-year-old population having attained at least Year 12 or equivalent or AQF Certificate III or above (Census of Population and Housing) (%) ***|\n|3(c) Proportion of students achieving at or above the proficient standard (Level 3) on the OECD PISA combined mathematics scale (%) *|\n|4(b) Proportion of students achieving at or above the proficient standard (Level 3) on the OECD PISA combined scientific literacy scale: 15-year-old students (%) *|\n|3(d) Proportion of students achieving at or above the proficient standard (Intermediate international benchmark) on the TIMSS mathematics scales: Year 4 (%) **|\n|2(b) NAPLAN mean scale scores for Reading: Year 9|\n|2(b) NAPLAN mean scale scores for Reading: Year 7|\n|3(b) NAPLAN mean scale scores for Numeracy Year 7|\n|2(c) Proportion of students achieving at or above the national minimum standard for Writing: Year 5-Band 4 (%)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table160"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Type d'animal|\n|---|\n|Cobayes|\n|Reptiles|\n|chiens|\n|Lapins|\n|Poissons|\n|Autres animaux|\n|Amphibiens|\n|primates non humains|\n|chats|\n|Rats|\n|porcs|\n|souris|\n|Oiseaux|\n|bovins|\n|Autres rongeurs|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table161"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Rubro|\n|---|\n|Minerales|\n|Carga Proyecto|\n|Otros|\n|Frutas y Verduras|\n|Granos|\n|Arena|\n|Lana|\n|Madera|\n|Industriales|\n|Aceites|\n|Pesca|\n|Combustibles|\n|Subproductos|\n|Biodiesel|\n|Piedras|\n|Fertilizantes|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table162"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Miejsce realizacji - gmina|\n|---|\n|Lubliniec|\n|Wydminy|\n|Mszana Dolna|\n|Besko|\n|Przasnysz|\n|Bojanowo|\n|Jejkowice|\n|Raszyn|\n|Cisek|\n|Lubomino|\n|Osie|\n|Stare Bogaczowice|\n|Przeworsk|\n|Ropczyce|\n|Gzy|\n|Mogilno|\n|Sadkowice|\n|Lubenia|\n|Kuczbork-Osada|\n|Mieszkowice|\n|Nowa Sucha|\n|Lipinki|\n|Wierzchlas|\n|Legionowo|\n|Zduny|\n|Krzywcza|\n|Brzeg|\n|Lipno|\n|Waganiec|\n|Lubicz|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table163"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Munic\u00edpio|\n|---|\n|Recife|\n|Boa Vista|\n|Campos dos Goytacazes|\n|Fortaleza|\n|Contagem|\n|Belo Horizonte|\n|Barreiras|\n|Lavras|\n|Diamantina|\n|Manaus|\n|Porto Alegre|\n|Montes Claros|\n|Teresina|\n|Rio de Janeiro|\n|Porto Velho|\n|Pelotas|\n|Natal|\n|Pouso Alegre|\n|Ouro Preto|\n|Curitiba|\n|Petrolina|\n|Palmas|\n|Resende|\n|Santa Cruz|\n|Santos|\n|Salvador|\n|Alfenas|\n|Itabuna|\n|Aracaju|\n|Blumenau|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table164"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|County|\n|---|\n|OUTAGAMIE COUNTY|\n|SAWYER COUNTY|\n|ST. CROIX COUNTY|\n|PIERCE COUNTY|\n|DODGE COUNTY|\n|ONEIDA COUNTY|\n|IRON COUNTY|\n|GREEN COUNTY|\n|MILWAUKEE COUNTY|\n|DOUGLAS COUNTY|\n|CLARK COUNTY|\n|JEFFERSON COUNTY|\n|GRANT COUNTY|\n|ADAMS COUNTY|\n|TREMPEALEAU COUNTY|\n|CALUMET COUNTY|\n|OCONTO COUNTY|\n|WAUSHARA COUNTY|\n|LINCOLN COUNTY|\n|POLK COUNTY|\n|WALWORTH COUNTY|\n|LA CROSSE COUNTY|\n|KENOSHA COUNTY|\n|BAYFIELD COUNTY|\n|WAUKESHA COUNTY|\n|RUSK COUNTY|\n|RICHLAND COUNTY|\n|IOWA COUNTY|\n|SHAWANO COUNTY|\n|BURNETT COUNTY|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table165"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Term|\n|---|\n|12FAL|\n|13WIN|\n|11SUM|\n|10FAL|\n|11FAL|\n|12SPR|\n|13FAL|\n|14SUM|\n|12SUM|\n|16SPR|\n|16WIN|\n|14FAL|\n|15WIN|\n|15FAL|\n|11WIN|\n|10SUM|\n|15SUM|\n|13SPR|\n|12WIN|\n|14SPR|\n|14WIN|\n|11SPR|\n|13SUM|\n|15SPR|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table166"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|\u06a9\u062f \u067e\u0631\u0648\u0698\u0647|\n|---|\n|mech\/87\/4264|\n|81\/3469\/mech|\n|mech\/88\/3740|\n|mech.\/92\/7543|\n|mech.\/91\/6939|\n|mech.\/85\/3371|\n|mech\/89\/5402|\n|mech.\/83\/3375|\n|87\/3313\/mech|\n|87\/3401\/mech|\n|mech.\/92\/7648|\n|mech\/89\/5422|\n|mech\/91\/6606|\n|msc.\/aero\/86\/3481|\n|mech.\/86\/3329|\n|87\/3293\/mech|\n|74\/3446\/mech|\n|mech\/89\/5584|\n|mech.\/83\/3314|\n|mech\/90\/6131|\n|mech.\/85\/3307|\n|mech.\/83\/3326|\n|mech.\/90\/6799|\n|mech.\/87\/3313|\n|mech.\/92\/7653|\n|81\/3452\/mech|\n|mech\/89\/4263|\n|mech\/89\/5121|\n|mech.\/85\/3319|\n|mech.\/83\/3312|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table167"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Artikelbezeichnung|\n|---|\n|Klobenschrauben 50 cm verzinkt|\n|AL 2000-Element 135\/60 beschichtet|\n|Kunststoff-Schalhaut E 270\/75  21 mm|\n|RINGER - Deckentisch 2_50 x 4_00m|\n|AL-Kunststoff-Schalhaut        E 135\/90 15 mm|\n|ST 2000-Element 135\/60 verzinkt|\n|Master-Element Kunststoff V 330\/90 verzinkt|\n|xMaster-Schalhaut 330\/90 18 mm unbearbeitet|\n|Alu-Master-Element 300\/75 beschichtet|\n|AL-Kunststoff-Schalhaut E 270\/75 15 mm|\n|ST 2000-Element Kunststoff E 270\/50 verzinkt|\n|Master-Bogenblech 135\/25|\n|xAL-Element KunststoffP 270\/40 (Sonderanfertigung)|\n|xAlu-Master-Element Kunststoff 270\/75 beschichtet|\n|Belagsplatte 0_6x0_72 m (rot)|\n|Master-Schalhaut 270\/45 18 mm|\n|Aufbaurahmen 2m 135-28-7|\n|AL 2000-Element Kunststoff E 135\/90|\n|Master-Element Kunststoff V 330\/55 verzinkt|\n|Primus-Schalhaut 135\/50 15mm|\n|AL 2000-Element 270\/44         (Sonderanfertigung)|\n|Master-Element 330\/50 verzinkt|\n|Master-Element Kunststoff E 135\/55 verzinkt|\n|xKunststoff-Schalhaut P 135\/90 21 mm unbearbeitet|\n|Destilliertes Wasser|\n|AL 2000-Element 270\/40|\n|Alu-Master-Element Kunststoff E 90\/75 beschichtet|\n|PAX Primus-Schalhaut 1200 x 625 x 21 mm mit Kantenschutz|\n|AL-Schalhaut 270\/60 15 mm|\n|Primus-Schalhaut 270\/75 15mm   MITTIG GEBOHRT|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table168"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Inspection Type|\n|---|\n|FE College - full inspection|\n|FE College - requires improvement|\n|Adult and Community - full (regional)|\n|WBL - full (regional)|\n|FE in HE - full inspection|\n|ACL - requires improvement|\n|Work Based Learning - full (national)|\n|ISC - full inspection|\n|SFC - full inspection|\n|WBL - requires improvement|\n|Adult and community - full (national)|\n|FE College - reinspection|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table169"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Descriptions|\n|---|\n|CFEM domain|\n|Alpha galactosidase A|\n|Uncharacterised protein family (UPF0075)|\n|phosphatidylserine decarboxylase|\n|Protein of unknown function (DUF4243)|\n|DNA-dependent RNA polymerase|\n|Protein of unknown function (DUF1682)|\n|Domain of unknown function (DUF3449)|\n|Aminotransferase class I and II|\n|tRNA synthetases class II (A)|\n|Adaptor complexes medium subunit family|\n|Domain of unknown function (DUF4452)|\n|Ubiquinone biosynthesis protein COQ7|\n|SAM-binding_domain|\n|Glycerophosphoryl diester phosphodiesterase family|\n|Aldo\/keto reductase family|\n|Microtubule binding|\n|Sec1 family|\n|ArgJ family|\n|Glycosyl hydrolases family 11|\n|Glutamate-cysteine ligase|\n|phophatidylserine decarboxylase|\n|Protein of unknown function (DUF3684)|\n|CLN3 protein|\n|Ubiquitin carboxyl-terminal hydrolase family 1|\n|NifU-like N terminal domain|\n|Amidohydrolase|\n|Heterokaryon incompatibility protein Het-C|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['phosphatidylserine decarboxylase', 'phophatidylserine decarboxylase']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table17"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Activity Level 1|\n|---|\n|Livestock population|\n|Limestone and dolomite consumption|\n|Fuel consumption|\n|Nitrogen in unmanaged manure|\n|Fugitive emissions|\n|Limestone applied to soils|\n|Electricity generation|\n|Fuel storage|\n|Crop acreage burned|\n|Process emissions|\n|Nitrogen in managed manure|\n|Clinker production|\n|Drained histosols|\n|Use of substitutes for ozone depleting substances|\n|CO2 consumption|\n|California population|\n|Production processed|\n|Geothermal power|\n|Lime production|\n|Nitrogen in crop residues|\n|Flaring|\n|Biogas production|\n|Dolomite applied to soils|\n|Soda ash consumption|\n|Fuel combustion|\n|Electricity transmitted|\n|Nitrogen applied in fertilizer|\n|Feedstock processed|\n|Landfill gas generation|\n|Rice crop area|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table170"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|GRADES_SERVED|\n|---|\n|Grades 3-6|\n|Grades 8-12|\n|Grades 4-5|\n|Grades PK-7|\n|Grades 2-3|\n|Grades K-12|\n|Grades 2-4|\n|Grades 5-9|\n|Grades PK-6|\n|Grades 2-5|\n|Grades K-6|\n|Grades K-8|\n|Grades 6-10|\n|Grades 5-6|\n|Grades 6-7|\n|Grades 3-12|\n|Grades 3-4|\n|Grades K-7|\n|Grades PK-8|\n|Grades PK-4|\n|Grades 5-12|\n|Grades K-9|\n|Grades 6-8|\n|Grades 9-12|\n|Grades 5-8|\n|Grades 1-12|\n|Grades 3-5|\n|Grades PK-3|\n|Grades 3-8|\n|Grades 10-12|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table171"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Last Name|\n|---|\n|Suyama|\n|Peacock|\n|Leverling|\n|Fuller|\n|Callahan|\n|Dodsworth|\n|King|\n|Buchanan|\n|Davolio|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table172"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|EDAD|\n|---|\n|21A 4M 17D|\n|59A 10M 17D|\n|31A 7M 14D|\n|2A 10M 3D|\n|14A 6M 27D|\n|14A 11M 3D|\n|16A 6M 17D|\n|18A 9M 8D|\n|2A 3M 14D|\n|24A 5M 26D|\n|8A 11M 25D|\n|5A 4M 26D|\n|56A 6M 26D|\n|28A 5M 14D|\n|42A 4M 4D|\n|6A 7M 1D|\n|42A 11M 28D|\n|23A 9M 25D|\n|48A 10M 15D|\n|39A 5M 19D|\n|8A 3M 27D|\n|6A 4M 5D|\n|47A 4M 23D|\n|84A 3M 13D|\n|3A 1M 6D|\n|73A 11M 6D|\n|48A 4M 29D|\n|5A 6M 0D|\n|18A 5M 14D|\n|75A 9M 9D|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table173"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Nahya|\n|---|\n|Janudiyeh|\n|Ziyara|\n|Jizeh|\n|Khan Arnaba|\n|Kafr Takharim|\n|Suran|\n|Sarin|\n|Jobet Berghal|\n|Harf Elmseitra|\n|Sharan|\n|Ashara|\n|Shadadah|\n|Kisweh|\n|Taleen|\n|Suluk|\n|Tassil|\n|Ariqa|\n|Mansura|\n|Thiban|\n|Mazra'a|\n|Tartous|\n|Ehsem|\n|Sa'sa'|\n|Al-Thawrah|\n|Quamishli|\n|Qudsiya|\n|Qteilbiyyeh|\n|Ar-Rastan|\n|Fiq|\n|Khasham|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table174"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|9\u00b003'32.9\"N79\u00b033'23.1\"W|\n|---|\n|8.926567 -82.183537|\n|8.527268 -80.518187|\n|8.946934 -79.649954|\n|8.889502_-79.623939|\n|8.128085 -77.732004|\n|8.870240 -79.711349|\n|8.407508_-82.710443|\n|7.965002 -80.428599|\n|8.535473 -79.923570|\n|9.363804 -79.902671|\n|8.646375 -82.760383|\n|7.738650 -80.373163|\n|7.816590 -80.492080|\n|9.363888 -79.904890|\n|8.603556 -79.887438|\n|9.1046392_-79.3657279|\n|8.742814 -82.820092|\n|N7.884643 W80.978762|\n|8.593396 -82.623755|\n|8.519888 -82.507194|\n|8.860825 -79.880030|\n|8.551094 -82.651222|\n|N8.025794 W78.209547|\n|8.404508 -82.556639|\n|8.32344_-77.753162|\n|N8.539560 W82.435267|\n|9.199207_-78.902607|\n|8.979888_-79.51282|\n|7.629723 -80.119788|\n|8.948412_-79.54891|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table175"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Kurzzeichen CMA|\n|---|\n|kew|\n|jj|\n|hma|\n|bof|\n|kae|\n|bim \/ dl|\n|fri|\n|gma|\n|whf|\n|klb|\n|hcl|\n|pn|\n|bug|\n|ra|\n|rl|\n|lu|\n|bit|\n|tay|\n|dl \/ bim|\n|sum|\n|sbi|\n|mb|\n|win|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table176"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Case Manager Assistant|\n|---|\n|Linder Ursula|\n|Wyss-Romanello Sabine|\n|Burkhalter Gabriele|\n|Bitschnau Monika|\n|Whitehead Frances|\n|Tanner Yvonne|\n|Kunz-Greub Marianne|\n|Krebs Franziska|\n|Keusen Kathrin|\n|Pereira Claudia|\n|Buchter Linda \/   Leuenberger Monika|\n|Paniga Nicoletta|\n|Sandrowski Alice|\n|Ziehli Mariette|\n|Leuenberger Monika \/ Buchter Linda|\n|Staempfli Barbara|\n|Winzenried Therese|\n|Jungo Jacqueline|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table177"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Municipality|\n|---|\n|TOWN OF SEYMOUR - EAU CLAIRE COUNTY|\n|TOWN OF GOODMAN - MARINETTE COUNTY|\n|TOWN OF EMERALD - ST. CROIX COUNTY|\n|TOWN OF CATO - MANITOWOC COUNTY|\n|CITY OF CHILTON - CALUMET COUNTY|\n|TOWN OF DUNBAR - MARINETTE COUNTY|\n|VILLAGE OF LONE ROCK - RICHLAND COUNTY|\n|TOWN OF ARGONNE - FOREST COUNTY|\n|TOWN OF LINCOLN - POLK COUNTY|\n|TOWN OF SAUKVILLE - OZAUKEE COUNTY|\n|CITY OF SPARTA - MONROE COUNTY|\n|TOWN OF FARMINGTON - LA CROSSE COUNTY|\n|VILLAGE OF WHITE LAKE - LANGLADE COUNTY|\n|TOWN OF WASHINGTON - SAUK COUNTY|\n|TOWN OF WESTFIELD - MARQUETTE COUNTY|\n|TOWN OF BLOOMFIELD - WAUSHARA COUNTY|\n|TOWN OF FOND DU LAC - FOND DU LAC COUNTY|\n|TOWN OF TURTLE - ROCK COUNTY|\n|TOWN OF BERLIN - MARATHON COUNTY|\n|CITY OF PRINCETON - GREEN LAKE COUNTY|\n|TOWN OF MEDFORD - TAYLOR COUNTY|\n|TOWN OF SPRINGDALE - DANE COUNTY|\n|TOWN OF HARRISON - GRANT COUNTY|\n|TOWN OF YORK - GREEN COUNTY|\n|VILLAGE OF COTTAGE GROVE - DANE COUNTY|\n|CITY OF MARINETTE - MARINETTE COUNTY|\n|VILLAGE OF BIG FALLS - WAUPACA COUNTY|\n|TOWN OF UNION - WAUPACA COUNTY|\n|TOWN OF BUENA VISTA - PORTAGE COUNTY|\n|TOWN OF CASSIAN - ONEIDA COUNTY|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table178"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|DayName|\n|---|\n|Sunday|\n|Saturday|\n|Wednesday|\n|Friday|\n|Thursday|\n|Tuesday|\n|Monday|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table179"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Current City|\n|---|\n|GENOA|\n|HAYES CENTER|\n|MERRIMAN|\n|MAYWOOD|\n|BROADWATER|\n|ARAPAHOE|\n|CRAWFORD|\n|ALLIANCE|\n|KEARNEY|\n|WOLBACH|\n|AINSWORTH|\n|BLUE HILL|\n|OAKLAND|\n|MINDEN|\n|PAXTON|\n|LYMAN|\n|UNADILLA|\n|NEBRASKA CITY|\n|HARBINE|\n|GERING|\n|HEMINGFORD|\n|NEWMAN GROVE|\n|GRAND ISLAND|\n|WAHOO|\n|HAY SPRINGS|\n|MERNA|\n|BURWELL|\n|ALLAINCE|\n|VALENTINE|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['ALLIANCE', 'ALLAINCE']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table18"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Unit|\n|---|\n|EA|\n|TUB|\n|HD|\n|CS|\n|PK|\n|PAIL|\n|BAG|\n|BX|\n|LB|\n|DZ|\n|BT|\n|EACH|\n|CASE|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table180"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Sucursal|\n|---|\n|PTO. VALLARTA|\n|S.L.P.|\n|ZAC \/ AGS|\n|TEP \/ PTV|\n|TEPIC|\n|LAZARO CARDENAS|\n|QUERETARO|\n|COLIMA|\n|ZACATECAS|\n|MORELIA|\n|LEON|\n|FUERA DE TERRITORIO|\n|AGUASCALIENTES|\n|CELAYA|\n|GUADALAJARA|\n|MOR QRO.|\n|IRAPUATO|\n|MOR \/ COL|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table181"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|\u03a0\u03a1\u0391\u03a4\u0397\u03a1\u0399\u039f|\n|---|\n|DERESIO PETROLEUM LTD|\n|LOUKA & ODYSSEOS TRADING LTD|\n|R.A.M. OIL CYPRUS LIMITED|\n|A. K. Konnaris Service Station Ltd (Platres)|\n|A.S. CHARALAMBOUS PETROLEUM LTD|\n|C. PRENTZAS PETROL STATIONS LIMITED|\n|GEOCHRIMA FUELS LTD|\n|CYROMANIA GROUP LIMITED|\n|A & V VAVATSINIOTIS PETROL STATION LIMITED|\n|N. KARVELLIS PETROL LIMITED|\n|Christina S. Andreou|\n|Eleni Savva|\n|DOUBLE N. GAS STATION LIMITED|\n|PAMBINOS PETROL STATION LIMITED|\n|PANAYIOTA DEMETRIOU LTD|\n|S. A. N. Michael Petroleum Products Ltd|\n|Z. & S. PETROL STATION LTD|\n|DEMETRIS XANDRIS DEVELOPMENTS LTD|\n|K.K.A. AGRICULTURAL CO. LIMITED|\n|GOLRAY ENTERPRISES LTD|\n|N.P.M. GABRIEL LIMITED|\n|G & K Kouppas Ltd|\n|Marios Miltiadous Petrol Station Ltd|\n|C.K.M. PETROLEUM LIMITED|\n|N. ANDRONICOU SERVICE CENTER LIMITED|\n|TROPALI PETROLEUM TWO LTD|\n|TROPALI PETROLEUM LTD|\n|C. MENIKOU AND A. NICOLAOU OILS LIMITED|\n|A. K. Konnaris Service Station Ltd|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table182"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|DISTRICT_PUBLIC_NAME|\n|---|\n|RSU 87\/MSAD 23|\n|RSU 07\/MSAD 07|\n|RSU 01 - LKRSU|\n|Scarborough Public Schools|\n|RSU 22|\n|Machiasport Public Schools|\n|Great Salt Bay CSD|\n|Athens Public Schools|\n|RSU 79\/MSAD 01|\n|Harmony Public Schools|\n|Brewer Public Schools|\n|Alexander Public Schools|\n|RSU 30\/MSAD 30|\n|Surry Public Schools|\n|RSU 02|\n|John Bapst Memorial High School|\n|Opportunity Training Center|\n|Spurwink School Inc|\n|South Portland Public Schools|\n|South Bristol Public Schools|\n|RSU 83\/MSAD 13|\n|RSU 74\/MSAD 74|\n|Princeton Public Schools|\n|Chebeague Island Public Schools|\n|Madawaska Public Schools|\n|RSU 84\/MSAD 14|\n|RSU 33\/MSAD 33|\n|Machias Public Schools|\n|RSU 40\/MSAD 40|\n|RSU 68\/MSAD 68|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table183"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name|\n|---|\n|KIM Junghwan|\n|CASSARA Andrea|\n|SAFIN Timur|\n|DERIGLAZOVA Inna|\n|ANSTETT Vincent|\n|GAROZZO Daniele|\n|LAMBERT Maxence|\n|CIARAGLIA Sofia|\n|MIKINA Sabina|\n|TRANI Francesco|\n|ZAGUNIS Mariel|\n|KIM Hyunjin|\n|CRISCIO Martina|\n|CHAMLEY-WATSON Miles|\n|KIEFER Lee|\n|HURLEY Courtney|\n|XU Chengzi|\n|JERENT Daniel|\n|CHRISTMANN Beate|\n|PIZZO Paolo|\n|LUCENAY Jean-Michel|\n|PARK Kyoungdoo|\n|FERRARI Marta|\n|BOUDIAF Saoussen|\n|MONTANO Aldo|\n|NAVARRIA Mara|\n|SZATMARI Andras|\n|TOFALIDES Alex|\n|PARK Sangyoung|\n|ZHEREBCHENKO Dmitry|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table184"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Player_Assc|\n|---|\n|SCO|\n|HKG|\n|CHI|\n|SKN|\n|DMA|\n|BLR|\n|MAS|\n|MAR|\n|LUX|\n|ESP|\n|CIV|\n|PAR|\n|SMR|\n|MAC|\n|MLT|\n|KUW|\n|CHN|\n|NGR|\n|PER|\n|SGP|\n|SEY|\n|JPN|\n|LTU|\n|KOS|\n|ENG|\n|BEN|\n|BAN|\n|AZE|\n|KAZ|\n|PHI|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table185"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Contact Email|\n|---|\n|not provided|\n|priti.patel@wellsfargo.com|\n|hayley.stuckel@kcc.com|\n|patricia.hernandez@emerson.com|\n|katelyn.m.fiefer@us.pwc.com|\n|njkoewler@landolakes.com|\n|earlycareertalent@starbucks.com|\n|brandy.rudolph@hp.com|\n|amit.puri@mckesson.com|\n|lindsay.moran@libertymutual.com|\n|jodee.klinker@conagrafoods.com|\n|Lindsay.Park@us.nestle.com|\n|james.fripp@yum.com|\n|david.m.potter@dupont.com or beverly.p.bove@dupont.com|\n|katay.wooler@mattel.com|\n|jennifer.kaplan@credit-suisse.com|\n|dvegas@mtb.com|\n|jennifer.h.hanson@gsk.com or rachel.x.tannebaum@gsk.com|\n|pjchristie@express-scripts.com|\n|shawn.wylin@gm.com|\n|jayce.hameen@delta.com|\n|tish_archie@colpal.com|\n|catie.fudge@wellsfargo.com|\n|tiffany.harrison@citi.com|\n|ernest.adams@danaher.com or amanda.siuda@danaher.com|\n|rbennett@centene.com|\n|roger.antoniazzo@abbott.com|\n|Marketing@whitewave.com|\n|Kristie.Ferriell@kraftfoods.com|\n|ckilbourne@hersheys.com or ctruitt@hersheys.com|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table186"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Country|\n|---|\n|HONDURAS|\n|AFGHANISTAN|\n|NICARAGUA|\n|COLOMBIA|\n|LEBANON|\n|BHUTAN|\n|ERITREA|\n|VIETNAM|\n|CZECH REPUBLIC|\n|GUATEMALA|\n|INDIAN OCEAN|\n|AZERBAIJAN|\n|SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS|\n|UKRAINE|\n|ARMENIA|\n|ALBANIA|\n|NEW CALEDONIA|\n|ETHIOPIA|\n|KERMADEC ISLANDS (NEW ZEALAND)|\n|CYPRUS|\n|PALAU|\n|GABON|\n|BARBADOS|\n|NEPAL|\n|CENTRAL AFRICAN REPUBLIC|\n|ROMANIA|\n|SLOVAKIA|\n|INDONESIA|\n|YEMEN|\n|HUNGARY|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table187"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Reporting Unit|\n|---|\n|Ward 115|\n|Ward 258|\n|Wards 3-4_22|\n|Wards 5-7|\n|Ward 171|\n|Ward 191|\n|Ward 318|\n|Wards 1_2_3|\n|Wards 3_9|\n|Ward 203|\n|Ward 309|\n|Ward 224|\n|Ward 122|\n|Ward 64|\n|Ward 148|\n|Wards 1-8|\n|Ward 27|\n|Wards 7_9-12|\n|Wards 1-4|\n|Wards 6-7|\n|Ward 134|\n|Ward 28|\n|Ward 231|\n|Ward 196|\n|Wards 13-14|\n|Ward 29|\n|Ward 87|\n|Ward 106|\n|Ward 284|\n|Wards 3_13|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table188"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Desc|\n|---|\n|FORCIBLE FONDLING (CHILD)|\n|FORCIBLE SODOMY|\n|ALL OTHER LARCENY|\n|DRUG\/NARCOTIC VIOLATIONS|\n|THEFT FROM BUILDING|\n|DRUNKENNESS|\n|MOTOR VEHICLE THEFT|\n|WEAPON LAW VIOLATIONS|\n|CREDIT CARD\/ATM FRAUD|\n|DESTRUCTION\/DAMAGE\/VANDALISM|\n|COUNTERFEITING\/FORGERY|\n|ALL OTHER OFFENSES|\n|DRUG EQUIPMENT VIOLATIONS|\n|PORNOGRAPHY\/OBSCENE MATERIAL|\n|DRIVING UNDER THE INFLUENCE|\n|SHOPLIFTING|\n|FALSE PRETENSES\/SWINDLE|\n|ROBBERY|\n|STOLEN PROPERTY OFFENSES|\n|IMPERSONATION|\n|BURGLARY\/BREAKING AND ENTERING|\n|INTIMIDATION|\n|SIMPLE ASSAULT|\n|PROSTITUTION|\n|THEFT FROM MOTOR VEHICLE|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table189"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|METAL TYPE|\n|---|\n|FLAT BAR|\n|SHEET|\n|ROUND BAR|\n|CIRCLE PLATE|\n|HEX|\n|PLATE|\n|SQAURE BAR|\n|SQUARE BAR|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['SQUARE BAR', 'SQAURE BAR']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table19"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Description (Payable)|\n|---|\n|JAN 2018 POLICE CELL PHONE USAGE|\n|UNIT 15-06 BUCKET TRUCK REPAIR-PW|\n|CHLORINE @ WATER PLANT #2 - 1.11.2018|\n|JAN 2018 WWTP PHONE & INTERNET SERVICE|\n|DEC 2017 CELL PHONES USAGE- P\/W & W\/S POOL|\n|A. ADAMS- COURT CLERK TRAINING|\n|JAN 2018 CELL PHONE USAGE REIMBURSEMENT|\n|DEC 2017 PLOTTER & SCANNER MAINT. AGREEMENT|\n|SANDWICHES FOR HOTELIER MEETING|\n|UNIT 15-03 TOWED TO FLEET|\n|2018 TPCA MEMBERSHIP DUES|\n|AC THERMOSTAT COVERING|\n|OCT-DEC 2017 OMNI FEES|\n|J. LEDESMA (NEW HIRE) UNIFORM|\n|FIBER TO HOME SEVICE AGREEMENT REVIEW|\n|DEC 2017 PAPER GOODS & CLEANING SUPPLIES|\n|CHLORINE @ WWTP - 1.16.2018|\n|GAS TAMPER REPAIR-PW|\n|MEMBERSHIP FEE- 4\/1\/2018-3\/31\/2019|\n|L. COLLINS UNIFORM|\n|C. LEHMAN UNIFORM|\n|HANDHELD & IN-CAR RADIOS|\n|J. FERRAND TRAVEL - SEX OFFENDER REGISTRATION|\n|UNIT 17-02 CHEVROLET TAHOE|\n|OCT 2017 TRASH BASH-ELECT\/CHEMICAL|\n|JAN 2018 WATER\/SEWER\/SPRK USAGE @ GUADALAJARA|\n|PLANT FOR JACKIE T. GRANDFATHER'S FUNERAL|\n|LOA DECORATIONS\/SUPPLIES|\n|DEC 2017 CHEMICAL CONTAINER RENTAL- WATER PLANTS|\n|FEB 2018 - FIRE ALARM SERVICE LINES @ PARK|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table190"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|M\u00caS|\n|---|\n|Fev|\n|Mai|\n|Jun|\n|Set|\n|Nov|\n|Out|\n|Jul|\n|Dez|\n|Ago|\n|Abr|\n|Jan|\n|Mar|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table191"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Year Level|\n|---|\n|Year 6|\n|Special|\n|Year 10|\n|Year 3|\n|Prep Year|\n|Year 2|\n|Year 12|\n|Year 4|\n|Year 1|\n|Early Childhood|\n|Year 9|\n|Year 8|\n|Year 5|\n|Year 7|\n|Year 11|\n|Ungraded|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table192"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Model Number|\n|---|\n|GW6000-DT|\n|STP15000TL-30|\n|BG20KTR|\n|PVI-3.6-TL-OUTD-S|\n|CSI-25KTL-GI-FL|\n|ZA1I4K6DS|\n|Solis-3P12K-4G|\n|UNO-3.0-TL-OUTD-S|\n|SOFAR 6.6KTL-X|\n|URE-10K|\n|SB3.0-1AV-40|\n|SPS5KTL-B|\n|ZDNY-TL 10000|\n|SPI4600-B2|\n|RPI-H5A_02X(AU\/NZ PL4K6)|\n|RPI M10A|\n|Soltaro-33K|\n|30000TL3-SE|\n|SK-SU5000E|\n|Symo 10.0-3-M|\n|12\/3000\/120-50|\n|MG4K6TL-2M|\n|Solis-mini-700-4G|\n|RPI-H5A_02X(AU\/NZ PL4K99)|\n|SE25K|\n|TS-4.6K2SJ|\n|RPI-H5A_020(AU\/NZ PL4K6) (Queensland Energy)|\n|TB5200TD|\n|SolarRiver 5300TL-G3|\n|O1-2000S-TL|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table193"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|OMBACCT|\n|---|\n|014-05-0535   Embassy Security Construction and Maintenance|\n|011-05-0322   Salaries and Expenses United States Attorneys|\n|012-05-8042   Unemployment Trust Fund|\n|014-15-1078   Construction IBWC|\n|014-10-1124   Contributions for International Peacekeeping Activities|\n|012-25-4601   Working Capital Fund|\n|014-05-8340   Foreign Service National Separation Liability Trust Fund|\n|014-25-8813   Center for Middle Eastern-Western Dialogue Trust Fund|\n|014-05-4519   Working Capital Fund|\n|011-10-0200   Salaries and Expenses|\n|012-23-0150   Salaries and Expenses|\n|012-05-0326   Federal Unemployment Benefits and Allowances|\n|014-05-0121   Conflict Stabilization Operations|\n|011-05-0324   Salaries and Expenses United States Marshals Service|\n|012-25-0164   Veterans Employment and Training|\n|014-25-5116   Fishermen's Protective Fund|\n|012-25-0106   Office of the Inspector General|\n|012-05-0185   States Paid Leave Fund|\n|011-06-0333   Payment to Radiation Exposure Compensation Trust Fund|\n|014-05-0209   Educational and Cultural Exchange Programs|\n|012-18-0400   Salaries and Expenses|\n|014-15-1082   American Sections International Commissions|\n|014-05-4107   Repatriation Loans Financing Account|\n|012-25-0165   Salaries and Expenses|\n|012-20-0200   Salaries and Expenses|\n|011-03-1102   National Drug Intelligence Center|\n|011-05-0500   Salaries and Expenses Community Relations Service|\n|012-05-0179   State Unemployment Insurance and Employment Service Operations|\n|011-05-0340   September 11th Victim Compensation (general Fund)|\n|014-05-0523   Payment to the American Institute in Taiwan|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table194"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|fancier|\n|---|\n|UNGUREANU OVIDIU|\n|BAGIU&VASII CIP ALEX|\n|MARK TIEMISSEN|\n|H&W DAALWIJK|\n|TEAM CHIRITA&MARICA|\n|STOICA IULIAN|\n|GRIGORIE TUDOR|\n|STROE ADRIAN|\n|MOCIOI IONUT|\n|CRESCATORIA FORUM|\n|DALLES BUCSANI OLR|\n|THIAGO DOMINIC|\n|BRUTARU & MATACHE|\n|TEAM STAN ADRIAN|\n|HANGIU FLORIN|\n|GONE WITH THE WIND|\n|TEAM NEW GEN|\n|BRUMA ADRIAN|\n|MORTILA IULIAN|\n|HANGIU & PRODAN|\n|DANESCU & MINCIUNA|\n|SOARE CONTANTIN|\n|BARBU ANASTASIA|\n|TEAM N & D|\n|TEAM C & C|\n|CARUNTU & REBREAN|\n|GABI COMAN|\n|FRATII TANASOIU|\n|DOBRE RAZVAN|\n|TEAM RADU|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table195"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|20. Have you provided any feedback to I\/NGOs on reconstruction processes including: asking a question filling a complaint\/concern\/grievance?|\n|---|\n|Completely yes|\n|Not very much|\n|#indicator+protection+q020|\n|Somewhat yes|\n|Not at all|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table196"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Player_Name|\n|---|\n|KUSINSKA Klaudia|\n|GACINA Andrej|\n|BALABAN Ademir|\n|ALI Kanate|\n|GU Yuting|\n|SARSEMBAYEV Dias|\n|HELLE Tanja|\n|ANDERSSON Anton|\n|HASSAN Nurudeen|\n|OYETAYO Sola|\n|SANTOSO Ficky|\n|CUMMINGS Natalie|\n|WANG Eugene ^|\n|DUDA Benedikt|\n|HETHERINGTON Matthew|\n|RAMEEZ Muhammad|\n|LI Jiao|\n|KATO Miyu|\n|BAJOR Natalia|\n|NAZIM Aishath|\n|HRISTONOV Hristo|\n|MORRI Chiara|\n|HOUDJI Zinsou|\n|CARVALHO Diogo|\n|DIDUKH Oleksandr|\n|O'DRISCOLL Michael|\n|PINTEA James|\n|KATSUMATA Luana|\n|OLUYOMI Salako|\n|HAN Ying ^|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table197"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Nom|\n|---|\n|BORCHASHVILI|\n|OUSSAIH|\n|SBAI|\n|HAJRAOUI|\n|BIOUI|\n|CHUCHAEV|\n|CHOUROUHOU|\n|EL MEJDOUBI|\n|LACHIRI|\n|BOENS|\n|OUAHABI|\n|HAKIMI|\n|NOUAMANE|\n|ELHAMDAOUI|\n|SBAA|\n|EL FILALI|\n|TAHIRI|\n|IBRAIMI|\n|R'HA|\n|ELOUASSAKI|\n|GODART|\n|GAINI|\n|ZINATI|\n|JAMIAI|\n|CANKURTARAN|\n|AL BOUZIDI|\n|El MORABIT|\n|CAR|\n|SLITI|\n|KOUNDI|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table198"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Regional Planning Commission|\n|---|\n|Lamoille County Planning Commission|\n|Addison County Regional Planning Commission|\n|Rutland Regional Planning Commission|\n|Northwest Regional Planning Commission|\n|Central Vermont Regional Planning Commission|\n|Bennington County Regional Commission|\n|Chittenden County Regional Planning Commission|\n|Two Rivers-Ottauquechee Regional Commission|\n|Northeastern Vermont Development Association|\n|Windham Regional Commission|\n|Southern Windsor County Regional Planning Commission|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table199"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|PRENOM|\n|---|\n|ANNE-MARINE|\n|LAURINE|\n|SOFIANE|\n|MONA|\n|JACQUES|\n|ILHAM|\n|TARA|\n|CHIRISTINE|\n|VANESSA|\n|VY AN|\n|RITA|\n|MYRIAM|\n|HABIBATA|\n|LAURIE|\n|ANA-MARIA|\n|LOVA|\n|PHIXAY|\n|DIONNY|\n|ANNUNZIATA|\n|FATOU|\n|NAJWA|\n|ISADORA|\n|YVES|\n|ZIMENG|\n|GRIGNOU|\n|MARIA ALICE|\n|CHRISTINE|\n|HERVE|\n|M.|\n|ANNE-CHARLOTTE|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['CHRISTINE', 'CHIRISTINE']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table2"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|First Name|\n|---|\n|Alfredo|\n|Jim|\n|Tammy|\n|Luci|\n|Sybil|\n|Erin|\n|Chad|\n|Kristy|\n|Kevin|\n|Amber|\n|Kenneth|\n|Yvonne|\n|Brent|\n|Missy|\n|Keisha|\n|Terry|\n|APRIL|\n|MERCEDES|\n|Joan|\n|Courtney|\n|Cam|\n|Abigail|\n|Valerie|\n|Suzanne|\n|Joyce|\n|Melody|\n|Dmitriy|\n|Yvonee|\n|Wendy|\n|Shayne|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Yvonne', 'Yvonee']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table20"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Click arrow to filter state  State|\n|---|\n|Arizona|\n|Colorado|\n|California|\n|Alabama|\n|Michigan|\n|Nebraska|\n|Delaware|\n|Kentucky|\n|Missouri|\n|Puerto Rico|\n|South Dakota|\n|Georgia|\n|Mississippi|\n|Virgin Islands|\n|Vermont|\n|Wisconsin|\n|American Samoa|\n|Texas|\n|Oklahoma|\n|Idaho|\n|New Jersey|\n|South Carolina|\n|Northern Mariana Islands|\n|Ohio|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table200"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|glcommodity|\n|---|\n|Community participation and support|\n|Clothing and safety equipment|\n|Property & facilities|\n|Hardware|\n|P&E - Medical\/ICT\/BCM|\n|Logistics|\n|Medical consumables|\n|Medical labour and support services|\n|Health and well-being|\n|Travel|\n|Business equipment and services|\n|Telecommunications|\n|Materials and equipment|\n|Fleet|\n|BCM Contractors & specialists|\n|Food and catering services|\n|Electricity and utilities|\n|ICT Services|\n|Contingent labour|\n|Prosthetics|\n|Medical equipment|\n|Professional services|\n|Marketing|\n|Grants|\n|Queensland Health|\n|Pharmaceuticals|\n|Medical equipment and maintenance|\n|Z Non-procurement|\n|Software services|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table201"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Klient|\n|---|\n|Anna Dworek|\n|Waldemar Potoniec|\n|Leon Rybka|\n|Marek Gajzler|\n|Robert Jakubiak|\n|Tadeusz Meszczyk|\n|Renata Gielar|\n|Krystyna Kozielska|\n|Marian Sekulski|\n|Ewa Chmielewska|\n|Katarzyna Marchewka|\n|Marek Kapecki|\n|Zbigniew Wolny|\n|Roman Kwiatkowski|\n|Ryszard Szufel|\n|Piotr Rybkowski|\n|Janusz Najderek|\n|Barbara Falecka|\n|Monika Rogowska|\n|Tadeusz Tracz|\n|Robert Kucharycz|\n|Grzegorz Niski|\n|Anna Siwek|\n|Katarzyna Gers|\n|Marek Borowski|\n|Artur Wolski|\n|Dorota Szajnowska|\n|Piotr Sikorski|\n|Roman Pawluch|\n|Grzegorz Kujda|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table202"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Branch|\n|---|\n|FSC_MADRID: (ES-007028)|\n|CORTEFIEL (ES-007115)|\n|FSC_SAN SEBASTIAN: (ES-007004)|\n|CWT ES - META4:     (ES007127)|\n|CWT ES - MAD- MAJADAHONDA:     (ES007652)|\n|CWT ES - IKEA:     (ES007128)|\n|ONSITE_ABB: (ES-007884)|\n|CWT ES - PULL AND BEAR:     (ES007140)|\n|ON SITE-INDITEX SALLENT:     (ES-007826)|\n|ONSITE_COBEGA: (ES-007890)|\n|CWT ES - CASER:     (ES007117)|\n|FSC_BARCELONA: (ES-007109)|\n|ONSITE_OAMI: (ES-007046)|\n|CWT ES - BAUSCH & LOMB:     (ES007132)|\n|CWT ES - ABENGOA:     (ES007136)|\n|ONSITE COLOMER: (ES-007409)|\n|CWT ES - MANAGEMENT SOLUTIONS:     (ES007134)|\n|CWT ES - BTC ZARAGOZA:     (ES-007010)|\n|FSC_SABADELL: (ES-007846)|\n|CWT ES - FULFILLMENT CENTER:     (ES007116)|\n|FSC_BILBAO: (ES-007069)|\n|CWT ES - INITEC:     (ES007142)|\n|BANCO SANTANDER (ES-007101)|\n|CWT ES - MAD- RECOLETOS:     (ES007651)|\n|ONSITE_MTORRES: (ES-007140)|\n|MSC-ESPANA: (ES-007836)|\n|CWT ES - SEVILLA SERVICE CENTER:     (ES007130)|\n|FSC-VIRTUAL:     (ES007100)|\n|CWT ES - MICE GRUPOS BARCELONA:     (ES-007085)|\n|ONSITE_FAGOR: (ES-007847)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table203"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Org L2 Control Unit Node|\n|---|\n|CAMSU|\n|SCHOL|\n|VCRES|\n|COLLS|\n|COLLE|\n|CENLD|\n|UCOP2|\n|OACAD|\n|DANR2|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table204"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Bundesland|\n|---|\n|Salzburg|\n|Burgenland|\n|Steiermark|\n|Wien|\n|Vorarlberg|\n|Tirol|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table205"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|NOME|\n|---|\n|BRUNA DE SOUSA ALVES|\n|APARECIDA DE MENEZES MERCURIO|\n|ANA LUCIA MARTINS DE CARVALHO|\n|FATIMA REGINA DE BARROS|\n|ANDRE GUERREIRO|\n|VALDEMAR RODRIGUES DA SILVA|\n|GERONIMO MARCIO CORACI|\n|PATRICIA SAYURI SAKAMOTO MASSUDA|\n|MARIA BERNADETE DE OLIVEIRA FURTADO|\n|ROBERTA KOSZERGI RONSINI VIANA|\n|MARCELA CATARINA PEREIRA AMORIM|\n|REGINA MARIA MATHIAS|\n|FERNANDO RODRIGUES DA SILVA|\n|ANTONIO MARIO DOS REIS|\n|DIEGO DE JESUS SERRANO|\n|BRUNO LEME FERREIRA DA SILVA|\n|RONALDO PERES|\n|ALBERTO FELIX DE ALMEIDA|\n|KELLY CRISTINA NEVES FELICIO|\n|ROSEMEIRE GUERREIRO ALVES|\n|YARA SILVA MARTINEZ|\n|MARILDA GONCALVES SOUZA DE PAULA|\n|DORALICE ALVES DA SILVA COPPI|\n|ANA MARIA DE ARAUJO|\n|AGUINALDO PERPETUO JOSE DE ALMEIDA|\n|FABIANA RODRIGUES DE FREITAS|\n|MARIA APARECIDA CARDOSO DA SILVA|\n|EDSON VALDIR CANESIN|\n|ANDRESSA CRISTINA BARBOSA DOS SANTOS|\n|MARCOS ANTONIO FOLLADOR|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table206"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Criteria|\n|---|\n|Clear Grading Criteria|\n|Would Recommend Course|\n|Helped Me to Learn|\n|Assignments Helped Learning|\n|Effective Instructor|\n|Used Time Effectively|\n|Communicates Well|\n|Available Office Hours|\n|Timely Feedback|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table207"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Scheduled for Review|\n|---|\n|FA2014|\n|SP2016|\n|SP2022|\n|SP2024|\n|SP2014|\n|SP2015|\n|FA2021|\n|SP2023|\n|FA2017|\n|SP2017|\n|SEE FA2013|\n|FA2013|\n|FA2016|\n|SP2018|\n|SU2020|\n|Inactivated|\n|FA2022|\n|SP2020|\n|FA2015|\n|FA2020|\n|SP2019|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table208"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Sucursal|\n|---|\n|CELAYA|\n|LEON|\n|COLIMA|\n|ZACATECAS|\n|TEPIC|\n|MOR \/ COL|\n|LAZARO CARDENAS|\n|S.L.P.|\n|AGUASCALIENTES|\n|ZAC \/ AGS|\n|MORELIA|\n|PTO. VALLARTA|\n|QUERETARO|\n|TEP \/ PTV|\n|MOR QRO.|\n|GUADALAJARA|\n|FUERA DE TERRITORIO|\n|IRAPUATO|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table209"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Payee|\n|---|\n|Sumner Township|\n|Greenland Township|\n|Huron Township|\n|Ada Township|\n|Seney Township|\n|Eagle Harbor Township|\n|Vevay Township|\n|Adrian Township|\n|Delaware Township|\n|Mathias Township|\n|Winsor Township|\n|Forest Home Township|\n|Boston Township|\n|Evergreen Township|\n|Leonidas Township|\n|Lockport Township|\n|Richfield Township|\n|Ontonagon Township|\n|Gaines Township|\n|Bridgeton Township|\n|Golden Township|\n|Moscow Township|\n|Newark Township|\n|Grim Township|\n|Antwerp Township|\n|Rust Township|\n|Tilden Township|\n|Montmorency Township|\n|Franklin Township|\n|Windsor Township|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Windsor Township', 'Winsor Township']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table21"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|EPIC|\n|---|\n|AUR|\n|MYIB|\n|HSP|\n|ATI|\n|WSBN|\n|JFJ|\n|SKR|\n|MMO|\n|POG|\n|BACT|\n|GKP|\n|CRA|\n|GUS|\n|PIC|\n|AKR|\n|USE|\n|EMG|\n|GMR|\n|HWC|\n|NMC|\n|ELLA|\n|BREM|\n|AVN|\n|BHGE|\n|GBG|\n|SEY|\n|RTG|\n|FCRE|\n|MGGT|\n|JPEL|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table210"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Type of Cargo|\n|---|\n|Wood \/ Timber \/ Lumber|\n|Container|\n|Vehicles|\n|Sail \/ Tarpaulin|\n|Livestock|\n|Drinks \/ Beverages|\n|Sand \/ Earth|\n|Agricultural Products|\n|People|\n|Fuels|\n|Furniture|\n|Other|\n|Iron \/ Steel \/ Metals|\n|Chemicals|\n|Cement|\n|Bags \/ Sacks|\n|Perishables|\n|Machinery|\n|Empty|\n|Coal|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table211"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|ESTADO|\n|---|\n|AC|\n|PI|\n|MT|\n|BA|\n|PE|\n|SP|\n|PA|\n|PB|\n|AL|\n|MS|\n|TO|\n|RJ|\n|DF|\n|SE|\n|RS|\n|AM|\n|RR|\n|RN|\n|PR|\n|RO|\n|SC|\n|ES|\n|CE|\n|MG|\n|MA|\n|GO|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table212"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Korisnik projekta|\n|---|\n|Virkom d.o.o.|\n|Geometar Osijek d.o.o.|\n|Pronova d.o.o.|\n|Gradski prijevoz putnika d.o.o.|\n|Brodplast d.o.o.|\n|Val. Ol. d.o.o.|\n|Auris d.o.o.|\n|Spectre j.d.o.o.|\n|Geobiro geodetske usluge d.o.o.|\n|Turbo-Commerce d.o.o.|\n|Shovel d.o.o.|\n|Dvorac d.o.o.|\n|Tera Tehnopolis d.o.o.|\n|NARCOR d.o.o.|\n|Grad Beli Manastir|\n|Orking d.o.o.|\n|Otos d.o.o.|\n|EUROPLAST|\n|Sokol d.o.o.|\n|Crown cool d.o.o.|\n|Tersa d.o.o.|\n|SAPONIA kemijska prehrambena i farmaceutska industrija d.d.|\n|Grad Vukovar|\n|Domar d.o.o.|\n|Cras d.o.o.|\n|Baranjska razvojna agencija Grada Belog Manastira|\n|Geo-mont d.o.o.|\n|Slavonika j.d.o.o.|\n|Proces d.o.o.|\n|Magma d.o.o. za proizvodnju trgovinu promet i usluge|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table213"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Titel|\n|---|\n|Detaljplan Lindbackens skola Uppsala kommun|\n|kdfjsdklfh|\n|Annonskampanj 750-kronorsbiljetten och Hela UL Hela SL augusti 2016|\n|Klimatkampen 2016|\n|Linje 809 - Uppsala-Knutby\/Almunge (KTF2016-0075)|\n|Avtal 5 Star Taxi|\n|Detaljplan Kvarteret Unionen Tierps kommun|\n|Projekt Uno|\n|Elbusspremie remiss|\n|Hyresavtal K2195 Coffee Center|\n|Hyresavtal - UL-Center|\n|Uppdatering\/justering av annons 24-timmarsbiljetten i Turistkartan 2016|\n|Avtal Landsbygdstrafik|\n|Kampanj radioreklam sommar 2016|\n|Uppdrag Iver - KTF2015-0035|\n|Ultra|\n|Detaljplan Wallskoga Tierps kommun (KTF2016-0030)|\n|1|\n|Avtal Regionbusstrafik|\n|Skolkortskommunikation sommaren 2016|\n|Kampanj 24-timmarsbiljett sommaren 2016|\n|Remissyttrande Parkeringsregler i Uppsala kommun|\n|Nya priser Januari 2017|\n|Funktionsutredning Sala station - KTF2016-0077|\n|Projekt Mercurius - KTF2014-0216|\n|Barnombudsmannen|\n|Kampanj tv-reklam sommar 2016|\n|Avtal Taxi Kurir|\n|Ekonomirapporter 2016|\n|Huvudprocesser KTF (KTF2016-0018)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table214"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|SKU|\n|---|\n|JIGEBL_M|\n|GUSIRD_S|\n|GUSIBL_L|\n|JEFORD_L|\n|SOHUBLXXL|\n|JEFOOR_S|\n|SOHURD_M|\n|SOHURD_L|\n|GUSIGRXXL|\n|GUSIOR_S|\n|SOHUGRXL|\n|VAPOBL_L|\n|JIGERD_L|\n|VAPOGR_M|\n|VAPOGRXXL|\n|VAPOBL_S|\n|SOHUGR_M|\n|GUSIYLXL|\n|SOHUGRXXL|\n|GUSIOR_L|\n|JIGEOR_M|\n|JIGEBLXXL|\n|JIGEBL_S|\n|VAPORD_L|\n|GUSIGR_S|\n|GUSIRDXL|\n|JIGEGR_L|\n|JEFOBLXL|\n|VAPORD_M|\n|SOHUOR_S|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table215"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Product|\n|---|\n|Crested Beaut|\n|Aspen|\n|Try Fly|\n|Darnell Fast Catch|\n|3 MTA|\n|Darnell V|\n|Yanaki|\n|Manu Distance|\n|Quad|\n|Kangaroo|\n|Manu MTA|\n|V Rang|\n|Bellen|\n|Aussie Quad|\n|Sunshine|\n|Omega|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table216"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Sucursal|\n|---|\n|TEP \/ PTV|\n|MORELIA|\n|IRAPUATO|\n|CELAYA|\n|LEON|\n|AGUASCALIENTES|\n|QUERETARO|\n|LAZARO CARDENAS|\n|COLIMA|\n|PTO. VALLARTA|\n|FUERA DE TERRITORIO|\n|TEPIC|\n|ZAC \/ AGS|\n|MOR \/ COL|\n|S.L.P.|\n|GUADALAJARA|\n|MOR QRO.|\n|ZACATECAS|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table217"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Acquisition Date|\n|---|\n|2016-12-25|\n|2016-03-29|\n|2016-12-23|\n|2016-07-12|\n|2016-05-06|\n|2015-07-23|\n|2016-09-20|\n|2016-11-19|\n|2016-05-13|\n|2015-11-13|\n|2016-12-30|\n|2016-04-15|\n|2016-02-10|\n|2016-03-22|\n|2015-09-19|\n|2015-12-07|\n|2015-06-08|\n|2015-11-25|\n|2015-09-09|\n|2015-04-25|\n|2015-07-14|\n|2016-10-19|\n|2016-02-03|\n|2016-12-03|\n|2015-04-13|\n|2016-01-17|\n|2016-07-08|\n|2016-01-31|\n|2016-11-17|\n|2016-07-24|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table218"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|WalkerFyMonthName|\n|---|\n|05-February|\n|08-May|\n|06-March|\n|04-January|\n|01-October|\n|07-April|\n|02-November|\n|10-July|\n|09-June|\n|03-December|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table219"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Call Description|\n|---|\n|Turf|\n|Tennis Court|\n|Pavement Markings|\n|Other - Monument\/Statue|\n|Other - Waterfront|\n|Wrong Person Charged|\n|Orleans CSC|\n|Hired Equipment|\n|Furniture Picnic Table|\n|No water\/poor pressure|\n|Fireworks|\n|Request for Fin. Assist.|\n|Comments|\n|Sign|\n|Parking lot|\n|Inquiry|\n|Pay & Display Machine|\n|Roads\/Sidewalks|\n|Investigate Water Leak|\n|Municipal Addressing|\n|General Information|\n|Fence\/Wall Wood|\n|Catch Basins|\n|Purchase|\n|Technical Errors|\n|Markers|\n|Catch Basin|\n|Water Feature\/Wading Pool|\n|Livestock|\n|Parking Permit|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Catch Basin', 'Catch Basins']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table22"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|COMPANY NAME|\n|---|\n|MACK MACHINE PRODUCTS PRIVATE LIMITED|\n|PLANET AYURVEDA PRIVATE LIMITED|\n|PRAGADAS TECHNOLOGIES PRIVATE LIMITED|\n|SAYALI'S THIRD EYE VISION INDIA PRIVATE LIMITED|\n|QLIKMATRIX SEM AND ANALYTICS PRIVATE LIMITED|\n|NISHNEETH HEALTHY TRADES PRIVATE LIMITED|\n|ROCKET SOFTWARE DEVELOPMENT INDIA PRIVATE LIMITED|\n|UNIQUE HOSTING PRIVATE LIMITED|\n|FITGROW PHYSICAL EDUCATION PRIVATE LIMITED|\n|AAPURANI FOOD PRODUCTS PRIVATE LIMITED|\n|BRUSH INTERIORS PRIVATE LIMITED|\n|DISTINCT TECHNOCONCEPT PRIVATE LIMITED|\n|ISPERTO HOMEZ AUTOMATION PRIVATE LIMITED|\n|BANJARA TRIP ORGANIZER (OPC) PRIVATE LIMITED|\n|VIOTTO CHEM (OPC) PRIVATE LIMITED|\n|ONC TECHNOLOGY PRIVATE LIMITED|\n|RIVER ECOSYSTEMS SUPPORT PRIVATE LIMITED|\n|WINSTIC INSURANCE BROKERS (INDIA) PRIVATE LIMITED|\n|SARTHEE SECURITY SERVICES PRIVATE LIMITED|\n|MAHTAB CERAMIC PRIVATE LIMITED|\n|SHIVKANTH ICE AND COLD STORAGE PRIVATE LIMITED|\n|PASHUPATI STRINGS PRIVATE LIMITED|\n|MARS FINE INDIA NIDHI LIMITED|\n|AMI DERMATOLOGY AND WELLNESS PRIVATE LIMITED|\n|COMPETENT INSOLVENCY PROFESSIONALS PRIVATE LIMITED|\n|EKAM TRAVEL & SERVICES PRIVATE LIMITED|\n|ZODHANA MOBILE SOLUTIONS PRIVATE LIMITED|\n|FURNZONE DESIGNERS PRIVATE LIMITED|\n|RAKSHA WELFARE AND CHARITY FOUNDATION|\n|PEGUSHUNT SERVICES PRIVATE LIMITED|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table220"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Ime ob\u010dine|\n|---|\n|Podvelka|\n|Mokronog - Trebelno|\n|Dobrna|\n|Lukovica|\n|Prevalje|\n|Kostel|\n|Celje|\n|Pivka|\n|Maribor|\n|Borovnica|\n|Mislinja|\n|Vrhnika|\n|Trnovska vas|\n|Brezovica|\n|Nova Gorica|\n|Beltinci|\n|Duplek|\n|Ankaran\/Ancarano|\n|Kranjska Gora|\n|Slovenske Konjice|\n|Izola\/Isola|\n|Preddvor|\n|Gornji Petrovci|\n|Videm|\n|Ptuj|\n|Miren - Kostanjevica|\n|Radenci|\n|Litija|\n|Ljubljana|\n|Postojna|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table221"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Product ID|\n|---|\n|B0007UQNTU|\n|B0000A0ADQ|\n|B0073TGHO4|\n|B00004TBLW|\n|B0001XH6G2|\n|B000FG30U6|\n|B00B7LQ9QU|\n|B0000A0AET|\n|B00111UWIC|\n|B000RWNEVS|\n|B001EO1DUC|\n|B00009X3S2|\n|B00I0F9MV0|\n|B00005AXIW|\n|B00080SC4S|\n|B00B9Z24J0|\n|B000OU7Q-|\n|B0051WIN5G|\n|B00HQECH54|\n|B00005AXHW|\n|B00BD54PU2|\n|B00B9Z23NM|\n|B00MHTPVVK|\n|B00200C7L8|\n|B00GX1RSL4|\n|B00BIKFNEE|\n|B000051ZO7|\n|B004KLAW30|\n|B003OX9YXY|\n|B00066ELB2|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table222"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|ACCTTL|\n|---|\n|National Service Life Insurance Fund|\n|Account Total Grants for Construction of State Extended Care Facilities|\n|Account Total Veterans Special Life Insurance Fund|\n|Account Total Transitional Housing Direct Loan Financing Account|\n|Medical Care Collections Fund|\n|Account Total National Service Life Insurance Fund|\n|General Administration|\n|Account Total Veterans Reopened Insurance Fund|\n|Service-disabled Veterans Insurance Fund|\n|Franchise Fund|\n|Veterans Reopened Insurance Fund|\n|Joint DOD-VA Medical Facility Demonstration Fund|\n|Construction Major Projects|\n|United States Government Life Insurance Fund|\n|Account Total General Administration|\n|Account Total Office of Inspector General|\n|Account Total DOD-VA Health Care Sharing Incentive Fund|\n|Account Total Construction Major Projects|\n|Account Total Joint DOD-VA Medical Facility Demonstration Fund|\n|Account Total Post-Vietnam Era Veterans Education Account|\n|Native American Direct Loan Financing Account|\n|Account Total Medical Services|\n|Medical Facilities|\n|Grants for Construction of State Extended Care Facilities|\n|Grants for Construction of Veterans Cemeteries|\n|Account Total Housing Liquidating Account|\n|General Post Fund National Homes|\n|Account Total Service-disabled Veterans Insurance Fund|\n|Account Total Medical Community Care|\n|Account Total Information Technology Systems|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table223"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Sucursal|\n|---|\n|MOR \/ COL|\n|FUERA DE TERRITORIO|\n|CELAYA|\n|TEPIC|\n|MOR QRO.|\n|GUADALAJARA|\n|QUERETARO|\n|COLIMA|\n|IRAPUATO|\n|LEON|\n|MORELIA|\n|ZACATECAS|\n|LAZARO CARDENAS|\n|TEP \/ PTV|\n|ZAC \/ AGS|\n|S.L.P.|\n|PTO. VALLARTA|\n|AGUASCALIENTES|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table224"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Scene ID|\n|---|\n|S2A_OPER_MSI_L1C_TL_MPS__20160901T094138_20160901T130953_A006239_T33NTE_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160325T094511_20160325T165103_A003951_T33NTH_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160101T100121_20160101T153114_A002750_T32NMM_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160726T095101_20160726T150012_A005710_T33PUP_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20150924T092932_20161229T062000_A001334_T33NVG_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_MPS__20160914T095002_20160914T131831_A006425_T33PVQ_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20151219T095227_20151219T151339_A002564_T32NQN_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20151023T100128_20160803T182826_A001749_T32NNK_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160716T095152_20160716T145743_A005567_T32NNJ_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_MPS__20161203T095145_20161203T131714_A007569_T32NRJ_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20160122T093027_20160122T112941_A003050_T33NVE_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_MPS__20161004T095143_20161004T131842_A006711_T32NQL_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160802T094240_20160802T143846_A005810_T33PWP_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_MPS__20161008T093532_20161008T130127_A006768_T33NVF_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160318T095224_20160318T183829_A003851_T32NRP_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_MPS__20160901T094138_20160901T130953_A006239_T33NUE_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160207T095223_20160207T134809_A003279_T32NQK_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161120T094233_20161120T145433_A007383_T32NRP_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20151129T095223_20170514T080852_A002278_T33PTK_N02_04_02|\n|S2A_OPER_MSI_L1C_TL_MTI__20160105T093958_20160105T113345_A002807_T33NUH_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20151020T095231_20161210T004430_A001706_T32NPK_N02_04_02|\n|S2A_OPER_MSI_L1C_TL_SGS__20160125T093752_20160125T132659_A003093_T33PWP_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161117T092957_20161117T143842_A007340_T33NWJ_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161130T094232_20161130T131031_A007526_T33PTK_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20161127T093322_20170118T091408_A007483_T33NVH_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_MPS__20161001T093917_20161001T131031_A006668_T33PUM_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20151229T095228_20151229T152023_A002707_T32NNK_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_MPS__20161004T095143_20161004T131842_A006711_T32NRH_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160904T095147_20160904T150009_A006282_T32NQM_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20150818T093742_20160924T094931_A000805_T33PUP_N02_04_02|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table225"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|O\u015b - nazwa|\n|---|\n|Badania i innowacje|\n|Nowoczesna gospodarka|\n|Aktywni na rynku pracy|\n|Konwersja|\n|Infrastruktura publiczna|\n|Efektywne polityki publiczne dla rynku pracy gospodarki i edukacji|\n|Edukacja kwalifikacje i kompetencje|\n|Integracja|\n|Gospodarka niskoemisyjna|\n|Cyfrowe Podkarpackie|\n|Kompetencje i kwalifikacje|\n|Energia|\n|Infrastruktura transportowa|\n|Innowacyjna edukacja|\n|Zdrowie|\n|Zatrudnienie|\n|Wsparcie dla obszaru zdrowia|\n|Transport|\n|Technologie informacyjno-komunikacyjne|\n|Nowoczesna Infrastruktura Transportowa|\n|Wzmocnienie strategicznej infrastruktury ochrony zdrowia|\n|Rynek pracy|\n|Gospodarka Wiedzy|\n|Cyfrowe Lubelskie|\n|Nowoczesna edukacja|\n|Cyfrowy region|\n|Ponadregionalna Infrastruktura Kolejowa|\n|Gospodarka i innowacje|\n|Otwarty rynek pracy|\n|Ochrona dziedzictwa kulturowego i naturalnego|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table226"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Program operacyjny - nazwa|\n|---|\n|Razem dla programu: Program Operacyjny Pomoc Techniczna 2014-2020|\n|Program Operacyjny Polska Wschodnia|\n|Program Operacyjny Polska Cyfrowa|\n|Razem dla programu: Program Operacyjny Polska Wschodnia|\n|Razem dla programu: Program Operacyjny Polska Cyfrowa|\n|Program Operacyjny Pomoc Techniczna 2014-2020|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table227"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|ENTIDADE A FACTURAR|\n|---|\n|ULS Litoral Alentejano|\n|ARS LVT|\n|ULS Baixo Alentejo|\n|ULS Norte Alentejano|\n|ARS ALENTEJO|\n|ARS NORTE|\n|ARS ALGARVE|\n|ULS Guarda|\n|ULS Castelo Branco|\n|ULS Alto Minho|\n|ULS NORDESTE|\n|ULS Matosinhos|\n|ARS CENTRO|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table228"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Estado|\n|---|\n|Jalisco|\n|Guanajuato|\n|Colima|\n|Aguascalientes|\n|Nayarit|\n|Zacatecas|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table229"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Municipio|\n|---|\n|Jerecuaro|\n|Santa maria de los angeles|\n|Huiramba|\n|Rio grande|\n|Tlaquepaque|\n|Manzanillo|\n|Rio verde|\n|Ayutla|\n|Salinas|\n|San joaquin|\n|Puerto vallarta|\n|Cuauhtemoc|\n|Jacona|\n|Panuco|\n|Fresnillo|\n|Ebano|\n|Juchitlan|\n|Moctezuma|\n|Chinicuila|\n|Caracuaro|\n|Tuzantla|\n|Cuahtemoc|\n|Leon|\n|Santa cruz de juventino rosas|\n|Villa de arista|\n|General panfilo natera|\n|Buena vista tomatlan|\n|Juchipila|\n|Pihuamo|\n|Aporo|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Cuahtemoc', 'Cuauhtemoc']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table23"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Bezeichnung|\n|---|\n|Bobenthal|\n|Kalkofen|\n|Kirrweiler|\n|Marnheim|\n|Waldleiningen|\n|Frankelbach|\n|Niederotterbach|\n|Heiligenmoschel|\n|Fischbach|\n|Dimbach|\n|Ulmet|\n|Lambrecht (Pfalz) Stadt|\n|Hilst|\n|Schweisweiler|\n|Landau in der Pfalz kreisfreie Stadt|\n|Harthausen|\n|Ottersheim|\n|Ellerstadt|\n|Bischheim|\n|Kusel Stadt|\n|Obernheim-Kirchenarnbach|\n|Kirchheimbolanden Stadt|\n|Nanzdietschweiler|\n|Rutsweiler an der Lauter|\n|Elmstein|\n|Schifferstadt Stadt|\n|Rheinzabern|\n|Edesheim|\n|Imsweiler|\n|Frankenthal (Pfalz) kreisfreie Stadt|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table230"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Category|\n|---|\n|Toys & Baby Products|\n|Fashion Jewellery|\n|Furniture|\n|Office Supplies|\n|Electronics|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table231"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Descr|\n|---|\n|GEN BIOCHEMISTRY LAB|\n|BEGINNING CERAMICS|\n|WEBSITE DEVELOPMENT & ADMIN|\n|BASKETBALL|\n|PSY\/MH NSG PRAC: INDIV PSY|\n|MUSIC LITERATURE|\n|H.B & S.E. I|\n|ADVANCED SAS|\n|FOUND NSG PRACT LAB|\n|STAGE WIGS|\n|FORENSIC SCI INVESTN|\n|CRITICAL ANALYSIS|\n|FIGURE DRAWING II|\n|PRIN OF MACROECON|\n|INTRO ENTREPRENEUR|\n|GRAPHICS COMMUNICA|\n|SEMINAR IN PUBLIC ADMIN|\n|SPECIAL TOPICS|\n|YOUTH CULTURE CRIME|\n|FUND BUS STATISTICS|\n|EVENT MANAGEMENT|\n|BIOLOGICAL SCIENCE II LAB|\n|EXER CARDIORESP SYS|\n|PRIN OF MICROECON|\n|FUNCTIONAL FOOD AND HEALTH|\n|INTERNATIONAL TERRORISM POLICY|\n|SPORT AND LITERATURE|\n|CR EVAL\/EXER PROG DV|\n|MEDIA TECHNIQUES|\n|RISK MANAGEMENT|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table232"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|RYQ|\n|---|\n|Europe2003Q1|\n|Middle East2004Q3|\n|Europe2004Q2|\n|Middle East2008Q2|\n|Asia Pacific2003Q4|\n|Europe2004Q4|\n|North America2004Q1|\n|Europe2007Q4|\n|Asia Pacific2006Q1|\n|North America2004Q3|\n|South America2008Q1|\n|South America2005Q3|\n|Europe2007Q2|\n|North America2007Q2|\n|Asia Pacific2004Q2|\n|Europe2004Q3|\n|Europe2006Q1|\n|South America2004Q3|\n|Europe2008Q4|\n|Europe2005Q3|\n|Asia Pacific2006Q4|\n|Asia Pacific2007Q3|\n|North America2003Q1|\n|South America2004Q4|\n|Europe2006Q3|\n|Middle East2003Q2|\n|South America2008Q4|\n|Middle East2007Q1|\n|Asia Pacific2007Q4|\n|North America2007Q4|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table233"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Circuit or Region|\n|---|\n|11 Circuit|\n|01 Circuit|\n|04 Circuit|\n|06 Circuit|\n|05 Circuit|\n|Northern Region|\n|Central Region|\n|09 OC Circuit|\n|19 Circuit|\n|20 Circuit|\n|10 Circuit|\n|14 Circuit|\n|18 Circuit|\n|13 Circuit|\n|03 Circuit|\n|16 Circuit|\n|Statewide|\n|15 Circuit|\n|07 Circuit|\n|12 Circuit|\n|Southern Region|\n|17 Circuit|\n|09 OS Circuit|\n|02 Circuit|\n|08 Circuit|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table234"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|OMB_ACCOUNT|\n|---|\n|025-03-0163   Public Housing Operating Fund|\n|025-09-0206   Other Assisted Housing Programs|\n|025-09-0320   Housing for the Elderly|\n|025-35-8093   Gifts and Bequests|\n|025-09-0183   FHA-Mutual Mortgage Insurance Program Account|\n|025-35-0334   Housing|\n|025-03-0302   Tenant Based Rental Assistance|\n|025-06-0342   Permanent Supportive Housing|\n|025-09-0343   Home Ownership Preservation Equity Fund Program Account|\n|025-03-0350   Family Self-Sufficiency|\n|025-03-0223   Indian Housing Loan Guarantee Fund Program Account|\n|025-09-0196   Homeownership and Opportunity for People Everywhere Grants (HOPE|\n|025-35-0337   Public and Indian Housing|\n|025-09-4242   FHA-Mutual Mortgage Insurance Direct Loan Financing Account|\n|025-32-0174   Lead Hazard Reduction|\n|025-06-4015   Revolving Fund (liquidating Programs)|\n|025-06-0205   Home Investment Partnership Program|\n|025-35-0338   Community Planning and Development|\n|025-03-0311   Prevention of Resident Displacement|\n|025-12-4240   Guarantees of Mortgage-backed Securities Financing Account|\n|025-35-4586   Information Technology Fund|\n|025-09-4070   FHA-Mutual Mortgage and Cooperative Housing Insurance Funds Liqu|\n|025-03-0218   Revitalization of Severely Distressed Public Housing (HOPE VI)|\n|025-03-4244   Title VI Indian Federal Guarantees Financing Account|\n|025-06-0308   Housing Opportunities for Persons with AIDS|\n|025-35-0402   Transformation Initiative|\n|025-12-0238   Guarantees of Mortgage-backed Securities Capital Reserve Account|\n|025-09-4357   Emergency Homeowners' Relief Financing Account|\n|025-09-0200   FHA-General and Special Risk Program Account|\n|025-06-0192   Homeless Assistance Grants|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table235"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Offense|\n|---|\n|520|\n|23F|\n|13B|\n|23H|\n|13C|\n|35B|\n|23G|\n|90Z|\n|90G|\n|250|\n|370|\n|11D|\n|90J|\n|240|\n|13A|\n|90D|\n|40A|\n|220|\n|90C|\n|35A|\n|23C|\n|26C|\n|23D|\n|90E|\n|120|\n|26A|\n|290|\n|100|\n|26B|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table236"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|CITAS POR MES|\n|---|\n|13\/04\/1979|\n|20\/04\/1981|\n|05\/05\/1985|\n|07\/02\/1980|\n|13\/12\/1985|\n|31\/05\/1983|\n|10\/11\/1990|\n|28\/03\/1975|\n|04\/02\/1994|\n|30\/05\/1987|\n|28\/10\/1982|\n|27\/01\/1961|\n|10\/01\/1986|\n|10\/11\/1974|\n|29\/06\/1994|\n|25\/03\/1980|\n|02\/09\/1982|\n|14\/09\/1978|\n|24\/03\/1995|\n|13\/06\/1992|\n|28\/05\/1984|\n|31\/03\/1990|\n|09\/01\/1987|\n|25\/02\/1994|\n|11\/10\/1996|\n|04\/08\/1976|\n|27\/01\/1985|\n|17\/06\/1975|\n|24\/08\/1978|\n|23\/05\/1966|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table237"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|SalesTerritoryRegion|\n|---|\n|Central|\n|United Kingdom|\n|France|\n|Northwest|\n|Northeast|\n|Southwest|\n|Canada|\n|Australia|\n|Southeast|\n|Germany|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table238"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|UA Subject Area Description|\n|---|\n|Public Health|\n|Educational Leadership|\n|Mex. Am. Studies UA South|\n|Bachelor Applied Science Core|\n|Radiation Oncology|\n|Pharmacy Practice|\n|Greek|\n|Business Communications|\n|Biochemistry|\n|Communication|\n|Music Main|\n|Aerospace & Mechanical Engr|\n|eSociety|\n|Neuroscience|\n|Turkish|\n|Applied Biosciences|\n|Lang. & Cult. in Educ. UASouth|\n|Hydrology and Water Resources|\n|Government and Public Service|\n|Chemical & Environmental Engr|\n|Agriculture & Life Sciences|\n|Physical Education Main|\n|Medicine: Interdept.|\n|Social and Behavioral Sciences|\n|Honors Studies|\n|Finance|\n|Teacher Education UA South|\n|Pharmaceutical Sciences|\n|Neuroscience & Cognitive Sci|\n|Anthropology UA South|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table239"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|County|\n|---|\n|St. Louis (city)|\n|Winnebago|\n|Goshen|\n|Tioga|\n|Macomb|\n|Milam|\n|Covington|\n|Rockingham|\n|Izard|\n|Plumas|\n|Callaway|\n|Hale|\n|Hancock|\n|Beltrami|\n|Calloway|\n|Malheur|\n|Miami|\n|Koochiching|\n|Sussex|\n|Socorro|\n|Newton|\n|Shasta|\n|Grundy|\n|Dade|\n|Tulare|\n|Cape Girardeau|\n|Linn|\n|Columbus|\n|Baldwin|\n|Walker|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Callaway', 'Calloway']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table24"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|\u00d3rg\u00e3o|\n|---|\n|UFESBA - Universidade Federal do Sul da Bahia|\n|Hospital Escola da UFPEL|\n|UFOB - Universidade Federal do Oeste da Bahia|\n|BBTur Viagens e Turismo Ltda|\n|MCA\/UFBA - Maternidade Climerio de Oliveira|\n|MEAC - Maternidade Escola Assis Chateaubriand|\n|ABGF - Agencia Brasileira Gestora de Fundos Garantidores e Garantias S.A.|\n|UFCA - Universidade Federal do Cariri|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table240"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|ISSN|\n|---|\n|1092-1095|\n|1044-579X|\n|0167-594X|\n|1473-7140|\n|0147-0272|\n|0022-4790|\n|1538-4721|\n|1055-9965|\n|1042-8194|\n|1109-6535|\n|1758-8340|\n|0008-543X|\n|1522-8517|\n|1053-4296|\n|0947-8965|\n|1750-9378|\n|0392-2936|\n|1940-6207|\n|1045-2257|\n|1068-9265|\n|0027-8874|\n|0959-4973|\n|1756-9966|\n|1545-5009|\n|2162-4011|\n|1433-7398|\n|1689-832X|\n|1055-3207|\n|1540-1405|\n|1040-8746|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table241"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Estado|\n|---|\n|Colima|\n|Aguascalientes|\n|Guanajuato|\n|Nayarit|\n|Zacatecas|\n|Jalisco|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table242"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|1|\n|---|\n|Nowa Zelandia|\n|Gwinea|\n|Mozambik|\n|Kostaryka|\n|Zjednoczone Emiraty Arabskie|\n|Kanada|\n|Malta|\n|Tajlandia|\n|Malawi|\n|Etiopia|\n|Swaziland|\n|Namibia|\n|Egipt|\n|Bangladesz|\n|Jersey|\n|Azja|\n|Nigeria|\n|Wszystkie kraje|\n|Europejska Strefa Wolnego Handlu (EFTA)|\n|Kuba|\n|Kazachstan|\n|Libia|\n|Guernsey|\n|Andora|\n|Indonezja|\n|Centra finansowe offshore|\n|Saint Vincent i Grenadyny|\n|Czad|\n|Hiszpania|\n|Jamajka|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table243"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|UF|\n|---|\n|MA|\n|PA|\n|RN|\n|TO|\n|PB|\n|ES|\n|AP|\n|PI|\n|AM|\n|AC|\n|GO|\n|RR|\n|MT|\n|SP|\n|RS|\n|RJ|\n|BA|\n|DF|\n|SC|\n|PE|\n|CE|\n|PR|\n|AL|\n|MS|\n|RO|\n|MG|\n|SE|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table244"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|County|\n|---|\n|Van Buren|\n|Gratiot|\n|Delta|\n|Keweenaw|\n|Lapeer|\n|Antrim|\n|Berrien|\n|Charlevoix|\n|Jackson|\n|Osceola|\n|Gladwin|\n|Tuscola|\n|Clare|\n|Alcona|\n|Oscoda|\n|Grand Traverse|\n|Houghton|\n|Otsego|\n|Livingston|\n|Ionia|\n|Ontonagon|\n|Roscommon|\n|Washtenaw|\n|Ottawa|\n|St. Clair|\n|Genesee|\n|Mason|\n|Luce|\n|Isabella|\n|Bay|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table245"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|ISIN|\n|---|\n|DK0010287234|\n|DK0060580512|\n|DK0060448595|\n|DK0015998017|\n|DK0060083210|\n|DK0060636678|\n|DK0010268366|\n|DK0010272632|\n|DK0010219153|\n|DK0060027142|\n|DK0060079531|\n|DK0010272202|\n|DK0015202451|\n|DK0060257814|\n|DK0060032068|\n|DK0060591204|\n|DK0060227585|\n|DK0060495240|\n|DK0060907293|\n|DK0010181759|\n|DK0010311471|\n|DK0060477503|\n|DK0060542181|\n|DK0010234467|\n|DK0010233816|\n|DK0060228559|\n|DK0010303619|\n|DK0060336014|\n|DK0060252690|\n|DK0010268440|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table246"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Date Acquired|\n|---|\n|2009-05-12|\n|2011-11-01|\n|2006-08-17|\n|1999-10-23|\n|2005-01-16|\n|2008-12-03|\n|2013-02-07|\n|2008-06-02|\n|1996-06-24|\n|2014-07-14|\n|2014-11-11|\n|1999-09-05|\n|2014-07-28|\n|2010-09-04|\n|2014-10-10|\n|2008-06-10|\n|2004-05-05|\n|2016-12-08|\n|1994-05-18|\n|2010-02-25|\n|2014-02-18|\n|1999-07-29|\n|2012-10-02|\n|2013-11-14|\n|2014-01-01|\n|2014-06-03|\n|2016-02-25|\n|2013-06-08|\n|2002-01-17|\n|2001-05-15|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table247"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Request Doc-ID|\n|---|\n|USTR-2018-0032-0227|\n|USTR-2018-0032-0462|\n|USTR-2018-0032-0114|\n|USTR-2018-0032-0185|\n|USTR-2018-0032-0169|\n|USTR-2018-0032-0850|\n|USTR-2018-0032-0348|\n|USTR-2018-0032-0748|\n|USTR-2018-0032-0057|\n|USTR-2018-0032-0430|\n|USTR-2018-0032-0351|\n|USTR-2018-0032-0634|\n|USTR-2018-0032-0697|\n|USTR-2018-0032-0230|\n|USTR-2018-0032-0607|\n|USTR-2018-0032-0772|\n|USTR-2018-0032-0326|\n|USTR-2018-0032-0770|\n|USTR-2018-0032-0428|\n|USTR-2018-0032-0622|\n|USTR-2018-0032-0282|\n|USTR-2018-0032-0485|\n|USTR-2018-0032-0669|\n|USTR-2018-0032-0508|\n|USTR-2018-0032-0479|\n|USTR-2018-0032-0814|\n|USTR-2018-0032-0313|\n|USTR-2018-0032-0756|\n|USTR-2018-0032-0602|\n|USTR-2018-0032-0284|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table248"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Hovedbibliotek|\n|---|\n|DK-718300|\n|DK-722300|\n|DK-777300|\n|DK-820050|\n|DK-742000|\n|DK-776000|\n|DK-726900|\n|DK-716100|\n|DK-716700|\n|DK-773000|\n|DK-721900|\n|DK-721000|\n|DK-737000|\n|DK-748200|\n|DK-715500|\n|DK-710100|\n|DK-725900|\n|DK-727000|\n|DK-717300|\n|DK-810010|\n|DK-761500|\n|DK-717500|\n|DK-716300|\n|DK-774100|\n|DK-719000|\n|DK-786000|\n|DK-776600|\n|DK-739000|\n|DK-770700|\n|DK-771000|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table249"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|PRODUCT|\n|---|\n|ADVIA CENTAUR HBSAGII ASSAY|\n|TRIVASCULAR INC OVATION PRIME ABDOMINAL STENT GRAFT SYSTEM TRIVASCULAR INC OVATION IX ILIAC STENT GRAFT|\n|natrelle silicone-filled breast implants|\n|DURASEAL EXACT SPINE SEALANT|\n|MENTOR MEMORYSHAPE BREAST IMPLANTS|\n|DL-COIL|\n|CRYOCONSOLE|\n|THINPREP IMAGING SYSTEM|\n|THXID BRAF KIT|\n|MYCARELINK SMART MONITOR AND THE MYCARELINK HEART APPLICATION|\n|HANCOCK II PROCINE BIOPROSTHETIC HEART VALVE|\n|MEMORYGEL BREAST IMPLANT|\n|MAXUM|\n|ALLEGRO TOPOLYZER VARIO|\n|ACCESS AFP IMMUNOASSAY SYSTEM|\n|ACCESS HYBRITECH PSA ASSAY|\n|BIOFINITY ENERGYS ASPHERE BIOFINITY XR TORIC BIOFINITY XR MULTIFOCAL|\n|PRECISION SPINAL CORD STIMULATOR(SCS) SYSTEM AND PRECISION SPECTRA SPINAL CORD STIMULATOR (SCS) SYSTEM|\n|SESOLOG \/ DIALOG \/ REGENCY FAMILY OF PACEMAKERS|\n|THERAPY COOL PATH DUO CATHETER|\n|ARISTA AH ARISTA AH FLEXITIP\/ FLEXITIP XL\/ FLEXITIP XL-R|\n|STATOS LV\/LV-T EVIA\/ENTOVIS HF\/HF-T|\n|PATHWAY ANTI-HER\/NEU (4B) RABBIT MONOCLONAL PRIMARY ANTIBODY|\n|LEICA BOND ORACLE HER2 IHC SYSTEM|\n|PRECISION AND PRECISION SPECTRA SPINAL CORD STIMULATOR SYSTEMS|\n|PRECISION SPECTRA SPINAL CORD STIMULATOR (SCS) SYSTEM|\n|ADVISA SR MRI A3SR01; IMPLANTABLE PULSE GENERATOR DR MRI A2DR01 IMPLANTABLE PULSE GENERATOR SOFTWARE MODEL 9995|\n|natrelle silicone-filled brest implants|\n|SOF-SENSOR|\n|JUVEDERM VOLUMA  XC|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['natrelle silicone-filled breast implants', 'natrelle silicone-filled brest implants']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table25"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|City|\n|---|\n|Lindenhurst|\n|Akron|\n|Parker|\n|Detroit|\n|Gastonia|\n|Philadelphia|\n|Laredo|\n|Milwaukee|\n|Dublin|\n|Austin|\n|Scottsdale|\n|Medina|\n|Carlsbad|\n|Naperville|\n|Sierra Vista|\n|Brentwood|\n|Rochester|\n|Manchester|\n|Marysville|\n|Trenton|\n|Montgomery|\n|Plainfield|\n|Lawrence|\n|Richardson|\n|Dover|\n|Colorado Springs|\n|Waynesboro|\n|Virginia Beach|\n|Costa Mesa|\n|Canton|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table250"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|promoter_DHS_gene|\n|---|\n|ZEB2-AS1|\n|AC090774.1|\n|AC017096.1|\n|KRT16P5|\n|ADCY1|\n|MAGED1|\n|SCDP1|\n|RP6-24A23.3|\n|RP11-565N2.1|\n|RP11-448N11.1|\n|GOLGA3|\n|DENND1B|\n|AC023669.1|\n|AC023669.2|\n|RP13-977J11.2|\n|RP11-986E7.1|\n|FAM108A7P|\n|TROVE2|\n|SRSF7|\n|AC004869.3|\n|PLXNA2|\n|EFHC2|\n|AC073115.7|\n|AC018693.6|\n|RP5-933E2.1|\n|RP13-977J11.5|\n|RP11-565N2.2|\n|DHX57|\n|RP11-234P3.4|\n|RP11-281P11.1|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table251"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Institution official name (ACRONYM)|\n|---|\n|Universidade Federal de Campina Grande (UFCG)|\n|Universidad Nacional de Rosario (UNR)|\n|Universidad Privada de Santa Cruz de la Sierra (UPSA)|\n|Universidade Federal de Minas Gerais (UFMG)|\n|Universidad Nacional de Colombia (UNAL)|\n|Universidad Panamericana - Campus Bonaterra (UP-AGS)|\n|Instituto Militar de Engenharia (IME)|\n|Universidad de los Andes (UNIANDES)|\n|Universidad Nacional de La Plata (UNLP)|\n|Universidade Federal de Pernambuco (UFPE)|\n|Universidad de Costa Rica (UCR)|\n|Universidade Federal do Rio Grande do Norte (UFRN)|\n|Universidad de Chile (UCH)|\n|Universidad Central \"Marta Abreu\" de Las Villas (UCLV)|\n|Universidade Federal do Rio de Janeiro (UFRJ)|\n|Universidad de Guanajuato (UGTO)|\n|Universidad de Oriente - Sede Antonio Maceo (UO-SAM)|\n|Universidad de Palermo (UP)|\n|Universidade Federal de Sergipe (UFS)|\n|Universidad EAFIT (EAFIT)|\n|Pontificia Universidade Catolica do Rio de Janeiro (PUC-RIO)|\n|Universidad Central de Venezuela (UCV)|\n|Universidad de Buenos Aires - Facultad de Ciencias Exactas y Naturales (UBA-FCEN)|\n|Universidad de Guadalajara (UDG)|\n|Universidad de La Habana (UH)|\n|Universidad Centroccidental Lisandro Alvarado (UCLA)|\n|Universidad Nacional del Sur (UNS)|\n|Universidade Federal da Bahia (UFBA)|\n|Universidad del Valle (UNIVALLE)|\n|Universidade Federal de Santa Catarina (UFSC)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table252"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Type of Truck|\n|---|\n|Volume Van|\n|Tanker|\n|Container|\n|Tipper|\n|Cement Mixer|\n|Car carrier|\n|Refuse Truck|\n|Lowbed|\n|Flat Bed|\n|Abnormal|\n|Fridge|\n|Furniture Removal|\n|Drop Side|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table253"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Sucursal|\n|---|\n|FUERA DE TERRITORIO|\n|LEON|\n|MOR QRO.|\n|MORELIA|\n|GUADALAJARA|\n|S.L.P.|\n|QUERETARO|\n|ZACATECAS|\n|LAZARO CARDENAS|\n|MOR \/ COL|\n|TEP \/ PTV|\n|COLIMA|\n|IRAPUATO|\n|TEPIC|\n|CELAYA|\n|AGUASCALIENTES|\n|PTO. VALLARTA|\n|ZAC \/ AGS|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table254"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Institution|\n|---|\n|CityU|\n|HKU|\n|CUHK|\n|HKUST|\n|PolyU|\n|HKBU|\n|EduHK|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table255"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|\u9023\u7d61\u5148TEL\u30ec\u30f3\u30e9\u30af\u30b5\u30ad2|\n|---|\n|06-6428-7111|\n|078-592-5911|\n|078-947-4621|\n|0795-75-0366|\n|06-6495-2650|\n|0790-24-5600|\n|06-6427-5048|\n|0799-62-5055|\n|078-220-6458|\n|0799-35-0326|\n|078-515-6165|\n|079-226-8745|\n|0797-85-3868|\n|078-904-2055|\n|078-801-9400|\n|078-941-1764|\n|078-911-0623|\n|072-765-2225|\n|079-238-5301|\n|0798-54-8885|\n|0798-32-1115|\n|0798-52-6181|\n|06-6435-8263|\n|0795-32-3330|\n|079-441-8950|\n|072-775-1123|\n|0798-52-6999|\n|0790-72-2212|\n|0799-84-1717|\n|06-6430-6527|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table256"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|TaraID|\n|---|\n|T4|\n|T3|\n|T5|\n|T2|\n|T1|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table257"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Location|\n|---|\n|47XX 6TH ST S|\n|45XX S FOUR MILE RUN DR|\n|S 8 ST\/S GLEBE RD|\n|10XX N GARFIELD ST|\n|81X 18TH ST S|\n|61XX WILSON BL|\n|19XX JEFFERSON DAVIS HW|\n|71XX I 66 WEST AT N QUINCY ST|\n|38XX S 7 ST|\n|S 31 ST\/S ABINGDON ST|\n|31XX JEFFERSON DAVIS HW|\n|15XX S STAFFORD ST|\n|47XX LEE HW|\n|31XX CLARENDON BL|\n|90X S MONROE ST|\n|10XX N DANIEL ST|\n|41XX S FOUR MILE RUN DR|\n|10XX S HAYES ST|\n|41X N IRVING ST|\n|26XX JEFFERSON DAVIS HW|\n|57XX LEE HW|\n|83X S FREDERICK ST|\n|80X S BUCHANAN ST|\n|N PERSHING DR\/ WASHINGTON BL|\n|45XX S 36 ST|\n|54XX 8TH RD S|\n|22XX S MONROE ST|\n|28XX CLARENDON BL|\n|S ABERDEEN ST\/ ARLINGTON BL|\n|LEE HW\/ SPOUT RUN PY|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table258"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Fuel Type|\n|---|\n|Fossil Oil|\n|Hydro (reservoir)|\n|Fossil Gas|\n|Other|\n|Wind|\n|Hydro (run of river)|\n|Waste|\n|Biomass|\n|Solar PV|\n|Offshore wind|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table259"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|First Name|\n|---|\n|Collin|\n|J Calvin|\n|Cassie|\n|Brooks|\n|Andrew|\n|Greg|\n|Joel|\n|Luther|\n|Anthony|\n|Joseph|\n|Jerome|\n|Kathryn|\n|Dean|\n|Gena|\n|Zachary|\n|Ioan|\n|Justin|\n|Shay|\n|Raymond|\n|Marvin|\n|Milo|\n|Zacheary|\n|Drew|\n|Valerie|\n|Bienvenido|\n|Jorge|\n|Anita|\n|Doris|\n|Lisa|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Zacheary', 'Zachary']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table26"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Offense|\n|---|\n|13B|\n|120|\n|35A|\n|240|\n|90F|\n|270|\n|23D|\n|40B|\n|250|\n|520|\n|90G|\n|23C|\n|13C|\n|13A|\n|23H|\n|26A|\n|23F|\n|23G|\n|90J|\n|220|\n|26B|\n|90Z|\n|90E|\n|26C|\n|90D|\n|290|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table260"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Type d'op\u00e9ration 1|\n|---|\n|Maitrise d'ouvrage - Appui et structuration|\n|Assistance technique|\n|Forages et captages|\n|Actions internationales|\n|Assainissement non collectif|\n|Mise en oeuvre CT - Volet milieux aquatiques|\n|Protection des ouvrages de production|\n|Cours d'eau|\n|Traitement autonome complet|\n|Economie d'eau en irrigation|\n|Poissons migrateurs|\n|Zones humides|\n|nan|\n|Contrats territoriaux|\n|Information et sensibilisation|\n|Etudes R&D divers|\n|Gestion des eaux pluviales - Traitement|\n|Alimentation en eau potable|\n|Protection et restauration de la ressource|\n|SAGE|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table261"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Link naar publicatie|\n|---|\n|https:\/\/www.stradalex.com\/Stradalex\/NL\/publichome\/html\/display\/monitorHome\/2019011361|\n|https:\/\/www.stradalex.com\/Stradalex\/nl\/publichome\/html\/display\/monitorHome\/2017013592|\n|https:\/\/www.stradalex.com\/Stradalex\/nl\/publichome\/html\/display\/monitorHome\/2016003381|\n|https:\/\/www.stradalex.com\/Stradalex\/nl\/publichome\/html\/display\/monitorHome\/2016003264|\n|https:\/\/www.stradalex.com\/Stradalex\/nl\/publichome\/html\/display\/monitorHome\/2018013236|\n|https:\/\/www.stradalex.com\/Stradalex\/nl\/publichome\/html\/display\/monitorHome\/2018011961|\n|https:\/\/www.stradalex.com\/Stradalex\/nl\/publichome\/html\/display\/monitorHome\/2017055457|\n|https:\/\/www.stradalex.com\/Stradalex\/nl\/publichome\/html\/display\/monitorHome\/2016003451|\n|https:\/\/www.stradalex.com\/Stradalex\/nl\/publichome\/html\/display\/monitorHome\/2017030540|\n|https:\/\/www.stradalex.com\/Stradalex\/nl\/publichome\/html\/display\/monitorHome\/2016003184|\n|https:\/\/www.stradalex.com\/Stradalex\/nl\/publichome\/html\/display\/monitorHome\/2018015646|\n|https:\/\/www.stradalex.com\/Stradalex\/NL\/publichome\/html\/display\/monitorHome\/2017070054|\n|https:\/\/www.stradalex.com\/Stradalex\/nl\/publichome\/html\/display\/monitorHome\/2017020508|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table262"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|F2_USER|\n|---|\n|Jackie Webb \/ jackie.webb@bpd.treas.gov|\n|Devin Cumpston \/ devin.cumpston@bpd.treas.gov|\n|Jill D. Dodero \/ jill_d_dodero@ibc.doi.gov|\n|James Spaeth \/ jim.spaeth@faa.gov|\n|Cassandra Fournier \/ Cassandra.Fournier@bpd.treas.gov|\n|Nancy Thomas \/ nthomas@onhir.gov|\n|Phuong Luong \/ phuong_t_luong@nbc.gov|\n|Herbert Kwan \/ herbert.kwan@rrb.gov|\n|Mira Smith \/ mira.smith@usitc.gov|\n|Vicky Massey \/ vickie.massey@fcc.gov|\n|Karen Overmier \/ kovermier@ftc.gov|\n|MYLES BURGESS \/ m-burgess@nga.gov|\n|Stephanie Gaskins \/ stephanie.gaskins@bpd.treas.gov|\n|Shemsa Saidi Mohamedi \/ smohamedi@neh.gov|\n|Benjamin Sandy \/ Benjamin.Sandy@bpd.treas.gov|\n|Tenia Dibble \/ tenia.dibble@gsa.gov|\n|Neal Pittman \/ neal.pittman@gsa.gov|\n|Joshua Hudkins \/ joshua.hudkins@bpd.treas.gov|\n|Mario Moreno \/ Mario.Morenojr@rrb.gov|\n|Christopher Reich \/ christopher.reich@rrb.gov|\n|Stacey Cullen \/ Stacey.Cullen@bpd.treas.gov|\n|Brian McConkey \/ Brian.McConkey@do.treas.gov|\n|DON JAMES HICKMAN \/ don.hickman@bpd.treas.gov|\n|Sally Zheng \/ sally.zheng@ntsb.gov|\n|Susan Carter \/ scarter@ncua.gov|\n|Ralph Brandt \/ brandre@rrb.gov|\n|Nichole Vaughn \/ NVaughn@cns.gov|\n|Alex Cheung \/ acheung@presidiotrust.gov|\n|TARUN GOEL \/ tarun.goel@amtrakoig.gov|\n|Michael Clark Moser \/ michael.moser@hq.doe.gov|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table263"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Area|\n|---|\n|Australia|\n|Other Europe|\n|North America|\n|Latin America|\n|Middle East Turkey & Africa|\n|Asia|\n|Central Western Europe|\n|UK and other Europe|\n|Energy Services|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table264"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|State|\n|---|\n|Maryland|\n|Mississippi|\n|New Jersey|\n|New Hampshire|\n|Montana|\n|Vermont|\n|South Carolina|\n|Louisiana|\n|Alabama|\n|Utah|\n|North Carolina|\n|Indiana|\n|Kansas|\n|Texas|\n|Oklahoma|\n|Nevada|\n|Kentucky|\n|Georgia|\n|California|\n|Illinois|\n|Maine|\n|Rhode Island|\n|North Dakota|\n|Florida|\n|Delaware|\n|West Virginia|\n|Virginia|\n|Michigan|\n|Tennessee|\n|Arizona|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table265"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Scene ID|\n|---|\n|S2A_OPER_MSI_L1C_TL_SGS__20160812T112000_20160812T180826_A005954_T29NKH_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160112T111018_20160112T182410_A002908_T29NLH_N02_01_01|\n|L1C_T29NPF_A007627_20161207T110601|\n|S2A_OPER_MSI_L1C_TL_SGS__20161130T111952_20161130T145205_A007527_T29PMK_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160102T111019_20160102T162536_A002765_T29NMH_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20160315T112017_20160315T211148_A003809_T29NLH_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161028T111012_20161028T175511_A007055_T29NLH_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160312T111017_20160312T194921_A003766_T29NPH_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160812T112000_20160812T180826_A005954_T29PLK_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20151223T110915_20151223T144502_A002622_T29NPH_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160918T111009_20160918T175607_A006483_T29NNH_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160918T111009_20160918T175607_A006483_T29NPF_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160806T110024_20160806T174319_A005868_T29NPF_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20151021T110022_20161212T173743_A001721_T29NPF_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20150924T111024_20161228T212239_A001335_T29NNG_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160325T112018_20160325T200543_A003952_T29PMK_N02_01_01|\n|L1C_T29NNJ_A007627_20161207T110601|\n|S2A_OPER_MSI_L1C_TL_SGS__20161018T111007_20161018T175658_A006912_T29NLJ_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160325T112018_20160325T200543_A003952_T29NMJ_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20160302T111017_20160331T095305_A003623_T29NPG_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20160211T111015_20160211T191237_A003337_T29NMF_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20160305T112016_20160305T211141_A003666_T29NLG_N02_01_02|\n|S2A_OPER_MSI_L1C_TL_SGS__20151223T111020_20151223T165229_A002622_T29NPH_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160125T112017_20160125T183215_A003094_T29NLG_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20151120T110013_20170221T023952_A002150_T29NPF_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160122T111015_20160122T165432_A003051_T29NMJ_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20160401T111022_20160401T191218_A004052_T29NPG_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20160401T111022_20160401T191218_A004052_T29NLJ_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161120T111953_20161120T180524_A007384_T29PMK_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20151203T111020_20170524T062704_A002336_T29NMG_N02_04_01|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table266"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Location (City)|\n|---|\n|Charleston SC|\n|Barcelona Spain|\n|Geneva Switzerland|\n|Chapel Hill NC|\n|Rome Italy|\n|St. Louis MO|\n|Helsinki Finland|\n|Munich Bavaria|\n|Aix-en-Provence France|\n|Baltimore MD|\n|?|\n|Seattle WA|\n|Des Moines IA|\n|Memphis TN|\n|Dallas TX|\n|San Francisco CA|\n|Vienna Austria|\n|Norfolk VA|\n|Milan Italy|\n|Wellington New Zealand|\n|Lausanne Switzerland|\n|Albuquerque NM|\n|Glyndebourne England|\n|Cooperstown NY|\n|San Diego CA|\n|Raleigh NC|\n|Munich Germany|\n|Chicago IL|\n|Santa Fe NM|\n|Houston TX|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table267"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Provincia |\n|---|\n|Heredia|\n|Alajuela|\n|Puntarenas|\n|Cartago|\n|Guanacaste|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table268"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|SOC Code|\n|---|\n|47-5041|\n|49-3042|\n|13-1151|\n|25-2053|\n|33-2011|\n|41-2021|\n|17-2141|\n|53-3033|\n|41-3041|\n|29-9011|\n|49-9021|\n|33-1099|\n|47-2051|\n|43-6013|\n|11-9032|\n|39-3031|\n|11-3071|\n|25-1066|\n|47-4071|\n|39-3011|\n|51-7041|\n|43-4061|\n|47-2031|\n|49-9044|\n|43-4151|\n|17-1011|\n|15-1131|\n|41-2031|\n|53-2021|\n|41-4012|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table269"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Employer City|\n|---|\n|Copenhagen|\n|TOULOUSE|\n|Maidstone|\n|Paris|\n|San Sebastian|\n|Torino|\n|Beccles|\n|Absdorf|\n|Lecco|\n|Murcia|\n|Dorking|\n|Buttigliera Alta|\n|Palkonya|\n|Glasgow|\n|Como|\n|Amstelveen|\n|Felixdorf|\n|Ontinyent|\n|Innsbruck|\n|Airdrie|\n|Kenilworth|\n|Jena|\n|Manchester|\n|ZAMUDIO|\n|Medway|\n|Dresden|\n|Turin|\n|Stuttgart|\n|Avezzano|\n|Basel|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Torino', 'Turin']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table27"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|NOMBRES|\n|---|\n|DIEGO CESAR ANTONIO|\n|CAROLINA SOFIA|\n|MARIA JOSE|\n|JULIA ELIANA|\n|SANDRA|\n|FABIOLA ELIZABETH|\n|ERNESTO|\n|CLAUDIO|\n|LEYLA GRACE|\n|RODRIGO ALONSO|\n|ROBERTO HERNAN|\n|PATRICIO ESTEBAN|\n|CARLOS|\n|DANICSA|\n|ITALO JULIANO|\n|CAROLINA|\n|LUIS EDUARDO|\n|SANTIAGO ARNALDO|\n|MARIANELA|\n|MILENKA|\n|MARIA SOLANGE|\n|VALENTINA|\n|DIEGO ALONSO|\n|ALEJANDRA SOLEDAD|\n|JONATHAN LEONARDO|\n|SOLANGE MARGARITA|\n|GISSELA MACARENA|\n|BRENDA ABRIL|\n|PAZ ALEJANDRA|\n|GISELA MARINA|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table270"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|CIUDAD DE RESIDENCIA|\n|---|\n|PITRUFQUEN|\n|LOS VILOS|\n|BUIN|\n|QUELLON|\n|LO BARNECHEA|\n|LA REINA|\n|COYHAIQUE|\n|LA GRANJA|\n|MAIPU|\n|NUEVA IMPERIAL|\n|PUDAHUEL|\n|GRANEROS|\n|SAN ANTONIO|\n|MELIPILLA|\n|SAN PEDRO DE LA PAZ|\n|CARAHUE|\n|MARCHIHUE|\n|SAN FELIPE|\n|RENCA|\n|COQUIMBO|\n|LA UNION|\n|QUILPUE|\n|CURACAUTIN|\n|LIMACHE|\n|CHIGUAYANTE|\n|ALTO HOSPICIO|\n|QUILICURA|\n|EL TABO|\n|MEJILLONES|\n|QUEILEN|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table271"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|GROP_NAZIV|\n|---|\n|KLANA|\n|LEGRAD|\n|PAG|\n|BABINA GREDA|\n|ORIOVAC|\n|SLAVONSKI BROD|\n|JELSA|\n|STRIZIVOJNA|\n|PRGOMET|\n|PETRIJEVCI|\n|SALI|\n|DUGI RAT|\n|MALI BUKOVEC|\n|BELI MANASTIR|\n|HRVATSKA KOSTAJNICA|\n|NOVI MAROF|\n|SINJ|\n|BRODSKI STUPNIK|\n|TOMPOJEVCI|\n|MARTIJANEC|\n|SVETI ILIJA|\n|SMOKVICA|\n|VELA LUKA|\n|NEGOSLAVCI|\n|PETERANEC|\n|ILOK|\n|SLATINA|\n|VUKA|\n|BREZNICA|\n|DVOR|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table272"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Longitud en grados y minutos|\n|---|\n|13.34 O|\n|1.28 E|\n|4.26 O|\n|2.57 O|\n|3.34 O|\n|2.26 O|\n|6.39 O|\n|2.22 E|\n|1.40 O|\n|0.02 O|\n|2.14 O|\n|6.05 O|\n|3.43 O|\n|6.58 O|\n|8.46 O|\n|4.38 O|\n|2.36 O|\n|7.41 O|\n|0.07 O|\n|2.33 E|\n|0.30 E|\n|0.17 O|\n|5.26 O|\n|0.27 O|\n|2.17 E|\n|2.35 E|\n|5.11 O|\n|1.43 E|\n|0.25 O|\n|16.15 O|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table273"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Day|\n|---|\n|Mon|\n|Sun|\n|Tue|\n|Thu|\n|Wed|\n|Fri|\n|Sat|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table274"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Type code|\n|---|\n|TTL|\n|C03|\n|C06|\n|C04|\n|C07|\n|C05|\n|C02|\n|C08|\n|C09|\n|CTR|\n|OTH|\n|C01|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table275"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Offense|\n|---|\n|90G|\n|35B|\n|13B|\n|220|\n|23A|\n|23F|\n|90D|\n|90E|\n|13A|\n|520|\n|26B|\n|23C|\n|35A|\n|290|\n|90Z|\n|90F|\n|26A|\n|240|\n|250|\n|26C|\n|23D|\n|11A|\n|13C|\n|23H|\n|90J|\n|120|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table276"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Notes|\n|---|\n|FCC Transmittal No. 1558|\n|Frontier North Inc. files intrastate access rates under Tariff IURC No. T-8|\n|Cancelling Concurrence with West Point Intrastate Access Tariff and Establishing Concurrence in CCI  Tariff|\n|IURC Tariff No. T-2|\n|Mirroring Level 3 Communications LLC Tariff F.C.C. No. 4|\n|Meets \"solely administrative or clerical per order issued July 13 2011\"|\n|FCC Transmittal 1797|\n|Replaced in its entirety by 30-day filing 50083|\n|FCC Transmittal Nos. 215 and 216|\n|FCC Filing 1826|\n|30-Day Filing ID 3362|\n|Mirror the rates and charges of the Frontier North Inc. I.U.R.C. T-3 Tariff|\n|Amended sheet 1 2 4.1 8 and 56|\n|Concurring in West Point Telephone Company: Tariff I.U.R.C. No. 1|\n|FCC Transmittal 1420|\n|FCC Filing 1821|\n|I.U.R.C. No. T-2|\n|FCC USF-ICC Order Compliance; 30-day ID# 3258|\n|Initial Access Tariff Submission 30-day Filing ID #3244|\n|IURC Tariff No. T-3|\n|Tr. 72 (mirrors CLOC F.C.C. Tariff No. 9)|\n|Received Initial Filing 1\/29\/2018. Received Revised Filing 3\/2\/2018|\n|Concurrence|\n|T-7 Tariff - concurs in modifications within section 2.0|\n|Updates interstate access tariff references and revises the Toll-free 8XX Database Access Service rate to mirror the Company's interstate access tariff|\n|Amended sheet 2 and 56|\n|FCC Transmittal 1423|\n|Files intrastate access rates under Section 8 of its Product Guide|\n|Tr. No. 16  (mirroring Peerless Network's Tariff FCC No. 4)|\n|FCC Transmittals 1417 & 1418|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table277"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|kommune|\n|---|\n|Aukra|\n|Eide|\n|Tingvoll|\n|Surnadal|\n|Hitra|\n|Lierne|\n|Steinkjer|\n|Rauma|\n|Flatanger|\n|Molde|\n|Halsa|\n|Rindal|\n|Osen|\n|Midsund|\n|Melhus|\n|Midtre Gauldal|\n|Oppdal|\n|Kristiansund|\n|Orkdal|\n|Leksvik|\n|Rennebu|\n|Sunndal|\n|Nesset|\n|Vestnes|\n|Snillfjord|\n|Frosta|\n|Selbu|\n|Leka|\n|Tydal|\n|Levanger|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table278"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Produktundergruppe|\n|---|\n|iCLASS kort og brikker|\n|Diverse beslag|\n|Aperio Langskilt E100S (skandinavisk oval)|\n|Connect 200|\n|Vridergreb|\n|Cylinderringe udvendig|\n|Startpakker|\n|EM 4102 - Magnetstribe kombikort|\n|El-slutblik standard|\n|Serie 1500 uden system|\n|Firkantskilte|\n|Ruko :DO: Hanke|\n|Software - Partnersystemer til ARX|\n|Monteringsbeslag|\n|Ruko :DO: Vridergreb|\n|Stolper til el-slutblik standard|\n|Centraler - Udvidelseskort til RX9016|\n|RX WEB Demokit|\n|Yale Transportabel sikkerhed|\n|Vridergreb og toiletmarkeringer|\n|Slutbliksmagneter|\n|Reservedele - Mekaniske enheder|\n|Serie 1500|\n|Langskilte 52 mm|\n|Yale Doorman|\n|Yale Doorman reservedele|\n|Cylinderringe|\n|Blindrosetter|\n|Cylinderringe indvendig|\n|Reservedele - Elektroniske enheder|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table279"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Colonne6|\n|---|\n|EVELYNE|\n|BAUDOUIN|\n|LARA|\n|VALERIE|\n|CATHERINE|\n|BRUNO|\n|DIDIER|\n|ORRY|\n|GAETAN|\n|GUY|\n|ABDALLAH|\n|ANJA|\n|BRIGITTE|\n|GISELE|\n|DIDER|\n|UGO|\n|TANGUY|\n|CLEO|\n|JOSEPH|\n|JACQUES|\n|BERNADETTE|\n|RUDOLPHE|\n|PATRICE|\n|GREGORY|\n|MARY|\n|LOIC|\n|FABIEN|\n|JEAN-MARC|\n|CHARLES|\n|MADELEINE|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['DIDIER', 'DIDER']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table28"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Principlal Investigator|\n|---|\n|Holcomb Mikel|\n|Strauss Henry|\n|DALDAL M. FEVZI|\n|Fernandez-Serra Maria Victoria|\n|McLerran Larry|\n|Sanchez Mayly|\n|Goree John|\n|Dougherty Daniel|\n|Tsang ManYee Betty|\n|Wenk Hans-Rudolf|\n|Paschke Kent|\n|Chelikowsky James|\n|Donev Aleksandar|\n|Shokouhi Parish|\n|Gagliardi Carl|\n|Lodge Timothy|\n|Olsen Bradley|\n|Ming Ray|\n|Chen Zhong|\n|Gavrilovska Habl Ada|\n|Howell Calvin R.|\n|Krivorotov Ilya|\n|Kirmaier Christine|\n|Hungate Bruce|\n|Balint-Kurti Peter|\n|Rahman Talat|\n|Dauskardt Reinhold|\n|Morr Dirk|\n|Evans John|\n|Wilkerson John|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table280"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Suburb|\n|---|\n|Cannon Hill Murarrie|\n|Bulimba|\n|Annerley|\n|Murarrie Cannon Hill|\n|Indooroopilly|\n|Zillmere|\n|Keperra|\n|Wacol Darra|\n|Bracken Ridge|\n|Paddington|\n|Bowen Hills|\n|Deagon|\n|Keperra The Gap Enoggera|\n|West End|\n|Bowen Hills Fortitude Valley|\n|Grange|\n|Murarrie|\n|Carseldine Fitzgibbon|\n|Greenslopes|\n|Coorparoo East Brisbane|\n|Fitzgibbon Taigum Zillmere|\n|Tingalpa Wynnum West|\n|Oxley|\n|Algester|\n|Norman Park Morningside Hawthorne Norman Park|\n|Belmont|\n|Hawthorne|\n|Sunnybank|\n|Chelmer|\n|Norman Park Morningside|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table281"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Scene ID|\n|---|\n|S2A_OPER_MSI_L1C_TL_SGS__20160113T154326_20160113T193035_A002925_T17MRU_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160909T154326_20160909T203517_A006357_T17MRV_N02_04_01|\n|L1C_T17NPA_A007830_20161221T155215|\n|S2A_OPER_MSI_L1C_TL_MTI__20160817T153643_20160817T215454_A006028_T17MRT_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161205T153333_20161205T202640_A007601_T17MRU_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_MPS__20160823T155513_20160823T220748_A006114_T17MNV_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161121T155510_20161121T204614_A007401_T17MNR_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161111T155510_20161111T205225_A007258_T17NPB_N02_04_01|\n|L1C_T18NUF_A007644_20161208T153912|\n|S2A_OPER_MSI_L1C_TL_SGS__20161118T154352_20161118T203845_A007358_T17MRS_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160323T154654_20160323T210206_A003926_T17MRR_N02_01_01|\n|L1C_T18MVD_A007744_20161215T153050|\n|S2A_OPER_MSI_L1C_TL_MTI__20160120T153332_20160201T142508_A003025_T18MVC_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160919T154543_20160919T203922_A006500_T17NRA_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160919T154543_20160919T203922_A006500_T17NPA_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160731T154332_20160731T203407_A005785_T18MTD_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161128T154547_20161128T204204_A007501_T17MPQ_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161128T154547_20161128T204204_A007501_T17NRA_N02_04_01|\n|L1C_T17MNQ_A007973_20161231T155215|\n|S2A_OPER_MSI_L1C_TL_MTI__20161009T154544_20161009T202722_A006786_T17MPS_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160205T155539_20160205T210608_A003254_T17NNB_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20160827T153337_20160827T215910_A006171_T18MUE_N02_04_01|\n|L1C_T17MRU_A007930_20161228T154235|\n|S2A_OPER_MSI_L1C_TL_SGS__20161022T155333_20161022T204418_A006972_T17NPA_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160810T154520_20160810T204459_A005928_T17MRU_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161026T153333_20161026T202744_A007029_T18MVC_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20160209T153729_20160209T220627_A003311_T17MRT_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20161009T154544_20161009T202722_A006786_T18MTD_N02_04_01|\n|L1C_T17MQQ_A007744_20161215T153050|\n|S2A_OPER_MSI_L1C_TL_SGS__20161128T154547_20161128T204204_A007501_T17MRV_N02_04_01|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table282"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|LGD|\n|---|\n|CARRICKFERGUS|\n|FERMANAGH|\n|COOKSTOWN|\n|DUNGANNON|\n|CRAIGAVON|\n|OMAGH|\n|MAGHERAFELT|\n|NEWRY & MOURNE|\n|LISBURN|\n|ARDS|\n|COLERAINE|\n|BANBRIDGE|\n|BELFAST|\n|LARNE|\n|BALLYMONEY|\n|CASTLEREAGH|\n|LIMAVADY|\n|MOYLE|\n|NORTH DOWN|\n|BALLYMENA|\n|STRABANE|\n|ARMAGH|\n|NEWTOWNABBEY|\n|DOWN|\n|DERRY|\n|ANTRIM|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table283"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|\u00c4rende nr|\n|---|\n|LS2016-0003|\n|LS2016-0191|\n|LS2016-0395|\n|LS2016-0385|\n|LS2016-0483|\n|LS2016-0140|\n|LS2016-0218|\n|LS2016-0234|\n|LS2016-0248|\n|LS2016-0421|\n|LS2016-0409|\n|LS2016-0044|\n|LS2016-0426|\n|LS2016-0397|\n|LS2016-0310|\n|LS2016-0033|\n|LS2016-0099|\n|LS2016-0203|\n|LS2016-0511|\n|LS2016-0189|\n|LS2016-0182|\n|LS2016-0295|\n|LS2016-0542|\n|LS2016-0208|\n|LS2016-0225|\n|LS2016-0549|\n|LS2016-0495|\n|LS2016-0172|\n|LS2016-0127|\n|LS2016-0090|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table284"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Sucursal|\n|---|\n|ZAC \/ AGS|\n|GUADALAJARA|\n|MOR QRO.|\n|LAZARO CARDENAS|\n|IRAPUATO|\n|CELAYA|\n|MOR \/ COL|\n|AGUASCALIENTES|\n|TEPIC|\n|S.L.P.|\n|LEON|\n|COLIMA|\n|ZACATECAS|\n|MORELIA|\n|FUERA DE TERRITORIO|\n|PTO. VALLARTA|\n|TEP \/ PTV|\n|QUERETARO|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table285"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Land|\n|---|\n|CYPRUS|\n|SCHIEDAM|\n|UTRECHT|\n|ZWITSERLAND|\n|PURMEREND|\n|EINDHOVEN|\n|DORDRECHT|\n|ZWOLLE|\n|TURKIJE|\n|AMSTERDAM|\n|NEDERLAND|\n|NOORWEGEN|\n|ENGELAND|\n|CURACAO|\n|SCHOTLAND|\n|DEN HAAG|\n|STADSKANAAL|\n|SOFIA|\n|LUXEMBURG|\n|EMMELOORD|\n|MEXICO|\n|HAMM|\n|WOUW|\n|APELDOORN|\n|PORTUGAL|\n|ZOETERMEER|\n|HOORN|\n|OOSTENRIJK|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table286"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|ADDRESS|\n|---|\n|770 Okaloosa Avenue|\n|770 Waltham Street|\n|7700 Tawawa Maplewood Rd|\n|770 W Lone Mountain|\n|7701 E 33Rd St|\n|770 Moraga Drive|\n|7700 Colgate Ave|\n|770 Prescott Way|\n|77 Yale Street|\n|7701 Donald Nelson Ave|\n|7701 Fall Cliff Rd|\n|7701 Hardeson Road #65|\n|770 Patriot Pkwy Apt 105|\n|7700 Knapp Street Ne|\n|7700 Corporate Dr|\n|7701 B Walnut Creek Drive|\n|7700 San Benito Nw|\n|770 James Street|\n|7700 Corporate Drive|\n|7701 Forest Stream|\n|77 West Clark St|\n|77 Wilson Terrace|\n|770 N. Winchester Blvd Apt #27|\n|7700 S Main St Apt 4|\n|7701 E Osborn Road Apt 169W|\n|770 Industrial Blvd|\n|7700 W Grant Ranch Boulevard #7F|\n|7700 Corporate Dr Apt 1303|\n|770 East Albert Drive|\n|770 Dylan Driveapt. 206|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table287"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Plant name|\n|---|\n|STEVENSON|\n|ZWIJNDRECHT|\n|BAHIA LAS MINAS|\n|MARAFIQ|\n|GETEU|\n|CHAUTAGNE|\n|SOHAR 2|\n|BEVEREN|\n|BELLEY|\n|DOUR|\n|BUDA|\n|LA VIERRE|\n|TARFAYA|\n|ABLAINCOURT-PRES.(80)|\n|BLANTYRE|\n|CARAMULO|\n|ELECTROMET. DEL EBRO|\n|ZEDELGEM|\n|TALHADAS|\n|ARTHEZ D'ASSON|\n|LEUZE-EN-HAINAUT|\n|TOULUCH|\n|FIENVILLERS (80)|\n|PELICAN POINT|\n|MT TOM|\n|SODC|\n|PLEASANTS (WV)|\n|LAGES COGENERATION FACILITY|\n|ZEEBRUGGE 3|\n|RAS LAFFAN C|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table288"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Colonne1|\n|---|\n|A04|\n|B12|\n|B10|\n|B21|\n|A18|\n|H05|\n|B40|\n|B30|\n|H14|\n|A10|\n|A09|\n|H11|\n|D07|\n|B45|\n|B41|\n|E11|\n|A05|\n|H21|\n|A13|\n|H27|\n|A23|\n|A07|\n|H32|\n|B08|\n|B22|\n|E02|\n|B15|\n|A08|\n|A33|\n|B27|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table289"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Prebivali\u0161te|\n|---|\n|KOTOR|\n|H. NOVI|\n|UGLJEVIK - MEZGRAJA|\n|APATIN|\n|RAKOVAC|\n|PODGORICA|\n|SUBOTICA|\n|PRIBOJ|\n|SR.KARLOVCI|\n|BUKOVAC|\n|JARAK|\n|KIKINDA|\n|DOBANOVCI|\n|POPOVI BIJELJINA|\n|VRBAS|\n|ERDEVIK|\n|MLADENOVO|\n|KIKNDA|\n|ADA|\n|NOVA PAZOVA|\n|PARAGE|\n|DOBRINCI|\n|BEGALJICA|\n|B. PETROVAC|\n|OBROVAC|\n|KULA|\n|VOJKA|\n|BUDISAVA|\n|LIPAR|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['KIKINDA', 'KIKNDA']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table29"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|No of Axles|\n|---|\n|7 Axles|\n|4 Axles|\n|3 Axles|\n|6 Axles|\n|5 Axles|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table290"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Location|\n|---|\n|22XX JEFFERSON DAVIS HW|\n|FORT MYER DR\/ LEE HW|\n|90X S RT 395|\n|20XX COLUMBIA PK|\n|16XX CRYSTAL DR|\n|36XX N GLEBE RD|\n|30XX N UNDERWOOD ST|\n|27XX S LANG ST|\n|80X N GARFIELD ST|\n|N CARLIN SPRING\/S GEORGE MASON DR|\n|S DINWIDDIE ST\/S WALTER REED DR|\n|32XX COLUMBIA PK|\n|10XX N GLEBE RD|\n|20X N TRENTON ST|\n|25XX 20TH RD N|\n|26XX S ARLINGTON MILL DR|\n|35XX S 17 ST|\n|13XX N VEITCH ST|\n|31XX LEE HW|\n|21XX CLARENDON BL|\n|22X N PIEDMONT ST|\n|N GLEBE RD\/W I66 RT|\n|48XX COLUMBIA PK|\n|12XX N GARFIELD ST|\n|44XX FAIRFAX DR|\n|13XX N JACKSON ST|\n|2xxB N GLEBE RD|\n|52XX YORKTOWN BL|\n|47XX LEE HW|\n|18XX N QUANTICO ST|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table291"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|RegineNr.|\n|---|\n|015.E3Z|\n|042.711Z|\n|084.7B4Z|\n|189.C4|\n|166.6A|\n|019.CF|\n|016.BA11|\n|122.G40|\n|073.1Z|\n|098.5AZ|\n|016.AC4|\n|016.AC1|\n|060.6B0|\n|019.E2|\n|053.D3|\n|159.7Z|\n|098.5C|\n|014.AZ|\n|062.GA|\n|023.AC0|\n|038.21Z|\n|074.1Z|\n|097.23Z|\n|123.D8Z|\n|012.CE3A|\n|129.Z|\n|036.B11|\n|083.D6|\n|055.2Z|\n|205.B3B0|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table292"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Genere|\n|---|\n|FILOSOFIA|\n|LETTER. GRECA|\n|STORIA|\n|ECONOMIA|\n|FANTASCIENZA|\n|MINERALOGIA|\n|NARRAT. SUDAMERICANA|\n|MUSICA|\n|NARRAT. INGLESE|\n|NARRAT. FRANCESE|\n|CINEMA|\n|TEATRO|\n|NARRAT. EST EUROPA|\n|NARRAT. TEDESCA|\n|GEOGRAFIA|\n|DIZIONARI|\n|COSTUME|\n|GIORNALISMO|\n|GASTRONOMIA|\n|HOBBISTICA|\n|NARRAT. AFRICANA|\n|BOTANICA|\n|FILATELIA|\n|SCIENZA|\n|TELEVISIONE|\n|PALEONTOLOGIA|\n|RAGAZZI|\n|MANUALISTICA|\n|ARREDAMENTO|\n|LETTER. ITALIANA|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table293"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|City|\n|---|\n|Bentonville|\n|Palatka|\n|Gilbert|\n|Prineville|\n|Port Huron|\n|Shoreline|\n|West Chester|\n|Worth|\n|Germantown|\n|Fort Pierce|\n|Cave Junction|\n|Flagstaff|\n|Vidalia|\n|Anthony|\n|Carrabelle|\n|Salt Lake City|\n|La Jolla|\n|Staples|\n|Northville|\n|Elko|\n|The Dalles|\n|Macomb|\n|Reidsville|\n|Norcross|\n|White Plains|\n|Cleveland|\n|Austin|\n|Rockford|\n|Bremerton|\n|Duluth|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table294"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|M\u00caS|\n|---|\n|Ago|\n|Fev|\n|Mar|\n|Dez|\n|Jun|\n|Jul|\n|Jan|\n|Set|\n|Mai|\n|Nov|\n|Abr|\n|Out|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table295"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|DATA_CATEGORY|\n|---|\n|Economically Disadvantaged|\n|Female|\n|ADA Eligible|\n|Students Enrolled Full-day|\n|English Language Learners|\n|Students Enrolled Age 04|\n|White|\n|Other Races|\n|Membership|\n|Special Education|\n|Students Enrolled Age 03|\n|Students Enrolled Half-day|\n|Military Children|\n|Total Students Enrolled|\n|Black or African American|\n|Hispanic\/Latino|\n|ADA Ineligible|\n|All Prekindergarten Enrollees|\n|Total|\n|Male|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table296"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|School|\n|---|\n|KITATYA SECONDARY SCHOOL P.O.BOX 18094 KAYUNGA|\n|RWENKOBWA SECONDARY SCHOOL P.O.BOX 150 MBARARA|\n|KAMULI PROGRESSIVE COLLEGE P.O.BOX 259 KAMULI|\n|KIGARAMA SECONDARY SCHOOL P.O.BOX 374 BUSHENYI|\n|BUHOBE SECONDARY SCHOOL P.O.BOX 139 BUSIA|\n|POPE JOHN PAUL II MEM.COLLEGE P.O.BOX 34 KOTIDO|\n|KATERERA COMPREHENSIVE H\/S P.O.BOX 52 RUBIRIZI BUSHENYI|\n|KIBOGA PROGRESSIVE SEC. SCHOOL P.O.BOX 137 KIBOGA|\n|CANON NJANGALI GIRLS H\/S_HOIMA P.O.BOX 20 HOIMA|\n|KYERE TOWNSHIP SEC. SCHOOL P.O.BOX 42 SOROTI|\n|NDEJJE SECONDARY SCHOOL P.O.BOX 193 BOMBO|\n|MONSIGNOR BALA SS_PAKELE P.O.BOX 38 PAKELE-ADJUMANI|\n|ST.JOSEPH'S GIRLS' SCH._NKONI P.O.BOX 539 MASAKA|\n|MBOGO COLLEGE SCHOOL_KAWEMPE P.O.BOX 10320 KAMPALA|\n|NYANGILIA SECONDARY SCHOOL P.O.BOX 18 KOBOKO|\n|MBARARA GIRLS SCHOOL P.O.BOX 1915 MBARARA|\n|LOTUKE SEED SEC. SCHOOL_ABIM P.O.BOX 5 KOTIDO|\n|CITIZEN'S HIGH SCHOOL_MBARARA P.O.BOX 1475 MBARARA|\n|ST.NOA MAWAGALI SS_JINJA P.O.BOX 1922 JINJA|\n|ST.MARY'S SEC. SCHOOL_KITENDE P.O.BOX 30583 KAMPALA|\n|KIBIBI SECONDARY SCHOOL P.O.BOX 1400 MPIGI|\n|ST.STEPHEN'S BUGIRI SS P.O.BOX 337 BUGIRI|\n|ST.MARY'S COLLEGE_RUSHOROZA P.O.BOX 135 KABALE|\n|KINYASANO GIRLS' HIGH SCHOOL P.O.BOX 134 RUKUNGIRI|\n|OMBATINI SECONDARY SCHOOL P.O.BOX 171 ARUA|\n|PREMIER SECONDARY SCHOOL_HOIMA P.O.BOX 346 HOIMA|\n|FR.KIGGEN MEM. COLLEGE_NGORA P.O.BOX 50 KUMI|\n|UGANDA MARTYRS COMP. SS P.O.BOX 34 HOIMA|\n|BUDINSE MEMORIAL SCHOOL P.O.BOX 27897 KAMPALA|\n|KIBULI SECONDARY SCHOOL P.O BOX 4216 KAMPALA|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table297"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Macro Processo DNIT (LV 1)|\n|---|\n|Operar a infraestrutura de transportes|\n|Gerir ouvidoria|\n|Pesquisar e desenvolver tecnologia de transporte|\n|Gerir processos e  desempenho  organizacional|\n|Contratar empreendimento|\n|Gerir pessoas|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table298"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|CostCenter|\n|---|\n|County Treasurer - Collections|\n|Adult Probation Support- General Fund|\n|Constable Precinct 2|\n|Support Personnel -DPS|\n|County Judge - IT Operations|\n|County and District Courts Technology|\n|Elections-HAVA Grant|\n|Constable Precinct 4|\n|Community Development Block Grant|\n|Road and Bridge Precinct 2|\n|County Jail Inmate Medical Cost Center|\n|Revenues-District Attorney Forfeiture Fund|\n|Weigh Station Site Support Personnell|\n|Juvenile Grant Medical Services|\n|Sheriff Estray|\n|Texas AgriLife Extension Service|\n|Adult Court Services|\n|Adult Probation -Community Services- General Fund|\n|SPU - State General Allocation|\n|Constable Precinct 3|\n|Social Services|\n|Justice of Peace Precinct 3|\n|Justice of Peace Precinct 2|\n|Sheriff|\n|District Attorney Forfeiture|\n|Planning and Development|\n|Walker County EMS - Emergency Services|\n|Adult Substance Abuse Services|\n|Court Reporter Fees|\n|SPU Juvenile Division|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table299"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Description of disaster|\n|---|\n|Hurricane Florence|\n|Severe Storms Tornadoes Straight-line Winds and Flooding|\n|Severe Winter Storm and Snow Storm|\n|severe storm and flooding|\n|Severe Storms and Flooding|\n|Hurricane Lane|\n|Severe Storm and Flooding|\n|Severe Winter Storm and Flooding|\n|Hurricane Michael|\n|Severe Storms and Tornadoes|\n|Kilauea Volcanic Eruption and Earthquakes|\n|Wildfires|\n|Severe Storms tornadoes flooding landslides and mudslides|\n|Severe Storms Flooding and Landslides|\n|Severe Storms|\n|Severe Winter Storm and Straight-line Winds|\n|Tropical Storm Gita|\n|Severe Storms Flooding Landslides and Mudslides|\n|severe storms and flooding|\n|Severe Storms Tornadoes and straight-line winds|\n|wildfires and high winds|\n|Typhoon Mangkhut|\n|Flooding|\n|Severe Storms Straight-line Winds and Flooding|\n|flooding mudflows and debris flows directly related to the wildfires|\n|Severe Storms and Tornado|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['severe storms and flooding', 'severe storm and flooding']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table3"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Make and Model|\n|---|\n|jaguar de58 fdl|\n|toyota rav 4|\n|Citroen Saxo|\n|Peugeot 106|\n|bmw|\n|audi a4 1.8 petrol|\n|yamaha moped|\n|optare excell bus|\n|VAUXHALL VECTRA|\n|Lambretta|\n|Vauxhall combo van 1.7d|\n|John Deere 6630|\n|fiat|\n|engine|\n|SAAB|\n|battery\/fusebox|\n|mercedes sprint E5 v6|\n|IVECO FLAT BED VAN|\n|Volvo HPH Digger|\n|ford fiesta|\n|mercedes s600|\n|land rover discovery|\n|Renault Kangoo|\n|peugot 208|\n|ford mondao|\n|VW Transporter|\n|Mercedes LGV|\n|ford mondeo|\n|LDV MAXUS|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['ford mondao', 'ford mondeo']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table30"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Commune class\u00e9e en ZV 2018|\n|---|\n|BETRACQ|\n|SAINT-CASTIN|\n|PONTACQ|\n|LABASTIDE-CEZERACQ|\n|MASLACQ|\n|LOMBIA|\n|GARLIN|\n|CONCHEZ-DE-BEARN|\n|SAMSONS-LION|\n|MIALOS|\n|MAURE|\n|ARTIGUELOUTAN|\n|SAINT-BOES|\n|BUROS|\n|DOAZON|\n|LABEYRIE|\n|MESPLEDE|\n|MAUCOR|\n|CASTETNER|\n|LARREULE|\n|BOURDETTES|\n|AURIONS-IDERNES|\n|BASSILLON-VAUZE|\n|CASTEIDE-CAMI|\n|BALANSUN|\n|POMPS|\n|MIOSSENS-LANUSSE|\n|SENDETS|\n|SIROS|\n|ARRICAU-BORDES|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table300"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Date de r\u00e9f\u00e9rence|\n|---|\n|2010.03.31|\n|2015.03.31|\n|2009.03.31|\n|2013.03.29|\n|2014.03.31|\n|2012.03.30|\n|2016.03.31|\n|2011.03.31|\n|2017.03.31|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table301"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Url|\n|---|\n|http:\/\/www.marketo.com\/definitive-guides\/sales-lead-qualification-and-sales-development\/|\n|http:\/\/blog.marketo.com\/2013\/08\/the-problem-with-implicit-opt-in-for-email-marketing.html|\n|https:\/\/launchpoint.marketo.com\/vidyard\/896-vidyard-for-marketo\/|\n|http:\/\/www.marketo.com\/about\/news\/marketo-named-red-herring-100-north-america-finalist\/|\n|http:\/\/blog.marketo.com\/2013\/10\/5-more-provocative-and-daring-marketing-campaigns-so-far-in-2013.html|\n|https:\/\/www.marketo.com\/marketing-topics\/direct-response-copywriting|\n|http:\/\/www.marketo.com\/ebooks\/salesforce-marketing-automation\/|\n|http:\/\/www.marketo.com\/worksheets\/landing-page-split-test-calculator\/|\n|http:\/\/www.marketo.com\/reports\/the-forrester-wave-lead-to-revenue-management-platform-vendors-2014\/|\n|http:\/\/www.marketo.com\/library\/are-they-hot-or-not-lead-scoring-wp.pdf|\n|http:\/\/www.marketo.com\/media\/dreamforce-2013-10-ways-marketing-automation-and-inbound-marketing-work-together\/|\n|https:\/\/www.marketo.com\/_assets\/uploads\/Inbound-Marketing-Cheat-Sheet.pdf|\n|https:\/\/www.marketo.com\/marketing-topics\/direct-response-media|\n|http:\/\/blog.marketo.com\/2012\/01\/the-right-brain-vs-left-brain-of-marketers.html|\n|http:\/\/blog.marketo.com\/2013\/12\/must-attend-marketing-events-of-2014.html|\n|http:\/\/blog.marketo.com\/2015\/02\/infographic-the-end-of-the-facebook-free-for-all-for-brands.html|\n|http:\/\/blog.marketo.com\/2014\/02\/an-unexpected-win.html|\n|http:\/\/launchpoint.marketo.com\/strikeiron-inc\/745-strikeiron-address-verification\/|\n|http:\/\/www.marketo.com\/about\/news\/marketo-unveils-new-social-sales-application\/|\n|https:\/\/www.marketo.com\/_assets\/uploads\/Sample-Social-Media-Plan-for-Events.pdf?20130219144248|\n|http:\/\/blog.marketo.com\/2015\/01\/5-ways-to-turn-2014-marketing-challenges-into-2015-success.html|\n|http:\/\/www.marketo.com\/worksheets\/social-media-editorial-calendar\/|\n|https:\/\/launchpoint.marketo.com\/eagle-creek-software-services\/1002-marketing-automation-services\/|\n|http:\/\/www.marketo.com\/software\/marketing-automation\/landing-pages\/|\n|http:\/\/www.marketo.com\/marketing-topics\/lead-generation-process|\n|http:\/\/www.marketo.com\/marketing-topics\/behavioral-targeting-definition|\n|http:\/\/www.marketo.com\/lead-generation\/|\n|http:\/\/www.marketo.com\/services\/education\/|\n|http:\/\/www.marketo.com\/event-marketing\/|\n|http:\/\/blog.marketo.com\/2013\/02\/what-is-the-difference-between-thought-leadership-and-content-marketing.html|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table302"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Restrictions - Prof and Accred Bodies|\n|---|\n|Contact board for score|\n|-|\n|* Certificate Programs Undergraduate: 6.5* Certificate Programs Graduate: 6.5|\n|(no subscore below 6.5)|\n|6.0 minimum all bands|\n|* Registered Nurses: 6.5 overall (no Speaking score below 7.0); * Licensed practical nurses: 6.0 overall (no Speaking score below 7.0)|\n|* Clinical Laboratory Scientist (Medical Technologist): 6.5 (no Speaking below 7.0) - Academic Module; * Clinical Laboratory Technician (Medical Technician): 6.0 (no Speaking score below 7.0) May take General Training Module or Academic Module|\n|*contact LASPAU for score|\n|(no subscore below 6.0)|\n|Registered Nurses and other healthcare workers requiring attainment of a Bachelor's degree: 6.5 (Speaking score 7.0) - Practical\/ vocational nurses (less than Bachelor's degree): 6.0 (Speaking score 7.0);May take General Training Module or Academic Module|\n|No speaking score below 7.0|\n|Nursing Licensure (no subscore below 6.0)|\n|no band below 6.0|\n|Contact school for score|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table303"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Campus|\n|---|\n|CHIHUAHUA|\n|GUERRERO|\n|GUADALUPE Y CALVO|\n|OJINAGA|\n|GUACHOCHI|\n|JUAREZ|\n|MADERA|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table304"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|CCG Code|\n|---|\n|14Y|\n|05A|\n|07K|\n|07T|\n|02Y|\n|02M|\n|11N|\n|99P|\n|11M|\n|03M|\n|06V|\n|10E|\n|00V|\n|05Y|\n|15C|\n|06Q|\n|01W|\n|09N|\n|08Y|\n|03K|\n|06Y|\n|01J|\n|02D|\n|04N|\n|03N|\n|99H|\n|10D|\n|09W|\n|05V|\n|05Q|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table305"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Style|\n|---|\n|Ranch|\n|Exp. Ranch|\n|Bi Level|\n|Raised Ranch|\n|Bungalow|\n|Tudor|\n|Split Level|\n|Colonial|\n|Det. Garage|\n|Duplex|\n|Townhouse|\n|Log Home|\n|Cape Cod|\n|Condo|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table306"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Type|\n|---|\n|Reprocessing - Depth Conversion|\n|Reprocessing - 8624-D001-003P|\n|Subsurface Model|\n|Reprocessing - 8620-C015-001P|\n|Reprocessing - 8627-A014-001P - Magnetic - Gravity|\n|Reprocessing - 8624-C015-001P|\n|Reprocessing - Gravity - Magnetic|\n|Regional Study|\n|Reprocessing - 8620-H007-006E|\n|Reprocessing - 8627-S024-001P|\n|Gravity Survey|\n|Gravity - Magnetic Survey|\n|Reprocessing - 2D Seismic - 3D Seismic|\n|Reprocessing|\n|Reprocessing - Amplitude versus Offset (AVO) Modelling|\n|Geohazards Survey|\n|2D Seismic - 8624-P028-014E|\n|Geotechnical Study|\n|2D Seismic - 8624-P028-005E|\n|2D Seismic - 8624-M003-038E|\n|Reprocessing - 3D Seismic|\n|Aeromagnetic Survey - 8621-G006-001P|\n|2D Seismic - 8624-P028-006E|\n|Ice Scour Analysis|\n|Reprocessing - 8621-S017-001P - Aeromagnetic Survey|\n|Reprocessing - 8624-T007-006E|\n|3D Seismic|\n|Reprocessing - 8624-S024-001P|\n|Reprocessing - 2D Seismic|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table307"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Premises Address|\n|---|\n|North Ledaig By Oban PA37 1RU|\n|Port Ellen Isle of Islay PA42 7EA|\n|Baliscate Industrial Estate Salen Road Tobermory Isle of Mull PA75 6QA|\n|Ferry Road Tayinloan Tarbert PA29 6XQ|\n|51 Hillfoot Street Dunoon PA23 7DR|\n|91 Chalmers Street Ardrishaig PA30 8HX|\n|25 Gallowgate Rothesay Isle of Bute PA20 0HR|\n|Church Square Inveraray PA32 8TX|\n|Tayinloan Tarbert PA29 6XG|\n|Pennyghael Isle of Mull PA70 6HB|\n|5 Watergate Rothesay Isle of Bute PA20 9AB|\n|Taynuilt By Oban_PA34 1HT|\n|Main Street Luss Loch Lomond G83 8NY|\n|Dungallan Park Oban PA34 4QH|\n|45A Sinclair Street Helensburgh G84 8TG|\n|34 George Street Oban PA34 6BA|\n|49 West Princes Street Helensburgh G84 8BN|\n|1 Main Road Isle of Gigha PA41 7AA|\n|Ardentinny PA23 8TT|\n|Ellenabeich Easdale PA34 4RQ|\n|95 George Street Oban PA34 5NR|\n|Argyll Square Oban PA34 3BE|\n|43 Chalmers Street Ardrishaig PA30 8DX|\n|Benderloch by Oban PA37 1QP|\n|Main Street Tobermory Isle of Mull PA75 6NU|\n|Dunbeg By Oban PA37 1PX|\n|104 George Street Oban PA34 5NT|\n|Argyll Street Dunoon PA23 7DH|\n|Easdale Island By Oban PA34 4TB|\n|Mount Stuart Road Rothesay Isle of Bute PA20 9JP|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table308"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Product|\n|---|\n|Jasmine Rice|\n|Cranberry Sauce|\n|Ricotta|\n|Chai|\n|Gnocchi|\n|Honey|\n|Gorgonzola|\n|Kit Kats|\n|Lemon Curd|\n|Snakes|\n|Cappuccino|\n|Gouda|\n|Fruit Chutney|\n|Milk Bottles|\n|Green Tea|\n|Snapper|\n|Ravioli|\n|Raisins|\n|Mahi Mahi|\n|Nutella|\n|Banana Prawns|\n|Rump Steak|\n|Boysenberry Spread|\n|Smarties|\n|Chamomile|\n|Jupiter Bars|\n|Red Frogs|\n|Latte|\n|Lamb Backstrap|\n|Crunchie|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table309"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Description of the services included in the tariff filing |\n|---|\n|Modifies the Table of Contents Symbols General Regulations Access Special Access and Public Packet Data Network sections|\n|Modifies the Table of Contents Special Access and Public Packet Data Network sections|\n|Replacing Cincinnati Bell Any Distance (CBAD) Tariff No. 1 in entirety \"only replacing to change name\"|\n|Intrastate Access Service Tariff Revisions  (T-4)|\n|Intrastate Switched Access Service|\n|Intrastate Access Services Tariff - Tariff I.U.R.C. No. 1|\n|intrastate access service tariff revisions|\n|Detariffs certain Special Access services from Section 21 Metropolitan Statistical Area Access Services|\n|Access Services Tariff IURC No. 1|\n|Changes to Optional Rate Plan availability and Rate Tables|\n|Carrier Common Line Rates|\n|Access Tariff|\n|Intrastate Access|\n|Wholesale Tariffs|\n|Intrastate Switched Access|\n|With this filing Ameritech amends the 1867 filing to correct inadvertently filed incorrect rate|\n|Intrastate Access Services Tariff|\n|Federal Universal Service Charge|\n|Consumer Casual Calling\/Initial Subscription Services|\n|Facilities for Intrastate Access|\n|Interstate Access Service Tariff Revisions|\n|Dedicated Optical Ethernet Service|\n|Switched and Special Access Rates|\n|Intrastate Access Service Tariff Revisions|\n|Revised tariff pages of the CenturyTel of Odon Inc. d\/b\/a CenturyLink Access Service Tariff I.U.R.C. No. T-2|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['intrastate access service tariff revisions', 'intrastate access service tariff rivisions']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table31"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|FSG|\n|---|\n|Wet|\n|Sand|\n|Subirrigated|\n|Very Shallow To Gravel|\n|Steep Loam|\n|Not suited|\n|Droughty Loam|\n|Loam|\n|Very Droughty Loam|\n|Clayey Subsoil|\n|Overflow|\n|Limy Upland|\n|Claypan|\n|Saline|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table310"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|County|\n|---|\n|WAUKESHA COUNTY|\n|IRON COUNTY|\n|SHAWANO COUNTY|\n|VILAS COUNTY|\n|TREMPEALEAU COUNTY|\n|ASHLAND COUNTY|\n|WALWORTH COUNTY|\n|TAYLOR COUNTY|\n|ADAMS COUNTY|\n|OCONTO COUNTY|\n|BURNETT COUNTY|\n|DUNN COUNTY|\n|DOOR COUNTY|\n|WOOD COUNTY|\n|FOND DU LAC COUNTY|\n|ROCK COUNTY|\n|WASHINGTON COUNTY|\n|RICHLAND COUNTY|\n|GREEN LAKE COUNTY|\n|LINCOLN COUNTY|\n|JUNEAU COUNTY|\n|SAUK COUNTY|\n|POLK COUNTY|\n|LA CROSSE COUNTY|\n|MONROE COUNTY|\n|CLARK COUNTY|\n|MARATHON COUNTY|\n|GREEN COUNTY|\n|IOWA COUNTY|\n|OZAUKEE COUNTY|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table311"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|OMB_ACCT|\n|---|\n|029-15-0160   Medical Services|\n|029-15-5287   Medical Care Collections Fund|\n|029-25-4025   Housing Liquidating Account|\n|029-40-0181   Grants for Construction of State Extended Care Facilities|\n|029-25-4129   Housing Guaranteed Loan Financing Account|\n|029-40-0183   Grants for Construction of Veterans Cemeteries|\n|029-40-0151   General Operating Expenses Veterans Benefits Administration|\n|029-25-4258   Transitional Housing Direct Loan Financing Account|\n|029-25-8150   United States Government Life Insurance Fund|\n|029-25-8455   Veterans Special Life Insurance Fund|\n|029-40-0170   Office of Inspector General|\n|029-40-0142   General Administration|\n|029-15-0162   Medical Facilities|\n|029-25-4130   Native American Direct Loan Financing Account|\n|029-25-8132   National Service Life Insurance Fund|\n|029-15-0172   Veterans Choice Fund|\n|029-15-0165   DOD-VA Health Care Sharing Incentive Fund|\n|029-15-0169   Joint DOD-VA Medical Facility Demonstration Fund|\n|029-40-0129   National Cemetery Administration|\n|029-15-8180   General Post Fund National Homes|\n|029-25-8133   Post-Vietnam Era Veterans Education Account|\n|029-25-0137   Readjustment Benefits|\n|029-25-4012   Service-disabled Veterans Insurance Fund|\n|029-25-1121   Filipino Veterans Equity Compensation Fund|\n|029-25-0120   Veterans Insurance and Indemnities|\n|029-40-1122   Board of Veterans Appeals|\n|029-15-0140   Medical Community Care|\n|029-25-4010   Veterans Reopened Insurance Fund|\n|029-15-0152   Medical Support and Compliance|\n|029-25-0102   Compensation and Pensions|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table312"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Typologies de d\u00e9penses|\n|---|\n|Autres|\n|livres|\n|chaussures|\n|gommes|\n|crayons|\n|papier|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table313"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Agreement23|\n|---|\n|3-Neutral|\n|5-Strongly Disagree|\n|(1-Strongly Agree_Agree)|\n|4-Disagree|\n|(3-Neutral_5-Strongly Disagree)|\n|2-Agree|\n|1-Strongly Agree|\n|BLANK|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table314"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|COURSE|\n|---|\n|KIN045|\n|RESPTH006|\n|ART201|\n|BIOLOGY003|\n|MATH113|\n|CAOT032|\n|ELECTRN211|\n|ART300|\n|DEVCOM023|\n|ELECTRN036|\n|ENGLISH101|\n|MATH110|\n|FRENCH001|\n|STAT101|\n|KIN389|\n|DANCETQ221|\n|ADMJUS027|\n|ACCTG020|\n|ASTRON001|\n|THEATER240|\n|ENGLISH361|\n|ART305|\n|MGMT013|\n|KIN269|\n|ART102|\n|KIN046|\n|LRNSKIL002|\n|ENGLISH080|\n|COSCI863|\n|COSCI802|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table315"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Betegnelse|\n|---|\n|Diplomuddannelse i vurdering|\n|Akademiuddannelse som friluftsvejleder|\n|Teknologisk diplomuddannelse i projektledelse|\n|Diplom i it-sikkerhed|\n|Akademiuddannelse i VVS-installation|\n|Diplomuddannelse i oral helse|\n|Akademiuddannelse i ungdoms- og voksenundervisning|\n|Uddannelsens aktivitetsgruppe anvendes|\n|Akademiuddannelse i socialt arbejde|\n|Akademiuddannelse i sundhedspraksis|\n|Diplomuddannelse i kriminologi|\n|Teknologisk diplomuddannelse i supply chain management|\n|Den sociale diplomuddannelse|\n|Akademiuddannelse i skatter og afgifter|\n|It-diplomuddannelsen|\n|Diplomuddannelse i offentlig forvaltning og administration|\n|Akademiuddannelse i gastronomi|\n|Diplomuddannelse i socialformidling|\n|Diplomuddannelse i informationsteknologi IT-Vest|\n|Projektledelse - medie og kommunikationsbranchen|\n|Akademiuddannelse i offentlig forvaltning og administration|\n|Akademiuddannelse i innovation produkt og produktion|\n|Akademiuddannelse i kommunikation og formidling|\n|Diplomuddannelse i ledelse|\n|Diplomuddannelse i psykiatri|\n|Akademiuddannelse i EL-installation|\n|Akademiuddannelse i retail|\n|Diplomuddannelse i digital journalistik|\n|Akademiuddannelse i byggekoordination|\n|Diplomuddannelse i uddannelse erhverv karriere|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table316"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Fagbetegnelse|\n|---|\n|Analytisk kemi|\n|Elektriske maskiner og drives|\n|Produktionsledelse af tv og video|\n|Integration af migranter|\n|Reserveret diplom e-koncept|\n|Moms - Internationale transaktioner|\n|Overgangsmodul webudvikling|\n|Teknologi|\n|Sundhed|\n|Afgangsprojekt Innovation produkt og produktion - Innovation|\n|Indledende kursus i matematik og fysik|\n|Naturfagsdidaktik med medier|\n|Voksne udsatte og personer med handicap|\n|Teorier og metoder i det boligsociale arbejde|\n|Afgangsmodul WEBTEKNOLOGI|\n|Afgangsmodul MATEMATIKVEJLEDER|\n|Produktionsoptimering|\n|Didaktik og undervisningsmetode|\n|Offentlig vurdering og beskatning af fast ejendom|\n|Genteknologi|\n|Socialt arbejde med demente borgere|\n|Den professionelle relation - Ledelse og medarbejdere 1|\n|Praksisrelateret undervisning i de erhvervsrettede uddannelser|\n|Udeskoledidaktik|\n|Ledelse af marketing og ekstern kommunikation|\n|Afgangsprojekt DESIGN OG BUSINESS (uden retning)|\n|Afgangsprojekt BRAND OG KOMMUNIKATIONSDESIGN|\n|Afgangsprojekt it - systemadministration|\n|Driftsstyring|\n|Automations design|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table317"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|SOC Code|\n|---|\n|33-9092|\n|51-3099|\n|29-9091|\n|41-9031|\n|39-2011|\n|51-4011|\n|19-4011|\n|43-3021|\n|47-2141|\n|27-3011|\n|43-5061|\n|21-1023|\n|29-2052|\n|19-1041|\n|39-3019|\n|27-4099|\n|27-4012|\n|35-3021|\n|19-1031|\n|25-2012|\n|53-3099|\n|51-3023|\n|11-9039|\n|25-1061|\n|47-3016|\n|25-2011|\n|39-5011|\n|49-3043|\n|39-7012|\n|11-3061|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table318"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|ktname|\n|---|\n|AI|\n|ZG|\n|VD|\n|TG|\n|GR|\n|AR|\n|ZH|\n|OW|\n|SZ|\n|BS|\n|FR|\n|GE|\n|BE|\n|TI|\n|BL|\n|JU|\n|UR|\n|AG|\n|SO|\n|NW|\n|LU|\n|GL|\n|NE|\n|SG|\n|VS|\n|SH|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table319"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Rep. Last Name|\n|---|\n|Chambers|\n|Fitts|\n|Holliway|\n|Caskey|\n|Lusk|\n|Murray|\n|Kane|\n|Mccarley|\n|Tiller|\n|Quintero|\n|Staton|\n|Talbert-Cureton|\n|Viette|\n|Gibbs|\n|Decamillis|\n|Bevill|\n|Swann|\n|Pearson|\n|Coxhead|\n|Newkirk|\n|Grant|\n|Nobles|\n|Mcnamara|\n|Hammer|\n|Mattox|\n|Beckham|\n|Welter-Meiseles|\n|Fogle|\n|Holloway|\n|Skelley|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Holloway', 'Holliway']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table32"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Acquisition Date|\n|---|\n|2016-11-18|\n|2015-04-14|\n|2016-04-05|\n|2015-04-24|\n|2014-10-06|\n|2016-07-20|\n|2015-03-17|\n|2016-12-06|\n|2015-08-27|\n|2016-03-10|\n|2016-03-18|\n|2016-10-10|\n|2016-03-30|\n|2016-11-07|\n|2016-05-31|\n|2015-02-21|\n|2015-08-05|\n|2016-11-29|\n|2015-12-03|\n|2015-03-30|\n|2016-08-04|\n|2016-02-03|\n|2015-01-20|\n|2015-11-07|\n|2016-07-27|\n|2016-08-30|\n|2016-07-28|\n|2016-12-03|\n|2016-05-09|\n|2016-09-30|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table320"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|DIVISION|\n|---|\n|General Insurance|\n|Mailroom|\n|CDBG 40th Yr Admin|\n|Telecommunications|\n|HOPWA 2017-18_SCH17F002_14.241|\n|Free Verse Festival|\n|Shaw Community Center|\n|Daniel Island Recreation Ctr|\n|Youth Sports|\n|JPR Jr Ballpark|\n|Gallery at Wtrfrt Park Events|\n|Piccolo Administration|\n|Police Radio Shop|\n|Parking Lot-BAM|\n|Bees Landing Rec Center|\n|Business & Neighborhood Svcs|\n|Recreation Administration|\n|Public Information|\n|Parking Grg-Camden Exchange|\n|Gaillard Complex|\n|Americorps Vista Grant 2011|\n|Parking Grg-VRTC|\n|Livability|\n|Design Division|\n|Stormwater Utility Operations|\n|Fire Station #6 Retrofit|\n|Parking Garage Mid Town|\n|Community Promotions|\n|Maritime Center|\n|CDBG 43rd Yr Low Mod|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table321"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Title|\n|---|\n|General Obligation Bond Taxes|\n|Federal Grant Revenue|\n|Loss on Disposal of Fixed Assets|\n|Scholarships and Fellowships|\n|Non-Governmental Grants and Contracts|\n|Private Gifts Grants and Contracts|\n|Interest Income (Restricted)|\n|Bank Fees|\n|Depreciation|\n|Investment Income - Program Restricted|\n|Extraordinary Items|\n|Debt Service Ad Valorem Taxes|\n|Federal Revenue - Operating|\n|Special Item|\n|Federal Revenue - Pass Through|\n|State Appropriations|\n|Disposal of Capital Assets (net)|\n|Institutional Support|\n|Gain on Reversal of Vacation Liability|\n|Branch Campus Maintenance Tax|\n|Other Non-Operating Revenues not listed|\n|Legislative Transfers|\n|Gain on Sale of Investments|\n|Student Services|\n|Additions to Permanent Endowments|\n|Gain(Loss) on Sale of Investment|\n|Auxiliary Enterprises (net of discounts)|\n|Research|\n|Other Operating Expenses not listed|\n|Realized and Unrealized Gains\/Losses|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table322"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Mantika|\n|---|\n|Jarablus|\n|Harim|\n|Al Fiq|\n|At Tall|\n|As-Salamiyeh|\n|Dar'a|\n|As-Sanamayn|\n|(blank)|\n|Menbij|\n|Rural Damascus|\n|Afrin|\n|Al-Hasakeh|\n|Jisr-Ash-Shugur|\n|Darayya|\n|Duma|\n|As-Suqaylabiyah|\n|Al Bab|\n|Jebel Saman|\n|Quneitra|\n|Idleb|\n|Izra'|\n|Ariha|\n|Qatana|\n|A'zaz|\n|Al Mara|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table323"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Entrez Gene Name|\n|---|\n|complement factor B|\n|taxilin alpha|\n|gastric intrinsic factor (vitamin B synthesis)|\n|cystatin SA|\n|neudesin neurotrophic factor|\n|laminin gamma 1 (formerly LAMB2)|\n|amyloid beta (A4) precursor-like protein 2|\n|proteinase 3|\n|pancreatic lipase-related protein 1|\n|ficolin (collagen\/fibrinogen domain containing) 1|\n|collagen type XII alpha 1|\n|vanin 3|\n|Fas ligand (TNF superfamily member 6)|\n|deoxyribonuclease I|\n|thyroid hormone receptor interactor 6|\n|proopiomelanocortin|\n|fibronectin 1|\n|neuronal growth regulator 1|\n|mesencephalic astrocyte-derived neurotrophic factor|\n|chromosome 18 open reading frame 54|\n|biglycan|\n|collagen type VI alpha 2|\n|lysyl oxidase-like 2|\n|protein O-glucosyltransferase 1|\n|collagen type XXII alpha 1|\n|KIAA0100|\n|ADAM metallopeptidase with thrombospondin type 1 motif 10|\n|complement component 1 r subcomponent-like|\n|matrix metallopeptidase 9 (gelatinase B 92kDa gelatinase 92kDa type IV collagenase)|\n|apolipoprotein C-III|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table324"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Description|\n|---|\n|Local authority (Community Learning funds)|\n|Other FE* (Part-time)|\n|Postgraduate Certificate of Education or Professional Graduate Diploma in Education|\n|Information Technology|\n|Learner moved as a result of Minimum Contract Level|\n|DELNI\/Northern Ireland Education and Library Boards|\n|Hospitality|\n|Did not complete the current year of programme of study|\n|Not in Early Statistics\/HEIFES population|\n|Student has no formal qualification|\n|Food and Drink Manufacturing|\n|Training payment|\n|Unassigned|\n|International agency|\n|No fees|\n|Non-exempt ELQ|\n|16-19 year old learner is eligible for and in receipt of free meals|\n|Gap year before starting HE|\n|Higher Apprenticeships (Level 4)|\n|Achieved but uncashed (AS-levels only)|\n|Learner has GCSE English (at grade A* -C) - achieved since end of year 11|\n|Learner is living away from home (in accommodation owned or managed by the provider).|\n|No qualifications|\n|Accommodation discount|\n|Other Qualification at Level 3|\n|Scottish Local Authority discretionary award|\n|Sandwich year-out|\n|Other qualification at level D|\n|20+ Childcare (Skills Funding Agency funded learners only)|\n|Learner does not wish to be contacted by post|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table325"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Concello|\n|---|\n|Porqueira|\n|Lama (A)|\n|Gondomar|\n|Samos|\n|Soutomaior|\n|Vimianzo \/ Zas|\n|Pobra de Trives (A) \/ Quiroga|\n|Montederramo|\n|Laracha (A)|\n|Carballeda de Avia|\n|San Cristovo de Cea|\n|Outeiro de Rei|\n|Verea|\n|Cotobade|\n|Sada|\n|Foz|\n|Oia|\n|Sarria|\n|Allariz|\n|Ourense|\n|-|\n|Cerdedo|\n|Guarda (A)|\n|Xunqueira de Espadanedo|\n|Viveiro|\n|Vilaboa|\n|Cambre|\n|Vigo|\n|Campo Lameiro|\n|Forcarei|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table326"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|TAFS_ACCT|\n|---|\n|47-0108 \/13 - Office of Inspector General|\n|47-0112 09\/13 - Office of Inspector General Recovery Act|\n|47-5381 11\/13 - Acquisition Workforce Training Fund|\n|47-0108 \/15 - Office of Inspector General|\n|47-5381 16\/18 - Acquisition Workforce Training Fund|\n|47-4540 \/X - Working Capital Fund|\n|47-4549 \/X - Federal Citizen Services Fund|\n|47-0401 15\/16 - Government-wide Policy|\n|47-0108 \/16 - Office of Inspector General|\n|47-5254 \/16 - Disposal of Surplus Real and Related Personal Property|\n|47-0401 \/18 - Government-wide Policy|\n|47-5250 \/14 - Expenses of Transportation Audit Contracts and Contract Administ|\n|47-0105 \/15 - Allowances and Office Staff for Former Presidents|\n|47-0401 \/16 - Government-wide Policy|\n|47-5254 \/18 - Disposal of Surplus Real and Related Personal Property|\n|47-5381 17\/19 - Acquisition Workforce Training Fund|\n|47-5254 \/17 - Disposal of Surplus Real and Related Personal Property|\n|47-5250 \/15 - Expenses of Transportation Audit Contracts and Contract Administ|\n|47-4543 \/13 - Federal Buildings Fund Recovery Act|\n|47-0110 \/17 - Operating Expenses|\n|47-0110 \/16 - Operating Expenses|\n|13-47-4542 \/X - Federal Buildings Fund|\n|47-4543 14\/15 - Federal Buildings Fund Recovery Act|\n|47-4542 \/X - Federal Buildings Fund|\n|47-8198 \/X - Unconditional Gift Fund|\n|47-0610 \/18 - Civilian Board of Contract Appeals|\n|47-0107 \/17 - Expenses Presidential Transition|\n|47-4542 13\/15 - Federal Buildings Fund|\n|47-0105 \/14 - Allowances and Office Staff for Former Presidents|\n|47-0401 18\/19 - Government-wide Policy|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table327"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|OMB_ACCT|\n|---|\n|023-30-4549   Federal Citizen Services Fund|\n|023-05-4542   Federal Buildings Fund|\n|023-30-0401   Government-wide Policy|\n|023-05-0614   Asset Proceeds and Space Management Fund|\n|023-30-0107   Expenses Presidential Transition|\n|023-30-0603   Pre-Election Presidential Transition|\n|023-10-4534   Acquisition Services Fund|\n|023-30-0610   Civilian Board of Contract Appeals|\n|023-05-5254   Disposal of Surplus Real and Related Personal Property|\n|023-30-0105   Allowances and Office Staff for Former Presidents|\n|023-30-0108   Office of Inspector General|\n|023-30-0110   Operating Expenses|\n|023-30-4540   Working Capital Fund|\n|023-10-5250   Expenses of Transportation Audit Contracts and Contract Administ|\n|023-05-8198   Unconditional Gift Fund|\n|023-30-5381   Acquisition Workforce Training Fund|\n|023-30-5640   Environmental Review Improvement Fund|\n|023-05-0535   Real Property Relocation|\n|023-05-4543   Federal Buildings Fund Recovery Act|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table328"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|F2_USER_ID|\n|---|\n|ASTANL05|\n|WBEZI500|\n|CHOLM504|\n|TLEWIS05|\n|FJONES08|\n|EBANAN01|\n|BTECKT01|\n|VROBER06|\n|RLLOYD06|\n|AWATKI01|\n|JLEICH01|\n|TCRABI01|\n|RJONES41|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table329"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Ciudad Origen|\n|---|\n|DALAS|\n|ARIZONA|\n|RIGA|\n|RALEIGH|\n|BILLUND|\n|DALLAS|\n|APARTADO|\n|PEORIA|\n|TAMPICO|\n|MANAGUA|\n|SAN FRANCISCO|\n|TOLUCA|\n|ALABAMA|\n|NAPOLES|\n|BASEL|\n|SAN DIEGO|\n|BALBOA|\n|NASSAU|\n|PLATTSBURG|\n|NEW YORK|\n|BOGOTA|\n|GRAN CAYMAN|\n|BEIJING|\n|CAREPA|\n|GUAYAQUIL|\n|CHIA|\n|NEUQUEN|\n|TEMUCO|\n|FRESNO YOSEMITE|\n|CANCUN|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['DALAS', 'DALLAS']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table33"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|TableVersionLabel|\n|---|\n|Information forborn exposures (IV)|\n|Asset encumbrance: Covered bonds issuance (b)|\n|Information forborn exposures (III)|\n|Subordinated financial assets|\n|Memo items [related to staff expenses]|\n|Gains and losses on derecognition of non-financial assets other than held for sale|\n|Movements in defined benefit plans and employee benefits|\n|Geographical breakdown of exposures by residence of the obligor (SA exposures) - Exposures in default|\n|Liquidity Coverage. Outflows (IV). Total|\n|Financial assets pledged as collateral: derecognition and financial liabilities associated with transferred financial assets (b)|\n|Credit and counterparty credit risks and free deliveries: IRB Approach to capital requirements - TOTAL - Of which arising from counterparty credit risk and off balance sheet (SMEs subject to supporting factor)|\n|Market risk: Standardised Approach for traded debt instruments|\n|Statement of comprehensive income|\n|IRC. Details by portfolio|\n|Nature of Report (SBP)|\n|Loan Assets Acquisitions Run-Offs and Disposals Plans|\n|Liquidity Coverage. Inflows (I). Total|\n|Prices for various lengths of funding. Total|\n|Liquidity Coverage. Outflows (II). Total|\n|Public sector sources of funding|\n|Market risk: Internal models - Total|\n|Liquidity Coverage. Outflows (I). Total|\n|Large exposures limits|\n|Interests in unconsolidated structured entities|\n|Market risk: Standardised Approach for specific risk in securitisations|\n|Fee and commission income and expenses by activity|\n|Mapping of internal models to portfolios|\n|Geographical breakdown of liabilities by residence of the counterparty|\n|Credit and counterparty credit risks and free deliveries: IRB Approach to capital requirements - TOTAL (SMEs subject to supporting factor)|\n|Fair value hierarchy: financial instruments at fair value|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table330"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Artikelnaam|\n|---|\n|AEG Boorhamer BBH 12 LI 401C|\n|AEG Sloophamer MH 5G SDS-Max|\n|AEG Decoupeerzaag STEP80|\n|AEG Multitool OMNI JS Decoupeerzaagkop|\n|AEG Bi-metalen gatzaag 22 mm|\n|AEG Oplader BLK1218 12V 18V|\n|AEG Slagmoersleutel BSS 18 op LI-0 Accu|\n|AEG Palmschuurmachine FDS140|\n|AEG Klopboormachine BE 750 RE|\n|AEG Diamantboormachine DB1500-2E|\n|AEG Multi Boormachine JP12F2LI-202B|\n|AEG Multitool OMNI-IH Slagschroefkop|\n|AEG Multitool 12V BMT 12C 152B|\n|AEG Boorhamer BBH 12 LI 202C|\n|AEG Boor- schroefmachine BS 12 T1|\n|AEG Boor- schroefmachine BS 14 G3 LI-152C|\n|AEG Zaagblad afkort-\/verstekzaagmachines 48T|\n|AEG Boor- schroefmachine BS 18 C2 LI|\n|AEG Reciprozaagblad 150 x 2_5 mm S 811 H 3ST|\n|AEG Haakse Schuurmachine SE12-180|\n|AEG Li-Ion Accu L1815G 18V 1_5Ah|\n|AEG Bandschuurmachine HBS 1000 E|\n|AEG BIT set ScrMaxiBit10psetP10A|\n|AEG Boor- schroefmachine BS14T1|\n|AEG Onderstel PSU 1000 voor PS 254 L|\n|AEG Afkortzaagmachine PS254L|\n|AEG Excenteraanzetstuk BBS12C2-OA voor BBS 12 C2|\n|AEG Bouwstofzuiger AP2-200 ELCP|\n|AEG Accessoire Set MultiMix 75pc P75A|\n|AEG Opzetstuk voor  BSB18 CBL - CK|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table331"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|NOME|\n|---|\n|Luciane Correa Batalha|\n|Elivaldo Barros de Oliveira|\n|Fernando Ferreira Brito|\n|Francisco Guimaraes Amoedo|\n|Maria do Carmo Nogueira de Oliveira|\n|Raimundo Fragata Coelho|\n|Jailson Fragata Coelho|\n|Onezmio das Chagas Barros|\n|Onezimo das Chagas Barros|\n|Elisangela Braga de Castro|\n|Adeilson Brito da Silva|\n|Maximo Matelins de Souza|\n|Antonio Jaime Almeida de Souza|\n|Oneldes de Oliveira Pimentel|\n|Maria de Jesus Leal de Souza|\n|Lacy Lopes Pereira|\n|Francisco Rodrigues da Silva|\n|Luiz Batista da Silva|\n|Jucilene dos Santos Serrao|\n|Maria Creuza Martins da Silva|\n|Ademir Felix Pereira|\n|Evandro da Silva Seixas|\n|Mitonio Pantoja Azevedo|\n|Raimundo Nonato Martins da Silva|\n|Fernando Azevedo do Nascimento|\n|Donilza Barbosa Beltrao|\n|Juliane Ribeiro da Silva|\n|Erasmo Dud Soares|\n|Rita Souza dos Santos|\n|Gleiciane dos Santos Coelho|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table332"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Size|\n|---|\n|M|\n|XL|\n|S|\n|XXL|\n|L|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table333"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Desc|\n|---|\n|CREDIT CARD\/ATM FRAUD|\n|SHOPLIFTING|\n|ASSISTING OR PROMOTING PROSTITUTION|\n|DRUNKENNESS|\n|DRUG\/NARCOTIC VIOLATIONS|\n|IMPERSONATION|\n|COUNTERFEITING\/FORGERY|\n|AGGRAVATED ASSAULT|\n|THEFT FROM MOTOR VEHICLE|\n|FALSE PRETENSES\/SWINDLE|\n|DRIVING UNDER THE INFLUENCE|\n|ROBBERY|\n|MOTOR VEHICLE THEFT|\n|ALL OTHER LARCENY|\n|SIMPLE ASSAULT|\n|TRESPASS OF REAL PROPERTY|\n|FAMILY OFFENSES NOVIOLENT|\n|BURGLARY\/BREAKING AND ENTERING|\n|INTIMIDATION|\n|EMBEZZLEMENT|\n|ALL OTHER OFFENSES|\n|WEAPON LAW VIOLATIONS|\n|THEFT FROM BUILDING|\n|DESTRUCTION\/DAMAGE\/VANDALISM|\n|LIQUOR LAW VIOLATIONS|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table334"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Product ID|\n|---|\n|B0001EFIGG|\n|B001EO1DUC|\n|B000JQ3A7A|\n|B0013XDTPQ|\n|B00005AXHW|\n|B00MHTPVVK|\n|B00A7XH5VC|\n|B0000A0AET|\n|B00CQHZ12W|\n|B0001M3612|\n|B00006JLOO|\n|B004SQQCHC|\n|B00270BCIK|\n|B0084SPX8E|\n|B00005AXIV|\n|B0007UQNTU|\n|B0009PUR5O|\n|B00B7LQ73U|\n|B002B66320|\n|B00006G33K|\n|B00C2BZCD0|\n|B000JJJ5OY|\n|B000FZRG5M|\n|B000STKPIU|\n|B00006JINY|\n|B002T8KWJA|\n|B002MB2VIE|\n|B002EWX662|\n|B002FRV1QS|\n|B000FN8ZPY|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table335"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Component Name|\n|---|\n|Bantry|\n|Wahpeton occasionally flooded wooded|\n|Wyndmere stratified substratum|\n|Gilby moderately saline|\n|Binford|\n|Fram|\n|Orthents|\n|Reis|\n|Ortonville|\n|Epiaquolls silt loam|\n|Mauvais|\n|Lamoure moderately saline|\n|Sandberg|\n|Cashel|\n|Esmond|\n|Wyndmere moderately saline|\n|Ludden occasionally flooded|\n|Coe|\n|Lallie|\n|Antler|\n|Borup slightly saline|\n|Manfred|\n|Augsburg moderately saline|\n|Borup very poorly drained|\n|Gardena gently sloping|\n|Tiffany|\n|Marysland moderately saline|\n|Lowe moderately saline|\n|Sisseton very stony|\n|Aberdeen|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table336"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Miejsce realizacji - powiat|\n|---|\n|piotrkowski|\n|Bytom|\n|starogardzki|\n|radziejowski|\n|krasnostawski|\n|lipski|\n|opatowski|\n|strzelecki|\n|kazimierski|\n|Olsztyn|\n|zamojski|\n|zambrowski|\n|brodnicki|\n|wschowski|\n|kolski|\n|zgorzelecki|\n|Tarnobrzeg|\n|miechowski|\n|braniewski|\n|leski|\n|pleszewski|\n|strzelecko-drezdenecki|\n|Radom|\n|drawski|\n|gliwicki|\n|tomaszowski|\n|ciechanowski|\n|grajewski|\n|tczewski|\n|hrubieszowski|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table337"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Scene ID|\n|---|\n|S2A_OPER_MSI_L1C_TL_SGS__20161009T103955_20161009T173149_A006783_T30NWN_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20151121T103008_20170220T173345_A002164_T30NZL_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20150915T104013_20161019T170005_A001206_T31PBM_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161002T105000_20161002T173440_A006683_T30PWQ_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160310T103006_20160310T191409_A003737_T31NBH_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160116T105012_20160116T175154_A002965_T30PXS_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20151005T104014_20161208T155556_A001492_T31PBM_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161128T103957_20161128T154922_A007498_T30NYP_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160916T102949_20160916T171853_A006454_T30NYL_N02_04_01|\n|L1C_T30NXM_A007784_20161218T103757|\n|S2A_OPER_MSI_L1C_TL_SGS__20160219T103004_20160219T191254_A003451_T31NBG_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160807T102953_20160807T171550_A005882_T30PZS_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160219T103004_20160219T191254_A003451_T30NYL_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20150915T104013_20170203T040200_A001206_T30PYQ_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160205T105011_20160205T193930_A003251_T30PWR_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20151124T104007_20170222T155024_A002207_T31PBK_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160820T104001_20160820T173310_A006068_T30NWN_N02_04_02|\n|S2A_OPER_MSI_L1C_TL_EPA__20151124T104007_20170222T155024_A002207_T30NWM_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20151005T104014_20161208T155556_A001492_T30NYN_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160820T104001_20160820T173310_A006068_T31PBK_N02_04_02|\n|S2A_OPER_MSI_L1C_TL_SGS__20160823T105004_20160823T191543_A006111_T30PXQ_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161009T103955_20161009T173149_A006783_T30NWP_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161128T103957_20161128T154922_A007498_T30NZN_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160320T103004_20160320T191918_A003880_T31NBG_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20160209T103007_20160209T202152_A003308_T31NBG_N02_01_01|\n|L1C_T30NZP_A007784_20161218T103757|\n|S2A_OPER_MSI_L1C_TL_SGS__20160929T103954_20160929T172933_A006640_T30PYQ_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160313T104006_20160313T193034_A003780_T30PWQ_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160718T102957_20160718T172242_A005596_T31PBM_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20151117T104815_20170101T204846_A002107_T30PWS_N02_04_01|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table338"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|viikko\/vuosi|\n|---|\n|15\/2006|\n|16\/2004|\n|25\/2005|\n|36\/2011|\n|48\/2011|\n|3\/2006|\n|10\/2007|\n|52\/2015|\n|5\/2009|\n|20\/2007|\n|27\/2010|\n|10\/2011|\n|40\/2005|\n|16\/2016|\n|7\/2013|\n|47\/2016|\n|14\/2004|\n|29\/2013|\n|44\/2016|\n|18\/2005|\n|4\/2017|\n|43\/2016|\n|32\/2011|\n|24\/2010|\n|30\/2009|\n|15\/2014|\n|13\/2017|\n|51\/2014|\n|20\/2009|\n|36\/2005|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table339"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|PURPOSE|\n|---|\n|UNIFORMS W\/WW DISTR\/COL|\n|COMMUNCIATIONS|\n|LEGAL SERVICES - TAXES|\n|TRAVEL & TRAINING-EM|\n|OPTIONAL INSURANCE PAYABL|\n|TRAVEL & TRAINING|\n|SUPPLIES\/MISC|\n|COMMUNICATIONS|\n|HOT FUNDING|\n|DEFERRED INFLOW-NR BEDC|\n|CREDIT CARD PROCESSING FEE|\n|WATER SYSTEM REHAB|\n|PRE-EMPLOYMENT EXPENSE-PA|\n|VEHICLE MAINTENANCE|\n|BOOKS|\n|COLONY MUD 1D_SEC 1 PHASE|\n|DUES SUBSCRIPTION & PUB|\n|MUNICIPAL COURT FEE PAYAB|\n|DUES SUBSCRIPT PUB W\/W|\n|MEDICAL-CID|\n|TXDOT TRANSPORTATION GRAN|\n|BUILDING MAINTENANCE|\n|EQUIPMENT\/SOFTWARE MAINT|\n|PECAN PARK RESIDENTIAL PH|\n|MAINT OF BUILDING|\n|HMGP-Gills Branch Creek C|\n|EQUIPMENT\/SOFTWARE MAINTE|\n|PROFESSIONAL SERVICES W\/|\n|CONTRACTED SERVICES|\n|MAINT OF VEHICLE|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['COMMUNCIATIONS', 'COMMUNICATIONS']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table34"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|SOC Code|\n|---|\n|37-3011|\n|19-1023|\n|39-5094|\n|49-3042|\n|17-3031|\n|47-5031|\n|11-3021|\n|17-2011|\n|29-2055|\n|25-0000|\n|43-9061|\n|51-4041|\n|41-3041|\n|11-3061|\n|11-9021|\n|25-4021|\n|53-7062|\n|33-0000|\n|27-1023|\n|13-1041|\n|11-2022|\n|13-2053|\n|33-1011|\n|41-2011|\n|41-2031|\n|35-1011|\n|33-9011|\n|45-0000|\n|49-2021|\n|29-1124|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table340"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Dag|\n|---|\n|donderdag|\n|dinsdag|\n|vrijdag|\n|maandag|\n|#VALUE!|\n|zondag|\n|woensdag|\n|zaterdag|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table341"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Incentive|\n|---|\n|Number of PIP practices receiving an Indigenous Health Incentive Tier 2 payment for the quarter|\n|Number of PIP practices receiving an Indigenous Health Incentive sign on payment for the quarter|\n|Number of PIP practices receiving an eHealth Incentive payment for the quarter|\n|Number of PIP practices receiving a Teaching Incentive payment for the quarter|\n|Number of PIP practices receiving at least one Indigenous Health Incentive patient registration payment for the quarter|\n|Number of PIP practices receiving an Indigenous Health Incentive Tier 1 payment for the quarter|\n|Number of PIP practices receiving a tier 1 After Hours Incentive payment for the quarter|\n|Number of PIP practices receiving a Diabetes Incentive outcomes payment for the quarter|\n|Number of PIP Practices receiving a payment for the quarter|\n|Number of PIP practices receiving an Asthma Incentive sign on payment for the quarter|\n|Number of PIP practices receiving a Cervical Screening Incentive outcomes payment for the quarter|\n|Number of PIP practices receiving a level 1 After Hours Incentive payment for the quarter|\n|Number of PIP practices receiving a level 3 After Hours Incentive payment for the quarter|\n|Number of PIP practices receiving a tier 2 After Hours Incentive payment for the quarter|\n|Number of PIP practices receiving a tier 3 After Hours Incentive payment for the quarter|\n|Number of PIP practices receiving a level 2 After Hours Incentive payment for the quarter|\n|Number of PIP practices receiving a Quality Prescribing Incentive payment for the quarter|\n|Number of PIP practices receiving a Cervical Screening Incentive sign on payment for the quarter|\n|Number of PIP practices receiving a level 4 After Hours Incentive payment for the quarter|\n|Number of PIP practices receiving a level 5 After Hours Incentive payment for the quarter|\n|Number of PIP practices receiving a Diabetes Incentive sign on payment for the quarter|\n|Number of PIP practices receiving a Rural loading payment for the quarter|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table342"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|OBJETIVO|\n|---|\n|AMPLIAR LA RED DE SALAS CUNAS Y JARDINES INFANTILES.|\n|AUMENTAR LA CAPACIDAD DE EMBALSAMIENTO Y RIEGO PARA FINES PRODUCTIVOS.|\n|MEJORAR INFRAESTRUCTURA QUE PROPORCIONE SEGURIDAD FRENTE A RIESGOS DE ORIGEN NATURAL.|\n|AUMENTAR Y MEJORAR LA INFRAESTRUCTURA CULTURAL.|\n|AMPLIAR MEJORAR Y DEFINIR LAS REDES DE TRANSPORTE TERRESTRE PROPICIANDO LA MULTIMODALIDAD.|\n|CONTRIBUIR A MEJORAR LA CALIDAD DE VIDA DE CIUDADES Y ASENTAMIENTOS RURALES.|\n|RECONOCER PROTEGER Y PONER EN VALOR EL PATRIMONIO CULTURAL MATERIAL.|\n|AUMENTAR LA OFERTA EXPORTABLE DE EMPRESAS DE BIENES Y SERVICIOS.|\n|REVALORIZAR LAS ACTIVIDADES PRODUCTIVAS ASOCIADAS AL BORDE COSTERO.|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table343"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|carte|\n|---|\n|Fiche campagne|\n|Fiche Bal Pourpre|\n|Fiche taverne|\n|Marin|\n|croyant|\n|Fiche Bataille|\n|Laborantin|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table344"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|NOME|\n|---|\n|THIAGO DA SILVA MIGUEL|\n|LUSINEIDE DO NASCIMENTO ALVES|\n|FERNANDO RODRIGUES DA SILVA|\n|BRUNO LEME FERREIRA DA SILVA|\n|APARECIDA DE MENEZES MERCURIO|\n|ROBERTO AUGUSTO BAVIERA|\n|MARCIA MARTINI TRIPPO|\n|DORALICE ALVES DA SILVA COPPI|\n|ROSA LUCIA DOMINGUES FERREIRA|\n|JULIA DE OLIVEIRA ROCHA|\n|YARA SILVA MARTINEZ|\n|ALEXANDRE STRIULI|\n|ROSEMEIRE GUERREIRO ALVES|\n|RONALDO PERES|\n|ROSANA DA SILVA FIGUEREDO|\n|ALBERTO FELIX DE ALMEIDA|\n|RODOLFO MESTRINER ROSA|\n|LUIZ SINOPOLI|\n|MARCO SASAKI|\n|VANESSA SILVEIRA PAULINO|\n|FABIO ARAGAO DA SILVA|\n|ALAN UDALA CAMPOS|\n|REGINA MARIA MATHIAS|\n|CIBELE SANCHES MARQUES BRIGATO|\n|SERGIO LUIZ DOS SANTOS|\n|ZILDA APARECIDA PETRUCCI|\n|MARCIA REGINA UNGARETTE|\n|FATIMA APARECIDA DOS SANTOS NOGUEIRA|\n|ROBERTA KOSZEGI RONSINI VIANA|\n|JOSE CARLOS DO NASCIMENTO|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table345"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Spalte1|\n|---|\n|D|\n|A022|\n|N773|\n|P854|\n|B099|\n|C231|\n|C252|\n|K642|\n|M722|\n|B052|\n|C221|\n|C18|\n|K652|\n|C152|\n|B089|\n|C32|\n|C104|\n|B05|\n|N771|\n|O842|\n|C172|\n|J611|\n|A021|\n|B061|\n|K653|\n|C309|\n|C31|\n|G47|\n|C131|\n|N803|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table346"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Offense|\n|---|\n|120|\n|240|\n|11D|\n|90Z|\n|23F|\n|26B|\n|23A|\n|13B|\n|200|\n|100|\n|90F|\n|23H|\n|280|\n|23C|\n|220|\n|23D|\n|250|\n|90J|\n|290|\n|35A|\n|90D|\n|35B|\n|26A|\n|11A|\n|90E|\n|26C|\n|23G|\n|270|\n|13A|\n|520|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table347"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Estado|\n|---|\n|Aguascalientes|\n|Zacatecas|\n|Colima|\n|Guanajuato|\n|Nayarit|\n|Jalisco|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table348"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|COMPOUND_TITLE|\n|---|\n|Community Health Services|\n|Mobile Access Tower Operations|\n|Information Advice and Advocacy|\n|Food Science|\n|Emergency Lighting Systems Design|\n|Scaffolding Up to Seven Metres|\n|Goods Vehicle Driving Instruction|\n|Slinger and Signaller Operations|\n|Craft - Electronic Security Systems|\n|Food Standards Auditing|\n|Golf and Sports Turf Management|\n|Car Driving Instruction|\n|Non-Domestic Gas Safety|\n|Winter Maintenance|\n|Tourism Information Services|\n|Private Security Services|\n|Craft - Refrigeration and Air Conditioning|\n|Telecommunications Access Networks Technology|\n|Information and Communications Technology Skills|\n|Craft - Mechanical Automation and Maintenance Fitting|\n|Crawler Crane Operations|\n|Machine Tool Operations|\n|Quarrying Articulated Dumper Operations|\n|Craft - Agricultural Mechanics|\n|Shotfiring|\n|Rural Tourism|\n|Bar Operations|\n|Craft - Origination|\n|Pipe Laying (Sewers & Drains)|\n|Craft - Floor and Wall Tiling|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table349"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Cliente|\n|---|\n|Kellogg's|\n|Nokia|\n|Harley-Davidson|\n|Target|\n|McDonald's|\n|Motorola|\n|Louis Vuitton|\n|Starbucks|\n|Panasonic|\n|Sony|\n|Accenture|\n|L'Oreal|\n|BP|\n|Nivea|\n|Kodak|\n|Tiffany & Co.|\n|Citi|\n|Nike|\n|Starbuck|\n|Gillette|\n|Ford|\n|Morgan Stanley|\n|Moet & Chandon|\n|Duracell|\n|Reuters|\n|Wrigley's|\n|LG|\n|American Express|\n|Johnson & Johnson|\n|Honda|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Starbuck', 'Starbucks']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table35"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Case Manager Assistant|\n|---|\n|Jungo Jacqueline|\n|Winzenried Therese|\n|Staempfli Barbara|\n|Buchter Linda|\n|Bitschnau Monika|\n|Sandrowski Alice|\n|Linder Ursula|\n|Paniga Nicoletta|\n|Keusen Kathrin|\n|Wyss-Romanello Sabine|\n|Kunz-Greub Marianne|\n|Tanner Yvonne|\n|Pereira Claudia|\n|Whitehead Frances|\n|Krebs Franziska|\n|Burkhalter Gabriele|\n|Liniger-Thommen Andrea|\n|Ziehli Mariette|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table350"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|CM Einheit|\n|---|\n|4\/1|\n|2|\n|4\/2|\n|Abt. KPA|\n|2\/3|\n|3\/1|\n|4|\n|1\/2|\n|1|\n|3|\n|3\/4|\n|1\/4|\n|3\/2|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table351"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|LCC|\n|---|\n|2w|\n|8w|\n|3e|\n|2e|\n|7e|\n|6e|\n|6w|\n|8s|\n|6s|\n|2c|\n|4e|\n|5w|\n|2s|\n|7s|\n|4w|\n|3s|\n|3w|\n|4s|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table352"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|City|\n|---|\n|Clemson|\n|Cleveland|\n|Rochester|\n|Amherst|\n|Lincoln|\n|Auburn University|\n|Miami|\n|Denton|\n|St Louis|\n|Kingston|\n|Eau Claire|\n|Orange|\n|Exeter|\n|Bryn Mawr|\n|Ruston|\n|Los Alamos|\n|Providence|\n|Houghton|\n|Leicester|\n|Plainsboro|\n|Gloucester Point|\n|Cold Spring Harbor|\n|Ames|\n|Richardson|\n|Boston|\n|Fairfax|\n|Missoula|\n|Flushing|\n|University|\n|New Haven|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table353"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|SOC Title|\n|---|\n|Statisticians|\n|Engineers All Other|\n|Telecommunications Line Installers and Repairers|\n|Electrical Engineers|\n|Computer and Information Research Scientists|\n|Production Planning and Expediting Clerks|\n|Stationary Engineers and Boiler Operators|\n|Biomedical Engineers|\n|Roofers|\n|Orderlies|\n|Substitute Teachers|\n|Audio and Video Equipment Technicians|\n|Network and Computer Systems Administrators|\n|Mixing and Blending Machine Setters Operators and Tenders|\n|Political Science Teachers Postsecondary|\n|Shipping Receiving and Traffic Clerks|\n|Interviewers Except Eligibility and Loan|\n|Computer Programmers|\n|Slaughterers and Meat Packers|\n|Labor Relations Specialists|\n|Area Ethnic and Cultural Studies Teachers Postsecondary|\n|Financial Specialists All Other|\n|Administrative Services Managers|\n|Psychiatric Technicians|\n|Economists|\n|Lodging Managers|\n|Sales Representatives Services All Other|\n|Real Estate Brokers|\n|Childcare Workers|\n|Postsecondary Teachers All Other|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table354"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Enfermedad|\n|---|\n|VIRUELA AVIAR|\n|NEWCASTLE|\n|INFLUENZA AVIAR H5N2|\n|INFLUENZA AVIAR H7N3|\n|NO APLICA|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table355"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Product|\n|---|\n|Carlota|\n|FlatTop|\n|V-Rang|\n|Doublers|\n|Crested Beaut|\n|Sunset|\n|Quad|\n|Sunshine|\n|Aspen|\n|Bellen|\n|Sunbell|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table356"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Continent|\n|---|\n|Africa|\n|Oceania|\n|Asia|\n|America|\n|Europe|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table357"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|ARS|\n|---|\n|ARS LVT|\n|ARS ALENTEJO|\n|ARS CENTRO|\n|ARS NORTE|\n|ARS ALGARVE|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table358"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|N\u00b0ADELI|\n|---|\n|38A029990|\n|38A028596|\n|03A000417|\n|07A004451|\n|69A030829|\n|01A006996|\n|42A005026|\n|69A022669|\n|74A009187|\n|42A008103|\n|69A028997|\n|38A028497|\n|38A028620|\n|69A005425|\n|15A003761|\n|63A011871|\n|38A030360|\n|74A007827|\n|69A001309|\n|43A012541|\n|42A004482|\n|63A011863|\n|26A015085|\n|69A008148|\n|69A000194|\n|63A011723|\n|74A008114|\n|69A025431|\n|38A018399|\n|69A016604|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table359"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Phrase|\n|---|\n|mulching in the spring|\n|tried to overreach|\n|remake the bed|\n|bicuspid tooth|\n|goldfish crackers|\n|gooey candy|\n|childish behavior|\n|confused about work|\n|dragon costume|\n|I'm not alone|\n|watching the sunrise|\n|smell of brimstone|\n|good teamwork|\n|ronald mcdonald|\n|a zesty pepper|\n|drafted to the NFL|\n|trading cards|\n|awoke from having a nightmare|\n|unmask the villain|\n|on the tractor|\n|ride in a dumptruck|\n|our thoughts converge|\n|decide later|\n|unmask the villian|\n|misdeeds of a stranger|\n|oppose the nomination|\n|rosebush with thorns|\n|adjoining offices|\n|electrical engineer|\n|the paint is swirly|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['unmask the villian', 'unmask the villain']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table36"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Product|\n|---|\n|Diagnostiek observatie en exploratieve behandeling 3 LVG|\n|Deelprestatie verblijf B (beperkte verzorgingsgraad)|\n|Deelprestatie verblijf G (zeer intensieve verzorgingsgraad)|\n|Zeer Intensieve Kortdurende Observatie en Stabilisatie|\n|24-uurzorg voedselweigering|\n|Multisysteem Therapie (MST)|\n|JSLVG (obv LVG 5)|\n|Adoptienazorg Basis|\n|Behandeling ambulant|\n|Diagnostiek|\n|Opvang slachtoffers loverboys eergerelateerd geweld of mensenhandel|\n|Deelprestatie verblijf C (matige verzorgingsgraad)|\n|Deelprestatie verblijf E (intensieve verzorgingsgraad)|\n|Beschikbaarheidscomponent crisis|\n|Diagnostiek observatie en exploratieve behandeling 4 LVG|\n|Functional Family Therapy (FFT)|\n|24-uurszorg deeltijd weekend verlof voedselweigering|\n|Deelprestatie verblijf A (lichte verzorgingsgraad)|\n|Nazorg voedselweigering|\n|JeugdzorgPlus voor onder de 12 jaar|\n|Multidimensionele  Familietherapie (MDFT)|\n|Diagnostiek observatie en exploratieve behandeling Very Intensive Care|\n|Diagnostiek observatie en exploratieve behandeling 5 LVG|\n|Zindelijkheidskamp|\n|Behandeling specialistisch|\n|Dagbehandeling voedselweigering|\n|Treatment Foster Care Oregon (TFCO)|\n|Behandeling ambulant intensief voedselweigering|\n|JeugdzorgPlus Moeder & Kind|\n|Reiskosten orthopedagogen voedselweigering|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table360"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|TaxonomyCode|\n|---|\n|FINREP 2016-A|\n|AE 2.8|\n|SBP 2015-B|\n|FINREP 2015-A-Ind|\n|AE 2016-B|\n|AE 2014-03|\n|FP 2015-A|\n|AE 2016-A|\n|COREP 2017-A|\n|FINREP 2016-B-Ind|\n|FINREP 2017-A-Ind|\n|FINREP 2.8|\n|FINREP 2017-A|\n|SBP 2016-B|\n|COREP 2014-07|\n|COREP 2015-B-1|\n|FINREP 2014-07|\n|FINREP|\n|SBP 2015-A-1|\n|RES 2.9|\n|FINREP 2017-A-Ind-ED|\n|FP 2.8|\n|FINREP 2.8-Ind|\n|COREP 2.9|\n|SBP 2016-A|\n|FINREP 2016-A-Ind|\n|FINREP 2015-B|\n|FP 2014-07|\n|FP 2016-B|\n|RES 2.8.1|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table361"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|MES|\n|---|\n|ENERO|\n|AGOSTO|\n|OCTUBRE|\n|ABRIL|\n|DICIEMBRE|\n|MARZO|\n|FEBRERO|\n|JULIO|\n|NOVIEMBRE|\n|MAYO|\n|SEPTIEMBRE|\n|JUNIO|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table362"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Network|\n|---|\n|N754|\n|N412|\n|N534|\n|N562|\n|N202|\n|N410|\n|N610|\n|N536|\n|N602|\n|N409|\n|N611|\n|N101|\n|N605|\n|N613|\n|N406|\n|N609|\n|N208|\n|N103|\n|N113|\n|N531|\n|N112|\n|N109|\n|N205|\n|N563|\n|N405|\n|N201|\n|N403|\n|N209|\n|N402|\n|N532|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table363"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|ragioneSociale|\n|---|\n|GERARDI GASPARE NOTAIO|\n|SAVI CRISTINA|\n|LA SEGNALETICA DI BISCONTIN LUIGINO|\n|FUTURELAND S.A.S.|\n|TURCHET SEVERINO - OFFICINA|\n|FIORERIA GUIDO DI SESSOLO GUIDO|\n|BERTOLO S.R.L.|\n|TELECOM ITALIA SPA|\n|COMPANY BROKER|\n|BEASS DI BAGNARIOL & C SNC|\n|GRILLO NORINA|\n|PARADIGMA SRL|\n|CAVE ASFALTI DELL'AGNESE S.R.L.|\n|DIAGRAM CARTA SRL|\n|TENTAZIONI SNC|\n|PORDENONESPETTACOLI SRL|\n|FURLANETTO SRL|\n|CAFFE' COMMERCIO SAS DI BISCONTIN|\n|BAULI SPA A SOCIO UNICO|\n|BROVEDANI PIERGIORGIO|\n|DELLA LIBERA UGO - anno 2012|\n|TOP SERVICE SRL|\n|HERTEL COPERTURE IMPERMEABILI|\n|RISTORANTE PIZZERIA CELLINI GEST. COMM DI SCIAN MAURO SNC|\n|FERRAMENTA LUCCHESE SNC|\n|SERENISSIMA GOMME SRL|\n|SIA DATA COMMERCIALE SRL|\n|S.I.A.E SOCIETA' ITALIANA AUTORI ED EDITORI|\n|LASTIMMA SRL|\n|MARCASSA SERGIO|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table364"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Estado|\n|---|\n|Guanajuato|\n|Zacatecas|\n|Aguascalientes|\n|Nayarit|\n|Jalisco|\n|Colima|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table365"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Granule Name|\n|---|\n|S1A_IW_GRDH_1SSV_20161002T083805_20161002T083830_013308_015365_CF5F|\n|S1A_IW_GRDH_1SSV_20150506T200436_20150506T200505_005805_00776B_2CB7|\n|S1A_IW_SLC__1SSV_20151018T193936_20151018T194006_008211_00B8D6_ADA4|\n|S1A_IW_SLC__1SSV_20150629T082953_20150629T083021_006585_008C55_EC7E|\n|S1A_IW_GRDH_1SSV_20150605T082928_20150605T082953_006235_00826C_EBEA|\n|S1A_IW_RAW__0SSV_20161002T083736_20161002T083809_013308_015365_BD06|\n|S1A_IW_GRDH_1SSV_20160628T083801_20160628T083826_011908_012568_2670|\n|S1A_IW_SLC__1SSV_20160609T193247_20160609T193314_011638_011CDD_0832|\n|S1A_IW_GRDH_1SSV_20151230T202041_20151230T202110_009276_00D63E_6877|\n|S1A_IW_SLC__1SSV_20161029T090220_20161029T090250_013702_015FB4_D889|\n|S1A_IW_GRDH_1SSV_20160213T195728_20160213T195742_009932_00E93B_1095|\n|S1A_IW_GRDH_1SSV_20150831T194029_20150831T194054_007511_00A601_0C7B|\n|S1A_IW_RAW__0SSV_20150408T081357_20150408T081431_005389_006D97_EA6A|\n|S1A_IW_SLC__1SSV_20161029T090314_20161029T090341_013702_015FB4_12CB|\n|S1A_IW_RAW__0SSV_20160930T085412_20160930T085444_013279_015274_1FCA|\n|S1A_IW_SLC__1SSV_20151116T194837_20151116T194907_008634_00C441_8961|\n|S1A_IW_SLC__1SSV_20151003T082956_20151003T083024_007985_00B2B5_BF09|\n|S1A_IW_GRDH_1SSV_20160612T195641_20160612T195710_011682_011E49_B4D0|\n|S1A_IW_SLC__1SDV_20161027T200629_20161027T200659_013680_015F00_CDDC|\n|S1A_IW_GRDH_1SSV_20141031T201354_20141031T201428_003078_003864_BD8B|\n|S1A_IW_GRDH_1SSV_20160720T085527_20160720T085552_012229_012FDD_686D|\n|S1A_IW_SLC__1SSV_20150122T084629_20150122T084656_004281_00535F_12BD|\n|S1A_IW_GRDH_1SSV_20160419T082047_20160419T082116_010887_0104EF_B90A|\n|S1A_IW_SLC__1SSV_20151008T083850_20151008T083925_008058_00B4A0_87B9|\n|S1A_IW_GRDH_1SSV_20160703T193130_20160703T193159_011988_0127F6_4FB6|\n|S1A_IW_SLC__1SSV_20160925T084611_20160925T084640_013206_01502D_516D|\n|S1A_IW_GRDH_1SSV_20161017T194938_20161017T195009_013534_015A83_D3D5|\n|S1A_IW_RAW__0SSV_20160317T084652_20160317T084724_010406_00F6CE_9B30|\n|S1A_IW_SLC__1SSV_20151225T201353_20151225T201420_009203_00D431_7014|\n|S1A_IW_RAW__0SSV_20160713T194931_20160713T195005_012134_012CC5_54A9|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table366"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Email|\n|---|\n|lashonda.evans@esc4.net|\n|windy.clark@esc4.net|\n|shaunta.lindsey@esc4.net|\n|lindy.avila@esc4.net|\n|glutz@esc4.net|\n|ckennington@esc4.net|\n|dmclauchlin@esc4.net|\n|marina.mccormick@esc4.net|\n|komelan@esc4.net|\n|jgeorges@esc4.net|\n|adoolan@esc4.net|\n|tpeters@esc4.net|\n|debra.hamilton@esc4.net|\n|cathy.williams@esc4.net|\n|fbranford@esc4.net|\n|ffontenot@esc4.net|\n|ppierce@esc4.net|\n|cperry@esc4.net|\n|kingram@esc4.net|\n|richard.blair@esc4.net|\n|kara.zwolinski@esc4.net|\n|sheryl.sokoloski@esc4.net|\n|amstand@esc4.net|\n|gloss@esc4.net|\n|ginger.gates@esc4.net|\n|justin.osbourne@esc4.net|\n|shollan@esc4.net|\n|kbehnke@esc4.net|\n|sheri.wood@esc4.net|\n|tgoedicke@esc4.net|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table367"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|10s|\n|---|\n|<130|\n|<1680|\n|<2190|\n|<3360|\n|<2770|\n|<2450|\n|<2680|\n|<1410|\n|<930|\n|<3900|\n|<3450|\n|<180|\n|<1930|\n|<1830|\n|<2430|\n|<1120|\n|<650|\n|<2510|\n|<20|\n|<1420|\n|<3870|\n|<1190|\n|<1330|\n|<2160|\n|<780|\n|<2780|\n|<3380|\n|<3480|\n|<430|\n|<200|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table368"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Contrato|\n|---|\n|119\/2014|\n|164\/2016|\n|63\/2017|\n|54\/2015|\n|52\/2015|\n|69\/2016|\n|162\/2014|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table369"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Raison Social de la structure d'activit\u00e9|\n|---|\n|ADAPEI|\n|ELF ATOCHEM|\n|APPRENTIS AUTEUIL|\n|SOCIETE DE SECOURS MINIERE|\n|conseil general|\n|U.D.A.F.|\n|MAISON DU DEPT LE PLATEAU|\n|SA CLINIQUE TRENEL|\n|LES PUPILLES DE L'ENSEIGNEMENT PUBLIC|\n|DIRECTION DE LA VIE SOCIALE|\n|C.C.A.S.S DE MOULINS|\n|VIE ET FAMILLE|\n|RESEAU LYRE|\n|conseil genral|\n|ASSOCIATION ABBE DE L'EPEE|\n|CENTRE DE GESTION TERRITORIAL|\n|MAISON DEPARTEMENTALE DU RHONE (M.D.R.|\n|DEPARTEMENT DE L'ALLIER|\n|FOL 74|\n|CENTRE MEDICAL LE MONT BLANC|\n|CROUS SERVICE SOCIAL ETUDIANT|\n|SERVICE SOCIAL DEPARTEMENTAL|\n|SERVICE SOCIAL ROMANS|\n|LES IRIS|\n|ADSEA DE L'ALLIER|\n|STE RHONE POULENC FIBRES|\n|ACTIS LOIRE|\n|C.P.A.M. DE L AIN|\n|CENTRE HOSPITALIER DU HAUT BUGEY|\n|DSDEN DU RHONE|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['conseil general', 'conseil genral']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table37"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Omschrijving|\n|---|\n|Kabelklem 14-18 mm|\n|Kabelklem 26-30 mm|\n|Koppelplint 600|\n|Interne zijpanelen 1800x600|\n|Wandmontage 500x500x300|\n|DIN-rail 2000|\n|Versterkingset MP 1000|\n|Vloerstaand 1800x1000x800|\n|Adapterplaat 24-16 pin|\n|MP beugel rug aan rug|\n|Zijdeur 2000x600|\n|Afdekplaten 600|\n|Filtervent. luchtstr. 160 m3\/h|\n|Scheidingswand 2000x400|\n|Sleutel voor vierkantslot 8mm|\n|Deur met glas 1800x600|\n|Kabelslang D29 mm|\n|Koppelplint 400|\n|Deurstop UDP linksdraaiend|\n|Deelpaneel 200x400|\n|Zwenkraam zijde 1600|\n|Zijmontageprofiel 1000|\n|Montageplaat 1800x1000|\n|Deelhoogte zwenkraam 600|\n|Kabelklem 6-12 mm|\n|Bovenpaneel lessenaar 500x600|\n|Wandmontage 800x600x300|\n|Verwarming 60W|\n|Montageplaat 80x125|\n|Zichtdeur 1000x800|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table370"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Type of Truck|\n|---|\n|Cement Mixer|\n|Tanker|\n|Furniture Removal|\n|Flat Bed|\n|Lowbed|\n|Refuse Truck|\n|Car carrier|\n|Fridge|\n|Container|\n|Abnormal|\n|Tipper|\n|Drop Side|\n|Volume Van|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table371"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Adresse|\n|---|\n|Luzernerstrasse 2a|\n|Greifengasse 14|\n|Bahnhofstrasse 16|\n|Uitikonerstrasse 9|\n|Marktgasse 1|\n|Bahnhofstrasse 257|\n|Dorfstrasse 3|\n|Breitestrasse 3|\n|Viktoriaplatz 3|\n|Hertizentrum 10|\n|Bahnhofstrasse 55|\n|avenue de la Gare 22|\n|Rheinfelderstrasse 16|\n|Steinenberg 23|\n|Nelkenstrasse 2|\n|Hauptstrasse 78|\n|Untertor 39|\n|Zehntenhausstrasse 2|\n|Solothurnerstrasse 3|\n|Via Borgo 28|\n|Langmattweg 1|\n|Alte Bahnhofstrasse 11|\n|Flachsacherstrasse 15|\n|Via Maistra 177|\n|Therwilerstrasse 2|\n|Via Sogn Pieder 1|\n|Rue Centrale 15|\n|Emmen Center|\n|St. Johannsvorstadt 58|\n|Kirchstrasse 9|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table372"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|County|\n|---|\n|MILWAUKEE COUNTY|\n|CALUMET COUNTY|\n|PORTAGE COUNTY|\n|BUFFALO COUNTY|\n|DANE COUNTY|\n|GREEN LAKE COUNTY|\n|JACKSON COUNTY|\n|SHAWANO COUNTY|\n|TREMPEALEAU COUNTY|\n|BROWN COUNTY|\n|ASHLAND COUNTY|\n|WASHINGTON COUNTY|\n|IOWA COUNTY|\n|MANITOWOC COUNTY|\n|MARINETTE COUNTY|\n|ADAMS COUNTY|\n|FOREST COUNTY|\n|WAUPACA COUNTY|\n|TAYLOR COUNTY|\n|MENOMINEE COUNTY|\n|FLORENCE COUNTY|\n|CRAWFORD COUNTY|\n|LINCOLN COUNTY|\n|WALWORTH COUNTY|\n|WOOD COUNTY|\n|JEFFERSON COUNTY|\n|KEWAUNEE COUNTY|\n|FOND DU LAC COUNTY|\n|BAYFIELD COUNTY|\n|WAUSHARA COUNTY|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table373"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Class|\n|---|\n|MBE|\n|MBE;WBE|\n|WBE|\n|MBE;VBE|\n|MBE;WBE;VBE|\n|VBE|\n|DOBE|\n|MBE;WBE;DOBE|\n|MBE;DOBE|\n|WBE;VBE|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table374"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Nom|\n|---|\n|TARAISON|\n|PERERA|\n|VAU|\n|POIRIER|\n|DORLEAC|\n|BARISSOL|\n|SERLION|\n|LARCH|\n|VIRANH|\n|BRANOVI|\n|BUVARD|\n|PARVIS|\n|VANLIERDA|\n|DORAIS|\n|CRARDON|\n|KEDDAMP|\n|RANTANH|\n|DA ALMEIDA|\n|AMPOYEAU|\n|LEMINCIER|\n|KUI|\n|NAVES|\n|ANNIAUX|\n|SOUK|\n|BIANCO|\n|BOUSQUET|\n|CONSECA|\n|RIGLIT|\n|PERIN|\n|BOUVARIA|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table375"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Soyad|\n|---|\n|OVALI|\n|SARI|\n|KARAPINAR|\n|CAN|\n|ABDULRAHIM|\n|SARGIN|\n|TUNCER|\n|KARSLI|\n|SUAY|\n|KONUR|\n|BAYCAN|\n|AKYEL|\n|TOPOZ|\n|KARAKUZ|\n|ORAK|\n|ALTINTOP|\n|VAR|\n|DURAK|\n|TARAK|\n|CANBULAT|\n|TABAN|\n|KABA|\n|KAYA|\n|MEYDAN|\n|AKBEL|\n|AKSAY|\n|BARAN|\n|KUZU|\n|KIZBAZ|\n|TABAK|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table376"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Aldea\/Caser\u00edo|\n|---|\n|VILLA LAURA|\n|HACIENDA NUEVA|\n|AGUA ESCONDIDA (SECTOR 3)|\n|LINDA VISTA|\n|SAN JOSE LOS DE ORTEGA|\n|ESTANZUELA|\n|LA FLECHA|\n|ZACULEU|\n|EL AGUACATE|\n|CUATRO CAMINOS|\n|CANTON LA DEMOCRACIA|\n|LAS TROJES|\n|SAN GABRIEL|\n|BELEN COYOLAR (SECTOR 2)|\n|LAS GUACAS|\n|EL RANCHO|\n|LLANOS DE LA CRUZ|\n|AYARZA|\n|MILPAS ALTAS|\n|LAS TAPIAS|\n|AGUA ZARCA|\n|BUENA VISTA|\n|BETZAIDA|\n|COLONIA MARISCAL|\n|FINCA MARIA SANTISIMA|\n|FINCA EL NARANJO|\n|LAS DELICIAS|\n|BELEN COYOLAR (SECTOR 1)|\n|LAS LAGUNAS|\n|ZONA 13|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table377"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Laitos|\n|---|\n|Northern Horizon Capital AIFM Oy|\n|Dasos Capital Oy|\n|Asuntosalkku toimilupa|\n|AIM Capital Oy|\n|ICECAPITAL REAM Oy|\n|Quorum Vaihtoehtorahastot Oy|\n|Orava Rahastot Oyj|\n|Helsinki Capital Partners Oy|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table378"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|LOCALIZACI\u00d3N|\n|---|\n|COMUNA DE QUINTERO|\n|COMUNAS DE HIJUELAS Y LA CALERA|\n|CONSULTAR|\n|COMUNA DE CABILDO|\n|COMUNA DE CASABLANCA|\n|COMUNAS DE CABILDO Y LA LIGUA|\n|PROVINCIAS DE PETORCA Y MARGA MARGA|\n|PROVINCIA DE QUILLOTA|\n|COMUNA DE EL QUISCO|\n|COMUNA DE CALLE LARGA|\n|COMUNA DE LIMACHE|\n|COMUNA DE PETORCA|\n|COMUNA DE SAN ESTEBAN|\n|COMUNA DE CARTAGENA|\n|COMUNAS DE LA CRUZ Y QUILLOTA|\n|COMUNA DE PAPUDO|\n|COMUNA DE ISLA DE PASCUA|\n|COMUNAS DE PETORCA CABILDO LA LIGUA PUCHUNCAVI QUINTERO SAN ANTONIO EL TABO Y CARTAGENA.|\n|PROVINCIAS DE LOS ANDES Y SAN FELIPE DE ACONCAGUA|\n|COMUNA DE SANTO DOMINGO|\n|PROVINCIA DE PETORCA|\n|COMUNA DE NOGALES|\n|COMUNA DE QUILLOTA|\n|COMUNA DE ALGARROBO|\n|PROVINCIAS DE LOS ANDES SAN FELIPE DE ACONCAGUA Y QUILLOTA|\n|COMUNA DE HIJUELAS|\n|COMUNA DE PUTAENDO|\n|COMUNAS DE CABILDO Y PETORCA|\n|COMUNA DE RINCONADA|\n|COMUNA DE CATEMU|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table379"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|SECODE|\n|---|\n|BSM|\n|CP702T|\n|SESXLA|\n|NTL5XX|\n|AMMSSR|\n|AACAS|\n|ICR1|\n|EWGS6|\n|MGR4|\n|BCM50B|\n|G430|\n|CSCMQR|\n|Avaya Engagement Assistant|\n|SALMON|\n|85CSMP|\n|IPAC|\n|APCR40|\n|AVPA|\n|NORSTR|\n|RTSCE|\n|VPMSLB|\n|MMMP|\n|MXAC3K|\n|ICB3M1|\n|SLAMON|\n|S85JT1|\n|AIR|\n|S2SMPB|\n|AACC_MS|\n|S8400|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['SLAMON', 'SALMON']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table38"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Estado|\n|---|\n|Aguascalientes|\n|Zacatecas|\n|Jalisco|\n|Guanajuato|\n|Nayarit|\n|Colima|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table380"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Timezone offset|\n|---|\n|(GMT) Greenwich|\n|(GMT-02:00)|\n|(GMT+03:00)|\n|(GMT+01:00)|\n|(GMT+05:30)|\n|(GMT-06:00)|\n|(GMT+09:00)|\n|(GMT+08:00)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table381"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Event URL|\n|---|\n|https:\/\/www.microsoftevents.com\/profile\/form\/index.cfm?PKformID=0x58639900001|\n|https:\/\/www.microsoftevents.com\/profile\/form\/index.cfm?PKformID=0x54265910001|\n|https:\/\/www.microsoftevents.com\/profile\/form\/index.cfm?PKformID=0x58325450001|\n|https:\/\/www.microsoftevents.com\/profile\/form\/index.cfm?PKformID=0x55599710001|\n|https:\/\/www.microsoftevents.com\/profile\/form\/index.cfm?PKformID=0x53930180001|\n|https:\/\/www.microsoftevents.com\/profile\/form\/index.cfm?PKformID=0x57692940001|\n|https:\/\/www.microsoftevents.com\/profile\/form\/index.cfm?PKformID=0x57796680001|\n|https:\/\/www.microsoftevents.com\/profile\/form\/index.cfm?PKformID=0x44308390001|\n|https:\/\/www.microsoftevents.com\/profile\/form\/index.cfm?PKformID=0x57902700001|\n|https:\/\/www.microsoftevents.com\/profile\/form\/index.cfm?PKformID=0x57906880001|\n|https:\/\/www.microsoftevents.com\/profile\/form\/index.cfm?PKformID=0x56862640001|\n|https:\/\/www.microsoftevents.com\/profile\/form\/index.cfm?PKformID=0x54523550001|\n|https:\/\/www.microsoftevents.com\/profile\/form\/index.cfm?PKformID=0x57046180001|\n|https:\/\/www.microsoftevents.com\/profile\/form\/index.cfm?PKformID=0x57671850001|\n|https:\/\/www.microsoftevents.com\/profile\/form\/index.cfm?PKformID=0x57044660001|\n|https:\/\/www.microsoftevents.com\/profile\/form\/index.cfm?PKformID=0x56909000001|\n|https:\/\/www.microsoftevents.com\/profile\/form\/index.cfm?PKformID=0x57024520001|\n|https:\/\/www.microsoftevents.com\/profile\/form\/index.cfm?PKformID=0x55496160001|\n|https:\/\/www.microsoftevents.com\/profile\/form\/index.cfm?PKformID=0x58003400001|\n|https:\/\/www.microsoftevents.com\/profile\/form\/index.cfm?PKformID=0x57861660001|\n|https:\/\/www.microsoftevents.com\/profile\/form\/index.cfm?PKformID=0x54069450001|\n|https:\/\/www.microsoftevents.com\/profile\/form\/index.cfm?PKformID=0x56621720001|\n|https:\/\/www.microsoftevents.com\/profile\/form\/index.cfm?PKformID=0x57878760001|\n|https:\/\/www.microsoftevents.com\/profile\/form\/index.cfm?PKformID=0x58214680001|\n|https:\/\/www.microsoftevents.com\/profile\/form\/index.cfm?PKformID=0x44648300001|\n|https:\/\/www.microsoftevents.com\/profile\/form\/index.cfm?PKformID=0x56620200001|\n|https:\/\/www.microsoftevents.com\/profile\/form\/index.cfm?PKformID=0x57989340001|\n|https:\/\/www.microsoftevents.com\/profile\/form\/index.cfm?PKformID=0x56685560001|\n|https:\/\/www.microsoftevents.com\/profile\/form\/index.cfm?PKformID=0x57721440001|\n|https:\/\/www.microsoftevents.com\/profile\/form\/index.cfm?PKformID=0x55447710001|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table382"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Titel|\n|---|\n|Samsjuklighet neuropsykiatri|\n|Patientinformation till fel mottagare|\n|Implementering av rehabiliteringskoordinatorer|\n|LOV psykoterapi|\n|Suicidpreventivt arbete|\n|Samordning och dimensionering av AT och ST|\n|Granskning av intern styrning och kontroll|\n|IFB-intensiv familjebehandling|\n|Utredningsrapport om ett transkulturellt centrum (HSS2012-0169)|\n|LOV barnmorskemottagning Privata Barnmorskor TOL AB|\n|LOU upphandling av naprapati|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table383"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|PageName|\n|---|\n|Community Partners|\n|Children's mental health|\n|Network|\n|Reports and Surveys|\n|office-general-counsel|\n|summer-safety-tips|\n|contact-us|\n|Get Help|\n|Elearning Module - Child care providers|\n|National Resources and Links|\n|Baker Act|\n|publications-forms|\n|Quick Facts|\n|childrens-legal-services|\n|Tuition and fee exemption|\n|Local Community Providers|\n|About adult forensic mental health|\n|adoption|\n|local-resources|\n|Monthly CBC Lead Agency Scorecard|\n|Parent Resources|\n|Local Homeless Contacts|\n|Contracts calendar|\n|Partners|\n|System of services and support|\n|CPI scorecard|\n|In Home Community Services|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table384"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|STATE|\n|---|\n|Himachal Pradesh|\n|Daman and Diu|\n|Uttarakhand|\n|Jammu & Kashmir|\n|Telangana|\n|Chattisgarh|\n|Sikkim|\n|Kerala|\n|Haryana|\n|Rajasthan|\n|Pondicherry|\n|Andhra Pradesh|\n|Tamil Nadu|\n|Assam|\n|Gujarat|\n|Karnataka|\n|Bihar|\n|Andaman and Nicobar Islands|\n|Chandigarh|\n|Jharkhand|\n|Delhi|\n|Madhya Pradesh|\n|Punjab|\n|Maharashtra|\n|Orissa|\n|Manipur|\n|West Bengal|\n|Goa|\n|Nagaland|\n|Dadra & Nagar Haveli|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table385"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|\u00c4rende nr|\n|---|\n|LS2016-0212|\n|LS2016-0019|\n|LS2016-0348|\n|LS2016-0697|\n|LS2016-0397|\n|LS2016-0099|\n|LS2016-0125|\n|LS2016-0315|\n|LS2016-0717|\n|LS2016-0409|\n|LS2017-0011|\n|LS2016-0294|\n|LS2016-0736|\n|LS2016-0650|\n|LS2016-0142|\n|LS2016-0115|\n|LS2016-0534|\n|LS2016-0297|\n|LS2016-0691|\n|LS2016-0491|\n|LS2016-0628|\n|LS2016-0696|\n|LS2016-0520|\n|LS2016-0061|\n|LS2016-0056|\n|LS2016-0600|\n|LS2016-0598|\n|LS2016-0389|\n|LS2016-0258|\n|LS2016-0278|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table386"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Shop Type|\n|---|\n|Farm shop|\n|Large convenience store|\n|Delicatessen|\n|Small convenience store|\n|Garage forecourt|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table387"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Supplier Type |\n|---|\n|Substance & Product supplier|\n|Product supplier|\n|Substance Supplier|\n|Not applicable|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table388"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Customer|\n|---|\n|Customer443|\n|Customer419|\n|Customer457|\n|Customer31|\n|Customer81|\n|Customer221|\n|Customer252|\n|Customer10|\n|Customer285|\n|Customer11|\n|Customer5|\n|Customer116|\n|Customer182|\n|Customer359|\n|Customer196|\n|Customer398|\n|Customer349|\n|Customer376|\n|Customer161|\n|Customer95|\n|Customer192|\n|Customer299|\n|Customer408|\n|Customer60|\n|Customer483|\n|Customer265|\n|Customer224|\n|Customer274|\n|Customer275|\n|Customer280|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table389"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|School Name|\n|---|\n|Alta Heights Elementary|\n|Montclaire Elementary|\n|Ross (Betsy) Elementary|\n|PUC Triumph Charter Academy and PUC Triumph Charter High|\n|Sunol Glen Elementary|\n|Wicklund Elementary|\n|Edward J. Richardson Middle|\n|Nicholas Elementary|\n|Foothill Oaks Elementary|\n|Adobe Bluffs Elementary|\n|Verdugo Academy|\n|San Fernando Institute of Applied Media|\n|French Camp Elementary|\n|Robinson Academy|\n|West Marin Elementary|\n|Bud Carson Middle|\n|Dingle Elementary|\n|Renaissance County Community|\n|De Anza Middle|\n|KIPP Corazon Academy|\n|Salmon Creek School - A Charter|\n|Lovelia P. Flournoy Elementary|\n|William S. Hart High|\n|Santee Alternative|\n|Kelso (William H.) Elementary|\n|Frank Kohn Elementary|\n|Richard L. Graves Middle|\n|Aspire Pacific Academy|\n|Montclair Elementary|\n|James Workman Middle|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Montclair Elementary', 'Montclaire Elementary']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table39"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|ADDRESS|\n|---|\n|2650 WABASH AVE|\n|205 FEDERAL DRIVE|\n|511 THIRD ST|\n|930 W MAIN ST|\n|2321 CHARLES ST|\n|2001 E 151ST STREET|\n|120 E SECOND ST|\n|314 N IRONWOOD DRIVE|\n|2864 CHARLESTOWN RD|\n|4222 CHARLESTOWN RD|\n|1600 EAST TIPTON|\n|2500 N FIRST AVENUE|\n|5000 WASHINGTON AVE|\n|805 SOUTH MAIN STREET|\n|8150 ROCKVILLE RD|\n|3015 SOUTH MERIDIAN ST|\n|999 OLD RIDGE RD|\n|114 W MAIN ST|\n|20 CHERRY TREE PLAZA|\n|6001 CENTRAL AVE|\n|906 S. MERRIFIELD AVE|\n|2125 N MORTON|\n|524 E 16TH ST|\n|4635 FIRST AVE.|\n|1200 NAPPANEE STREET|\n|921 BROADWAY|\n|4120 N CLINTON ST|\n|309 WEST MAIN STREET|\n|4837 KENTUCKY AVE.|\n|1724  165TH ST|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table390"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Product|\n|---|\n|Sir Rodney's Marmalade|\n|Filo Mix|\n|Camembert Pierrot|\n|Boston Crab Meat|\n|Northwoods Cranberry Sauce|\n|Ipoh Coffee|\n|Mozzarella di Giovanni|\n|Chef ANTON's Cajun Seasoning|\n|Sir Rodney's Scones|\n|Laughing Lumberjack Lager|\n|Longlife Tofu|\n|Louisiana Hot Spiced Okra|\n|Gorgonzola Telino|\n|Aniseed Syrup|\n|Alice Mutton|\n|Steeleye Stout|\n|Chef ANTON's Gumbo Mix|\n|Uncle Bob's Organic Dried Pears|\n|Jack's New England Clam Chowder|\n|Teatime Chocolate Biscuits|\n|Ravioli Angelo|\n|Louisiana Fiery Hot Pepper Sauce|\n|Sasquatch Ale|\n|Veggie-spread|\n|Grandma's Boysenberry Spread|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table391"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Address|\n|---|\n|392 Niggollayaya - Thalakiriyagama|\n|115 Pahala Areula_Dambulla|\n|64\/B\/1 Pothanegama - kibissa|\n|829 Welihena - Dambulla|\n|2\/B Ratmalgahaela- Dambulla|\n|132B\/1 Diyakapilla - Sigiriya|\n|108 Lenadora Dakuna|\n|176\/2 Yapagama - Dambulla|\n|142B Titiyakola watta Digampathana|\n|132\/C Ethabadiwewa - Thlakiriyagama|\n|Kayanvala Sigiriya|\n|107\/1 Pansala para Wewalawewa Dambulla|\n|1436A Rathmalkatuwa_Inamaluwa|\n|223\/B Nawa padeniya - Dambulla|\n|191D Siyabalawewa - kibissa|\n|272 Nikawatawana Kimbissa|\n|114\/1 Bus nawathumpala asala- Dambulla|\n|156\/F Samagi Mawatha - Lenadora|\n|26  38 kanuwa - Lenadora|\n|11 40 kanuwa - Dambulla|\n|190 Welangolla_Wewalawewa_Dambulla|\n|165\/2 Kubuk kadanwala - Kandalama|\n|212 Ethabadiwewa - Thlakiriyagama|\n|71\/1 Kapuwaththa - Dambulla|\n|437\/3 Batu yaya - Dambulla|\n|354\/2 Heenmoragolla - dambulla|\n|180 Moragollawa - Dambulla|\n|281 Aluth yaya segeriya|\n|100C Three \/ Malaya Road - Digampathana|\n|267\/6\/A Batu yaya - Dambulla|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table392"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|GND Cord|\n|---|\n|2-2-06-4-130|\n|2-2-06-4-080|\n|2-2-06-1-120|\n|2-2-06-3-270|\n|2-2-06-4-095|\n|2-2-06-2-035|\n|2-2-06-3-290|\n|2-2-06-4-140|\n|2-2-06-4-085|\n|2-2-06-2-020|\n|2-2-06-3-230|\n|2-2-06-3-225|\n|2-2-06-2-075|\n|2-2-06-3-275|\n|2-2-06-2-045|\n|2-2-06-4-215|\n|2-2-06-4-135|\n|2-2-06-2-015|\n|2-2-06-3-220|\n|2-2-06-4-200|\n|2-2-06-1-160|\n|2-2-06-3-265|\n|2-2-06-2-040|\n|2-2-06-3-250|\n|2-2-06-1-090|\n|2-2-06-4-155|\n|2-2-06-3-245|\n|2-2-06-3-240|\n|2-2-06-1-195|\n|2-2-06-2-070|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table393"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|\u00c4rende nr|\n|---|\n|SHS2016-0156|\n|SHS2016-0176|\n|SHS2016-0135|\n|SHS2016-0093|\n|SHS2016-0046|\n|SHS2016-0037|\n|SHS2016-0118|\n|SHS2016-0044|\n|SHS2017-0007|\n|SHS2016-0024|\n|SHS2016-0148|\n|SHS2017-0019|\n|SHS2016-0020|\n|SHS2016-0015|\n|SHS2016-0099|\n|SHS2016-0022|\n|SHS2017-0010|\n|SHS2016-0146|\n|SHS2016-0095|\n|SHS2016-0157|\n|SHS2017-0014|\n|SHS2016-0033|\n|SHS2016-0111|\n|SHS2016-0013|\n|SHS2016-0056|\n|SHS2016-0175|\n|SHS2016-0017|\n|SHS2016-0077|\n|SHS2016-0115|\n|SHS2016-0085|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table394"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Eldon r\u00e9f\u00e9rence d'article|\n|---|\n|MSPM2206|\n|STB204008|\n|CDH400|\n|DPP02506R5|\n|MCD20125R5|\n|DPCP162409TE|\n|CCM04IP66|\n|UMPT540|\n|EHTC2150G|\n|OABP204013TE|\n|PF1050|\n|MSST0840-316|\n|MKD16124R5|\n|DNSS1812L-316|\n|MCF18084R5|\n|MKS14063R5|\n|MP2010|\n|PSS2050-316|\n|CBU1200|\n|AG02|\n|MAS0505021PER5|\n|DABP121609TE|\n|EDA40|\n|SHT0806|\n|MAS0405021PER5|\n|CIPP06|\n|EFAP250-300R5|\n|MSNS1104|\n|STB206012|\n|SCO_PUNCH_GP2|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table395"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|gdename|\n|---|\n|Melide|\n|Vuisternens-devant-Romont|\n|Val-d'Illiez|\n|Nennigkofen|\n|Russy|\n|Haldenstein|\n|Zuoz|\n|Hauterive (NE)|\n|Neuhausen am Rheinfall|\n|Frauenfeld|\n|Samnaun|\n|Melchnau|\n|Deitingen|\n|Schluein|\n|Pierrafortscha|\n|Ebikon|\n|Morbio Inferiore|\n|Hermetschwil-Staffeln|\n|Rumendingen|\n|Seltisberg|\n|Guschelmuth|\n|Arosa|\n|Herbetswil|\n|Glarus|\n|Rapperswil (SG)|\n|Adligenswil|\n|Langwies|\n|Randa|\n|Camorino|\n|Damvant|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table396"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|M\u00eas|\n|---|\n|julho|\n|maio|\n|dezembro|\n|agosto|\n|outubro|\n|setembro|\n|fevereiro|\n|novembro|\n|janeiro|\n|junho|\n|abril|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table397"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|ENTIDADE A FACTURAR|\n|---|\n|ARS ALGARVE|\n|ARS CENTRO|\n|ULS Matosinhos|\n|ULS Guarda|\n|ULS Baixo Alentejo|\n|ARS LVT|\n|ULS Norte Alentejano|\n|ULS Alto Minho|\n|ULS Litoral Alentejano|\n|ULS NORDESTE|\n|ULS Castelo Branco|\n|ARS NORTE|\n|ARS ALENTEJO|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table398"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Titel|\n|---|\n|Hyresavtal inhyrda lokaler 2016 (LSU2016-0012)|\n|Ombyggnad hiss D1-H1 hus D1  Akademiska sjukhuset (LSU2015-0578)|\n|Byte stabilisatorer hus P1 och P3 Akademiska sjukhuset (LSU2015-0552)|\n|Statusinventering parkeringsgarage hus F13 Akademiska sjukhuset (LSU2014-0389)|\n|Ytskiktsrenovering plan 7 hus F11-F12 Akademiska sjukhuset (LSU2016-0085)|\n|Lokalanpassning Arbetsterapin hus A och B Samariterhemmet (LSU2015-0539)|\n|Kontroll Hepa-filter B19 exklusive Thorax-OP Akademiska sjukhuset (LSU2016-0213)|\n|Installation av sprinkler Tierp (LSU2013-0421)|\n|Hyresavtal egna lokaler 2016 (LSU2016-0003)|\n|Ytskiktsrenovering plan 2 hus B12 Akademiska sjukhuset (LSU2016-0080)|\n|Installation av mjukvara i befintliga paneler Akademiska sjukhuset (LSU2016-0228)|\n|Ny kallvattenmatning till Akademiska sjukhuset (LSU2014-0182)|\n|Ytskiktsrenovering plan 3 hus C5 Akademiska sjukhuset (LSU2016-0090)|\n|Samverkan Teknik 2017|\n|Byte av styr hus A-B samariterhemmet (LSU2016-0140)|\n|Delegationsordning LSU 2016 (LSU2016-0010)|\n|Ytskiktsrenovering plan 8 hus F14-F15 Akademiska sjukhuset (LSU2016-0086)|\n|Kontor till konstsverksamhet Storgatan 32 Uppsala (LSU2016-0329)|\n|Byte av tyrutrustning hus A15 Akademiska sjukhuset (LSU2016-0428)|\n|Ombyggnad hiss P3-H2 hus P3  Akademiska sjukhuset (LSU2015-0577)|\n|Energispar - Installation av solceller hus T2 Akademiska sjukhuset (LSU2016-0403)|\n|Placering av tillnyktringsenhet i Psykiatrins hus A15 Akademiska sjukhuset (LSU2016-0297)|\n|Avtal Administration 2016 (LSU2016-0019)|\n|Installation av ny porttelefon hus B19 Akademiska sjukhuset (LSU2016-0032)|\n|Resultatrapporter Landstingsservice 2016 (LSU2016-0321)|\n|Vattenskada hus C Tierp (LSU2015-0057)|\n|Att arbeta med byggprojekt i Region Uppsala|\n|Byte av styr i undercentral (UC) hus B14 Akademiska sjukhuset (LSU2015-0308)|\n|Installation av porttelefon hus F15 Akademiska sjukhuset (LSU2016-0345)|\n|Renovering tak och fasad hus B stenhuset Wik (LSU2016-0286)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table399"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|County|\n|---|\n|Apache County|\n|Butler County|\n|Elk County|\n|Weld County|\n|Okanogan County|\n|Buchanan County|\n|Loudoun County|\n|Goodhue County|\n|Weston County|\n|Raleigh County|\n|Kleberg County|\n|Navarro County|\n|Covington city|\n|Dewey County|\n|Rankin County|\n|Lake County|\n|Durham County|\n|Loudon County|\n|Minnehaha County|\n|Jefferson County|\n|Galveston County|\n|Taos County|\n|Richmond County|\n|Palo Alto County|\n|Amherst County|\n|Siskiyou County|\n|Gregg County|\n|Mesa County|\n|Whitley County|\n|Clallam County|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Loudon County', 'Loudoun County']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table4"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Titel|\n|---|\n|15-'16 Basismodule 1 (Kempen\/Mechelen - 4 groepen)|\n|Basisvorming jaar 2 voor de leden van het comite PB|\n|Werk en werknemer c|\n|Regionale ondernemingswerking - deel 2 - jaargang 3 (4 groepen)|\n|Formation de base groupe 4|\n|Extreme droite|\n|Limburg: Basisvorming module 4 (2 groepen)|\n|Basisvorming dubbelmandaten AO-jaar 2|\n|Basisvorming specifiek sector bouw - vijfde basisjaar|\n|Basisvorming syndicale delegatie|\n|Basisvorming verkozenen CPBW -100 - jaar 2|\n|Antwerpen: themamodule EFI analyse 2 (1 groep)|\n|Antwerpen Themamodule Werkbaar Werk|\n|Politieke actualiteit (4 groepen)|\n|Animatorenvorming interprofessioneel: vervolgmodule|\n|Themavorming: \"maatschappelijke actualiteiten\" 5 dagen - 6 groepen|\n|Onderneming in verandering jaar 1 - 5 dagen (4 groepen)|\n|Formation socio politique de base|\n|Limburg: Themavorming Media- en beeldvorming|\n|EFI - De werking van het bedrijf en de CNE-visie van de sociale zekerheid|\n|formation continuee|\n|Methodologie: hoe de arbeidsdoelstellingen in het bedrijf plannen en de CNE - aanpak om werkgelegenheid te scheppen|\n|Schriftelijke module 1 - Beter nota's nemen en een synthese maken en de CNE-visie van de sociale zekerheid|\n|Syndicale vorming op maat: dienstencheques jaar 3|\n|Les perspectives d'action syndicale ouvertes par le ccpt|\n|Syndicale academie|\n|Werk en werknemer F|\n|De nieuwe culturele sociale en economische realiteit op de werkvloer - 3|\n|Het werk en het einde van de loopbaan (3 groepen)|\n|formation continue|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['formation continue', 'formation continuee']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table40"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Institution Type|\n|---|\n|Other|\n|Private Institution of Higher Education|\n|State Government|\n|Non-Domestic (non-US) Entity|\n|For-Profit Organization (Other than Small Business)|\n|Public\/State Controlled Institution of Higher Education|\n|Small Business|\n|Hispanic-serving Institution|\n|Other Federal Agency|\n|Nonprofit with 501C3 IRS status (other than Institution of Higher Education)|\n|Historically Black Colleges and Universities (HBCUs)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table400"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|TableVersionCode|\n|---|\n|P 02.05|\n|F 34.00.a|\n|P 02.01|\n|C 51.00.w|\n|F 16.02|\n|P 01.01|\n|F 46.00|\n|C 45.00.b|\n|C 05.02|\n|F 44.01|\n|F 17.01|\n|C 18.00|\n|F 19.00.c|\n|F 18.00.c|\n|C 25.00|\n|C 02.00|\n|F 32.03.a|\n|C 30.00|\n|F 18.00.a|\n|C 60.00.x|\n|C 54.00.w|\n|F 20.07|\n|C 52.00.c|\n|F 16.07.a|\n|C 52.00.a|\n|C 60.00.b|\n|F 33.00.a|\n|C 43.00.c|\n|F 01.03|\n|C 08.01.b|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table401"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Type of Truck|\n|---|\n|Refuse Truck|\n|Flat Bed|\n|Lowbed|\n|Abnormal|\n|Volume Van|\n|Furniture Removal|\n|Fridge|\n|Drop Side|\n|Tipper|\n|Car carrier|\n|Container|\n|Cement Mixer|\n|Tanker|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table402"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|No of Axles|\n|---|\n|7 Axles|\n|5 Axles|\n|4 Axles|\n|6 Axles|\n|3 Axles|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table403"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Fylke|\n|---|\n|Sogn og Fjordane|\n|Nordland|\n|Oslo|\n|Troms|\n|Aust-Agder|\n|Finnmark|\n|Oppland|\n|Telemark|\n|Akershus|\n|Vestfold|\n|Buskerud|\n|Rogaland|\n|Hordaland|\n|Vest-Agder|\n|Hedmark|\n|Svalbard|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table404"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Kontonummer|\n|---|\n|5555.69.50482|\n|5555.54.24754|\n|5555.47.93991|\n|5555.13.88806|\n|5555.43.51725|\n|5555.85.58627|\n|5555.43.48777|\n|5555.47.26239|\n|5555.86.60953|\n|5555.58.18653|\n|5555.46.44879|\n|5555.27.57454|\n|5555.74.48552|\n|5555.25.85596|\n|5555.96.96026|\n|5555.42.21775|\n|5555.45.59993|\n|5555.18.15426|\n|5555.59.97899|\n|5555.86.70988|\n|5555.12.58034|\n|5555.88.27474|\n|5555.95.69931|\n|5555.15.84318|\n|5555.82.62455|\n|5555.14.18983|\n|5555.46.49719|\n|5555.88.23864|\n|5555.19.20631|\n|5555.87.37353|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table405"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Circuit or Region|\n|---|\n|15 Circuit|\n|12 Circuit|\n|17 Circuit|\n|South Region|\n|01 Circuit|\n|20 Circuit|\n|18 Circuit|\n|19 Circuit|\n|02 Circuit|\n|13 Circuit|\n|14 Circuit|\n|09 OS Circuit|\n|11 Circuit|\n|16 Circuit|\n|Northwest Region|\n|Central Region|\n|Northeast Region|\n|05 Circuit|\n|06 Circuit|\n|03 Circuit|\n|09 OC Circuit|\n|07 Circuit|\n|10 Circuit|\n|08 Circuit|\n|04 Circuit|\n|Statewide|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table406"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|County|\n|---|\n|Suwannee|\n|Jefferson|\n|Duval|\n|Volusia|\n|Charlotte|\n|Brevard|\n|Leon|\n|Marion|\n|Sumter|\n|Manatee|\n|Flagler|\n|Alachua|\n|Taylor|\n|Washington|\n|St. Johns|\n|Baker|\n|Sarasota|\n|Gulf|\n|Collier|\n|Pinellas|\n|DeSoto|\n|Dixie|\n|Lafayette|\n|Walton|\n|Hernando|\n|Hardee|\n|Jackson|\n|Highlands|\n|Santa Rosa|\n|Broward|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table407"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Scene ID|\n|---|\n|S2A_OPER_MSI_L1C_TL_SGS__20160208T024041_20160208T092047_A003289_T50NNL_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20151231T034853_20151231T084903_A002732_T47NPD_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20160820T035900_20160820T090646_A006064_T47NPE_N02_04_02|\n|S2A_OPER_MSI_L1C_TL_SGS__20160829T025026_20160829T092628_A006192_T50NLN_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20160909T035856_20160909T090624_A006350_T47NPH_N02_04_02|\n|S2A_OPER_MSI_L1C_TL_SGS__20161029T035852_20161029T104428_A007065_T47NPG_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20161016T034819_20161016T085331_A006879_T47NRB_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161203T031020_20161203T080628_A007565_T49NCC_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20160814T033956_20160814T084450_A005978_T48NTH_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20160721T035623_20160721T090418_A005635_T47NQH_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20160304T033005_20160304T101947_A003647_T48NVH_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20151221T034824_20151221T105522_A002589_T47NRB_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20160903T033953_20160903T084458_A006264_T48NTH_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160828T032017_20160828T095719_A006178_T49NCB_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161104T023711_20161104T073524_A007150_T50NNK_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20151218T033954_20151218T084445_A002546_T48NUK_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20160317T033951_20160317T084612_A003833_T48NUH_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20160721T035623_20160721T090418_A005635_T47NPH_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160719T032020_20160719T100644_A005606_T49NCB_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160829T024559_20160829T074508_A006192_T50NMN_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161102T033951_20161102T101720_A007122_T48NTL_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160125T030032_20160125T094406_A003089_T49NGB_N02_01_01|\n|L1C_T50NPL_A007722_20161214T022550|\n|S2A_OPER_MSI_L1C_TL_MTI__20160821T033009_20160821T083453_A006078_T48NYJ_N02_04_02|\n|S2A_OPER_MSI_L1C_TL_MTI__20161013T033948_20161013T084444_A006836_T48NVG_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160112T025031_20160112T094610_A002903_T50NMN_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161110T030021_20161110T075549_A007236_T49NGD_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20151130T024419_20170512T203612_A002288_T50NPM_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160804T033808_20160804T083719_A005835_T47NRC_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20151115T033005_20161224T004753_A002074_T48NWJ_N02_04_01|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table408"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Rubrique|\n|---|\n|Health insurance|\n|Other costs|\n|Travel transport|\n|Consultants Operationals|\n|Travel hotel|\n|Other personnel cost|\n|Temporaires|\n|Tax|\n|Office costs|\n|Fuel for vehicule|\n|PR Comm\/Marketing|\n|PR advertising|\n|Travel mission|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table409"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|School Building|\n|---|\n|Cavanaugh Elementary|\n|Derby Middle School|\n|St. Gerard School|\n|Sam Adams Elementary|\n|Academy for Business and Technology|\n|Maple Valley Jr Sr High School|\n|Tipton Academy|\n|Cadillac High School|\n|Clawson High School|\n|L'Anse Creuse Middle School - Central|\n|reo elementary|\n|Belle River Elementary|\n|Averill Elementary|\n|Seitz Middle School|\n|Sheiko Elementary|\n|West Hills Middle School|\n|Workman Elementary|\n|Gearing Elementary|\n|St. Johns High School|\n|River School|\n|Huron Elementary|\n|North Elementary|\n|Yacks Elementary|\n|New Haven Elementary School|\n|Schwarzkoff Elementary|\n|Mary McLeod Bethune Elementary-Middle School|\n|Tenniswood Elementary|\n|reo elementaty|\n|Fennville Middle School|\n|Yake Elementary|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['reo elementary', 'reo elementaty']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table41"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Description|\n|---|\n|5YR $500 - $749 ADH Only|\n|1YR  1500-2999 EXT  TAB EDU USED|\n|3YR Day1 250-399 ADH\/EXT  TABLET EDU USED|\n|5YR $4000-$4999 ADH Only|\n|2YR $1250-$1499 ADH Only|\n|2YR $500 - $749 ADH Only|\n|5YR 100-149.99  Replacement Printer War|\n|1YR Day1 750-999 ADH\/EXT  TABLET ENT USED|\n|1YR Day1 1000-1499 ADH\/EXT  TABLET EDU USED|\n|3YR Day1 400-499 ADHEXT AnnRfsh CBLPTPEnterprise New\/Cert Refurb|\n|2YR Day1 1000-1499 ADHEXT AnnRfsh CBLPTP|\n|4YR $6000 - $7499 EXT Only|\n|1YR  750-999 EXT  TAB EDU USED|\n|2YR  400-499 EXT  TAB EDU USED|\n|4YR $1250-$1499 EXT Only|\n|3YR  1500-2999 EXT  TAB ENT New\/Cert Refurb|\n|2YR $7500-$7999 EXT Only|\n|1YR  0-249 EXT  TAB EDU New\/Cert Refurb|\n|3YR Day1 300-399 ADH\/EXT USED CB\/LPTP ENT|\n|3YR Day1 750-999 ADHEXT AnnRfsh TABLET|\n|5YR $750 - $849 EXT Only|\n|1YR Day1 250-399 ADH\/EXT  TABLET EDU USED|\n|3YR 50-99.99  Replacement Printer War|\n|3YR  1500-2999 EXT CB\/LPTP ENT USED|\n|1YR  1500-2999 EXT  TAB EDU New\/Cert Refurb|\n|2YR Day1 1000-1499 ADH\/EXT  TABLET EDU USED|\n|1YR  0-299 EXT CB\/LPTP EDU USED|\n|4YR $1750-$1999 EXT Only|\n|4YR 250-299.99  Replacement Printer War|\n|3YR  500-749 EXT  TAB EDU USED|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table410"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Scene ID|\n|---|\n|S2A_OPER_MSI_L1C_TL_MTI__20161013T033948_20161013T084444_A006836_T48PWU_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20160725T033957_20160725T084454_A005692_T48PVT_N02_04_01|\n|L1C_T48PXU_A007937_20161229T032302|\n|S2A_OPER_MSI_L1C_TL_EPA__20151128T033521_20170501T022312_A002260_T48PUT_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20161105T034517_20161105T085330_A007165_T48PUV_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161102T033951_20161102T101720_A007122_T48PXT_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20151022T034524_20161213T182510_A001731_T48PUU_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161026T034925_20161026T102852_A007022_T48PVS_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20151224T035436_20151224T092727_A002632_T47PRR_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161125T034524_20161125T084639_A007451_T48PVA_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20151211T034519_20170604T125036_A002446_T47PRP_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20160103T035435_20160103T091109_A002775_T47PRR_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20160827T034929_20160827T085638_A006164_T48PTV_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161122T033950_20161122T102657_A007408_T48PXU_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160602T032443_20160602T082637_A004934_T48PYV_N02_02_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160310T034514_20160310T090014_A003733_T48PTT_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20160820T035900_20160820T090646_A006064_T47PRR_N02_04_02|\n|S2A_OPER_MSI_L1C_TL_EPA__20150820T033949_20160929T061954_A000830_T48PVV_N02_04_02|\n|S2A_OPER_MSI_L1C_TL_SGS__20161202T033827_20161202T083733_A007551_T48PYA_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161122T033950_20161122T102657_A007408_T48PXS_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20150820T033949_20160929T061954_A000830_T48PWV_N02_04_02|\n|S2A_OPER_MSI_L1C_TL_SGS__20161118T035857_20161118T104346_A007351_T48PTV_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161102T033951_20161102T101720_A007122_T48PWU_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161122T033950_20161122T102657_A007408_T48PVV_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161119T033006_20161119T100913_A007365_T48PXU_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161118T035857_20161118T104346_A007351_T48PTA_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160310T034514_20160310T090014_A003733_T48PUT_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20151231T034853_20151231T084903_A002732_T48PVU_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161003T033536_20161003T083454_A006693_T48PUS_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161112T033539_20161112T083446_A007265_T48PWT_N02_04_01|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table411"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Produkthovedgruppe|\n|---|\n|Cylindre System 640|\n|Cylindre Garant Plus|\n|Rollins|\n|Cylindre Serie 1200|\n|Cylindre Serie 600 uden system|\n|KEY-BAK|\n|Adgangskontrol - ARX|\n|Cylindre Combi 1100|\n|CLIQ cylindre Combi Plus|\n|Cylindre Serie 500|\n|Adgangskontrol - SmartAir|\n|Cylindre dp640|\n|Adgangskontrol - Kort og brikker samt radiosendere|\n|Adgangskontrol - Hi-O|\n|Cylindre dp+|\n|CLIQ og CLIQ Remote cylindre dp+|\n|Cylindre Serie 500 uden system|\n|Adgangskontrol - HID|\n|Adgangskontrol - RX WEB|\n|CLIQ Combi Plus|\n|Cylindre Combi Plus|\n|El-slutblik|\n|Yale|\n|Cylindre Serie 600|\n|CLIQ dp+|\n|CLIQ Remote dp+|\n|Cylindre Garant 10|\n|Cylindre Merkur 401|\n|Cylindre Serie 600 i Combi 1100 systemer|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table412"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|CFD Type \/ Country EQUITIES - ETF Sector|\n|---|\n|EQUITIES - Finland|\n|INTEREST RATES|\n|EQUITIES - Small Cap & Aim|\n|EQUITIES - Belgium|\n|EQUITIES - Norway|\n|EQUITIES - Hungary|\n|EQUITIES - Austria|\n|INFLATION RATES|\n|EQUITIES - ETF|\n|EQUITIES - Denmark|\n|EQUITIES - ADR|\n|EQUITIES - Singapore|\n|EQUITIES - Sweden|\n|EQUITIES - Italy|\n|FX|\n|EQUITIES - Portugal|\n|EQUITIES - US|\n|EQUITIES - Hong Kong|\n|INDICES|\n|EQUITIES - Germany|\n|EQUITIES - France|\n|EQUITIES - Poland|\n|EQUITIES - Australia|\n|EQUITIES - Netherlands|\n|EQUITIES - UK ETF|\n|EQUITIES - UK|\n|EQUITIES - Spain|\n|BONDS|\n|EQUITIES - Switzerland|\n|COMMODITIES|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table413"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|\u00c4rende nr|\n|---|\n|AS2016-0320|\n|AS2016-0208|\n|AS2017-0011|\n|AS2016-0004|\n|AS2016-0097|\n|AS2017-0022|\n|AS2016-0199|\n|AS2016-0210|\n|AS2016-0135|\n|AS2016-0283|\n|AS2017-0063|\n|AS2016-0039|\n|AS2016-0074|\n|AS2016-0042|\n|AS2016-0230|\n|AS2017-0014|\n|AS2016-0104|\n|AS2016-0081|\n|AS2017-0012|\n|AS2016-0129|\n|AS2016-0214|\n|AS2016-0313|\n|AS2017-0007|\n|AS2016-0277|\n|AS2016-0148|\n|AS2016-0209|\n|AS2016-0297|\n|AS2017-0044|\n|AS2016-0236|\n|AS2016-0069|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table414"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|TIPO LOCAL|\n|---|\n|ULS-URAP-Unid.Rec.Assist.Partilhados|\n|Posto de Empresa|\n|Privados|\n|ULS-UMI-Unid.Mov.Intervencao|\n|ULS-SAP-Serv.Atend.Permanente|\n|Contratos|\n|Cuidados Continuados|\n|ULS-CAD-Cent.Acons.Despistagem|\n|ACES-CS SAG-Serv.Atend.Gripe|\n|ULS-SASU\/CATUS-S.Atend.Sit.Urgentes|\n|ACES-UCCI-Unid.Cuid.Cont.Integrados|\n|ULS-Internamento|\n|IPSS|\n|ACES-Internamento|\n|ACES-UCC-Unid.Cuid.Comunidade|\n|ACES-SAP-Serv.Atend.Permanente|\n|ACES-CAD-Cent.Acons.Despistagem|\n|ACES-CAJ-Cent.Apoio Jovem|\n|ULS-UCC-Unid.Cuid.Comunidade|\n|Centro de Hemodialise|\n|ULS-USP-Unid.Saude Publica|\n|ULS-SUB-Serv.Urg.Basico|\n|ACES-SUB-Serv.Urg.Basico|\n|Desconhecido|\n|ACES-USP-Unid.Saude Publica|\n|Hospital Privado|\n|MAI (PSP_GNR)|\n|ACES-SASU\/CATUS-S.Atend.Sit.Urgentes|\n|ULS-UCCI-Unid.Cuid.Cont.Integrados|\n|Entidade Hospitalar (Centro Hospitalar\/Hospital)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table415"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|\u00c4rende nr|\n|---|\n|KOB2016-0112|\n|KOB2016-0102|\n|KOB2016-0050|\n|KOB2016-0069|\n|KOB2016-0029|\n|KOB2016-0034|\n|KOB2016-0038|\n|KOB2017-0005|\n|KOB2017-0032|\n|KOB2017-0009|\n|KOB2016-0046|\n|KOB2016-0011|\n|KOB2016-0169|\n|KOB2016-0008|\n|KOB2016-0080|\n|KOB2017-0055|\n|KOB2016-0055|\n|KOB2016-0002|\n|KOB2016-0129|\n|KOB2016-0130|\n|KOB2016-0007|\n|KOB2016-0078|\n|KOB2017-0025|\n|KOB2016-0036|\n|KOB2017-0031|\n|KOB2016-0114|\n|KOB2016-0073|\n|KOB2017-0024|\n|KOB2016-0016|\n|KOB2017-0019|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table416"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Sucursal|\n|---|\n|AGUASCALIENTES|\n|ZACATECAS|\n|GUADALAJARA|\n|COLIMA|\n|FUERA DE TERRITORIO|\n|TEP \/ PTV|\n|QUERETARO|\n|MOR \/ COL|\n|IRAPUATO|\n|LAZARO CARDENAS|\n|ZAC \/ AGS|\n|LEON|\n|MOR QRO.|\n|CELAYA|\n|TEPIC|\n|S.L.P.|\n|MORELIA|\n|PTO. VALLARTA|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table417"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Activity|\n|---|\n|GH CDC|\n|Outreach|\n|GOLF|\n|Autocrafts|\n|Estep|\n|Aquat\/BOSS|\n|MFLC|\n|SAC|\n|Hooper|\n|AVC|\n|Warrior Zone|\n|Lozada PFC|\n|CYS|\n|RAP|\n|CDC #2|\n|Intramurals|\n|Dolan Pool|\n|Shaw PFC|\n|Frat PFC|\n|Paintball|\n|WTB with ODR|\n|BOSS\/ODR|\n|Eagles|\n|Baldanado Pool|\n|IWRE|\n|FAP|\n|EFMP|\n|Youth Sports|\n|MST|\n|CDC #1|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table418"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Titel|\n|---|\n|Budget 2017|\n|IFB-intensiv familjebehandling|\n|Suicidpreventivt arbete|\n|LOV psykoterapi 2016|\n|Implementering av rehabiliteringskoordinatorer|\n|AudioNova - Audium Sweden AB|\n|Samordning och dimensionering av AT och ST|\n|Patientinformation till fel mottagare|\n|Samsjuklighet neuropsykiatri|\n|Inkommen skrivelse|\n|Utredningsrapport om ett transkulturellt centrum (HSS2012-0169)|\n|Granskning av intern styrning och kontroll|\n|LOV psykoterapi 2017|\n|Kurser och konferenser 2017|\n|Samverkan kring barn och ungdomspsykiatrin - gemensam granskning med kommunerna|\n|Upphandling av kiropraktorer|\n|LOU upphandling av naprapati|\n|Avtal om vaccination mot HPV (humant papillomavirus)|\n|LOV barnmorskemottagning Privata Barnmorskor TOL AB|\n|Cecilia Renaud och Shabnam Ganji nya ortodontister Tandregleringen Kronan|\n|Initiering av tung dental utrustning|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table419"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Nome dell'Esercizio (Insegna)|\n|---|\n|MOVIE  BISTRO'|\n|LE BARCHE|\n|TODO'S|\n|WALLE'S BURGER|\n|ALLA BARENA-DAI FIOI PIZZERIA|\n|PONTECORVO PIZZERIA|\n|A LE COLONETE|\n|DA RINO E SANDRA|\n|EREMITANI|\n|NON SOLO CARNE|\n|DREAM EAT|\n|TROMBETTA CAFFETTERIA|\n|TAVERNA AL BOCCALE|\n|VANILLA CAFFE'|\n|MATTINA CAFFE'|\n|GIORNALI & CAFFE'|\n|DA LORIS|\n|EURO PIZZA|\n|PIOVESE SMA SUPERMERCATO|\n|OSTI - NATI|\n|SUMMER RISTO CAFE|\n|DREAMS CAFE'|\n|ALL'ANCORA|\n|MIRACLE|\n|DA OLINDO|\n|LA BARACCA|\n|ANTICA TRATTORIA ALLA FOSSETTA|\n|LA BOTTEGA DERSUT|\n|AL PONTE PIZZERIA|\n|MIRALE|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['MIRALE', 'MIRACLE']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table42"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|100s|\n|---|\n|<900|\n|<1700|\n|<2200|\n|<4000|\n|<3900|\n|<3000|\n|<2000|\n|<1100|\n|<2500|\n|<2700|\n|<1500|\n|<2400|\n|<3500|\n|<3600|\n|<1200|\n|<300|\n|<2100|\n|<1600|\n|<1000|\n|<1800|\n|<3100|\n|<1300|\n|<200|\n|<1900|\n|<3800|\n|<2800|\n|<600|\n|<3400|\n|<3200|\n|<2600|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table420"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Genome accession|\n|---|\n|GB_GCA_001819395.1|\n|GB_GCA_001830425.1|\n|RS_GCF_000022045.1|\n|RS_GCF_001939945.1|\n|GB_GCA_001776195.1|\n|GB_GCA_001800135.1|\n|GB_GCA_001917175.1|\n|RS_GCF_000971975.1|\n|RS_GCF_000169155.1|\n|RS_GCF_001696605.1|\n|RS_GCF_000714765.1|\n|RS_GCF_000024025.1|\n|GB_GCA_001858525.1|\n|RS_GCF_001547735.1|\n|RS_GCF_001921885.1|\n|GB_GCA_002436105.1|\n|GB_GCA_001799145.1|\n|GB_GCA_002293725.1|\n|GB_GCA_001872725.1|\n|RS_GCF_001709035.1|\n|GB_GCA_001664005.1|\n|RS_GCF_000759025.1|\n|GB_GCA_001602895.1|\n|RS_GCF_001870225.1|\n|GB_GCA_001443445.1|\n|RS_GCF_001429255.1|\n|GB_GCA_001769655.1|\n|GB_GCA_002472275.1|\n|GB_GCA_002292025.1|\n|RS_GCF_000474745.1|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table421"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|January Exit % of Students|\n|---|\n|-1.57%|\n|-.7%|\n|-1.55%|\n|-2.32%|\n|-3.74%|\n|-3.44%|\n|-4.37%|\n|-3.52%|\n|-2.74%|\n|-.72%|\n|-5.39%|\n|-3.93%|\n|-.75%|\n|-1.98%|\n|-3.86%|\n|-5.86%|\n|-3.94%|\n|-3.21%|\n|-.93%|\n|-2.54%|\n|0%|\n|-2.19%|\n|-17.94%|\n|-7.64%|\n|-1.41%|\n|-2.07%|\n|-5.15%|\n|-.89%|\n|-1.07%|\n|-3.25%|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table422"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Acq Type|\n|---|\n|CAL-CARD|\n|TELECOM|\n|NON-IT GOODS|\n|IT SERVICES|\n|IT GOODS|\n|NON-IT SERVICES|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table423"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|DESCR|\n|---|\n|Countries or territories of North Africa|\n|All third countries|\n|Diagonal \"Pan-European\" cumulation|\n|Countries of Latin America|\n|Countries not members of the WTO|\n|Mercosur countries (Southern Cone Common Market)|\n|SAARC countries (South Asian Association for Regional Cooperation)|\n|Africa|\n|CARIFORUM|\n|European countries or territories outside the European Union|\n|Victualling and destinations treated as exports from the European Union (Reg. 612\/2009)|\n|EU-Switzerland agreement: re-imported goods|\n|Certain handicraft products (Handicrafts)|\n|APEC countries (Asia-Pacific economic cooperation)|\n|Central America and the Antilles|\n|Export refunds for processed agricultural products containing eggs Destination 02|\n|Export refund Sector Eggs - E09|\n|ERGA OMNES|\n|European Community (including code \"EU\")|\n|MAGHREB (DZ; MA; TN)|\n|Eastern and Southern Africa States|\n|Member countries of WTO|\n|Countries of destination for export of methylethyl ketone toluene acetone and ethyl ether|\n|Export refunds for processed agricultural products containing eggs Destination 03|\n|Countries or territories of the Mediterranean Basin|\n|MASHRAQ (EG; JO; LB; SY)|\n|Countries of destination for export of hydrochloric acid and sulphuric acid|\n|Export refund Sector 5|\n|European Community|\n|North America|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table424"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Last Name|\n|---|\n|Gabriel|\n|Blazer|\n|Quindipan|\n|Nicholls|\n|Lucinese|\n|Ludington|\n|Zoladz|\n|Partynski|\n|Moore|\n|Oldzej|\n|Kuzmich|\n|Roche|\n|Procko|\n|Pruski-Clark|\n|Hutchinson|\n|Mash|\n|Cina|\n|Freeman|\n|Childers|\n|Maxwell|\n|Tschirgi|\n|Snider|\n|D'Addario|\n|Besser|\n|Dutra-Clarke|\n|Wani|\n|Jeffries|\n|Siskind|\n|Moitz Fiorito|\n|Rubin|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table425"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Notes|\n|---|\n|Withdrawal of Wholesale tariff|\n|FCC Filing 1816|\n|IURC No. 1|\n|IURC Access Service Tariff No. 5 - Concurring in Sprint Communications Company L.P. F.C.C. No. 13|\n|FCC Transmittal 1802|\n|Tr. 72 (mirrors CLOC F.C.C. Tariff No. 9)|\n|FCC Transmittal 1571|\n|Mirroring Frontier Telephone  Companies Interstate  Tariff FCC No. 6|\n|FCC Filing 1822|\n|FCC Transmittal 1396|\n|FCC Filing 1823 for Tariff Nos. 2 and 3|\n|FCC Filing 1809|\n|T-7 Tariff - concurs in modifications within section 2.0|\n|IURC No. 2 Tariff - FCC Tr. 205|\n|Replacement Filing - Revision to IURC Tariff No. 4 (Access): Updates Company Name; Updates Check Sheet; Updates Table of Contents; Adds Notice of Company Name Change; Updates Company Name; Updates FCC Tariff Link|\n|Tr. 1515|\n|Interstate Access Tariff F.C.C. No. 5 with certain exceptions.|\n|FCC transmittal 1539|\n|IURC Tariff No. T-2|\n|FCC Transmittal 1524 ; Mirroring NECA's interstate access tariff filings|\n|Revised: FCC USF-ICC Order Compliance|\n|FCC transmittal 1536|\n|Tariff I.U.R.C. No. 1|\n|JSI FCC Transmittal 216|\n|Tr. 72 (mirrors CLOC F.C.C. Tariff No. 6)|\n|FCC Transmittal 1399|\n|Amended sheet 1 2 4.1 8 and 56|\n|FCC Transmittal No. 221|\n|Mirrors the switched access rates of the incumbent local exchange carriers in whose areas the company competes (AT&T CenturyLink and Frontier)|\n|Meets \"solely administrative or clerical per order issued July 13 2011\"|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table426"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Standard Occupational Classification (SOC) Title|\n|---|\n|Software Developers Applications|\n|Interviewers Except Eligibility and Loan|\n|Geoscientists Except Hydrologists and Geographers|\n|Cleaners of Vehicles and Equipment|\n|Medical Transcriptionists|\n|Construction Managers|\n|Bus Drivers Transit and Intercity|\n|Food Preparation and Serving-Related Occupations|\n|Social and Human Service Assistants|\n|Fitness Trainers and Aerobics Instructors|\n|Paralegals and Legal Assistants|\n|Ophthalmic Medical Technicians|\n|Customer Service Representatives|\n|Cabinetmakers and Bench Carpenters|\n|Logisticians|\n|Zoologists and Wildlife Biologists|\n|Cooks Short Order|\n|Highway Maintenance Workers|\n|Electrical and Electronics Drafters|\n|Extruding Forming Pressing and Compacting Machine Setters Operators and Tenders|\n|Bookkeeping Accounting and Auditing Clerks|\n|Archivists|\n|Ophthalmic Laboratory Technicians|\n|Magnetic Resonance Imaging Technologists|\n|Commercial Pilots|\n|Postal Service Mail Sorters Processors and Processing Machine Operators|\n|Mechanical Engineering Technicians|\n|Training and Development Specialists|\n|Biological Science Teachers Postsecondary|\n|Managers All Other|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table427"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Type of Truck|\n|---|\n|Refuse Truck|\n|Volume Van|\n|Furniture Removal|\n|Drop Side|\n|Abnormal|\n|Cement Mixer|\n|Flat Bed|\n|Lowbed|\n|Tipper|\n|Tanker|\n|Fridge|\n|Car carrier|\n|Container|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table428"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|\u00c4rende nr|\n|---|\n|KOB2016-0017|\n|KOB2016-0005|\n|KOB2017-0007|\n|KOB2017-0018|\n|KOB2016-0145|\n|KOB2016-0133|\n|KOB2017-0003|\n|KOB2017-0067|\n|KOB2016-0117|\n|KOB2016-0181|\n|KOB2016-0170|\n|KOB2017-0065|\n|KOB2016-0037|\n|KOB2016-0027|\n|KOB2017-0045|\n|KOB2016-0063|\n|KOB2017-0060|\n|KOB2017-0015|\n|KOB2016-0056|\n|KOB2017-0051|\n|KOB2017-0032|\n|KOB2016-0051|\n|KOB2017-0055|\n|KOB2016-0020|\n|KOB2016-0085|\n|KOB2017-0054|\n|KOB2017-0072|\n|KOB2017-0029|\n|KOB2016-0021|\n|KOB2016-0002|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table429"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Nome_Munic\u00edpio|\n|---|\n|Ponte Alta do Tocantins|\n|Santa Maria de Itabira|\n|Tuneiras do Oeste|\n|Lajes Pintadas|\n|Pirpirituba|\n|Buerarema|\n|Mococa|\n|Penha|\n|Montezuma|\n|Traipu|\n|Augusto Pestana|\n|Irati|\n|Pindoba|\n|Lavrinhas|\n|Almas|\n|Irapuru|\n|Juazeirinho|\n|Frei Gaspar|\n|Motuca|\n|Palmas|\n|Macambira|\n|Palmeiras|\n|Entre Folhas|\n|Rio das Flores|\n|Maraial|\n|Barreirinha|\n|Itamari|\n|Valinhos|\n|Palmeirais|\n|Carinhanha|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Palmeirais', 'Palmeiras']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table43"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Local Offence Wording|\n|---|\n|PEDAL CYCLE - CONTRAVENING DIRECTION GIVEN BY POLICE CONSTABLE \/ TRAFFIC SURVEY|\n|CYCLING ON FOOTWAY|\n|PEDAL CYCLE - CONTRAVENING CONSTABLE ON TRAFFIC DUTY|\n|PEDAL CYCLE - FAILING TO STOP FOR A POLICE CONSTABLE|\n|PEDAL CYCLE - CONTRAVENING WARDEN ON TRAFFIC DUTY|\n|PEDAL CYCLE - UNAUTHORISED PASSENGER|\n|PEDAL CYCLE - CONTRAVENING TRAFFIC SIGNS|\n|PEDAL CYCLE - CONTRAVENING AUTOMATIC TRAFFIC SIGNALS|\n|PEDAL CYCLE - LIGHTS NOT CONFORMING OR LIT DURING HOURS OF DARKNESS|\n|PEDAL CYCLE - RIDING WHERE PROHIBITED|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table430"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Last Touch|\n|---|\n|Email|\n|Direct|\n|Paid Search|\n|Referral|\n|Organic Search|\n|Social Network|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table431"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Laitos|\n|---|\n|Multian Osuuspankki|\n|Pohjanmaan Osuuspankki|\n|Joroisten Osuuspankki|\n|Kosken Osuuspankki|\n|Osuuspankki Poppia|\n|Kannonkosken Osuuspankki|\n|Konneveden Osuuspankki|\n|Suupohjan Osuuspankki|\n|Keiteleen Osuuspankki|\n|Lammin Osuuspankki|\n|Tuusniemen Osuuspankki|\n|Lanneveden Osuuspankki|\n|Laihian Osuuspankki|\n|Kurikan Osuuspankki|\n|Hannulan Osuuspankki|\n|Sievin Osuuspankki|\n|Honkajoen Osuuspankki|\n|Tiistenjoen Osuuspankki|\n|Lavian Osuuspankki|\n|Liedon Osuuspankki|\n|Lapuan Osuuspankki|\n|Isojoen Osuuspankki|\n|Keuruun Osuuspankki|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table432"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|CATEGORY|\n|---|\n|Entertainment|\n|Shopping|\n|Travel|\n|Education|\n|Transportation|\n|Communications|\n|Groceries|\n|Other|\n|Restaurant|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table433"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|FUENTE DE FINANCIAMIENTO|\n|---|\n|SUBDERE PROGRAMA PUESTA EN VALOR DEL PATRIMONIO|\n|MINISTERIO DE VIVIENDA Y URBANISMO Y MUNICIPIOS|\n|MINISTERIO DE VIVIENDA Y URBANISMO|\n|MINISTERIO DE SALUD|\n|INDAP|\n|EMPRESA PORTUARIA DE SAN ANTONIO|\n|MERVAL|\n|MINISTERIO DE TRANSPORTES Y TELECOMUNICACIONES|\n|MINISTERIO DE DESARROLLO SOCIAL|\n|MINISTERIO DEL TRABAJO|\n|ENAMI|\n|MINISTERIO DE VIVIENDA Y URBANISMO E IM ISLA DE PASCUA|\n|CONAF|\n|FNDR|\n|INSTITUTO NACIONAL DEL DEPORTE|\n|CORFO|\n|EMPRESA PORTUARIA SAN ANTONIO IM DE SAN ANTONIO Y PRIVADOS|\n|PROCHILE Y EMPRESAS PRIVADAS|\n|MINISTERIO DE AGRICULTURA|\n|FONASA|\n|CONVENIO MINVU - GORE|\n|SUBDERE|\n|CONSEJO NACIONAL DE LA CULTURA Y LAS ARTES|\n|SERCOTEC|\n|MINISTERIO DE MEDIO AMBIENTE|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table434"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Kelompok Jabatan|\n|---|\n|Perawat|\n|Asisten Apoteker|\n|Nutrisionis|\n|Bidan|\n|Sanitarian|\n|Perawat Gigi|\n|Pranata Laboratorium Kesehatan|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table435"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Map reference|\n|---|\n|R193 R213|\n|R330 R331 R351|\n|R289 R309|\n|R95 R94|\n|R275 R276|\n|R134|\n|R256|\n|R231|\n|R273|\n|R216 R215|\n|R274|\n|R292|\n|R54|\n|R213 R193|\n|R254 R255|\n|R309|\n|R174|\n|R173|\n|R295 R275|\n|R295 R296|\n|R154|\n|R333|\n|R155|\n|R352|\n|R269|\n|R113 R93|\n|R112|\n|R330|\n|R176|\n|R175|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table436"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Term Descr Long|\n|---|\n|2014 Fall|\n|2011 Fall|\n|2013 Fall|\n|2012 Fall|\n|2010 Fall|\n|2009 Fall|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table437"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Data wydania|\n|---|\n|2018-11-16|\n|2018-10-23|\n|2018-12-04|\n|2018-12-07|\n|2018-09-10|\n|2018-11-26|\n|2018-10-11|\n|2018-10-30|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table438"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Customer|\n|---|\n|Customer55|\n|Customer114|\n|Customer220|\n|Customer1|\n|Customer145|\n|Customer320|\n|Customer154|\n|Customer139|\n|Customer235|\n|Customer225|\n|Customer459|\n|Customer187|\n|Customer287|\n|Customer445|\n|Customer297|\n|Customer500|\n|Customer53|\n|Customer387|\n|Customer427|\n|Customer193|\n|Customer334|\n|Customer30|\n|Customer218|\n|Customer382|\n|Customer14|\n|Customer208|\n|Customer204|\n|Customer276|\n|Customer368|\n|Customer178|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table439"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|County of Residence|\n|---|\n|Zapata|\n|Travis|\n|Eureka|\n|Emery|\n|Canyon|\n|Cassia|\n|Uintah|\n|Idaho|\n|Teller|\n|Caribou|\n|Nye|\n|Silver Bow|\n|Mora|\n|Okanogan|\n|Clark|\n|Pierce|\n|Uinta|\n|Kittitas|\n|Irion|\n|Kootenai|\n|Park|\n|Bear Lake|\n|Nez Perce|\n|Powell|\n|Sonoma|\n|Ventura|\n|Blaine|\n|Columbia|\n|Pecos|\n|McLennan|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Uintah', 'Uinta']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table44"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Address|\n|---|\n|2300 C ST|\n|212 S MADISON - PO BOX 36|\n|401 SPRAGUE - PO BOX 590|\n|1930 S 20TH ST|\n|2303 N 97TH ST|\n|111 ELM STREET  - PO BOX 145|\n|5110 S 156TH ST|\n|520 E 2ND ST - PO BOX 65|\n|502 9TH ST - PO BOX 40|\n|5115 N 208TH ST|\n|600 W 3RD|\n|3520 MAPLEWOOD BLVD|\n|#2 WEST 6TH RD - PO BOX 160|\n|721 COTTONWOOD DR|\n|2215 S 13TH ST|\n|1703 PHILIP AVE - PO BOX 139|\n|407 N BAKER ST - PO BOX 280|\n|204 WEST O - PO BOX 206|\n|2323 S CODDINGTON ST|\n|605 S 6TH - PO BOX 391|\n|6720 ROCKWOOD LN|\n|401 WEBSTER - PO BOX 127|\n|1520 N 29TH ST|\n|211 N 7TH|\n|PO BOX 68|\n|7901 BLANCHARD BOULEVARD|\n|302 W PLUM - PO BOX 300|\n|520 E 9TH ST - PO BOX 577|\n|3000 7TH AVE|\n|306 PINE ST - PO BOX 62|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table440"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|District Name|\n|---|\n|Rattan|\n|Tulsa Charter: Schl Arts\/Sci.|\n|Robin Hill|\n|Sand Springs|\n|Brushy|\n|Hanna|\n|Okeene|\n|Forgan|\n|Shawnee|\n|OKC Charter: Santa Fe South|\n|Heavener|\n|Holly Creek|\n|Moffett|\n|Binger-Oney|\n|Friend|\n|Greenville|\n|Oak Grove|\n|Dover|\n|Mannford|\n|Anadarko|\n|Yarbrough|\n|Oakdale|\n|Canute|\n|Calumet|\n|White Rock|\n|Grandfield|\n|Idabel|\n|Burns Flat-Dill City|\n|Bennington|\n|Indianola|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table441"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|BRM Sub Function|\n|---|\n|140-Information Security|\n|051-Judicial Hearings|\n|179-Central Personnel Management|\n|056-Water Resource Management|\n|270-Access to Education|\n|010-Emergency Response|\n|137-Lifecycle\/Change Management|\n|181-Central Records and Statistics Management|\n|255-Employee Performance Management|\n|105-Budget Execution|\n|101-Budget Formulation|\n|027-Space Exploration and Innovation|\n|178-Central Property Management|\n|016-Higher Education|\n|104-Strategic Planning|\n|259-Budget and Performance Integration|\n|005-Criminal Incarceration|\n|094-Contingency Planning|\n|118-Federal Asset Sales|\n|217-Access to Care|\n|012-Intellectual Property Protection|\n|015-Elementary Secondary and Vocational Education|\n|046-Citizen Protection|\n|180-Taxation Management|\n|128-Asset and Liability Management|\n|043-Global Trade|\n|003-Social Services|\n|055-Resolution Facilitation|\n|019-Energy Supply|\n|025-Pollution Prevention and Control|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table442"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|BRM Primary Function|\n|---|\n|402-Financial Management|\n|315-General Government|\n|117-Natural Resources|\n|404-Information and Technology Management|\n|401-Administrative Management|\n|116-Litigation and Judicial Activities|\n|119-Workforce Management|\n|106-Education|\n|303-Legislative Relations|\n|405-Supply Chain Management|\n|105-Economic Development|\n|107-Energy|\n|109-General Science and Innovation|\n|101-Community and Social Services|\n|304-Planning and Budgeting|\n|112-Income Security|\n|115-Law Enforcement|\n|104-Disaster Management|\n|108-Environmental Management|\n|403-Human Resource Management|\n|110-Health|\n|103-Defense and National Security|\n|302-Internal Risk Management and Mitigation|\n|114-International Affairs and Commerce|\n|301-Controls and Oversight|\n|305-Public Affairs|\n|306-Regulatory Development|\n|307-Revenue Collection|\n|111-Homeland Security|\n|102-Correctional Activities|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table443"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Segment Architecture- Federal Standard Segment|\n|---|\n|510 - Budget Formulation|\n|150 - IT Management|\n|000 - No Standard Segment|\n|408 - Health: Health Care Research and Practitioner Education|\n|404 - Health: Health Care Administration|\n|410 - Health: Population Health Management and Consumer Safety|\n|550 - Human Resources Management|\n|406 - Health: Health Care Delivery Services|\n|600 - Acquisition and Grant Management|\n|500 - Financial Management|\n|640 - Supply Chain Management|\n|200 - Information Sharing|\n|620 - Facilities Management|\n|310 - Geospatial Services|\n|220 - Information Management and Dissemination|\n|300 - Identity Credential and Access Management|\n|100 - IT Infrastructure|\n|170 - Information Security|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table444"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Player_Assc|\n|---|\n|GUY|\n|COD|\n|FIJ|\n|URU|\n|UKR|\n|CMR|\n|ESP|\n|NCL|\n|NZL|\n|SRI|\n|HKG|\n|GER|\n|LUX|\n|JOR|\n|IND|\n|MAS|\n|QAT|\n|GAB|\n|SEN|\n|ANG|\n|BUL|\n|BIH|\n|KGZ|\n|IRQ|\n|CIV|\n|MON|\n|LAT|\n|VIE|\n|FIN|\n|CZE|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table445"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Provider Address|\n|---|\n|501 CLINTON STREET|\n|4538 NORTH BEACON|\n|1666 CHECKER ROAD|\n|1450 CASTLE MANOR DRIVE|\n|1426 WEST BIRCHWOOD|\n|900 SOUTH CHESTNUT|\n|815 SOUTH PRAIRIE STREET|\n|4101 LAKE COOK ROAD|\n|1400 EAST WASHINGTON STREET|\n|1675 EAST ASH STREET|\n|15600 SOUTH HONORE STREET|\n|191 EAST QUEENWOOD ROAD|\n|940 MAPLE AVENUE|\n|1006 NORTH LOWDEN P.O. BOX 111|\n|1925 SOUTH MAIN STREET|\n|7588 STAUNTON ROAD|\n|1223 EDGEWATER|\n|578 WEST COMMERCIAL STREET|\n|1440 NORTH 10TH STREET|\n|2145 EAST 170TH STREET|\n|715 WEST CENTRAL ROAD|\n|9615 NORTH KNOX AVENUE|\n|6300 NORTH CALIFORNIA AVENUE|\n|1401 S. CALIFORNIA AVENUE|\n|1251 NORTH STATE STREET|\n|720 RAYMOND DRIVE|\n|2130 HARRISON STREET|\n|418 SOUTH MEMORIAL PARK DRIVE|\n|215 WEST PENNSYLVANIA AVENUE|\n|13301 SOUTH CENTRAL AVENUE|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table446"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|SIGL3|\n|---|\n|AU|\n|VU|\n|TR|\n|GA|\n|UZ|\n|EC|\n|CZ|\n|PW|\n|MD|\n|SD|\n|ZA|\n|LV|\n|IQ|\n|CD|\n|XK|\n|HT|\n|DM|\n|PE|\n|TN|\n|GD|\n|CL|\n|TO|\n|BW|\n|US|\n|KW|\n|AR|\n|SA|\n|MG|\n|MR|\n|RO|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table447"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name|\n|---|\n|Henry Heights Elementary School|\n|Franklin Senior High School|\n|Bellingrath Hills Elementary School|\n|Magnolia Woods Elementary School|\n|Harry S. Truman Middle School|\n|Baskin School|\n|David Wade Correctional Center|\n|Palmetto Elementary School|\n|Green Oaks Performing Arts Academy|\n|Arcadia High School|\n|J.W. Faulk Elementary School|\n|Thomas Elementary School|\n|DeQuincy Elementary School|\n|Belle Place Middle School|\n|J.H. Williams Middle School|\n|Sicily Island High School|\n|John Q. Adams Middle School|\n|Church Point High School|\n|Park Ridge Academic Magnet School|\n|Mangham Junior High School|\n|Frankie Ray Jackson Sr. Technical Center|\n|Slidell Junior High School|\n|Northdale Superintendent's Academy|\n|Western Heights Elementary School|\n|Mildred Osborne Charter School|\n|E. E. Lyon Elementary School|\n|Washington\/Marion Magnet High School|\n|Elton High School|\n|Chahta-Ima Elementary School|\n|Green Park Elementary School|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table448"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Laitos|\n|---|\n|Alfred Berg Omaisuudenhoito Suomi Oy|\n|Investium Oy|\n|SEB Varainhoito Suomi Oy|\n|Varainhallinta Tresor Oy|\n|Savon Voima Salkunhallinta Oy|\n|Privanet Capital Markets Oy|\n|UB Omaisuudenhoito Oy|\n|Confido Capital Oy|\n|Estlander & Partners Oy|\n|Navi Group Oy|\n|Fennia Varainhoito Oy|\n|UB Omaisuudenhoito Tampere Oy (ent. Optium Oy)|\n|WIP Asset Management Oy|\n|FIM Sijoituspalvelut Oy|\n|Forea Capital Oy|\n|Blue White Alternative Investments Oy|\n|Innovestor Oy|\n|Front Capital Oy|\n|Elite Varainhoito Oy|\n|Investium Oy (ent. RVM  Investium Oy 14.12.2015)|\n|Kansalaisrahoitus Oy|\n|Evervest|\n|Northern Star Partners Oy|\n|Summa Capital Markets Oy|\n|UB Real Asset Management Oy|\n|Zenito Oy|\n|Taaleri Varainhoito Oy|\n|Seligson & Co Oyj|\n|Mandatum Life Sijoituspalvelut Oy|\n|Wasa Stock Adviser Oy Ab|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table449"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|BEZEICHNUNG|\n|---|\n|Rieneck Sinnberg|\n|Nackenheim|\n|Holm-Seppensen|\n|Burbach (Kr Siegen)|\n|Ludwigschorgast|\n|Warthausen (Hp)|\n|Burgbernheim-Wildbad|\n|Borghorst (Westf) VEW|\n|Ahlen (Westf)|\n|Rohrbach (Ilm)|\n|Stauchitz|\n|Magdeburg Hbf|\n|Bochum Hbf|\n|Schliersee|\n|Neustadt (Donau)|\n|Holtum|\n|Berlin-Friedrichshagen|\n|Hirschau|\n|Redwitz (Rodach)|\n|Soltau (Han) Nord|\n|Obersdorf|\n|Tacherting|\n|Salzbergen|\n|Diekholzen|\n|Hintschingen WTB\/DB|\n|Schwabach-Limbach|\n|Erfurt Ost|\n|Netzschkau|\n|Sassnitz|\n|Oberstdorf|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Oberstdorf', 'Obersdorf']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table45"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|GRUPO|\n|---|\n|CABOS|\n|IMPRESSORA|\n|SOFTWARE|\n|NOBREAK\/ESTAB.|\n|FONTES|\n|NOTEBOOK|\n|ADAPTADORES|\n|PROCESSADOR|\n|SUPRIMENTOS|\n|CONECTIVIDADE|\n|MONITOR|\n|TECLADO\/MOUSE|\n|KIT|\n|JOYSTICK|\n|CART. TINTA|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table450"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|State|\n|---|\n|PR|\n|IA|\n|WA|\n|SC|\n|MS|\n|NC|\n|CO|\n|MI|\n|VA|\n|AZ|\n|KS|\n|PA|\n|ID|\n|ME|\n|DC|\n|MT|\n|MA|\n|WY|\n|WI|\n|MO|\n|KY|\n|DE|\n|NY|\n|ND|\n|VT|\n|UT|\n|TX|\n|RI|\n|OH|\n|SD|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table451"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Date Added|\n|---|\n|2015-04-07|\n|2015-02-26|\n|2015-02-27|\n|2015-03-24|\n|2015-03-03|\n|2015-02-06|\n|2015-04-02|\n|2015-03-20|\n|2015-04-03|\n|2015-02-23|\n|2015-03-16|\n|2015-03-17|\n|2015-03-26|\n|2015-03-09|\n|2015-02-16|\n|2015-03-30|\n|2015-01-10|\n|2015-04-06|\n|2015-03-06|\n|2015-02-25|\n|2015-03-31|\n|2015-03-19|\n|2015-03-25|\n|2015-03-02|\n|2015-03-12|\n|2015-03-27|\n|2015-03-18|\n|2015-03-04|\n|2015-04-01|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table452"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Program|\n|---|\n|Projekt|\n|Word|\n|Access|\n|Visio|\n|Excel|\n|VB|\n|PP|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table453"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|BP Bis Abschnitt Bezeichnung|\n|---|\n|Ligerz|\n|Aesch|\n|Dachsen|\n|Uznach|\n|Gossau SG|\n|Tiefenwinkel (Verzw)|\n|Burgau Deponie ZAB (Agl)|\n|Regensdorf-Watt|\n|Siggenthal Industrie|\n|Maienfeld|\n|Andelfingen|\n|Muttenz Ost (Abzw)|\n|Bern|\n|Steinach|\n|Ecublens-Rue|\n|Crans|\n|Oppikon|\n|Mattstetten (Abzw)|\n|Waltenschwil|\n|Bronschhofen AMP|\n|Avenches|\n|Reutlingen|\n|Horgen Oberdorf|\n|Jestetten|\n|Frick|\n|Le Verney (embr)|\n|Gibswil|\n|Granges-Lens|\n|Leibstadt|\n|Colombier|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table454"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|PID|\n|---|\n|SBB_DEN_DENA|\n|SBB_ZIZS_CH|\n|SBB_SOM_RLG|\n|SBB_MML_CHN|\n|SBB_CASN_CLA|\n|SBB_EFG_SDO|\n|SBB_ESCH_SCHH|\n|SBB_TR_NOI|\n|SBB_BRBE_SHAL|\n|SBB_ZVB_ZVBO|\n|SBB_OLO_DU|\n|SBB_ZAF_ZSEB|\n|SBB_LK_TUR|\n|SBB_ER_AS|\n|SBB_FG_MRT|\n|SBB_RKSO_BRGL|\n|SBB_NWA_BNBS|\n|SBB_MOER_HOT|\n|SBB_NO_SEM|\n|SBB_GUET_KWL|\n|SBB_LSBI_LS|\n|SBB_LTG_LTH|\n|SBB_WST_SCHA|\n|SBB_CHAA_KOLM|\n|SBB_W_SCAL|\n|SBB_ERNA_RYAB|\n|SBB_UZW_FLA|\n|SBB_VEY_VIL|\n|SBB_ARN_GSSO|\n|SBB_ZAU_ZVBS|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table455"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Company Name|\n|---|\n|LYN-HILS CLEANING SERVICES INC.|\n|FRANCO CONSULTING ENGINEERS LLC|\n|M2 PROMOTIONS|\n|SMART IT STAFFING INC|\n|PMG TREE CARE & LANDSCAPE COMPANY INC|\n|REPP REAL ESTATE SERVICES LLC|\n|DLC LAWNCARE LLC  dba DIVERSITY LAWNCARE|\n|LDL 42 LLC|\n|DKM APPRAISER LLC|\n|KEYS TO WORK INC.|\n|WELLS & RHODES TRUCKING LLC|\n|SKYVIEW AERIAL IMAGING LLC|\n|ROGER WARD ENGINEERING INC.|\n|PKS CONSTRUCTION INC.|\n|A1C CARE CENTER INC|\n|FIRE DAWGS INC dba FIRE DAWGS JUNK REMOVAL FIRE DAWGS CLEANING SERVICES|\n|RYAN CONSULTING GROUP INC.|\n|SHALAW REALTY INC.|\n|SISTER 2 SISTER PROFESSIONAL SERVICES LLP dba SISTER 2 SISTER LLP|\n|CIRCLE CITY SECURITY LLC|\n|SYCAMORE ADVISORS LLC|\n|COFFEE-GRIFFIN LLC|\n|JULIE LYNN TREIDA|\n|SOMEDAY IS TODAY LLC DBA THE THOMPSON GROUP|\n|DAVENPORT CONSTRUCTION CORPORATION|\n|H&H CONSTRUCTION AND SERVICES LLC|\n|GREENE THUMB LANDSCAPE INC|\n|VOICE-N-VITTLES|\n|JOHN A. BOONE dba RJM LOGISTICS|\n|GRAVITY SOLUTIONS LLC|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table456"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|FCOBRO|\n|---|\n|2018-06-04 00:00:00.000|\n|2018-04-02 00:00:00.000|\n|2018-04-26 00:00:00.000|\n|2018-05-06 00:00:00.000|\n|2018-02-28 00:00:00.000|\n|2018-03-27 00:00:00.000|\n|2018-04-03 00:00:00.000|\n|2018-05-10 00:00:00.000|\n|2018-01-05 00:00:00.000|\n|2018-07-26 00:00:00.000|\n|2018-07-19 00:00:00.000|\n|2017-11-21 00:00:00.000|\n|2018-03-26 00:00:00.000|\n|2018-03-15 00:00:00.000|\n|2017-11-02 00:00:00.000|\n|2018-07-02 00:00:00.000|\n|2018-01-24 00:00:00.000|\n|2018-07-18 00:00:00.000|\n|2018-05-07 00:00:00.000|\n|2018-07-09 00:00:00.000|\n|2018-03-21 00:00:00.000|\n|2018-04-11 00:00:00.000|\n|2018-04-17 00:00:00.000|\n|2018-02-07 00:00:00.000|\n|2018-02-10 00:00:00.000|\n|2018-03-07 00:00:00.000|\n|2018-03-14 00:00:00.000|\n|2018-04-19 00:00:00.000|\n|2018-07-31 00:00:00.000|\n|2018-05-04 00:00:00.000|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table457"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|NAZWA|\n|---|\n|MZ-1 LIT.T  OZNACZNIK \/250 SZT\/|\n|MZ-1 LIT.Y  OZNACZNIK \/250 SZT\/|\n|ZUG-G\/24-E1_24V DIODA ZIELONA K.SZARY|\n|ZUG-G\/21-E10 600 V|\n|MZ-3 B\/NADRUKU OZNACZNIK \/100 SZT|\n|MZ-1 ZNAK PLUS OZNACZNIK K.CZERW.\/250 SZT\/|\n|WP 2_5 WTYCZKA 4-TOROWA K.CZERWONY|\n|DK\/Z-5 CYF.6 OZNACZNIK \/100 SZT.\/|\n|ZUG-G\/24-E1 12V DIODA CZERWONA|\n|DK\/Z-5 LIT.V2 OZNACZNIK\/250 SZT.|\n|ZUG-G\/22-WYK.SPECJ.2 REZYSTORY|\n|ZUG-G\/24-E1 6 V DIODA CZERWONA|\n|ZUG-G\/21-E4 DIODA ZENERA BZP C3 V3|\n|ZKU-16\/2 [opk.=10 szt.]|\n|TABLICZKA INFORMACYJNA \/STOP-START\/ DO 427-P... 427-S...|\n|DK\/Z-5 LIT.Z OZNACZNIK \/250 SZT.\/|\n|ZUG-G\/24-E1R 6V DIODA ZIELONA|\n|MZ-2  171-180 OZNACZNIK \/250 SZT\/|\n|MZ-3 LIT.I OZNACZNIK \/100SZT|\n|ZO-3114 NA TS-32 ZACISK K.NIEBIESKI|\n|MZ-1 ZNAK KROPKA  OZNACZNIK \/250 SZT\/|\n|PSPH1-COMP2 ZAWIAS MECHANICZNY H110|\n|MZ-1 LIT.E  OZNACZNIK \/250 SZT\/|\n|DK\/Z-6 391-400 CYF.OZNACZNIK \/250 SZT|\n|MZ-5 LIT.A \/OZNACZNIK 100 SZT|\n|ZUG-G\/24-E2 24V_D.ZIELONA_K.SZARY|\n|ZKM-4\/4 [opk.=5 szt.]|\n|MZ-1  241-250 OZNACZNIK \/250 SZT\/|\n|MZ-4 ZNAK \"+\" OZNACZNIK\/100 SZT|\n|MZ-5 LIT.PE \/OZNACZNIK 100 SZT|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table458"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Bezeichnung des Arzneimittels     D\u00e9nomination du m\u00e9dicament|\n|---|\n|Azitro-Acino 200 Pulver zur Zubereitung einer Suspension zum Einnehmen|\n|Pravastax 10 mg Tabletten|\n|Coop Vitality Pantoprazol Filmtabletten|\n|Vivanza 5mg Filmtabletten|\n|CoAmox-Acino 457 Pulver zur Zubereitung einer Suspension zum Einnehmen|\n|Gabapentin Pfizer 300 mg Kapseln|\n|Atorvastatin Streuli 80 mg Filmtabletten|\n|Cefuroxim-Acino 500 mg Filmtabletten|\n|Linomed Granulat|\n|Ibandronat Spirig HC 150 mg Monatstabletten Filmtabletten|\n|Rivastigmin Patch Sandoz 10 Transdermales Pflaster|\n|Nifedipin Sandoz CR 40 Matrixtabletten|\n|Metoprolol-Mepha 100mg Depotabs|\n|Contra-Schmerz P Tabletten|\n|Entacapon Plus Sandoz 100\/25\/200 mg Filmtabletten|\n|Lora-Mepha Allergie Tabletten|\n|Irfen retard Filmtabletten|\n|Votum plus 20\/25 Filmtabletten|\n|Zolpidem CR Zentiva 6_25 mg Tabletten mit kontrollierter Wirkstoff-Freigabe|\n|Eprotan-Mepha plus Lactab|\n|Atorvastatin Streuli 40 mg Filmtabletten|\n|Metoprolol Axapharm retard 100mg Retardtabletten|\n|Glimepiride Zentiva 4 mg Tabletten|\n|Acemetax Kapseln|\n|Mephadolor 500 Neo Filmtabletten|\n|Echinarom Halsschmerzen Tabletten|\n|Zolpidem CR Zentiva 12.5 mg Tabletten mit kontrollierter Wirkstoff-Freigabe|\n|Amavita Dextromethorphan Hustentabletten|\n|Vascord HCT 40\/5\/25mg Filmtabletten|\n|Rotpunkt Apotheke Bronchial-Pastillen zuckerfrei mit Sorbit neue Formel|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table459"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Description|\n|---|\n|pin stainless|\n|PINS. MS|\n|NUT LOCKING MS|\n|PIN NASM|\n|WASHER ZINC|\n|NUT PLATE AN|\n|SEAL AN|\n|WASHER SPECIAL|\n|PIN HITCH|\n|PIN. CHROME|\n|ROD END MS|\n|TURNBUCKLE AN|\n|ROD END BEARING|\n|SCREW AN|\n|NUT_AN|\n|WASHER SS|\n|NUT FLOATING_MS|\n|MS BOLT|\n|SPACER NAS|\n|PIN TAPERED|\n|TORQUE PIN|\n|SCREW|\n|CLIP MS|\n|pin stanless|\n|CABLE EYE AN|\n|CABLE SHACKLE AN|\n|SELF-LOCK SOCKET|\n|NUT FLOATING|\n|BOLT AN|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['pin stainless', 'pin stanless']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table46"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Power station name|\n|---|\n|Griffith Solar Farm - NSW - Solar|\n|Tanloden - Solar - VIC|\n|Scholle IPN -Solar - SA|\n|Olivet Aged Care Ringwood Solar System - VIC|\n|Christadelphian Homes Maranatha Solar System - QLD|\n|Stockland Hervey Bay - Solar - QLD|\n|Redmud Green Energy 25 - Solar - SA|\n|BTP 8 CLUNIES 9 MCKECHNIE Solar - QLD|\n|Pymble Ladies' College - Solar - NSW|\n|Casslis - Solar - VIC|\n|Taplin Corporation - Jetty Road Properties - Solar - SA|\n|Earle Haven Lodges Solar System - QLD|\n|A&J Australia Brisbane Solar PV - QLD|\n|Crookwell 2 Wind Farm NSW|\n|Cardinia Creek Mini-Hydro - VIC|\n|BTP 37 BRANDL Solar - QLD|\n|Top Cat Installations - Solar - VIC|\n|Easyrest Pty Ltd - Solar - VIC|\n|Apatula (Finke) Solar Power Station - NT|\n|Aveley Secondary College - Solar - WA|\n|Proten Solar NSW - Farm 92-2|\n|BRC Millbank Solar - QLD|\n|Baking Board solar farm - QLD|\n|Soma Holdings Solar - NSW|\n|Coomera Anglican Solar w SGU - QLD|\n|GDK-SOLAR-NSW|\n|Dangrove Art Storage Facility Solar - NSW|\n|Drysdale - LFG - VIC|\n|DAYDREAM SOLAR FARM  - QLD|\n|Inaburra School - Solar w SGU - NSW|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table460"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Segment |\n|---|\n|Blessings of Liberty|\n|Common Defense|\n|General Welfare|\n|Justice and Domestic Tranquility|\n|General government support and other|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table461"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Sucursal|\n|---|\n|TEP \/ PTV|\n|CELAYA|\n|COLIMA|\n|MORELIA|\n|MOR \/ COL|\n|S.L.P.|\n|PTO. VALLARTA|\n|QUERETARO|\n|TEPIC|\n|IRAPUATO|\n|ZACATECAS|\n|LEON|\n|GUADALAJARA|\n|AGUASCALIENTES|\n|ZAC \/ AGS|\n|FUERA DE TERRITORIO|\n|LAZARO CARDENAS|\n|MOR QRO.|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table462"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|OMBACCT|\n|---|\n|010-10-4079   Lower Colorado River Basin Development Fund|\n|010-92-0118   Salaries and Expenses|\n|024-60-8314   Trust Fund Share of Expenses|\n|024-49-0509   Salaries and expenses|\n|024-45-0551   Surface Transportation Security|\n|024-85-0861   Management and Administration|\n|025-03-0313   Native American Housing Block Grant|\n|010-10-5593   Reclamation Water Settlements Fund|\n|025-03-0197   Drug Elimination Grants for Low-income Housing|\n|024-55-0543   Automation Modernization Immigration and Customs Enforcement|\n|024-60-5710   U.S. Coast Guard Housing Special Fund|\n|024-60-8147   Aquatic Resources Trust Fund|\n|010-08-5015   Abandoned Mine Reclamation Fund|\n|025-03-0218   Revitalization of Severely Distressed Public Housing (HOPE VI)|\n|010-10-5065   Policy and Administration|\n|024-70-4234   Disaster Assistance Direct Loan Financing Account|\n|024-70-5701   National Flood Insurance Reserve Fund|\n|010-85-0418   Payments to the United States Territories Fiscal Assistance|\n|010-85-0414   Trust Territory of the Pacific Islands|\n|025-09-4589   Green Retrofit Program for Multifamily Housing Financing Account|\n|024-60-9981   Miscellaneous Trust Revolving Funds|\n|025-06-0198   Community Development Loan Guarantees Program Account|\n|010-10-4547   Bureau of Reclamation Direct Loan Financing Account|\n|024-45-0554   Transportation Security Support|\n|025-09-4072   FHA-general and Special Risk Insurance Funds Liquidating Account|\n|010-18-1696   Neotropical Migratory Bird Conservation|\n|010-84-0102   Salaries and Expenses|\n|010-85-4163   Assistance to American Samoa Direct Loan Financing Account|\n|024-45-0541   Federal Air Marshals|\n|010-11-0787   Central Utah Project Completion Account|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table463"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|SegmentID|\n|---|\n|S2|\n|S5|\n|S3|\n|S4|\n|S1|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table464"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|ProdusID|\n|---|\n|P5|\n|P2|\n|P6|\n|P3|\n|P1|\n|P4|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table465"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Codigo|\n|---|\n|012-015-006-001-L|\n|016-014-044-001-T|\n|001-008-057-001-IB|\n|001-016-012-002-E|\n|001-016-034-001-P|\n|001-001-180-001-I|\n|005-005-099-001-T|\n|004-001-002-002-R|\n|016-015-061-001-T|\n|001-014-000-001-L|\n|016-004-001-002-P|\n|001-005-031-001-P|\n|006-005-019-001-E|\n|NO APLICA|\n|005-005-100-001-T|\n|006-001-049-001-P|\n|013-031-002-001-T|\n|022-005-110-001-R|\n|020-001-070-001-P|\n|003-004-001-002-P|\n|011-003-008-001-T|\n|001-005-001-006-P|\n|006-005-014-002-E|\n|004-001-005-001-R|\n|001-016-012-002-I|\n|004-015-015-001-R|\n|015-001-099-001-T|\n|016-013-043-001-T|\n|016-013-172-001-T|\n|016-013-137-001-T|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table466"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Round|\n|---|\n|Play-In|\n|Elite Eight|\n|Second Round|\n|Sweet 16|\n|First Round|\n|National Championship|\n|Final Four|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table467"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|SUBCONCEPTO|\n|---|\n|Ingreso con Aplicacion Diferida|\n|OTROS INGRESOS. CONSELLERIA DE SANITAT|\n|PRECIOS PUBLICOS. SANIDAD. SANIT. LABORALES|\n|PRECIOS PUBLICOS. SANIDAD. SANIT. TRAFICO|\n|TRANSFERENCIA CORRIENTE DE DIPUTACIONES (M.A.P.)|\n|PRECIOS PUBLICOS. SANIDAD. PRESTACION SANITARIA|\n|PRECIOS PUBLICOS. SANIDAD. SANIT. CENTRO PENITENCI|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table468"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Project|\n|---|\n|OR|\n|OH|\n|RI|\n|OK|\n|PA|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table469"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Job Title|\n|---|\n|CLEANER|\n|Inductor - Production|\n|Center Standards Officer|\n|Territory Manager in Training|\n|License Practical Nurse|\n|High Voltage Electrical Technical Assistant|\n|Maintenance Worker Plumbing and Automotive|\n|Plant Worker|\n|Live Hanger|\n|Teacher Associate (Helen Sears\/Owensboro)|\n|Maintenance and Engineering Superintendent|\n|Custom Protection Security Officer|\n|Security Officer On-call|\n|CDL A TRUCK DRIVER|\n|Metallurgical Engineer|\n|Licensed Practical Nurse|\n|Full Time Retail Sales Consultant|\n|Physicians Insurance Claims Specialist|\n|Conveyance Team Member|\n|Part Time Merchandiser - Morganfield KY|\n|Electrical Technical Assistant|\n|Assistant Store Manager - 1800005732|\n|Machine Operator|\n|Network Administrator|\n|Diesel Mechanic|\n|Supply Chain Scheduler|\n|Merrow Operator|\n|Industrial Maintenance Technician|\n|Machinist|\n|Action Pest Control Service Representative|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Licensed Practical Nurse', 'License Practical Nurse']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table47"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|DENTISTTYPE|\n|---|\n|TRAINEE|\n|HOLDING NUMBER|\n|SALARIED|\n|GDS|\n|ASSISTANT|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table470"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Subsector|\n|---|\n|2.2.3 - Local Government and Decentralization|\n|5.1.4 - Administration and Oversight (Protection)|\n|3.1.8 - Water Supply and Sanitation|\n|6110008.02|\n|MED|\n|Thriving ECO Led By Private Sector|\n|6560080.00|\n|1.4.5 - Program Design and Learning (Narcotics)|\n|ALTERNATIVE DEVELOPMENT PROG|\n|MARKET LED-ECONOMIC GROWTH|\n|DEMOCRATIC GOVERNANCE|\n|6120008.01|\n|6740329.00|\n|6560060.00|\n|4.3.2 - Financial Sector Capacity|\n|4.5.3 - Program Design and Learning (Agriculture)|\n|1.6.4 - Program Support (Conflict)|\n|Health and Population Welfare|\n|4.6.4 - Program Support (Private Sector)|\n|3.1.5 - Other Public Health Threats|\n|6740309.00|\n|2.2.7 - Administration and Oversight (Governance)|\n|4970021.01|\n|2.3.4 - Program Support (Political Competition)|\n|COMPETITIVENESS OF GH. PRIVATE|\n|2.4.1 - Civic Participation|\n|4.4.1 - Modern Energy Services|\n|2630270.04|\n|5200436.40|\n|2780010.00|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table471"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|PROGRAMA|\n|---|\n|PRODETEC-INCUBADAS|\n|FNE-VERDE RURAL|\n|FNE-INDUSTRIAL|\n|PRODETEC-PROTEC|\n|PRODETEC-GERIR|\n|PROGRAMA DA TERRA|\n|PROPEC|\n|MINERAL-CONC.LICENCIAMENTO|\n|MINERAL-PESQUISA|\n|PROTAD-VEST.CALC\/ART.COURO|\n|DITEC-PRODESA|\n|DITEC-PROINTEC|\n|PROIR-AGRICULTURA IRRIGADA|\n|PRODETEC-P&D|\n|PRODETEC-TRANSFER|\n|FNE-PRONAF|\n|PROGER|\n|PROAGRI|\n|DITEC-PRODIR|\n|PRORENDA|\n|PROATUR|\n|AGRIN|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table472"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|UF_MUN|\n|---|\n|MA|\n|AL|\n|BA|\n|ES|\n|PE|\n|PB|\n|CE|\n|RN|\n|MG|\n|SE|\n|PI|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table473"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Description|\n|---|\n|MNCO BANANA PEPPERS SWEET 4\/1 GAL.|\n|DRIED MANGO CHUNKS 1\/5 #|\n|LIQUOR ANISETTE 12\/750 ML|\n|RTL GLASS WINE BASIC RED 4P\/BOX #3056S4|\n|SPREAD CHESTNUT NUTLEY 50% SW 1\/2.2 LB|\n|LIQUOR WHISKEY HAIG CLUB 6\/700 ML|\n|PASTE NOEL HAZELNUT PRALINE 5 KG|\n|FREEZER GLOVES|\n|PASTE THAI CURRY YELLOW 48\/4 OZ|\n|LIQUOR COGNAC MARTELL VS 6\/700 ML|\n|CHEESE ASIAGO BELGIOIOSA BLACK WAX 27#|\n|LIQUOR ROOT BEER LLORDS 1 LTR|\n|RIO PLATE 11.75 12\/CS #226             \"|\n|TABLE CLOTH WHITE 45X45|\n|BAG PAPER HANDLED SHOPPING 12\"X17\"300\/CS|\n|LIQUOR TEQUILA DON JULIO SILVER 6\/700 ML|\n|CH BAR SERVING TRAY 14 #1400 12\/CS     \"|\n|HOT DOG POULTRY 4\/1  12\/2 LB CS|\n|CH PLATE MELAMINE BEIGE 10.25 2 DZ#510\"\"|\n|MNCO QUINOA TRICOLOR 2\/5# OR 10#|\n|OIL HAZELNUT 500 ML|\n|US ARTICHOKE FRESH 12 CT.|\n|GLASS ROUND FLASK 8.5 OZ 1DZ\/CS #56811|\n|CH NAPKIN RED LINEN 20X20|\n|VEAL OSSO BUCCO|\n|US SPINACH FRESH BULK 4\/2.5 LB|\n|FF MELON GALIA|\n|BEEF T-BONE STEAK 12\/14\/16 OZ|\n|PEA LENTILS CANNED  MAMA TINA 6\/2500|\n|US BEIGE HAND TOWEL 16X30|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table474"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Unit|\n|---|\n|EACH|\n|PAIL|\n|LB|\n|BX|\n|CS|\n|TUB|\n|PK|\n|HD|\n|CASE|\n|DZ|\n|BT|\n|EA|\n|BAG|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table475"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|World Bank Income Classification 3|\n|---|\n|Low Income|\n|Not Classified|\n|Upper Middle Income|\n|Lower Middle Income|\n|High Income|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table476"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Program operacyjny - nazwa|\n|---|\n|Razem dla programu: Program Operacyjny Pomoc Techniczna 2014-2020|\n|Program Operacyjny Polska Wschodnia|\n|Razem dla programu: Program Operacyjny Polska Cyfrowa|\n|Razem dla programu: Program Operacyjny Polska Wschodnia|\n|Program Operacyjny Polska Cyfrowa|\n|Program Operacyjny Pomoc Techniczna 2014-2020|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table477"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Titel|\n|---|\n|Kampanj tv-reklam sommar 2016|\n|Avtal 5 Star Taxi|\n|Biljettpriser|\n|Avtal Landsbygdstrafik|\n|Detaljplan Lindbackens skola Uppsala kommun|\n|Avtal Stadsbusstrafik|\n|Synpunkt Sigtuna|\n|Intervju Examensarbete om bussar|\n|Avtal Eklundshofs Taxi|\n|Avtal Taxi Stor och Liten|\n|Nya busslinjer|\n|Skandisloppet 2016|\n|Avtal Taxi Kurir|\n|Sjukresebussar|\n|Projekt Mercurius - KTF2014-0216|\n|Samverkansavtal mellan UL och X-trafik|\n|Remissyttrande Parkeringsregler i Uppsala kommun|\n|Elbusspremie remiss|\n|Hyresavtal K2195 Coffee Center|\n|Avtal HH Traffic|\n|Kampanj radioreklam sommar 2016|\n|Avtal Regionbusstrafik|\n|Funktionsutredning Sala station - KTF2016-0077|\n|Uppdatering\/justering av annons 24-timmarsbiljetten i Turistkartan 2016|\n|Bussar till Rickomberga|\n|Avtal Taxi Norra Uppland|\n|Ekonomirapporter 2016|\n|Uppsala Triathlon 18-19 juni Uppsala kommun - KTF2016-0036|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table478"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Miejsce realizacji - gmina|\n|---|\n|Stegna|\n|Rudziniec|\n|Szumowo|\n|Sokolniki|\n|Tuczna|\n|Recz|\n|Przytoczna|\n|Sztutowo|\n|Marki|\n|Rawicz|\n|Choczewo|\n|Lipowa|\n|Marianowo|\n|Osie|\n|Bobowo|\n|Sawin|\n|Kruszwica|\n|Chmielno|\n|Poniec|\n|Pysznica|\n|Lubichowo|\n|Tychowo|\n|Bartoszyce|\n|Boleszkowice|\n|Strawczyn|\n|Szamocin|\n|Bukowno|\n|Choroszcz|\n|Krobia|\n|Wierzchowo|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table479"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Component Name|\n|---|\n|Lakota|\n|Pits gravel and sand|\n|Regent|\n|Havre wooded_occasionally flooded|\n|Yawdim|\n|Havre occasionally flooded loam surface|\n|Velva rarely flooded|\n|Water|\n|Banks channeled_frequently flooded|\n|Lehr|\n|Hamerly dry|\n|Cherry|\n|Lakoa|\n|Kremlin very stony surface|\n|Mckeen frequently flooded|\n|Amor very stony|\n|Chama very stony surface|\n|Patent occasionally flooded moderately steep|\n|Tinsley|\n|Regent gently sloping|\n|Niobell|\n|Kremlin|\n|Peta|\n|Janesburg saline|\n|Gerda|\n|Bowbells|\n|Archin|\n|Havre channeled_frequently flooded|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Lakota', 'Lakoa']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table48"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Miejsce realizacji - powiat|\n|---|\n|grajewski|\n|krapkowicki|\n|Katowice|\n|trzebnicki|\n|oleski|\n|ostrzeszowski|\n|zamojski|\n|malborski|\n|Konin|\n|skierniewicki|\n|legionowski|\n|leski|\n|Gliwice|\n|Siedlce|\n|goleniowski|\n|suski|\n|obornicki|\n|miechowski|\n|konecki|\n|piski|\n|sandomierski|\n|krakowski|\n|gryficki|\n|bydgoski|\n|Sopot|\n|kazimierski|\n|mielecki|\n|czarnkowsko-trzcianecki|\n|Opole|\n|legnicki|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table480"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|item_no|\n|---|\n|97-12531\/4|\n|97-13008\/2|\n|97-12922\/2|\n|97-13047\/6|\n|39065-100|\n|97-12361\/6|\n|97-12704\/2|\n|43-I1415|\n|124410|\n|97-12340\/2|\n|PPP4704-4|\n|97-13157\/6|\n|68519104|\n|97-12286\/8|\n|010420125400|\n|430880|\n|431522|\n|556330055|\n|97-5647\/4|\n|97-13525\/2|\n|97-13158\/2|\n|97-13163\/4|\n|97-12817\/2|\n|97-13267\/10|\n|68524612|\n|85858|\n|57510129|\n|PPP4447-4|\n|97-12182\/6|\n|97-12376\/8|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table481"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|cig|\n|---|\n|Z861E6B6CA|\n|0312338577|\n|Z7F20F7808|\n|XF5198CE99|\n|X7D18107DC|\n|ZB31D1F01C|\n|ZCD1E1A623|\n|Z0E213F128|\n|Z031B8C766|\n|X761623715|\n|Z421C71275|\n|Z161F58678|\n|XC218107D4|\n|X7C19BDDBC|\n|X3D1829654|\n|Z5D1C7519F|\n|Z8E1D92725|\n|Z8F20D8B3F|\n|Z681F42BEA|\n|ZB11D4E288|\n|ZD31D1F0E4|\n|X9E1623714|\n|Z521D2236C|\n|X2A0D1220D|\n|XD818107E0|\n|Z701D21CCD|\n|Z401EAFCC1|\n|X1018107E5|\n|ZF91D22741|\n|Z7E1B90986|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table482"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Court Case #:|\n|---|\n|F-000637-13|\n|F-013028-13|\n|F-39543-09|\n|F-040474-10|\n|F-20162-09|\n|F-042171-13|\n|F-29221-14|\n|F-020767-13|\n|F-004175-14|\n|F-052759-14|\n|F-043120-13|\n|F-008997-13|\n|F-026619-12|\n|F-17692-09|\n|F-18076-09|\n|F-11677-10|\n|F-042314-14|\n|F-024963-13|\n|F-034216-13|\n|F-053217-10|\n|F-047188-14|\n|F-23184-13|\n|F-56824-09|\n|F-24948-08|\n|F-031435-14|\n|F-009708-15|\n|F-40064-09|\n|F-034427-15|\n|F-048009-14|\n|F-36701-10|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table483"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|gldescription|\n|---|\n|R&M-FURNITURE & FITTINGS|\n|CLNSUP-EARLY DISCHARGE-NURSING|\n|LATE PAYMENT INTEREST PENALTY|\n|R&M CONTRACT-COMP EQUIP|\n|OTHSUP-KITCHEN & DINING SUPPLIES|\n|INVE-PHARMACY VARIOUS ITEMS|\n|INVE-NON DISPOSABLE INSTRUMENTS & APPLICANCES|\n|ADVERTISING-RECRUITMENT|\n|ASSET COMPUTER SOFTWARE PURCHASED|\n|R&M-MOTOR VEHICLES|\n|INVE-DISPOSABLE TUBES & CATHETERS|\n|CLNSUP-PROSTHETICS HEART VALVE|\n|CLNSUP-CDBS DENTAL|\n|INVE-EXTERNAL CLINICAL SERVICES|\n|PAY-GST COLLECTED|\n|INVE-DISPOSABLE SUTURES|\n|R&M-BLDG & PLANT|\n|DRUGS-ALIMENTARY TRACT & METABOLISM|\n|BLD&PT-CON-EMERGENCY GENERAL|\n|SUPPLIES-COMPUTER RELATED|\n|OTHSUP-EXTERNAL-LAUNDRY|\n|INVE-SPECIFICALLY MONITORED DRUGS|\n|TRAVEL-TAXI|\n|INVENTORY-DOMESTIC|\n|INTRA GOVERNMENT CREDITOR CONTROL ACCOUNT|\n|TRAVEL-ACCOMODATION & MEALS-DOMESTIC|\n|INVE-DISPOSABLE SYRINGES|\n|FOOD  -POULTRY|\n|LIBRARY-REFERENCE BOOK & MANAGERIAL GEN|\n|DRUGS -DRUG SUPP TRSF IN|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table484"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Region|\n|---|\n|EMEA|\n|Asia|\n|South America|\n|Blanket Rate|\n|North America|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table485"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|ZIP\/Postal Code|\n|---|\n|68025-1401|\n|69165-0217|\n|68833-5802|\n|68305-1614|\n|68031-1259|\n|68824-0430|\n|69162-1948|\n|69143-0369|\n|68760-0310|\n|68978-0288|\n|69339-1204|\n|68939-1199|\n|68415-0188|\n|69120-0399|\n|68836-0490|\n|68812-0008|\n|68869-8400|\n|68335-0190|\n|68341-4502|\n|68845-5331|\n|68450-0338|\n|68982-0190|\n|68620-0391|\n|68949-2002|\n|69151-0188|\n|68874-0366|\n|69044-0368|\n|68973-0008|\n|68041-0158|\n|68301-0259|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table486"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Municipality|\n|---|\n|TOWN OF WYOCENA - COLUMBIA COUNTY|\n|TOWN OF MARSHALL - RUSK COUNTY|\n|VILLAGE OF RIVER HILLS - MILWAUKEE COUNTY|\n|VILLAGE OF RANDOM LAKE - SHEBOYGAN COUNTY|\n|TOWN OF MANCHESTER - GREEN LAKE COUNTY|\n|TOWN OF CLAYTON - POLK COUNTY|\n|TOWN OF WASHINGTON - LA CROSSE COUNTY|\n|CITY OF OCONOMOWOC - WAUKESHA COUNTY|\n|VILLAGE OF AUBURNDALE - WOOD COUNTY|\n|CITY OF THORP - CLARK COUNTY|\n|TOWN OF ARLINGTON - COLUMBIA COUNTY|\n|VILLAGE OF SPRING VALLEY - MULTIPLE COUNTIES|\n|VILLAGE OF RUDOLPH - WOOD COUNTY|\n|TOWN OF CLAYTON - CRAWFORD COUNTY|\n|VILLAGE OF MERRIMAC - SAUK COUNTY|\n|TOWN OF SPRUCE - OCONTO COUNTY|\n|TOWN OF WHEATON - CHIPPEWA COUNTY|\n|TOWN OF LUCK - POLK COUNTY|\n|TOWN OF ARBOR VITAE - VILAS COUNTY|\n|TOWN OF ALVIN - FOREST COUNTY|\n|CITY OF SCHOFIELD - MARATHON COUNTY|\n|TOWN OF THORNAPPLE - RUSK COUNTY|\n|VILLAGE OF STURTEVANT - RACINE COUNTY|\n|VILLAGE OF COTTAGE GROVE - DANE COUNTY|\n|VILLAGE OF BLOOMINGTON - GRANT COUNTY|\n|TOWN OF JACKSON - WASHINGTON COUNTY|\n|VILLAGE OF GENOA CITY - MULTIPLE COUNTIES|\n|TOWN OF MERCER - IRON COUNTY|\n|TOWN OF HAY RIVER - DUNN COUNTY|\n|TOWN OF ASHLAND - ASHLAND COUNTY|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table487"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|SITE_CODE|\n|---|\n|IE0000299|\n|IE0000604|\n|IE0003002|\n|IE0001626|\n|IE0002351|\n|IE0000461|\n|IE0000595|\n|IE0000204|\n|IE0001430|\n|IE0000930|\n|IE0000704|\n|IE0000318|\n|IE0001209|\n|IE0000432|\n|IE0002247|\n|IE0001141|\n|IE0002246|\n|IE0002170|\n|IE0002313|\n|IE0002110|\n|IE0002330|\n|IE0002349|\n|IE0000572|\n|IE0000191|\n|IE0000343|\n|IE0002953|\n|IE0001922|\n|IE0000242|\n|IE0002117|\n|IE0000202|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table488"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Building Number|\n|---|\n|TX0328JL|\n|TX0012ZZ|\n|MD0055ZZ|\n|IA0119ZZ|\n|IL2125ZZ|\n|PA0600ZZ|\n|IL0214ZZ|\n|KY0088ZZ|\n|CO0625AA|\n|PR0017ZZ|\n|MN0076ZZ|\n|MO0613AF|\n|NY0311ZZ|\n|TX0282JL|\n|AL0043AC|\n|WA0551FB|\n|WA0082ZZ|\n|WA0831KF|\n|TX0972YS|\n|MD0232ZZ|\n|AK0508AH|\n|WV0050ZZ|\n|MO0603AF|\n|AZ0052ZZ|\n|MN0090TC|\n|CO0519AA|\n|MS0009AA|\n|MO0620AF|\n|CO0527AA|\n|IN0529JF|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table489"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Incident Type|\n|---|\n|Domestic Assault|\n|Shooting|\n|Unruly Prisoner|\n|Sex Offense|\n|Domestic Disturbance|\n|Medical Overdose|\n|Armed Subject\/Disturbance|\n|Resisting Arrest|\n|Drug Offense|\n|Rape|\n|Aggravated Assault|\n|Domestic|\n|DUI\/Drug Violation|\n|Theft|\n|Felony Vehicle Stop|\n|Vehicle Stop related to Shooting|\n|Resisting|\n|Disturbance|\n|Alleged Force Used|\n|Distubance|\n|Unwanted Subject|\n|Armed Robbery - Multiple Actors|\n|Homicide|\n|Hindering Apprehension|\n|Disturbance\/Fight|\n|Mere Encounter|\n|Armed Subject|\n|Theft From Motor Vehicle|\n|Medical Call|\n|Juvenile Complaint|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Distubance', 'Disturbance']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table49"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|LOCALITE|\n|---|\n|ABALAJIWAD|\n|TCHINWINIL|\n|TAKARKAD|\n|EBOURKOUM|\n|EGHARGHAR (VA)|\n|EMERIG (VA)|\n|ANOU-ZAGARAN|\n|TCHIRO-CENTRE|\n|MAITCHIYISSENE|\n|TELMILT|\n|INWAZAB|\n|GABDAK|\n|ELIG|\n|ANOU-ZAGAGHAN|\n|TOUDOU TARBOUNA|\n|AFASSAS|\n|ABORAK|\n|TEBNIT|\n|ERWA|\n|ATABBO (PE)|\n|AZANGALLAN|\n|TIMSEL|\n|AZAWAGARE|\n|OUFEN|\n|ARATANE|\n|TARZAGARAT|\n|KIRIRIA KEL AGAROUS|\n|TAMAZALAK|\n|ABARDAK (VA)|\n|AHAMED AHMED|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table490"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|EESS|\n|---|\n|MANCHURIA|\n|SACHAVACA|\n|CASHAPAMPA|\n|AGUA BLANCA|\n|TAZO GRANDE|\n|CACHICOTO|\n|PALO DE ACERO|\n|CAUNARAPA|\n|MONZON|\n|CUYACU|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table491"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Full_Name_ABC|\n|---|\n|Douglas Ella|\n|Dick Lawanna|\n|Clark Ramiro|\n|Cross Janis|\n|Crothers Dean|\n|Barber Gary|\n|Rouse Babara|\n|Hall Nathan|\n|Neal Walter|\n|Jablonowski Lauren|\n|Shaw Carol|\n|Thaxton Tana|\n|Buteau Dalton|\n|Clarkson Tim|\n|Gano Barbara|\n|Gertz Leonida|\n|Barbour Ardelia|\n|Ohagan Milissa|\n|Simpson Bart|\n|Manhart Otelia|\n|Garza Ora|\n|Massey Marco|\n|Adkins Elijah|\n|Hogue Sommer|\n|Abbott Rodney|\n|Parsons Tammy|\n|Love Tim|\n|Hunter John|\n|Adkinson Kami|\n|Knight Latoya|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table492"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Provider Name|\n|---|\n|WARREN PARK HEALTH & LIVING CTR|\n|ROSEWOOD CARE CENTER OF ST CHARLES|\n|MOUNT VERNON HEALTH CARE CENTER|\n|WATSEKA REHAB & HLTH CARE CTR|\n|STEARNS NURSING & REHAB CENTER|\n|BROOKDALE BURR RIDGE|\n|BRIDGEVIEW HEALTH CARE CENTER|\n|ROSEWOOD CARE CENTER OF JOLIET|\n|WILLOW ROSE REHAB & HEALTH|\n|TUSCOLA HEALTH CARE CENTER|\n|FARMER CITY REHAB & HEALTHCARE|\n|ROSEWOOD CARE CENTER OF ELGIN|\n|AMBASSADOR NURSING & REHAB CENTER|\n|MANORCARE OF ROLLING MEADOWS|\n|MCLEAN COUNTY NURSING HOME|\n|APERION CARE MASCOUTAH|\n|VERACARE BURBANK|\n|FRANKFORT HEALTHCARE & REHAB CENTER|\n|CARMI MANOR REHAB & NRSG CTR|\n|APERION CARE DOLTON|\n|MERCY REHAB AND CARE CENTER|\n|SOUTHPOINT NURSING & REHAB CENTER|\n|HIGHLAND HEALTH CARE CENTER|\n|ADDOLORATA VILLA|\n|CHARLESTON REHAB & HEALTH CARE CENTER|\n|CASEYVILLE NURSING & REHAB CTR|\n|MANOR COURT OF CARBONDALE|\n|GOOD SAMARITAN HOME|\n|CISNE REHABILITATION & HEALTH CENTER|\n|TIMBER POINT HEALTHCARE CENTER|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table493"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|ChapterName|\n|---|\n|Belgium Chapter|\n|At Large - Australia|\n|Northern California Chapter|\n|At Large - Europe|\n|Michigan Chapter|\n|Rocky Mountain Student Club|\n|Ohio Chapter|\n|Korea Chapter|\n|Aloha Chapter|\n|Greater Edmonton Chapter|\n|Germany Chapter|\n|Tennessee Chapter|\n|At Large - China|\n|Finland Chapter|\n|Turkey Chapter|\n|At Large - United States|\n|Tampa Bay Area Chapter|\n|Middle Pennsylvania Chapter|\n|WestField Chapter|\n|At Large - Middle East|\n|Eastern Great Lakes Chapter|\n|Toronto Chapter|\n|Dallas\/Fort Worth Chapter|\n|Japan Chapter|\n|Mexico  Chapter|\n|Puerto Rico Club|\n|Indiana Chapter|\n|Greater New York City Chapter|\n|North Florida Chapter|\n|Oregon Chapter|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table494"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|LOCATION|\n|---|\n|B123|\n|B239|\n|B107|\n|B132|\n|B219|\n|B124|\n|M203|\n|F03|\n|E01|\n|B306|\n|B251|\n|L02|\n|L01|\n|B211|\n|B205|\n|B245|\n|B104|\n|B240|\n|B223|\n|B224|\n|B225|\n|B212|\n|I01|\n|B128|\n|B216|\n|B243|\n|B253|\n|B108|\n|J01|\n|B248|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table495"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Faggruppe navn|\n|---|\n|Medicin|\n|Dans Teatervidenskab og Drama Musikvidenskab|\n|Informationssystemer|\n|Kunsthistorie og Billedkunst|\n|Nordisk litteratur og sprog|\n|Generelle serier|\n|Odontologi|\n|Geografi og Udviklingsstudier|\n|Biologi|\n|Biblioteks- og informationsvidenskab|\n|Sygepleje|\n|Kemiteknik Olie-gas procesteknologi|\n|Elektro-nik\/teknik\/magnetisme kom.tek. mekatronik|\n|Farmakologi og toksikologi|\n|Neurologi neurokirurgi psykiatri|\n|IT og Humaniora|\n|Medier og Kommunikation|\n|Psykologi|\n|Farmaceutisk videnskab|\n|Lingvistik|\n|Teologi og Religionsvidenskab|\n|Matematik anvendt matematik og Statistik|\n|Antropologi Etnologi etnografi|\n|Materialeteknologi\/videnskab nanoteknologi\/science|\n|Medicinske basalfag|\n|Konstruktion maskin - og produktionsteknologi|\n|Historie|\n|Retsvidenskab|\n|Sociologi|\n|Retsmedicin|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table496"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Sequence|\n|---|\n|Full Length\/2-end|\n|114-420|\n|983-end|\n|416-end|\n|501-end|\n|135-end|\n|804-end|\n|397-end|\n|1-508|\n|1068aa \/724aa (FL)|\n|542-end|\n|578-872|\n|1-979 (del.346-731)|\n|438-end|\n|604-end|\n|807-end|\n|507-end|\n|570-end|\n|161-end|\n|1-375|\n|468-end|\n|70-end|\n|30-397|\n|580-end|\n|1-488|\n|455-end|\n|386aa (381-end)|\n|80-end|\n|1127-end|\n|460-end|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table497"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|No of Axles|\n|---|\n|5 Axles|\n|4 Axles|\n|6 Axles|\n|3 Axles|\n|7 Axles|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table498"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|State|\n|---|\n|PR|\n|ND|\n|GA|\n|DC|\n|MI|\n|PA|\n|MO|\n|OR|\n|MA|\n|NM|\n|HI|\n|AR|\n|SD|\n|TX|\n|VT|\n|AL|\n|KS|\n|ME|\n|OH|\n|LA|\n|CA|\n|WI|\n|NH|\n|ID|\n|DE|\n|WV|\n|NE|\n|MS|\n|CT|\n|IL|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table499"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Provincia|\n|---|\n|Caceres|\n|Guipuzcoa|\n|Burgos|\n|Salamanca|\n|Lanzarote|\n|Pontevedra|\n|Sevilla|\n|Albacete|\n|Mallorca|\n|Valladolid|\n|Ciudad Real|\n|Madrid|\n|Palencia|\n|Zaragoza|\n|Almeria|\n|Tenerife|\n|Guadalajara|\n|Asturias|\n|Toledo|\n|Lugo|\n|Cordoba|\n|Santander|\n|Alicante|\n|Vizcaya|\n|Castellon|\n|Badajoz|\n|Santader|\n|Huesca|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Santander', 'Santader']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table5"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Unidade de Trabalho|\n|---|\n|CUIRITIBA - CENTRO|\n|CIANORTE|\n|CURITIBA - PINHEIRINHO|\n|UMUARAMA|\n|curitba - cmb|\n|CURITIBA - CENTRO|\n|CURITBA - CMB|\n|CURITIBA - CMB|\n|CURITIBA - CIC|\n|CURITIBA - SANTA FELICIDADE|\n|CASCAVEL|\n|GUARAPUAVA|\n|CASTRO|\n|PIRAQUARA|\n|CURITIBA - AHU|\n|GUARATUBA|\n|LONDRINA|\n|CURITIBA - TRIBUNAL DO JURI|\n|CURITIBA - RUA DA GLORIA|\n|FAZENDA RIO GRANDE|\n|curitiba - cmb|\n|PONTA GROSSA|\n|APUCARANA|\n|Unidade de Trabalho|\n|CURITIBA - ALTO DA GLORIA|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['curitiba - cmb', 'curitba - cmb']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table50"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Nombre|\n|---|\n|Drake Aranda Fernando Romulo|\n|Bopp Latham Patricio Javier Eusebio|\n|Almonacid Colin Pedro Mario Osvaldo|\n|Freixas Soto Irma Gabriela|\n|Kremer Alcarraz Rodrigo Alejandro|\n|Saavedra Milla Juan Carlos|\n|Alfaro Sanders Luciano Augusto|\n|Farr Moraga Juan Francisco|\n|Castillo Guerra Lisette Carolina|\n|Frederick Levi Ronny Edison|\n|Ravanal Zepeda Luis Orlando|\n|Montoya Salgado Marco Antonio|\n|Oyarce Pinto Sylvia Patricia|\n|Salas Cruchaga Juan Pablo|\n|Martinez Neira Diego Jose|\n|Schirmer Lecaros Sebastian Felipe|\n|Jorratt Leiva Janine Marcela|\n|Araneda Burgos Felipe Andres|\n|Soto Contreras Marcos Enrique|\n|Camilo Abelleira Francisca Alejandra|\n|Barroilhet Acevedo Claudio Jose Martin|\n|Carrizo Godoy Claudia Carolina|\n|Bravo Miranda Jose Liborio|\n|Chacaltana Sims Valentina Andrea|\n|Otero Sandoval Eduardo Alfredo|\n|Roco Cereceda Sara Elizabeth|\n|Gonzalez Tobar Jaime Pedro|\n|Veas Brokering Diego Ricardo|\n|Palacios Barros Rodrigo Ignacio|\n|Pizarro Sandoval Maria Josefina|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table500"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Location|\n|---|\n|19XX N LYNN ST|\n|43XX COLUMBIA PK|\n|22XX N QUANTICO ST|\n|14XX S GREENBRIER ST|\n|55X 395 RT|\n|ARLINGTON BL\/N MEADE ST|\n|36XX FAIRFAX DR|\n|12XX N VEITCH ST|\n|90X S ORME ST|\n|N MARSHALL DR\/ RTE 110|\n|75XX E I66 RT|\n|75X S DICKERSON ST|\n|62XX WASHINGTON BL|\n|40X S 12 ST|\n|10XX S FREDERICK ST|\n|41XX FAIRFAX DR|\n|18XX N JACKSON ST|\n|S 2 ST\/S OLD GLEBE RD|\n|41X N GLEBE RD|\n|22XX S 12 ST|\n|32XX 9TH ST S|\n|88X N QUINCY ST|\n|14XX N SCOTT ST|\n|11TH ST N\/N GLEBE RD|\n|55XX S 4 ST|\n|S FOUR MILE RUN DR\/ SHIRLINGTON RD|\n|29XX-F S WOODSTOCK ST|\n|N PERSHING DR\/N PIEDMONT ST|\n|52XX YORKTOWN BL|\n|10X S GLEBE RD|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table501"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|SegmentID|\n|---|\n|S1|\n|S5|\n|S3|\n|S4|\n|S2|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table502"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Puerto|\n|---|\n|Rosario - Muelle ENAPRO|\n|Akzo Nobel|\n|Rhasa|\n|Caleta Paula|\n|La Plata|\n|Campana - Muelle Provincial|\n|Buenos Aires|\n|Mar del Plata - Muelle YPF|\n|Delta Dock|\n|Piedras Blancas|\n|Ushuaia|\n|San Antonio Este|\n|Euroamerica|\n|Shell (Vilelas)|\n|Cruz del Sur|\n|Dreyfus (Gral Lagos)|\n|ACA (Vilelas)|\n|Renova|\n|Minera Alumbrera|\n|Barranqueras - Muelle Elevador|\n|Xstorage|\n|Vitco|\n|Bunge (Dempa y Pampa)|\n|San Pedro|\n|Regasificador Escobar|\n|Dock Sud|\n|Caleta Olivia|\n|Siderar|\n|Terminal 6|\n|Terminal de Fertilizantes Argentinos|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table503"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|CNPJ|\n|---|\n|18.210.391\/0001-34|\n|10.478.512\/0001-11|\n|56.419.492\/0001-09|\n|03.662.899\/0001-04|\n|22.535.466\/0001-24|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table504"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Organisation name|\n|---|\n|WAVERLEY ROAD|\n|WARRINGTON PSYCHOLOGICAL SERVICE|\n|GLOUCESTER HOUSE|\n|WHITTINGTON HEALTH NHS TRUST|\n|MIDLANDS PARTNERSHIP NHS FOUNDATION TRUST|\n|STARFISH HEALTH AND WELLBEING|\n|BERKSHIRE HEALTHCARE NHS FOUNDATION TRUST|\n|WEST ESSEX IAPT|\n|INSIGHT HEALTHCARE - DERBYSHIRE|\n|RICHMOND ROYAL HOSPITAL|\n|SUSSEX COMMUNITY NHS FOUNDATION TRUST|\n|DENTON HOUSE|\n|WALLSEND HEALTH CENTRE|\n|EAST DORSET STEPS TO WELLBEING (IAPT)|\n|COVENTRY AND WARWICKSHIRE PARTNERSHIP NHS TRUST|\n|CAMBRIDGESHIRE AND PETERBOROUGH MENTAL HEALTH PARTNERSHIP TR HQ|\n|ISLINGTON IAPT|\n|KENDRAY HOSPITAL|\n|SOUTH WARWICKSHIRE HOSPITAL|\n|ADDACTION ASHFORD|\n|BOURNEMOUTH AND POOLE PRIMARY CARE MEDICAL TEAM|\n|DOVER COUNSELLING CENTRE HQ|\n|LAKESIDE UNIT|\n|ADDACTION THANET|\n|INSIGHT HEALTHCARE - NOTTINGHAMSHIRE|\n|MILL HOUSE|\n|FAVERSHAM COUNSELLING SERVICE LTD|\n|TAKE TIME TO TALK|\n|PSICON LIMITED|\n|TALKPLUS|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table505"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|\u30bf\u30b9\u30af|\n|---|\n|RP2|\n|D|\n|SW1|\n|SW2|\n|ST1|\n|RP1|\n|I|\n|ST2|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table506"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Attending School Name|\n|---|\n|Newburgh Elementary School|\n|Cape Elizabeth Middle School|\n|Vickery School|\n|Waterboro Elementary School|\n|Molly Ockett School|\n|Horace Mitchell Primary School|\n|St Albans Consolidated|\n|Pine Street Elementary School|\n|Mapleton Elementary School|\n|Farrington School|\n|Lincolnville Central School|\n|Se Do Mo Cha Middle School|\n|Lewiston High School|\n|Biddeford High School|\n|Lyman Moore Middle School|\n|Mt View Middle School|\n|Nokomis Regional High School|\n|Captain Albert W. Stevens School|\n|Casco Bay High School|\n|Messalonskee Middle School|\n|Oak Hill High School|\n|Kennebunk Elementary School|\n|Rose M Gaffney School|\n|Madawaska Middle\/High School|\n|Phillips Elementary School|\n|Shapleigh Memorial School|\n|Martel School|\n|North Yarmouth Academy|\n|Surry Elementary School|\n|Sea Road School|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table507"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|COMUNE|\n|---|\n|MELISSANO|\n|SAN PIETRO VERNOTICO|\n|GALATONE|\n|SAN MARZANO DI SAN GIUSEPPE|\n|PALO DEL COLLE|\n|TUGLIE|\n|SPECCHIA|\n|LEPORANO|\n|MATINO|\n|SANT'AGATA DI PUGLIA|\n|VICO DEL GARGANO|\n|BAGNOLO DEL SALENTO|\n|CASTELLANA GROTTE|\n|CAPRARICA DI LECCE|\n|ARNESANO|\n|ALBERONA|\n|APRICENA|\n|RODI GARGANICO|\n|TORREMAGGIORE|\n|CASTRO|\n|ROCCHETTA SANT'ANTONIO|\n|STORNARA|\n|CERIGNOLA|\n|ASCOLI SATRIANO|\n|GAGLIANO DEL CAPO|\n|SAN PAOLO DI CIVITATE|\n|SAN DONATO DI LECCE|\n|GRUMO APPULA|\n|SAN SEVERO|\n|MORCIANO DI LEUCA|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table508"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Method|\n|---|\n|org.argouml.uml.diagram.ui.FigEdgeModelElement.getNotationSettings(NotationProvider)|\n|org.argouml.kernel.AbstractProjectMember.remove()|\n|org.argouml.uml.ui.UMLModelElementTaggedValueProxy.getStartPosition()|\n|org.argouml.core.propertypanels.ui.UMLComboBoxModel.getSelectedItem()|\n|org.argouml.model.mdr.FacadeMDRImpl.getClassifiers(Object)|\n|org.argouml.model.mdr.KindsMDRImpl.getAggregate()|\n|org.argouml.uml.cognitive.critics.CrInterfaceAllPublic.predicate2(Object_Designer)|\n|org.argouml.uml.ui.foundation.core.ActionSetStructuralFeatureTargetScope.getInstance()|\n|org.argouml.ui.StylePanelFig.getFillField()|\n|org.argouml.model.mdr.KindsMDRImpl.getGuarded()|\n|org.argouml.model.euml.MetaTypesEUMLImpl.getLiteralString()|\n|org.argouml.model.AbstractExtensionMechanismsHelperDecorator.setTaggedValue(Object_Object_Object)|\n|org.argouml.profile.TestCoreProfileReference.testCtorFailsWhenFileNameIsEmpty()|\n|org.argouml.uml.diagram.state.ui.UMLStateDiagram.getActionJoinPseudoState()|\n|org.argouml.core.propertypanels.ui.UMLMessageActivatorComboBoxModel.isValidElement(Object)|\n|org.argouml.uml.PredicateNotInTrash.evaluate(Object)|\n|org.argouml.ui.ExceptionDialog.disposeDialog()|\n|org.argouml.model.euml.FacadeEUMLImpl.isRealize(Object)|\n|org.argouml.notation.providers.java.TestModelElementNameNotationJava.testToStringForGeneralization()|\n|org.argouml.cognitive.ToDoList.notifyObservers()|\n|org.argouml.core.propertypanels.ui.UMLStubStateComboBoxModel.isValidElement(Object)|\n|org.argouml.cognitive.ui.ToDoByDecision.toDoItemsChanged(ToDoListEvent)|\n|org.argouml.uml.ui.UMLTextField2.getTargettableModel()|\n|org.argouml.sequence2.diagram.FigClassifierRole.positionHead(FigMessage)|\n|org.argouml.uml.diagram.state.ui.FigFinalState.clone()|\n|org.argouml.model.euml.FacadeEUMLImpl.getDeployedComponents(Object)|\n|org.argouml.core.propertypanels.ui.UMLMessageActivatorComboBoxModel.buildModelList()|\n|org.argouml.ui.targetmanager.TargetEvent.getAddedTargets()|\n|org.argouml.model.mdr.StateMachinesHelperMDRImpl.equal(Expression_Expression)|\n|org.argouml.model.mdr.ActivityGraphsHelperMDRImpl.isAddingActivityGraphAllowed(Object)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table509"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Municipality|\n|---|\n|Town of MONTROSE|\n|Town of ROLLING|\n|Village of WHEELER|\n|Town of BUTLER|\n|Town of RED SPRINGS|\n|Town of KILDARE|\n|Village of ONTARIO|\n|Town of SIREN|\n|Village of ROCKDALE|\n|City of JUNEAU|\n|Town of TRIMBELLE|\n|Town of DOVRE|\n|Town of DOVER|\n|Town of ARBOR VITAE|\n|Town of BELVIDERE|\n|Village of BLOOMINGTON|\n|Town of LITTLE RICE|\n|Town of EAU GALLE|\n|Town of STETTIN|\n|Town of SAXON|\n|Village of NORTH FREEDOM|\n|Town of WAUSAU|\n|Town of GLEN HAVEN|\n|Village of BELL CENTER|\n|Town of REID|\n|Town of BIG BEND|\n|City of REEDSBURG|\n|Town of MARTELL|\n|City of MARINETTE|\n|Town of YORKVILLE|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Town of DOVRE', 'Town of DOVER']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table51"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name|\n|---|\n|Advertising Services|\n|Advanced Healthcare Administrative Services (Capstone)|\n|Environmental Law and Policy|\n|Intermediate Consumer Services (Concentrator)|\n|Introduction Mental & Behavioral Health Careers|\n|Intermediate Games and Simulation (Concentrator)|\n|Intermediate Emergency Response (Concentration)|\n|Medical Terminology|\n|Heating Ventilation Air Conditioning (HVAC) systems|\n|Exam Option|\n|IB History\/Social Science|\n|Intermediate Operations (Concentrator)|\n|Advanced Arts Management|\n|Astronomy|\n|3D Media Design 1|\n|Accounting|\n|Free period or No Educational Content|\n|Landscape Design|\n|Hospitality tourism and recreation|\n|Intermediate Animation (Concentrator)|\n|Advanced\/Specialized Product Design and Innovation|\n|TransDropAdult|\n|Welding Technologies and Fabrication|\n|Law Enforcement Services|\n|International Finance|\n|Consumer personal and financial services|\n|Marriage and family relations|\n|Criminal law|\n|Bullying|\n|Advanced Games and Simulation (Capstone)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table510"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|CODICE INSEGNAMENTO|\n|---|\n|LIN0189|\n|LIN0279|\n|LIN0117|\n|LIN0287|\n|LIN0274|\n|LIN0209|\n|LIN0405|\n|LIN0194|\n|LIN0276|\n|LIN0069|\n|LIN0269|\n|LIN0046|\n|LIN0366|\n|LIN0155|\n|LIN0080|\n|LIN0249|\n|LIN0202|\n|LIN0314|\n|LIN0022|\n|LIN0212|\n|LIN0019|\n|LIN0057|\n|LIN0322|\n|LIN0146|\n|LIN0280|\n|LIN0404|\n|LIN0003|\n|LIN0126|\n|LIN0241|\n|LIN0049|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table511"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Mailing Address|\n|---|\n|1125 BROOKSIDE PARKWAY STE 204|\n|8425 WOODFILED CROSSING BLVD SUITE 100|\n|6464 RUCKER ROAD|\n|2102 S. HARDING ST.|\n|6725 TRAMCUS DRIVE|\n|10645 DEME DR SUITE B|\n|1644 W. EDGEWOOD AVE SUITE C|\n|8209 CRACKLING LANE|\n|162 WEST CARMEL DRIVE|\n|6122 REDCOACH CT.|\n|1550 S. FRANKLIN ROAD|\n|P O BOX 21224|\n|6128 EAGLES NEST BLVD|\n|1503 E. 80TH STREET|\n|6810 N. GUION RD|\n|1610 WALPOLE WAY|\n|450 S. RITTER AVENUE SUITE 1A.|\n|691 INDUSTRIAL BLVD.|\n|2713 BRAXTON DRIVE|\n|3646 N. WASHINGTON BLVD|\n|1726 W 15TH STREET|\n|419 RANSDELL ROAD|\n|5335 N. TACOMA AVE SUITE 5|\n|2410 GRAPE RD SUITE 5|\n|5422 NIGHTHAWK WAY|\n|2122 DR. MARTIN LUTHER KING JR. STREET STE C|\n|5085 E. SR 32|\n|6529 STONEPOINT WAY|\n|3726 LIMBERPINE DR|\n|P O BOX 441866|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table512"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|SecurityDescription|\n|---|\n|ORD GBP0.04|\n|2017 ZERO DIV PREF NPV|\n|USD0.59446|\n|UK EQUITY SHS GBP0.01|\n|ORD GBP0.135416|\n|ORD GBP0.008|\n|SUBSCRIPTION SHS ORD GBP0.01|\n|ORD GBP0.0005|\n|CNV PFD ORD GBP1|\n|ORD GBP0.38461538|\n|ORD GBP0.05 A|\n|ORD RED NPV USD|\n|5.5% CUM PRF GBP1|\n|'B' ORD GBP0.001|\n|6.15% PERM INT BEARING SHS GBP1000|\n|RED PART PREF SHS GBP NPV|\n|ZERO DIV PREF GBP1|\n|ORD GBP 0.001|\n|ORD GBP1|\n|ORD GBP0.07375|\n|ORD EUR0.025|\n|CLASS'A'SHS GBP0.001|\n|ORD GBP0.2857|\n|7.625% ENH CAP NTS 09\/12\/19 GBP(VAR)|\n|ORD USD0.00004|\n|ORD GBP0.01 REG'S'|\n|ORD GBP0.0030|\n|8.50% PERM INT BEARING SHS|\n|6.5864%\/FR PERP RESET CAP SECS GBP50000|\n|8 7\/8% CUM IRRD PRF GBP1|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table513"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|\u53ef\u4fee\u8ab2\u5e74\u7d1a|\n|---|\n|1~1|\n|1~6|\n|4~4|\n|2~2|\n|4~6|\n|0~0|\n|3~4|\n|3~3|\n|3~6|\n|2~6|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table514"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Menu2|\n|---|\n|RF Touch|\n|RF Detektory|\n|5.1 Servery|\n|5.4 Touch panely|\n|Regulace teploty|\n|NarrowBand|\n|LED Trubice|\n|RF Sety|\n|RF_St|\n|1. TERMOSTATY|\n|JAZZ-light Sound System|\n|SIGFOX|\n|Sety|\n|5.1 Lara|\n|2.3 iNELS HRESK|\n|LED Downlight|\n|NB-IoT|\n|Kryty|\n|LED Panely|\n|LORA|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table515"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Navn|\n|---|\n|Solvang Bibliotek|\n|Vejle Bibliotek|\n|Gram Bibliotek|\n|Mariager Bibliotek|\n|Biblioteket i Herning|\n|Skive Bibliotek|\n|Juelsminde Bibliotek|\n|Taulov Bibliotek|\n|Gedved Bibliotek|\n|Vejgaard Bibliotek|\n|Gentoftegade Bibliotek|\n|Fredensborg Bibliotek|\n|Hinnerup Bibliotek|\n|Vojens Bibliotek|\n|Bogbussen|\n|Aabenraa Bibliotek|\n|Biblioteket KU.BE|\n|Horsens Bibliotek|\n|Svendborg Bibliotek|\n|Bibliotek og Medborgercenter Hedemarken|\n|Ejby Bibliotek|\n|Nyborg Bibliotek|\n|Sorringhus|\n|Biblioteksbussen|\n|Sundby Bibliotek|\n|Christiansfeld Bibliotek|\n|Slagelse Bibliotek|\n|Frederiks Bibliotek|\n|Bolbro Bibliotek|\n|Fensmark Bibliotek|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table516"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Module|\n|---|\n|Publication|\n|PerformancePoint|\n|Service Word|\n|Service Excel|\n|Recherche SP|\n|Service Access|\n|Service PowerPoint|\n|Service Visio|\n|Portail|\n|Taxonomy|\n|Extensions clients|\n|SSO|\n|OWA|\n|Recherche Office|\n|InfoPath|\n|Analyse Web|\n|Topology|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table517"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Laitos|\n|---|\n|Kurikan Osuuspankki|\n|Lapuan Osuuspankki|\n|Osuuspankki Poppia|\n|Keiteleen Osuuspankki|\n|Pohjanmaan Osuuspankki|\n|Lammin Osuuspankki|\n|Tuusniemen Osuuspankki|\n|Aktia Pankki Oyj|\n|Honkajoen Osuuspankki|\n|Keuruun Osuuspankki|\n|Nordea Kiinnitysluottopankki Oyj|\n|Tiistenjoen Osuuspankki|\n|Hannulan Osuuspankki|\n|Joroisten Osuuspankki|\n|S-Pankki Oy|\n|POP Pankkiliitto osk|\n|Suupohjan Osuuspankki|\n|Laihian Osuuspankki|\n|Liedon Osuuspankki|\n|Sievin Osuuspankki|\n|OP-Pohjola osk|\n|Kristinestads Sparbank|\n|Kosken Osuuspankki|\n|Lavian Osuuspankki|\n|Evli Pankki Oyj|\n|Yttermark Sparbank|\n|Danske Bank Oyj|\n|Isojoen Osuuspankki|\n|Suomen Hypoteekkiyhdistys|\n|Konneveden Osuuspankki|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table518"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|School|\n|---|\n|Salter|\n|THS|\n|Houston|\n|Ellis|\n|Henderson|\n|Graham|\n|R.L. Young|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table519"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|First Name|\n|---|\n|adam|\n|Joanna|\n|Deanna|\n|russ|\n|steven|\n|Minh|\n|dustty|\n|greg|\n|Scott|\n|Ebony|\n|Dusty|\n|Michael|\n|Jim|\n|jacquelyn|\n|Jeremiah|\n|Curtis|\n|levi|\n|april|\n|heather|\n|Prosper|\n|adrienne|\n|Leonard|\n|Tiffany|\n|Dwayne|\n|Johanna|\n|Nate|\n|Tiago|\n|Charlie|\n|Tammy|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Dusty', 'dustty']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table52"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|ccgname|\n|---|\n|NHS Knowsley CCG|\n|NHS North Manchester CCG|\n|NHS Southport and Formby CCG|\n|NHS Blackburn with Darwen CCG|\n|NHS Wirral CCG|\n|NHS Stockport CCG|\n|NHS East Lancashire CCG|\n|NHS Halton CCG|\n|NHS Central Manchester CCG|\n|NHS West Cheshire CCG|\n|NHS Chorley and South Ribble CCG|\n|NHS Greater Preston CCG|\n|NHS South Sefton CCG|\n|NHS Tameside and Glossop CCG|\n|NHS Warrington CCG|\n|NHS Wigan Borough CCG|\n|NHS Cumbria CCG|\n|NHS South Manchester CCG|\n|NHS Bury CCG|\n|NHS Lancashire North CCG|\n|NHS Eastern Cheshire CCG|\n|NHS South Cheshire CCG|\n|NHS Blackpool CCG|\n|NHS West Lancashire CCG|\n|NHS St Helens CCG|\n|NHS Liverpool CCG|\n|NHS Bolton CCG|\n|NHS Trafford CCG|\n|NHS Salford CCG|\n|NHS Fylde and Wyre CCG|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table520"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Date Acquired|\n|---|\n|2016-03-05|\n|2016-11-27|\n|2016-02-10|\n|2016-02-01|\n|2016-12-01|\n|2015-10-05|\n|2016-08-03|\n|2015-12-07|\n|2016-03-11|\n|2015-12-27|\n|2016-07-21|\n|2015-11-29|\n|2015-08-31|\n|2016-08-12|\n|2016-01-09|\n|2015-10-21|\n|2016-08-30|\n|2016-08-05|\n|2016-01-01|\n|2016-01-02|\n|2016-09-17|\n|2016-09-04|\n|2016-12-04|\n|2016-08-29|\n|2016-03-19|\n|2016-08-09|\n|2015-11-17|\n|2016-11-26|\n|2016-10-12|\n|2016-09-19|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table521"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|GUID|\n|---|\n|{9fed1c1b-2836-46d1-995c-b0a300e677d1}|\n|{44112c31-282b-43a3-ac7a-0d65c34b331b}|\n|{bcc3ebf8-d11c-4356-8807-984654a0cdf4}|\n|{3240708c-bd3c-4c9f-adb6-69e245b67405}|\n|{30547e2c-7d18-43b4-b63a-793bb055d5d1}|\n|{2add58e5-863b-4bb2-aed4-bfe76411c637}|\n|{ed3997fc-fff0-4371-b9c5-bad86552a612}|\n|{d17a8f07-6201-44b5-b0d1-a7dd95bcf535}|\n|{134d218e-804e-4f7c-9e07-fd6cf2d755eb}|\n|{e761a8b8-0901-48d4-bdd7-0074e4e75fe4}|\n|{07c6d68d-a0a3-4da9-9fc4-c8aeda04b422}|\n|{717798e7-83ba-4d9f-b32c-7dd144e83bfa}|\n|{6b0d5f55-3d8a-44c1-b277-756c5a145eb1}|\n|{00633d0f-ba6f-401e-a862-0ca2abe55bdf}|\n|{270d722a-2a70-4554-9522-8b8659569fd8}|\n|{9d7f03c6-3a21-4483-a56a-6a94cf80b45f}|\n|{db009016-338f-11dd-bd11-0800200c9a66}|\n|{ca1b6715-c9b1-453e-92f2-b2391d3da689}|\n|{140fe710-7248-419c-9f13-741ea9b3fae8}|\n|{7541e78d-2302-4568-98cd-f4f2102e0365}|\n|{ef66857a-0d41-4bd1-90ba-80014f760b93}|\n|{5578ab3e-1413-44ac-95d1-8a90e58b1988}|\n|{508c9a84-1019-4cc2-a5e8-c96f83c3a52e}|\n|{41cae74e-f855-439d-a2b1-9ac19492f01a}|\n|{1c229678-c23c-4489-a8c4-e196eecf6a95}|\n|{51e7b01d-7ce4-41b5-a31b-975615a4310f}|\n|{c6e42c3d-d8bf-4805-954d-6fdf0c45e49a}|\n|{b456aef6-28d0-40b0-b745-31cf6acea4ae}|\n|{40444fba-fee4-4c9f-8fb7-ef055df7f212}|\n|{ee877361-2e59-42b5-bfce-1afd116478be}|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table522"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|OMBACCT|\n|---|\n|021-04-5423   Essential Air Service and Rural Airport Improvement Fund|\n|029-40-0151   General Operating Expenses Veterans Benefits Administration|\n|015-13-5737   Internal Revenue Collections for Puerto Rico|\n|021-70-1710   Ready Reserve Force|\n|021-12-5422   Aviation User Fees|\n|029-25-4112   Vocational Rehabilitation Direct Loan Financing Account|\n|021-15-0534   Payment to the Transportation Trust Fund|\n|021-27-0719   Capital Assistance for High Speed Rail Corridors and Intercity Passenger Rail Service|\n|015-60-0557   Interest Paid to Federal Fund Receipt Accounts - Shadow Account|\n|015-45-0906   Payment Where Earned Income Credit Exceeds Liability for Tax|\n|015-05-0132   Troubled Asset Relief Program Account|\n|021-18-0660   National Driver Register Modernization|\n|021-36-1127   Interstate Transfer Grants-transit|\n|021-27-0704   Grants to the National Railroad Passenger Corporation|\n|015-12-8620   Cheyenne River Sioux Tribal Recovery Trust Fund|\n|029-15-0152   Medical Support and Compliance|\n|015-05-1881   Community Development Financial Institutions Fund Program Account|\n|021-04-0111   Compensation for Air Carriers|\n|015-05-5590   Financial Research Fund|\n|021-27-0120   Efficiency Incentive Grants to the National Railroad Passenger Corporation|\n|029-40-0142   General Administration|\n|021-50-5172   Pipeline Safety|\n|021-36-1129   Formula Grants|\n|021-15-0504   Highway Infrastructure Investment Recovery Act|\n|021-18-8016   Operations and Research (Transportation Trust Fund)|\n|015-05-4277   Troubled Asset Relief Program Direct Loan Financing Account|\n|021-70-1752   Maritime Guaranteed Loan (title XI) Program Account|\n|015-05-4501   Working Capital Fund|\n|029-25-8455   Veterans Special Life Insurance Fund|\n|015-05-4298   State HFA Direct Loan Financing Account|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table523"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Operating Cxr|\n|---|\n|WS|\n|VX|\n|B6|\n|PD|\n|AS|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table524"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|AEROL\u00cdNEA RAZ\u00d3N SOCIAL|\n|---|\n|LANPERU|\n|TACA|\n|AVIANCA|\n|PERUVIAN|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table525"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|CLAVE DE PAGO|\n|---|\n|I0024161103 M02055200040040|\n|I0024161103M02082100040028|\n|I0024161103 M02030300040241|\n|416004I0021103M03005000172302|\n|I0024161103 M02073300040069|\n|I0024161103M02058230040004|\n|I0024161103M02031100040103|\n|41600004I2171103M0300400055|\n|I0024161103M02097100040003|\n|416004I0021103 M03012000052302|\n|I0024161103 M02040110040052|\n|I0024161103 M02082020040122|\n|DJ011481103 M02083000300061|\n|41613004I0021103 M0302300004|\n|I0024161103 M021072100423020033|\n|I0024161103 M020402100423010043|\n|I0024161103 M02040120040019|\n|I0024161103 M02040020040036|\n|41613004I0021103 M0203400008|\n|I0024161103 M021052100423010289|\n|41613004I0021103 M0302300171|\n|I0024161103M03021100040043|\n|I0024161103M02001100040016|\n|4160042R091103 M0302200144|\n|I0024161103 M030182100423040003|\n|416004I0021103 M0206800106230102301|\n|I0024161103 M020812100423010032|\n|I0024161103 M020472100423010015|\n|I0024161103 M03022020040087|\n|I0024161103M02035100040101|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table526"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|UNIDAD|\n|---|\n|S26|\n|S29|\n|S28|\n|S16|\n|S09|\n|S20|\n|S04|\n|S23|\n|S10|\n|S17|\n|S11|\n|S06|\n|S01|\n|S21|\n|S13|\n|S25|\n|S30|\n|S15|\n|S12|\n|S02|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table527"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Circuit or Region|\n|---|\n|03 Circuit|\n|05 Circuit|\n|10 Circuit|\n|20 Circuit|\n|17 Circuit|\n|11 Circuit|\n|Statewide|\n|18 Circuit|\n|19 Circuit|\n|15 Circuit|\n|16 Circuit|\n|01 Circuit|\n|South Region|\n|Central Region|\n|09 OS Circuit|\n|12 Circuit|\n|Northeast Region|\n|07 Circuit|\n|06 Circuit|\n|13 Circuit|\n|02 Circuit|\n|Northwest Region|\n|09 OC Circuit|\n|08 Circuit|\n|14 Circuit|\n|04 Circuit|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table528"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Course Name|\n|---|\n|SiPass Extended Operations|\n|Insight Refresher - Session 2|\n|Insight Workstation II with BACnet|\n|Desigo CC Master Operator MP 3.0|\n|Desigo CC Reports MP 3.0 - Session 2|\n|Insight Refresher - Session 1|\n|Fume Hood and Laboratory Room Controls|\n|Desigo CC Workstation I|\n|Desigo CC Reports MP 3.0 - Session 3|\n|Desigo CC Reports MP 3.0 - Session 1|\n|Insight to Desigo CC Migration|\n|Insight Refresher - Session 3|\n|PPCL Master Programmer|\n|Insight Workstation I|\n|BACnet Field Panel Web Server|\n|Desigo CC Workstation II MP 3.0|\n|Field Panel and FLN Operations|\n|KNX Advanced Certification (GAMMA Lighting)|\n|PPCL Programming II|\n|SiPass Access Control|\n|InfoCenter Suite|\n|Insight Workstation II|\n|Insight Master Operator|\n|PPCL Programming I|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table529"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Parentage|\n|---|\n|Mall Hussain|\n|Noor Mohammad Ahanger|\n|Ghulam Mohd Lone|\n|Kala|\n|Fatah Mohd Magray|\n|Ab Ahad Sheikh|\n|Amandeep Singh|\n|Mohd Yousf Khan|\n|Ab Rahman Mir|\n|Abdul Rashid Sheikh|\n|Mushtaq Ahmad Khanday|\n|Gh. Mohammad Ahanger Zoona|\n|Nissar Hussain|\n|Gh Mohd Mir|\n|bashir ahmad shiekh|\n|Ab. Rashid Mir|\n|Mohammad Akbar Rather|\n|Tejinder Singh|\n|Bashir Ahmad Nanda|\n|S\/O Sh Yuhana Masih|\n|Mushtaq Ahmad Din|\n|Ab Aziz Dar|\n|Mohammad Akbar Dar|\n|Wazir Ali|\n|Gh. Mohd Mir|\n|Ab Rahman Ganaie|\n|Manzoor Ahmad Dar|\n|Manzoor Ahmad Ganie|\n|Mohd Sadiq w\/o Mohd Zaffar|\n|bashir ahmad sheikh|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['bashir ahmad sheikh', 'bashir ahmad shiekh']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table53"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|SUPPACCOUNT|\n|---|\n|VINE02|\n|SAND01|\n|SPSE01|\n|BANN01|\n|EPBA01|\n|MERS01|\n|AERO02|\n|R3SA01|\n|LASE02|\n|BRIS06|\n|DOD01|\n|MARC03|\n|NEWB02|\n|FIRS10|\n|CARD01|\n|PREC01|\n|WAGN01|\n|SOUT09|\n|ARVO01|\n|AJMG01|\n|BART02|\n|ORON01|\n|ASPE02|\n|BALM02|\n|UNIV16|\n|RRCL01|\n|COMM01|\n|FIRE023|\n|BREN06|\n|KENS01|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table530"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|TITLE|\n|---|\n|BALM & DAVIES LTD|\n|ACCESS INTELLIGENCE MEDIA AND COMMUNICATIONS LTD|\n|C S ELECTRICAL ESSEX LTD|\n|EMSTAR LLP|\n|AUTO ITEMS LTD|\n|GARDHAMS PROPERTY SERVICES|\n|E M RICHFORD LTD|\n|CRONER GROUP LIMITED|\n|SUFFOLK COUNTY COUNCIL|\n|CONCERTO SUPPORT SERVICES LTD|\n|EAST ANGLIA RESERVE FORCES & CADET ASSOCIATION|\n|FIRST PRODUCTS LIMITED|\n|SOUTH EAST ESSEX COLLEGE|\n|ENFIELD SAFETY SUPPLIES|\n|KENSON NETWORK ENGINEERING LTD|\n|CHEVIOT RECRUITMENT LIMITED|\n|WRITTLE COLLEGE|\n|CHERWELL SOFTWARE LIMITED|\n|FAST KEY SERVICES LTD|\n|BODDINGTONS ELECTRICAL LTD|\n|THE JSL GROUP LTD|\n|MAXAURA LTD|\n|FIRE HOSETECH LTD|\n|VIMPEX LTD|\n|JERSEY JOE'S|\n|EAST OF ENGLAND LOCAL GOVERNMENT ASSOCIATION|\n|WILDY & SONS LTD|\n|FIREMAIN ENGINEERING LIMITED|\n|PINNACLE ESSEX|\n|EMERGENCY PLANNING COLLEGE|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table531"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|DESCRIPTION|\n|---|\n|Metal Powders|\n|Batteries & Accumulators|\n|Bottle Cap Manufacturers|\n|Leather Goods|\n|Fertilizers\/Agricultural Inputs|\n|Poultry Products|\n|Books Magazines & Periodicals|\n|Machinery & Equipment - Printing|\n|Machinery & Equipment - Packing|\n|Paint Supplies|\n|Paper Products|\n|Audio Hi-Fi & Speaker Systems|\n|Power Transmission Equipment|\n|Rubber & Rubber Products|\n|Dry Fruits|\n|Pumps|\n|Apparel & Clothing - Accessories|\n|Fiberglass & Fiberglass Products|\n|Ball & Roller Bearings|\n|Fans - Domestic & Industrial|\n|Furnishings|\n|Tools - Cutting|\n|Apparel & Clothing - General|\n|Measuring & Testing Equipment|\n|Compressors|\n|Chemical Industry Machinery Eqpt & Parts|\n|Wire & Wire Products|\n|Machine Tools & Accessories|\n|Utensils|\n|Adhesives Glues & Sealants|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table532"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|O\u015b - kod|\n|---|\n|POIR.03.00.00|\n|RPLU.04.00.00|\n|RPMP.03.00.00|\n|RPSW.10.00.00|\n|RPLU.07.00.00|\n|POPW.01.00.00|\n|POIS.09.00.00|\n|RPPD.05.00.00|\n|RPSL.05.00.00|\n|RPLD.06.00.00|\n|RPLU.06.00.00|\n|POIR.05.00.00|\n|RPMA.09.00.00|\n|RPDS.01.00.00|\n|RPWM.03.00.00|\n|RPLU.08.00.00|\n|RPLD.07.00.00|\n|RPMA.10.00.00|\n|RPPK.06.00.00|\n|RPPD.09.00.00|\n|RPDS.08.00.00|\n|RPMA.01.00.00|\n|RPWM.07.00.00|\n|RPLU.13.00.00|\n|RPLU.03.00.00|\n|RPLD.08.00.00|\n|RPKP.12.00.00|\n|RPKP.11.00.00|\n|RPDS.04.00.00|\n|POIS.10.00.00|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table533"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name|\n|---|\n|Fareway Stores #386 619 Burnett Ames|\n|Hy-Vee #3 BDI 3221 SE 14th Des Moines|\n|MAD Ave Quick Shop|\n|Hy-Vee 2126 Kimball Waterloo|\n|Hy-Vee Cedar Falls|\n|Johns Grocery|\n|Benz Distributing|\n|Hy-Vee #3 1823 E Kimberly Davenport|\n|Hy-Vee Centerville|\n|Hy-Vee #1 2323 W Broadway Council Bluffs|\n|Hy-Vee #1 3800 W Lincoln Ames|\n|Hy-Vee #6 420 Court Des Moines|\n|Hy-Vee Mount Pleasant|\n|Hy-Vee #2 551 S Illinois Mason City|\n|Hy-Vee Drugstore 1140 N Jefferson Ottumwa|\n|Shade Tree Liquors|\n|Hy-Vee #2 1745 Madison Council Bluffs|\n|Hy-Vee 410 N Ankeny Ankeny|\n|Keystone Liquor and Wine|\n|Fareway Stores #124 Adel|\n|Cyclone Liquors|\n|Charlies Wine and Spirits|\n|Hy-Vee Corydon|\n|Wines and Spirits|\n|Liberty View Wine and Spirits|\n|The Filling Station|\n|Fareway Store #138 Pleasant Hill|\n|Cork It!|\n|Johncys Liquor Store|\n|Hy-Vee Waukee|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table534"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Age Group|\n|---|\n|55-64|\n|30-34|\n|16-18|\n|65 & Above|\n|19-24|\n|25-29|\n|35-54|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table535"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Weekday|\n|---|\n|Tuesday|\n|Friday|\n|Monday|\n|Thursday|\n|Saturday|\n|Wednesday|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table536"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Nombre de la Regi\u00f3n|\n|---|\n|Los Lagos|\n|Metropolitana de Santiago|\n|Arica y Parinacota|\n|Coquimbo|\n|Antofagasta|\n|Maule|\n|Libertador Gral. Bernardo O' Higgins|\n|Atacama|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table537"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|DC Real Property  Unique ID|\n|---|\n|5725-0803|\n|0099-0052|\n|0165-0813|\n|0171-0033|\n|0455-3075|\n|0377-3099|\n|2906-7000|\n|0406-0026|\n|0100-0897|\n|0031-0835|\n|0236-2676|\n|0546-0819|\n|0220-0067|\n|0197-0840|\n|1815-1071|\n|PAR01410069|\n|0103-0001|\n|0166-0038|\n|2624-0832|\n|2622-1234|\n|0206-0828|\n|0419-0847|\n|5875-0038|\n|1499-0806|\n|3664-0823|\n|0197-0854|\n|0157-2151|\n|0515-2875|\n|2208-0810|\n|0159-0860|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table538"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Graduate Degree Minimum Score Requirement|\n|---|\n|6.5|\n|5|\n|6.0 or 6.5|\n|4|\n|6.0-7.0|\n|4.5|\n|5.0 - 6.0|\n|7|\n|6|\n|7.5|\n|6.0-6.5|\n|6.0 - 8.0|\n|6.5 - 7.0|\n|8|\n|0|\n|-|\n|5.5|\n|Contact School for Score|\n|5.5-7.0|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table539"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Nom Pr\u00e9nom(s) d'exercice|\n|---|\n|GUILLEMAUD Maelle|\n|GASNE Marie|\n|MANIN Chloe|\n|CARRY Didier|\n|BESSIAS EMERY Julia|\n|WALLE Melanie|\n|CHARBONNEL Audrey|\n|VRAY Elise|\n|CHARVET Dominique|\n|bourgeois christine|\n|BORNKESSEL Anne Sarah|\n|NEYRET Celine|\n|DESBENOIT Marie-Odile|\n|DIMECH Christine|\n|HUGOT Angelique|\n|DUBOIS Jean Noel|\n|MOLLARD Elodie|\n|GROSSET BOURBANGE Sylvie|\n|DUBLOC Jean-Michel|\n|MANOHA Sarah|\n|bourgeiois christine|\n|ROZIER Mathilde|\n|BESQUEUT Julia|\n|BIONDUCCI Manon|\n|GUILLAUD REGIS Elisabeth|\n|JULIEN Philippe|\n|ESCANDE Claire|\n|MALHIERE Margot|\n|DUBUIS Sandrine|\n|GEORGEL Christelle|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['bourgeiois christine', 'bourgeois christine']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table54"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Age|\n|---|\n|30-39|\n|40-49|\n|>70|\n|<20|\n|60-70|\n|50-59|\n|20-29|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table540"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|BUREAU|\n|---|\n|Alcohol and Tobacco Tax and Trade Bureau|\n|Pipeline and Hazardous Materials Safety Administration|\n|Federal Aviation Administration|\n|Office of Thrift Supervision|\n|Federal Highway Administration|\n|Saint Lawrence Seaway Development Corporation|\n|Interest on the Public Debt|\n|Surface Transportation Board|\n|Comptroller of the Currency|\n|Federal Railroad Administration|\n|National Highway Traffic Safety Administration|\n|Fiscal Service|\n|Departmental Offices|\n|United States Mint|\n|Federal Transit Administration|\n|Internal Revenue Service|\n|Maritime Administration|\n|Bureau of Engraving and Printing|\n|Office of the Secretary|\n|Departmental Administration|\n|Federal Motor Carrier Safety Administration|\n|Office of Inspector General|\n|Benefits Programs|\n|Financial Crimes Enforcement Network|\n|Federal Financing Bank|\n|Veterans Health Administration|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table541"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Organization|\n|---|\n|Basic Energy Sciences (BES)|\n|Fusion Energy Sciences (FES)|\n|Biological & Environmental Research (BER)|\n|Advanced Scientific Computing Research (ASCR)|\n|High Energy Physics (HEP)|\n|Nuclear Physics (NP)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table542"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|ARS|\n|---|\n|ARS ALENTEJO|\n|ARS LVT|\n|ARS CENTRO|\n|ARS ALGARVE|\n|ARS NORTE|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table543"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|State|\n|---|\n|Indiana|\n|North Carolina|\n|South Carolina|\n|California|\n|Connecticut|\n|Illinois|\n|Mississippi|\n|Delaware|\n|Vermont|\n|Ohio|\n|Florida|\n|New Jersey|\n|New Mexico|\n|Idaho|\n|Maryland|\n|Wisconsin|\n|Maine|\n|Iowa|\n|Alabama|\n|Nevada|\n|Oregon|\n|Louisiana|\n|South Dakota|\n|Utah|\n|Pennsylvania|\n|Montana|\n|Arizona|\n|New York|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table544"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Line speed|\n|---|\n|40 mph (up) 25 mph (down)|\n|70 mph (up) 90 mph (down)|\n|50 mph (up) 30 mph (down)|\n|125 mph|\n|10 mph (up) 20 mph (down)|\n|60 mph (up) 40 mph (down)|\n|75 mph (up) 65 mph (down)|\n|115 mph|\n|70 mph (up) 65 mph (down)|\n|15 mph|\n|100 mph (up) 95 mph (down)|\n|50 mph (up) 85 mph (down)|\n|60 mph (up) 35 mph (down)|\n|70 mph (up) 50 mph (down)|\n|35 mph (up) 65 mph (down)|\n|40 mph (up) 55 mph (down)|\n|10 mph|\n|65 mph (up) 70 mph (down)|\n|80 mph (up) 55 mph (down)|\n|40 mph (up) 85 mph (down)|\n|72 mph|\n|20 mph (up) 50 mph (down)|\n|100 mph (up) 110 mph (down)|\n|25 mph|\n|90 mph (up) 60 mph (down)|\n|75 mph (up) 45 mph (down)|\n|80 mph (up) 70 mph (down)|\n|15 mph (up) 55 mph (down)|\n|60 mph (up) 20 mph (down)|\n|75 mph (up) 55 mph (down)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table545"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|ELR-Miles.Yards|\n|---|\n|HGL2-082.0683|\n|WEB0-082.0024|\n|SCM5-006.0048|\n|ATH0-059.1537|\n|SPD1-045.0418|\n|ANI2-027.0644|\n|HBS0-010.0306|\n|OXW0-009.1453|\n|OWW0-081.0147|\n|MLN3-274.0065|\n|NOB3-023.0704|\n|WCK0-001.1029|\n|ANI3-137.0374|\n|WCK0-114.1617|\n|MLN1-196.0372|\n|MBW3-024.1412|\n|BGL2-105.0014|\n|HTG0-034.0910|\n|SDI2-007.0857|\n|PMJ0-014.0447|\n|TSO0-001.1277|\n|WCK0-091.0224|\n|WCK0-092.0871|\n|CWL2-035.1092|\n|CBC1-031.0978|\n|DJP0-108.1407|\n|WCK0-015.1181|\n|WEB0-088.1297|\n|BHL0-068.0096|\n|LEN3-067.0623|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table546"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Technology|\n|---|\n|Photovoltaic|\n|Fuel Cell - Renewable Fuel|\n|Wind|\n|Digester Gas|\n|Water Supply or Conveyance|\n|Small Hydroelectric|\n|Existing Large Incremental Hydroelectric|\n|Ocean Wave|\n|Biogas|\n|Conduit Hydroelectric|\n|Biodiesel|\n|Small Hydroelectric with Efficiency|\n|Biomass|\n|Fuel Cell - Biomethane|\n|MSW - Conversion|\n|Fuel Cell - Hydrogen Produced Renewably|\n|Biomethane|\n|Geothermal|\n|Natural Gas|\n|Landfill Gas|\n|Solar Thermal Electric|\n|MSW - Combustion|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table547"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Autor|\n|---|\n|Sascha Hanf|\n|Jutta Stehling|\n|Klasse 4a|\n|Kanzlei Webers|\n|Volksbank|\n|Ina Kohbus|\n|JS|\n|RA Sarah Klein Kanzlei Terlinden & Lohrengel|\n|Ralf Hellinger|\n|MB|\n|Natascha Wilhelmstroop-Wicht|\n|Jonas Winkler|\n|Peter Unger|\n|Lennart Krause|\n|Dr. Detlef Kuhlmann|\n|Darius Respondek|\n|Stapenhorstschule|\n|RA Sven Terlinden Jens Lohrengel|\n|Holger & Elke Kuntz|\n|Robin Apel|\n|Kronenklauer|\n|AS \/ RW|\n|Erica Natale|\n|Gabriele Richter|\n|Sven Terlinden|\n|Marktbesucher|\n|Rosine Meyer|\n|Katrin Braje|\n|Lorbeer-Apotheke|\n|Fred Gehring|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table548"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Tipo de muestra recolectada|\n|---|\n|HECES|\n|SUERO|\n|NO APLICA|\n|HUEVO|\n|HISOPADO|\n|ORGANOS|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table549"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Escola Bairro|\n|---|\n|PORTO|\n|SAO LUCAS|\n|novo Horizonte|\n|MODULO 6|\n|Querencia|\n|santo anotonio|\n|Bocaiuval|\n|Aldeia|\n|NOVA CANARANA|\n|Modulo 05|\n|vila cruzeiro|\n|Simione|\n|JARDIM SANTIAGO|\n|Setor G|\n|COHAB \"Vale do Jurigue I\"|\n|Grande Terceiro|\n|JARDIM PAULISTA|\n|DISTRITO DE DECIOLANDIA|\n|terra indigena cinta larga|\n|rural|\n|Cidade Bela|\n|ALDEIA KOPENOTY|\n|santo antonio|\n|CENTRO - DISTRITO DE FAVAL|\n|Jd. Piracema|\n|ALTO DA BOA VISTA|\n|ALDEIA PAKUERA|\n|SETOR SUL|\n|Distrito Ouro Branco|\n|NOVO DIAMANTINO LOTE JARDIM ALVORADA|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['santo antonio', 'santo anotonio']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table55"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Type of Cargo|\n|---|\n|Sand \/ Earth|\n|Other|\n|Livestock|\n|Furniture|\n|Sail \/ Tarpaulin|\n|Perishables|\n|Empty|\n|Drinks \/ Beverages|\n|Bags \/ Sacks|\n|Agricultural Products|\n|Coal|\n|People|\n|Vehicles|\n|Fuels|\n|Wood \/ Timber \/ Lumber|\n|Cement|\n|Chemicals|\n|Iron \/ Steel \/ Metals|\n|Refuse|\n|Container|\n|Machinery|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table550"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|glcategory|\n|---|\n|Business Services|\n|Facilities Management|\n|Grants and Subsidies|\n|Construction|\n|Energy|\n|Travel|\n|Logistics|\n|Z non procurement|\n|Labour hire|\n|Machinery Plant and Equipment|\n|Vehicles|\n|Materials|\n|Medical|\n|Information and Communication Technology|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table551"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Item - Title|\n|---|\n|CRUST (BREAD TO GET YOUR TEETH INTO)|\n|SOUL LESSONS AND SOUL PURPOSE|\n|THATS NOT MY LION (TOUCHY FEELY)|\n|DINOSAUR FUN (FIRST ACTIVITIES)|\n|LATIN WORDS STICKER BOOK|\n|FAVOURITE CAMPING RECIPES|\n|MIDNIGHT TEDDIES (LITTLE FAVOURITES)|\n|WALKS SPEYSIDE|\n|LOCH NESS MONSTER (BAXTER GIFT BOOK)|\n|WARRIOR (AMAZING STORY\/REAL WAR HORSE)|\n|HOME SMOKING AND CURING|\n|SPIRIT OF THE TITANIC|\n|BLACKHOUSE|\n|STICKER DOLLY DRESSING:MOVIE STARS|\n|SKY AT NIGHT|\n|TOP GEAR SUPERCARS|\n|ILL WALK ALONE|\n|ILLUSTRATED NURSERY RHYMES|\n|STICKER DOLLY DRESSING:FAIRIES|\n|HOW TO LAND A JUMBO JET|\n|CELTIC WARRIOR (WARRIOR 30)|\n|GRUMPY GOAT (FT MINI)|\n|OUT OF THE WOODS|\n|HEDGE WITCH (HALE)|\n|KITTEN|\n|LITTLE BOOK OF VINTAGE HORROR|\n|WHEELS ON THE BUS GO ROUND AND ROUND|\n|THIS LITTLE BUNNY (TOUCH AND FEEL)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table552"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|E-MAIL INSTITUCIONAL|\n|---|\n|LUISEALALAM@CAVG.IFSUL.EDU.BR|\n|alvaronebel@cavg.ifsul.edu.br|\n|LUCIANANOGUEIRA@IFSUL.EDU.BR|\n|RUTIOLIVEIRA@IFSUL.EDU.BR|\n|BEATRIZCASTRO@CAVG.IFSUL.EDU.BR|\n|STELANUNES@CAVG.IFSUL.EDU.BR|\n|NEILZASANTOS@IFSUL.EDU.BR|\n|FABRICIOHAAS@IFSUL.EDU.BR|\n|MARCIOROCHA@PELOTAS.IFSUL.EDU.BR|\n|CAROLINARIBARR@SAPUCAIA.IFSUL.EDU.BR|\n|MIGUELDINIS@IFSUL.EDU.BR|\n|CEILA@PELOTAS.IFSUL.EDU.BR|\n|DIEGOLIMA@CHARQUEADAS.IFSUL.EDU.BR|\n|SANDRAVIEIRA@IFSUL.EDU.BR|\n|ELISANE@PELOTAS.IFSUL.EDU.BR|\n|MARCELOELLWANGER@IFSUL.EDU.BR|\n|MARCELO@IFSUL.EDU.BR|\n|LUCIANEALBERNAZ@PELOTAS.IFSUL.EDU.BR|\n|SAMANTAOLIVEIRA@CHARQUEADAS.IFSUL.EDU.BR|\n|ANDREOLDONI@PELOTAS.IFSUL.EDU.BR|\n|CESARNOGUEIRA@IFSUL.EDU.BR|\n|GARTEC@IFSUL.EDU.BR|\n|CAMILASOUZA@PELOTAS.IFSUL.EDU.BR|\n|RODRIGOBIEHL@IFSUL.EDU.BR|\n|EDUARDONATALE@PELOTAS.IFSUL.EDU.BR|\n|FERNANDOAFONSO@IFSUL.EDU.BR|\n|JAQUELINE.PINZON@PASSOFUNDO.IFSUL.EDU.BR|\n|CLAUDIOALBERNAZ@PELOTAS.IFSUL.EDU.BR|\n|MIGUELBANEIRO@IFSUL.EDU.BR|\n|ADELAIDENEIS@IFSUL.EDU.BR|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table553"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|OMB_ACCT|\n|---|\n|202-00-3124   Expenses|\n|202-00-5607   Special Use Permit Fees|\n|202-00-3126   Regulatory Program|\n|202-00-3123   Operation and Maintenance|\n|202-00-3130   Formerly Utilized Sites Remedial Action Program|\n|202-00-9921   Permanent Appropriations|\n|202-00-3122   Construction|\n|202-00-8861   Inland Waterways Trust Fund|\n|202-00-8862   Rivers and Harbors Contributed Funds|\n|202-00-8863   Harbor Maintenance Trust Fund|\n|202-00-3112   Mississippi River and Tributaries|\n|202-00-5383   Special Recreation User Fee|\n|202-00-5570   Interagency America the Beautiful Pass Revenues|\n|202-00-8333   Coastal Wetlands Restoration Trust Fund|\n|202-00-3121   Investigations|\n|202-00-4902   Revolving Fund|\n|202-00-3125   Flood Control and Coastal Emergencies|\n|202-00-3132   Office of the Assistant Secretary of the Army for Civil Works|\n|202-00-3128   Washington Aqueduct|\n|202-00-8217   South Dakota Terrestrial Wildlife Habitat Restoration Trust Fund|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table554"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Terceirizado|\n|---|\n|ELIZABETE DA SILVA BARBOSA|\n|CESAR HONORIO DE MENEZES|\n|WELLINGON OLIVEIRA MIRANDA DA SILVA|\n|MARIA APARECIDA MACHADO DE OLIVEIRA|\n|GRAZIELA LUCIANA DA SILVA SOUZA|\n|CLAUDIA HELENA SILVA AMORIM|\n|ELAINE CRISTINA PIRES|\n|DORVINA DA CRUZ PIMENTA FERREIRA DOS SANTOS|\n|LIDIANE DOS SANTOS BASSALHO|\n|JULIANA SANTOS DE LIMA|\n|LUZIA ANGELA BORGES DA SILVA|\n|REJEANE SANTOS PENHA|\n|VERONICA FERNANDA GONTIJO|\n|FRANCINE APARECIDA DE OLIVEIRA|\n|CRISTIANE ZANANDREIA CABOCLO LANZA|\n|ALICE APARECIDA DE CARVALHO NASCIMENTO|\n|EDNA DA CRUZ SILVA|\n|MARCIA FERNANDA MAZZALLI|\n|SHEILA APARECIDA FERNANDES DE SOUZA|\n|BRUNA MARCIANA DE SOUZA LIMA|\n|Livia Maria da Silva|\n|ERICA CRISTIANE SILVA|\n|MARIA CANDIDA BORGES|\n|NILVA HELENA DO NASCIMENTO|\n|MARCIA DIOGO DE MATOS|\n|LEONARDO DE OLIVEIRA|\n|CLEIRE MARIA SEVERINO|\n|ALESSANDRA DA SILVA CAMPOS|\n|ANTONIA CRUZ MELLO CANDIDO|\n|ALDA CRISTINA ANDRE DOS SANTOS|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table555"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|PA\u00cdS|\n|---|\n|Brasil|\n|Suecia|\n|Finlandia|\n|Holanda|\n|Francia|\n|El Salvador|\n|Reino Unido|\n|Belice|\n|Guatemala|\n|Suiza|\n|Honduras|\n|Portugal|\n|Irlanda|\n|Corea del Sur|\n|Colombia|\n|Italia|\n|Ecuador|\n|Argentina|\n|China|\n|Alemania|\n|Costa Rica|\n|Bahamas|\n|Estados Unidos|\n|Chile|\n|Nicaragua|\n|Cuba|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table556"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Style|\n|---|\n|GUSI|\n|VAPO|\n|JIGE|\n|SOHU|\n|JEFO|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table557"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Produit|\n|---|\n|Produit5|\n|Produit8|\n|Produit9|\n|Produit4|\n|Produit7|\n|Produit2|\n|Produit10|\n|Produit1|\n|Produit3|\n|Produit6|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table558"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Contact|\n|---|\n|Fowler Summer|\n|Warner Brandt|\n|Hamar Deborah|\n|Weiser Brittany|\n|Zelby Rachel|\n|Burrows Michelle|\n|Halloran Jill|\n|Hughes Christopher|\n|York Janet|\n|Ligon Steven|\n|Blackwell Joanna|\n|Price Jennifer|\n|Stewart Angela|\n|Newman Jill|\n|Wunch Stardust|\n|Arnold Shana|\n|Cummings Kyla|\n|Frampton Logan|\n|Singleton Regina|\n|Jorgensen Aleta|\n|Billen Marcie|\n|Fennell Tosha|\n|Slusser Glenda|\n|Richards Angela|\n|Sever Kalyn|\n|Wortman Grant|\n|Gates Teressa|\n|Richardson Carla|\n|Kalhor Mariah|\n|Maynard Nancy|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table559"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Sector Level 4|\n|---|\n|Anaerobic digester|\n|Deep pit|\n|Boardman (OR)|\n|Prince George Pulp & Paper (CAN)|\n|Apache Station (AZ)|\n|Passenger Cars|\n|Navajo (AZ)|\n|Griffith Energy (AZ)|\n|Simpson (WA)|\n|Food Processing|\n|Klamath Falls Cogen (OR)|\n|Bonanza (UT)|\n|Hunter (UT)|\n|Anaerobic Digesters|\n|Sugar & Confections|\n|Grays Harbor Energy Facility (WA)|\n|Four Corners (NM)|\n|Lime|\n|Harquahala Generating Project (AZ)|\n|Bonneville Power Administration (PNW)|\n|Southpoint Energy Center (AZ)|\n|Gila River Power Station (AZ)|\n|Intrastate|\n|La Rosita (MEX)|\n|Termoelectrica de Mexicali (MEX)|\n|Arlington Valley Energy Facility (AZ)|\n|Thermo No. 1 Raser (UT)|\n|Intermountain (UT)|\n|Textile Mills|\n|Red Hawk (AZ)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Anaerobic digester', 'Anaerobic Digesters']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table56"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|COD CAMPO|\n|---|\n|TB004|\n|IC036|\n|GL001|\n|GR037|\n|SA019|\n|CT041|\n|GR016|\n|TB015|\n|SA016|\n|IC031|\n|RN006|\n|CT016|\n|IC021|\n|IC020|\n|CT043|\n|CT006|\n|TB012|\n|CT013|\n|GL005|\n|GR018|\n|IC029|\n|SA020|\n|RN009|\n|GR003|\n|SA009|\n|RN002|\n|CT046|\n|IC038|\n|CT038|\n|IC044|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table560"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Sucursal|\n|---|\n|PTO. VALLARTA|\n|TEPIC|\n|GUADALAJARA|\n|S.L.P.|\n|ZACATECAS|\n|LEON|\n|COLIMA|\n|MORELIA|\n|AGUASCALIENTES|\n|MOR QRO.|\n|CELAYA|\n|LAZARO CARDENAS|\n|QUERETARO|\n|MOR \/ COL|\n|IRAPUATO|\n|ZAC \/ AGS|\n|FUERA DE TERRITORIO|\n|TEP \/ PTV|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table561"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Payment Date|\n|---|\n|03\/15\/2019|\n|03\/27\/2019|\n|03\/06\/2019|\n|03\/21\/2019|\n|03\/12\/2019|\n|03\/07\/2019|\n|03\/20\/2019|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table562"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|\u00c4rende nr|\n|---|\n|KT2016-0009|\n|KT2016-0046|\n|KT2016-0113|\n|KT2016-0023|\n|KT2016-0214|\n|KT2016-0163|\n|KT2016-0232|\n|KT2016-0158|\n|KT2016-0103|\n|KT2016-0176|\n|KT2016-0108|\n|KT2016-0187|\n|KT2016-0200|\n|KT2016-0037|\n|KT2016-0171|\n|KT2016-0273|\n|KT2016-0017|\n|KT2016-0115|\n|KT2016-0013|\n|KT2016-0031|\n|KT2016-0139|\n|KT2016-0129|\n|KT2016-0026|\n|KT2016-0239|\n|KT2016-0051|\n|KT2016-0063|\n|KT2016-0040|\n|KT2016-0193|\n|KT2016-0097|\n|KT2016-0151|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table563"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|elec# ringno#|\n|---|\n|37B2087C00|\n|37B2236200|\n|37B2F31700|\n|37B2047000|\n|37B2F6C900|\n|37B27E2C00|\n|37B2F20900|\n|37B28A0200|\n|37B206C900|\n|37B2EC3C00|\n|37B2D9F300|\n|37B212BE00|\n|37B2570500|\n|37B2104700|\n|37B2A26400|\n|37B2E9D500|\n|37B215BB00|\n|37B28D9600|\n|37B2A61500|\n|37B21A1000|\n|37B2D0DE00|\n|37B2D78C00|\n|37B220A100|\n|37B227D700|\n|37B25AD500|\n|37B28F5800|\n|37B25E8600|\n|37B2EA4D00|\n|37B2027200|\n|37B202FA00|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table564"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|TAFS|\n|---|\n|89-5069 \/X - Emergency Fund Western Area Power Administration|\n|89-0216 \/X - Energy Information Administration|\n|89-0321 \/X - Energy Efficiency and Renewable Energy|\n|89-0322 \/X - Advanced Technology Vehicles Manufacturing Loan Program|\n|89-5068 \/X - Construction Rehabilitation Operation and Maintenance Western|\n|89-0321 16\/17 - Energy Efficiency and Renewable Energy|\n|89-5649 \/X - Continuing Fund Southwestern Power Administration|\n|89-0213 16\/17 - Fossil Energy Research and Development|\n|89-5105 \/X - Payments to States under Federal Power Act|\n|89-0222 16\/17 - Science|\n|89-0233 \/X - SPR Petroleum Account|\n|89-0251 \/X - Defense Environmental Cleanup|\n|89-0224 \/X - Energy Supply and Conservation|\n|89-0314 16\/17 - Naval Reactors|\n|89-0251 \/17 - Defense Environmental Cleanup|\n|89-0251 17\/18 - Defense Environmental Cleanup|\n|89-0236 16\/17 - Office of the Inspector General|\n|89-5523 \/X - Ultra-deepwater and Unconventional Natural Gas and Other Petrole|\n|89-0218 \/X - Strategic Petroleum Reserve|\n|89-5369 \/X - Northeast Home Heating Oil Reserve|\n|89-0236 \/X - Office of the Inspector General|\n|89-0240 16\/17 - Weapons Activities|\n|89-0228 \/X - Departmental Administration|\n|89-0337 17\/18 - Advanced Research Projects Agency--Energy|\n|89-0319 16\/17 - Nuclear Energy|\n|89-5653 \/X - Continuing Fund Southeastern Power Administration|\n|89-0208 16\/17 - Title 17 Innovative Technology Loan Guarantee Program|\n|89-4486 \/X - Title 17 Innovative Technology Guaranteed Loan Financing Account|\n|89-0235 \/X - Clean Coal Technology|\n|89-8575 \/X - Advances for Cooperative Work|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table565"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Group Name|\n|---|\n|OVERTHRUST|\n|ALL CIG RECEIPT POINTS EXCLUDING HIGH PLAINS AND NORTH RATON LATERALS|\n|ALL WIC MAINLINE DELIVERY POINTS EXCLUDING THREEMILE (TML)|\n|VALLEY LINE|\n|RAWLINS WEST|\n|ALL WIC MAINLINE DELIVERY POINTS|\n|HIGH PLAINS - WEST|\n|ALL CIG OFF SYSTEM DELIVERY POINTS|\n|HIGH PLAINS HUDSON|\n|NORTHERN PARK AND LOAN|\n|THREEMILE|\n|SOUTH OF SAND DUNE|\n|OVERTHRUST NORTH|\n|LOWER WIND RIVER WET|\n|BALANCING NORTH TO SOUTH|\n|ALL RUBY|\n|WATKINS TO SPRUCE HILL-HP|\n|WEST OF ECHO JUNCTION|\n|WAMSUTTER WEST|\n|WELD COUNTY LATERAL|\n|WIC KANDA LATERAL|\n|ALL CP|\n|ALL WIC PICEANCE LATERAL DELIVERY POINTS|\n|CAVE GULCH LATERAL|\n|HIGH PLAINS - CENTRAL|\n|ALL CIG HIGH PLAINS SYSTEM RECEIPTS|\n|MALIN EAST TO WEST|\n|HUDSON - WATKINS - HP|\n|NORTHEAST COLORADO|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table566"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Project Name in English|\n|---|\n|Developing a New Integral Equation Theory for Solvation of Complex Chemical and Biological Molecules|\n|Development of a self-optimizing grinding and polishing system for ultra-precision machining freeform surfaces|\n|The Novel Oral Administration Isoliquiritigenin-Solid Lipid Nanoparticles Targeting for Triple-Negative Breast Cancer Treatment|\n|The neural basis of auditory perception|\n|Chloroplast and mitochondria biology|\n|Innovative Bioevaluation of Next-generation Molecular Machines and Nanomaterials|\n|Microbial Stress Responses Antibiotic Resistance Biofilm Post-translational modification CRISPR-based antimicrobial resistance research|\n|Cooperative Control for  Multi-Agent Systems and Its Applications|\n|Legal Barriers to the Use of Unmanned\/Autonomous Merchant Ships in the Waters of Hong Kong and Mainland China|\n|Novel 2D materials used for laser photonic applications|\n|Hong Kong Basic Law|\n|Data Driven Identification and Classification of Chinese Medicine Syndrome Types among Functional Dyspepsia Patients: Latent Tree Analysis|\n|Concurrent riders\/users: a new way to evaluate the performance of transit-served areas|\n|From genomes to the niche: an integrated approach to the ecology of intertidal invertebrates|\n|Integrated Approaches for Point-Line-Plane of Heritage Conservation in mainland China urban renewal: International Experience|\n|Pollutants in Combustion Research|\n|The role of autophagy in cancer or renal diseases|\n|Genomic genetic and single cell analysis of liver cancer to identify new treatment targets|\n|The effect of warming on the growth and metabolism of auto- hetero- and mixotrophic marine protists|\n|Two-dimensional layered materials for nanoelectronics|\n|Sustainability evaluation for Chinese enterprises|\n|Smart Manufacturing and Services in IIoT (Industrial Internet of Things)|\n|Fluid-Structure Interaction and Heat\/Mass Transfer in Biomedical Applications|\n|Impact of marine biofilm on marine benthos|\n|Emerging Infectious Diseases|\n|Design of Semiconductor Nanostructures for Next-Generation Electronic Optoelectronic and Energy-Harvesting Devices|\n|Exploring Knowledge Graph Augmented Neural Networks for Natural language Processing|\n|Energy harvesting and wireless sensor|\n|Development of advanced functional molecules for biological and materials applications|\n|Impact of Air-Sea Exchanges on Air Quality in Coastal Megacities|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table567"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|F2_USER_EMAIL|\n|---|\n|nan|\n|melodi.williams@va.gov|\n|Bernadette.Gamayo@va.gov|\n|KARENIN.SANDOVAL@VA.GOV|\n|david.jenkins2@va.gov|\n|Lisa.Sawenko@va.gov|\n|josie.reveles@va.gov|\n|sandhyarani.kongovi@va.gov|\n|annmarie.walker@va.gov|\n|alex.lopez2@va.gov|\n|jose.genuino@va.gov|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table568"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|TRAG_ALLO_TRAC|\n|---|\n|36  0167|\n|36  8180|\n|36  4009|\n|36  4014|\n|36  1114|\n|36  8133|\n|36  0152|\n|97360165|\n|36  0102|\n|36  0137|\n|36  4010|\n|36  8150|\n|36  0161|\n|36  8455|\n|XX|\n|36  0162|\n|36  0160|\n|36  0165|\n|36  1119|\n|36  0142|\n|36  0170|\n|36  4537|\n|36  1121|\n|36  0181|\n|36  0129|\n|36  4018|\n|36  8129|\n|36  0183|\n|36  0172|\n|36  4112|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table569"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Company Name|\n|---|\n|CenturyTel of Central Indiana Inc. dba CenturyLink|\n|Merchants & Farmers Telephone|\n|frontier communations of thorntown inc.|\n|Mulberry Cooperative Tel. Co.|\n|Sprint Communications Company L.P.|\n|Miles Communications Corp|\n|Miles Communications Inc.|\n|AT&T Communications of Indiana GP|\n|Bright House Networks Information Services (Indiana) LLC|\n|Communications Corporation of Indiana|\n|Level 3 Communications LLC|\n|Southeastern Indiana Rural Tel. Coop. Inc.|\n|Communications Corporation of Indiana  (TDS Telecom)|\n|frontier communications of thorntown inc.|\n|Preferred Long Distance Inc.|\n|Ameritech Operating Companies|\n|New Horizons Communciations Corp.|\n|Washington County Rural Telephone Coop.|\n|TDS Telecom|\n|Siegecom LLC dba WoW? Cable Internet and Phone|\n|Metropolitan Telecommunications of Indiana Inc. d\/b\/a MetTel|\n|Frontier North Inc. and Frontier Midstates Inc.|\n|Endeavor Communications (Clay County Rural Cooperative)|\n|Hypercube Telecom LLC|\n|New Paris Telephone|\n|AT&T Indiana|\n|Home Telephone Company Inc.|\n|Rochester Telephone Company|\n|Communications Corporation of Southern Indiana|\n|Neutral Tandem-Indiana LLC|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['frontier communations of thorntown inc.', 'frontier communications of thorntown inc.']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table57"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Salesperson|\n|---|\n|Michael Suyama|\n|Laura Callahan|\n|Robert King|\n|Steven Buchanan|\n|Anne Dodsworth|\n|Nancy Davolio|\n|Janet Leverling|\n|Andrew Fuller|\n|Margaret Peacock|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table570"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3|\n|---|\n|EIA WB IHC|\n|EIA  IP|\n|Not Know|\n|EIA IF|\n|NT|\n|IHC WB|\n|EIA WB ICC|\n|IHC EIA WB|\n|NT IHC WB|\n|EIA FC|\n|IHC EIA|\n|EIA WB IF|\n|WB IHC|\n|EIA NT WB|\n|WB IHC EIA|\n|EIA* WB|\n|FC IHC_EIA|\n|FC IHC|\n|EIA WB FC IHC|\n|EIA* NT WB IHC|\n|IHC|\n|WB EIA|\n|EIA IHC|\n|EIA|\n|EIA IHC NT|\n|EIA NT IHC|\n|WB|\n|EIA WB FC|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table571"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Maand|\n|---|\n|mei|\n|juni|\n|juli|\n|december|\n|augustus|\n|januari|\n|november|\n|april|\n|oktober|\n|maart|\n|februari|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table572"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|M\u00e9dico Veterinario Responsable|\n|---|\n|RUBEN BOLERES|\n|FERNANDO SOLORZANO|\n|ANA RODRIGUEZ|\n|SANDRA GONZALEZ|\n|ANDREA CABRERA|\n|CARLOS SOLARES|\n|EDWIN AQUINO|\n|JULIO CORDON|\n|HEBER CASTILLO|\n|VINICIO CARRILLO|\n|OTTO LECHUGA|\n|JULIO FIGUEROA MORAGA|\n|ADELA FERNANDEZ|\n|DALYBERT WEASTLER|\n|CESAR DAVILA|\n|EDI SANCHEZ|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table573"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Observaciones Generales|\n|---|\n|DIRIGIDO A PROPIETARIOS DE AVES TRASPATIO|\n|ADULTAS 117; JOVENES 79|\n|AL OJO|\n|ADULTAS 178; JOVENES 124|\n|NINGUNA|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table574"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|OMBACCT|\n|---|\n|005-68-4143   Debt Reduction_Financing Account|\n|005-60-1232   Distance Learning Telemedicine and Broadband Program|\n|005-60-1980   Rural Water and Waste Disposal Program Account|\n|005-65-3108   Rural Economic Development Loans Program Account|\n|005-32-9971   Miscellaneous Trust Funds|\n|005-32-1601   Buildings and Facilities|\n|005-45-2500   Marketing Services|\n|005-18-1400   Salaries and Expenses|\n|005-45-8015   Expenses and Refunds Inspection and Grading of Farm Products|\n|005-65-1907   Rural Business Investment Program Account|\n|005-63-4225   Rural Community Facility Direct Loans Financing Account|\n|005-96-5540   Stewardship Contracting Product Sales|\n|005-96-9921   Forest Service Permanent Appropriations|\n|005-49-3304   Grassroots Source Water Protection Program|\n|005-65-3105   Rural Economic Development Grants|\n|005-47-2707   RMA Salaries and Expenses|\n|005-53-1072   Watershed and Flood Prevention Operations|\n|005-45-8412   Milk Market Orders Assessment Fund|\n|005-60-4218   Rural Water and Waste Water Disposal Guaranteed Loans Financing Account|\n|005-49-4212   Agricultural Credit Insurance Fund Direct Loan Financing Account|\n|005-60-4142   Rural Communication Development Fund Liquidating Account|\n|005-65-2069   Intermediary Relending Program Fund Account|\n|005-37-2400   Salaries and Expenses|\n|005-96-4605   Working Capital Fund|\n|005-96-1106   National Forest System|\n|005-49-1336   Commodity Credit Corporation Export Loans Program Account|\n|005-60-4155   Rural Development Insurance Fund Liquidating Account|\n|005-65-4355   Biorefinery Assistance Guaranteed Loan Financing Account|\n|005-18-8214   Miscellaneous Contributed Funds|\n|005-65-4033   Rural Business Investment Program Guarantee Financing Account|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table575"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|County|\n|---|\n|Palo Pinto|\n|Gonzales|\n|Crosby|\n|Collin|\n|Hill|\n|Freestone|\n|Upton|\n|Lipscomb|\n|Gillespie|\n|Martin|\n|Kaufman|\n|Mills|\n|Ward|\n|Bexar|\n|Maverick|\n|Bowie|\n|Crockett|\n|Liberty|\n|Taylor|\n|Burnet|\n|Irion|\n|Henderson|\n|Robertson|\n|Falls|\n|Cherokee|\n|Van Zandt|\n|Hidalgo|\n|Collingsworth|\n|Karnes|\n|Hopkins|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table576"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Provider Address|\n|---|\n|2 PENROSE BOULEVARD|\n|680 E HOSPITAL DRIVE|\n|100 PIONEERS MEDICAL CENTER DRIVE|\n|2451 PRATT STREET|\n|221 2ND STREET|\n|1401 PHAY AVENUE|\n|1795 MONTEREY ROAD|\n|2515 PITMAN PLACE|\n|2855 OWL HOOT TRAIL|\n|945 DESERT FLOWER BOULEVARD|\n|855 FRANKLIN AVENUE|\n|11411 HIGHWAY 65|\n|401 MALLEY DRIVE|\n|1685 SOUTH 21ST STREET|\n|1200 VILLAGE ROAD|\n|1919 QUENTIN STREET|\n|3625 PARKMOOR VILLAGE DRIVE|\n|700 NORTH A STREET|\n|450 PROSPECTOR AVE|\n|2701 CALIFORNIA STREET|\n|2845 NORTH 15TH STREET|\n|329 EXEMPLA CIRCLE|\n|7150 POPLAR STREET|\n|6060 EAST ILIFF AVENUE|\n|2201 DOWNING STREET|\n|3345 FOREST STREET|\n|2445 EAST CACHE LA POUDRE|\n|6000 EAST ILIFF AVENUE|\n|4601 EAST ASBURY CIRCLE|\n|1719 E BIJOU STREET|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table577"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|des_ciudad|\n|---|\n|TARIJA|\n|SANTA CRUZ|\n|TRINIDAD|\n|ORURO|\n|SUCRE|\n|COCHABAMBA|\n|COBIJA|\n|POTOSI|\n|LA PAZ|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table578"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Offense|\n|---|\n|35B|\n|90G|\n|13A|\n|26B|\n|220|\n|90C|\n|23H|\n|90J|\n|26C|\n|26A|\n|23G|\n|90Z|\n|23C|\n|90D|\n|13B|\n|23A|\n|120|\n|370|\n|290|\n|11D|\n|23D|\n|23F|\n|35A|\n|270|\n|240|\n|520|\n|13C|\n|90E|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table579"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|PURPOSE|\n|---|\n|ELEVATED STORAGE TANK|\n|MATERIALS|\n|MEDICAL FEES|\n|EQUIPMENT MAINTENANCE|\n|SALES TAX PAYABLE|\n|MUNICIPAL COURT FEES|\n|CHEMICALS|\n|MATERICALS|\n|REFUND|\n|PAYROLL TAX|\n|LIBRARY AUTOMATION|\n|INSURANCE SETTLEMENT|\n|GROUNDS MAINT|\n|COMMUNICATIONS|\n|COPIER RENTAL|\n|PUMPING FEES|\n|PARK SUPPLIES|\n|OPTIONAL INSURANCE PAYABLE|\n|PAYROLL EMP|\n|PROPERTY TAX|\n|UTILITIES|\n|SYSTEM MAINT|\n|PEST CONTROL|\n|PERMIT FEES|\n|SUPPLEMENTAL INSURANCE|\n|SHELTER UTILITIES|\n|EQUIP MAINT|\n|NEW METERS|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['MATERICALS', 'MATERIALS']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table58"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Location|\n|---|\n|42xx S 16 ST|\n|18xx WILSON BL|\n|21x S IRVING ST|\n|13xx N STAFFORD ST|\n|81x N WAKEFIELD ST|\n|10xx N QUINCY ST|\n|14xx WILSON BL|\n|90x S ORME ST|\n|14xx N COURTHOUSE RD|\n|29xx S GLEBE RD|\n|41xx 21ST RD N|\n|37xx LEE HW|\n|17xx S WALTER REED DR|\n|80x N WAKEFIELD ST|\n|17xx N EDISON ST|\n|90x S DINWIDDIE ST|\n|13xx S DINWIDDIE ST|\n|25xx S ARLINGTON MILL DR|\n|20x S GLEBE RD|\n|19xx JEFFERSON DAVIS HW|\n|CHAIN BRIDGE RD\/N GLEBE RD|\n|COLUMBIA PK\/S MONROE ST|\n|25xx 20TH RD N|\n|17x S GEORGE MASON DR|\n|38xx N 7 ST|\n|15xx N GARFIELD ST|\n|COLUMBIA PK\/S FOUR MILE RUN DR|\n|13xx ARMY NAVY DR|\n|281xx S WOODROW ST|\n|15xx S FERN ST|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table580"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Description|\n|---|\n|LIQUOR DI AMORE AMARETTO 12\/1LT|\n|SPICE BADIA THYME GROUND 12 OZ|\n|LIQUOR SCOTCH GLENFIDDICH 700\/750 ML|\n|CHEESE STILTON BLUE WHEEL 8 LB|\n|WATER VOLVIC 12\/1.5 LT (P)|\n|LAUBRY LG CHOC CROISSANT60\/75GM BBL27235|\n|SAUCE BBQ OPEN PIT 4\/1 GAL|\n|SPICE BADIA PICKLING 12 OR13 OZ|\n|US BEET 25 LB\/BAG|\n|SNACK GOLDFISH PRETZEL 6\/26 OZ|\n|LIQUOR SCOTCH NAKED GROUSE 12\/70 CL|\n|PORK LOIN B\/IN 16 LB AVG|\n|TROPICS NON FAT YOGURT FLAVOR 12\/32 OZ.|\n|TOILET PAPER JR. JUMBO  12\/CS|\n|LCL RUM MYERS DARK 750 ML|\n|US SQUASH SPAGHETTI|\n|LIQUOR RUM BRUGAL 1888 6\/750 ML|\n|PASTA WHOLE WHEAT SPAGHETTI 20\/500|\n|US POTATO RED B|\n|SAUCE BBQ SWEET BABY RAY HORIZONS 4\/1 GA|\n|CH CARAFE PL 15 OZ #8853  72\/CS|\n|OIL BASIL EV BIS 12\/250 ML|\n|US KALE GREEN 24 CT\/CS|\n|CHERRIES DARK SWEET 6\/10|\n|JUICE FAN MANGO NECTAR 12\/1 LT.|\n|CH SHEET QUEEN WHITE 90X120  25\/CS|\n|MNCO GREEK OLIVE MIXED PITTED 4\/2 KG|\n|US BABY CARROT WITH TOPS 5#|\n|HAM BUFFET MENUMASTER 2\/10 LB|\n|WRAP TOUFA PLAIN 12\"\" 6\/12 CT.|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table581"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Description|\n|---|\n|India|\n|Antigua and Barbuda|\n|Mauritania|\n|Singapore|\n|Seychelles|\n|Lebanon|\n|OPEC countries|\n|Brunei Darussalam|\n|Gibraltar|\n|Finland|\n|Caribbean ACP countries|\n|Belgium|\n|Guinea|\n|Extra EU27|\n|Panama|\n|Sweden|\n|Ukraine|\n|Sao Tome and Principe|\n|Italy|\n|Comoros|\n|Romania|\n|Bahamas|\n|Other African Countries|\n|Rwanda|\n|Mashrek countries|\n|Kenya|\n|Senegal|\n|Andorra|\n|Ecuador|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table582"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Practice_Name|\n|---|\n|Irrigation Water Management Plan - Written|\n|Forage and Biomass Planting|\n|Water Well|\n|Access Road|\n|Pond|\n|Structure for Water Control|\n|Cover Crop|\n|Building Envelope Improvement|\n|Woody Residue Treatment|\n|Roofs and Covers|\n|Stripcropping|\n|Road\/Trail\/Landing Closure and Treatment|\n|Prescribed Grazing|\n|Composting Facility|\n|FARMSTEAD ENERGY IMPROVEMENT|\n|Pumping Plant|\n|Conservation Cover|\n|Agricultural Energy Management Plan - Written|\n|Roof Runoff Structure|\n|Access Control|\n|Critical Area Planting|\n|Forest Management Plan - Written|\n|Lined Waterway or Outlet|\n|Lighting System Improvement|\n|Waste Treatment Lagoon|\n|Diversion|\n|Stream Crossing|\n|Herbaceous Weed Control|\n|Firebreak|\n|Water and Sediment Control Basin|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table583"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Category|\n|---|\n|USP|\n|FRZ|\n|PAP|\n|CHZ|\n|LOC|\n|POL|\n|DIN|\n|DRY|\n|CFR|\n|WTR|\n|LIQ|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table584"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|AIXPertCommand|\n|---|\n|\/etc\/security\/aixpert\/bin\/firewsetup|\n|\/etc\/security\/aixpert\/bin\/disrmtdmns|\n|\/etc\/security\/aixpert\/bin\/tcptr_aixpert|\n|\/etc\/security\/aixpert\/bin\/virusdetsw|\n|\/etc\/security\/aixpert\/bin\/prereqgated|\n|\/etc\/security\/aixpert\/bin\/ntwkopts|\n|\/etc\/security\/aixpert\/bin\/rctcpip|\n|\/etc\/security\/aixpert\/bin\/rmsuidfrmrcmds|\n|\/etc\/security\/aixpert\/bin\/chusrattr|\n|\/etc\/security\/aixpert\/bin\/ipsecpermithostorport|\n|\/etc\/security\/aixpert\/bin\/chdefstanza|\n|\/etc\/security\/aixpert\/bin\/prereqbinaudit|\n|\/etc\/security\/aixpert\/bin\/remove_guest|\n|\/etc\/security\/aixpert\/bin\/ISSServerSensor|\n|\/etc\/security\/aixpert\/bin\/rmdotfrmpathnroot|\n|\/etc\/security\/aixpert\/bin\/sedconfig|\n|\/etc\/security\/aixpert\/bin\/prereqnontcb|\n|\/etc\/security\/aixpert\/bin\/prereqRSSSLite|\n|\/etc\/security\/aixpert\/bin\/pwdpolicyenf|\n|\/etc\/security\/aixpert\/bin\/prereqlft|\n|\/etc\/security\/aixpert\/bin\/loginherald|\n|\/etc\/security\/aixpert\/bin\/comntrows|\n|\/etc\/security\/aixpert\/bin\/prereqrrl|\n|\/etc\/security\/aixpert\/bin\/filepermgr|\n|\/etc\/security\/aixpert\/bin\/prereqrl|\n|\/etc\/security\/aixpert\/bin\/disablexhost|\n|\/etc\/security\/aixpert\/bin\/cominetdconf|\n|\/etc\/security\/aixpert\/bin\/nfsopts|\n|\/etc\/security\/aixpert\/bin\/chetcftpusers|\n|\/etc\/security\/aixpert\/bin\/prereqsed|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table585"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|PYQ|\n|---|\n|Product22003Q1|\n|Entera CRM2004Q2|\n|Product22006Q2|\n|Product42006Q4|\n|Product32005Q3|\n|Product42007Q1|\n|Product42006Q1|\n|Product12008Q4|\n|Product22005Q1|\n|Product22003Q3|\n|Product32004Q3|\n|Entera CRM2005Q2|\n|Product12005Q2|\n|Product32005Q2|\n|Product12003Q2|\n|Product22007Q4|\n|Product12006Q3|\n|Product32006Q4|\n|Entera CRM2006Q3|\n|Product42008Q2|\n|Entera CRM2008Q4|\n|Product22006Q1|\n|Product32005Q1|\n|Product22008Q4|\n|Product42005Q2|\n|Entera CRM2007Q3|\n|Entera CRM2004Q3|\n|Product12005Q4|\n|Entera CRM2003Q4|\n|Product12005Q3|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table586"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|glcategory|\n|---|\n|Travel|\n|Logistics|\n|Medical|\n|Construction|\n|Business Services|\n|Labour hire|\n|Grants and Subsidies|\n|Facilities Management|\n|Z non procurement|\n|Vehicles|\n|Materials|\n|Information and Communication Technology|\n|Energy|\n|Machinery Plant and Equipment|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table587"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|G\u0142\u00f3wna dziedzina (wg I stopnia klasyfikacji OECD lub NACE)|\n|---|\n|nauki przyrodnicze|\n|budownictwo|\n|nauki humanistyczne|\n|transport i gospodarka magazynowa|\n|edukacja|\n|informacja i komunikacja|\n|nauki medyczne i nauki o zdrowiu|\n|nauki medyczne|\n|nauki rolnicze|\n|brak informacji|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table588"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|COD VALIDA\u00c7AO|\n|---|\n|L027|\n|L067|\n|L112|\n|L125|\n|L043|\n|L090|\n|L122|\n|L087|\n|L014|\n|L096|\n|L034|\n|L033|\n|L070|\n|L066|\n|L119|\n|L008|\n|L048|\n|L012|\n|L093|\n|L108|\n|L124|\n|L069|\n|L076|\n|L143|\n|L142|\n|L085|\n|L032|\n|L099|\n|L003|\n|L068|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table589"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Crossing name|\n|---|\n|Sweetholm|\n|Marston-on-Dove|\n|Bromfield|\n|Well Lane|\n|Parrott No.1|\n|Salisbury Drive|\n|Brightley Weir Farm 3|\n|Red Lane (Uckfield Line)|\n|Fowler's Park|\n|Lydford on Fosse|\n|Adversane|\n|Tallington Tarmac|\n|Willow No.64|\n|Coulage 3|\n|Thirwell Castle|\n|Mount Way No.2|\n|Aberdeen Station|\n|Cemetery|\n|Holmsley Farm|\n|Settle Station|\n|Clunes|\n|East Cowick|\n|Elsenham|\n|Claithes Lane|\n|Boat Of Kintore|\n|Ferring|\n|Cemetry|\n|Woodham Ferrers|\n|Bombers|\n|White Cottage|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Cemetry', 'Cemetery']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table59"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|DESCRICAO REGRA DE VALIDACAO|\n|---|\n|SITUACAO = 1  DATA-MAIOR-VENCIMENTO MENOS DATA-BASE ESTA MENOR QUE 91 DIAS|\n|SITUACAO NAO CADASTRADA NO ANEXO 201 - SITUACAO DA PARCELA|\n|QTDE DE PARCELA ZERADA E VALOR DA PROX PARCELA OU DATA DE VENC DA PROX PARCELA PREENCHIDA|\n|CPF\/CNPJ ZERADO PARA CENTRO DE CUSTO DO EXTERIOR NAO CADASTRADO NO ANEXO 500|\n|SITUACAO = 1  DATA-MAIOR-VENCIMENTO MENOS DATA-BASE ESTA MENOR QUE 1441 DIAS|\n|SITUACAO = 2  DATA-MENOR-VENCIMENTO MENOS DATA-BASE ESTA MENOR QUE 151 DIAS|\n|SITUACAO = 2  DATA-MENOR-VENCIMENTO MENOS DATA-BASE ESTA MENOR QUE 721 DIAS|\n|RATING NAO CADASTRADO NO ANEXO 208 - CLASSIFICACAO DA OPERACAO|\n|CHAVE SIST APROV DE CREDITO PREENCHIDO E IDENT SISTEMA DE APROV CREDITO ZERADO|\n|SITUACAO 1 COM DATA DE MENOR VENC MENOR QUE DATA-BASE|\n|SITUACAO = 2  DATA-MENOR-VENCIMENTO MENOS DATA-BASE ESTA MENOR QUE 15 DIAS|\n|SITUACAO = 2  DATA-MENOR-VENCIMENTO MENOS DATA-BASE ESTA MENOR QUE 181 DIAS|\n|DATA DE INICIO DA OPERACAO MAIOR QUE DATA BASE|\n|ALFANUMERICO (DIFERENTE DE SPACES E ZEROS)|\n|NUMERO DE PORTABILIDADE PREENCHIDO MOTIVO-BAIXA DIFERENTE DE 0311 E CPF\/CNPJ EM BRANCO|\n|QTDE DE PARCELA ZERADA E VALOR DA PARCELA MAIOR QUE ZERO|\n|MOEDA NAO CADASTRADA NO ANEXO 6 - VARIACAO CAMBIAL|\n|MOTIVO DE BAIXA 0311 CPF\/CNPJ E  NUMERO DA PORTABILIDADE ZERADOS|\n|AGENCIA NAO CADASTRADA NO MESU|\n|CNPJ\/CPF VALIDO ATRAVES DO DIGITO VERIFICADOR|\n|VALOR DA GARANTIA MAIOR DO QUE O CADASTRADO NO ANEXO 501|\n|SITUACAO = 1  DATA-MAIOR-VENCIMENTO MENOS DATA-BASE ESTA MENOR QUE 121 DIAS|\n|CARTEIRA NAO CADASTRADA NA RESG|\n|NUMERO DO CONTRATO NOVO ZERADO PARA MOTIVO-BX 0305 0307 E 0312|\n|DATA DE MAIOR VENCIMENTO DIFERENTE DE 01.01.0001|\n|SITUACAO = 1  DATA-MAIOR-VENCIMENTO MENOS DATA-BASE ESTA MENOR E IGUAL A 5400 DIAS|\n|SITUACAO = 1 DATA-MAIOR-VENCIMENTO MENOS DATA-BASE ESTA MENOR QUE 15 DIAS|\n|SITUACAO = 2  DATA-MENOR-VENCIMENTO MENOS DATA-BASE ESTA MENOR QUE 361 DIAS|\n|QTDE DE PARCELA MAIOR QUE ZERO E VALOR DA PARCELA ZERADA|\n|MODALIDADE NAO CADASTRADA NO ANEXO 3 - MODALIDADE OPERACAO|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table590"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Type of Cargo|\n|---|\n|Perishables|\n|Livestock|\n|Machinery|\n|Fuels|\n|Cement|\n|Drinks \/ Beverages|\n|Container|\n|Other|\n|Chemicals|\n|Agricultural Products|\n|Empty|\n|Wood \/ Timber \/ Lumber|\n|Sand \/ Earth|\n|Refuse|\n|Vehicles|\n|Bags \/ Sacks|\n|Iron \/ Steel \/ Metals|\n|Furniture|\n|Sail \/ Tarpaulin|\n|Coal|\n|People|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table591"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Healthcare Service|\n|---|\n|(524) ACTIVE DUTY SEXUAL TRAUMA|\n|(417) PROSTHETICS\/ORTHOTICS|\n|(718) DIABETIC RETINAL SCREENING|\n|(336) MEDICAL PRE-PROCED EVAL|\n|(403) ENT|\n|(206) OCCUPATIONAL THERAPY|\n|(421) VASCULAR LABORATORY|\n|(197) POLYTRAUMA\/TRAUMATIC BRAIN INJURY (TBI)-INDIVIDUAL|\n|(334) CARDIAC STRESS TEST\/ETT|\n|(513) SUB USE DISORDER INDIV|\n|(550) MH CLINIC GROUP|\n|(337) HEPATOLOGY CLINIC|\n|(306) DIABETES|\n|(312) PULMONARY\/CHEST|\n|(512) MH CONSULT|\n|(348) PRIMARY CARE SHARED APPOINTMENT|\n|(304) DERMATOLOGY|\n|(314) RHEUMATOLOGY\/ARTHRITIS|\n|(104) PULMONARY FUNCTION|\n|(305) ENDO.\/METAB (EXCEPT DIABETES)|\n|(301) GENERAL INTERNAL MEDICINE|\n|(212) EMG - ELECTROMYOGRAM|\n|(102) ADMITTING\/SCREENING|\n|(373) MOVE PROGRAM GRP|\n|(411) PODIATRY|\n|(410) PLASTIC SURGERY|\n|(338) TELEPHONE PRIMARY CARE|\n|(330) CHEMOTHERAPY PROC. UNIT-MED.|\n|(160) CLINICAL PHARMACY|\n|(123) NUTRITION\/DIETETICS-INDIVIDUAL|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table592"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Sales Rep|\n|---|\n|Charley|\n|Bruce|\n|Veronica|\n|Mark|\n|Ramesh|\n|Anshika|\n|Jaspreet|\n|Abhay|\n|James|\n|Swati|\n|Rajat|\n|Varsha|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table593"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Granule Name|\n|---|\n|S1A_IW_GRDH_1SDV_20161026T223658_20161026T223726_013667_015EA1_2F41|\n|S1A_IW_RAW__0SDV_20150814T224322_20150814T224354_007265_009F41_4318|\n|S1A_IW_GRDH_1SSV_20151126T110634_20151126T110703_008775_00C825_E09E|\n|S1A_IW_GRDH_1SSV_20150611T110624_20150611T110653_006325_0084FE_002B|\n|S1A_IW_RAW__0SDV_20160120T105815_20160120T105848_009577_00DEE2_36FF|\n|S1A_IW_GRDH_1SSV_20141031T111417_20141031T111440_003073_003847_2905|\n|S1A_IW_SLC__1SSV_20160228T112242_20160228T112312_010146_00EF6C_8D6C|\n|S1A_IW_SLC__1SDV_20150213T225902_20150213T225929_004611_005AE6_A4A8|\n|S1A_IW_RAW__0SDV_20160901T224455_20160901T224528_012865_014504_EF3A|\n|S1A_IW_RAW__0SDV_20160614T225258_20160614T225330_011713_011F47_3D29|\n|S1A_IW_SLC__1SSV_20150228T111430_20150228T111500_004823_005FFA_4189|\n|S1A_IW_GRDH_1SSV_20151002T111439_20151002T111508_007973_00B258_6529|\n|S1A_IW_RAW__0SDV_20150608T225100_20150608T225133_006288_0083F5_BA3B|\n|S1A_IW_SLC__1SSV_20150724T105602_20150724T105626_006952_00969E_528B|\n|S1A_IW_RAW__0SDV_20160808T224454_20160808T224527_012515_01394B_411E|\n|S1A_IW_RAW__0SSV_20141208T105558_20141208T105622_003627_0044AD_AED9|\n|S1A_IW_GRDH_1SSV_20150703T112247_20150703T112315_006646_008DF2_2232|\n|S1A_IW_SLC__1SSV_20150405T111415_20150405T111438_005348_006C84_074B|\n|S1A_IW_RAW__0SDV_20150304T225053_20150304T225126_004888_00617D_F860|\n|S1A_IW_GRDH_1SDV_20160830T225824_20160830T225853_012836_01440A_5AC3|\n|S1A_IW_SLC__1SDV_20160602T225120_20160602T225147_011538_0119C9_1C0C|\n|S1A_IW_SLC__1SDV_20150726T225015_20150726T225045_006988_0097B2_AE12|\n|S1A_IW_RAW__0SDV_20151013T224534_20151013T224605_008140_00B6D8_14B0|\n|S1A_IW_RAW__0SDV_20160526T225844_20160526T225916_011436_011684_0C0D|\n|S1A_IW_RAW__0SDV_20151217T225101_20151217T225133_009088_00D0E0_B782|\n|S1A_IW_GRDH_1SSV_20151227T230619_20151227T230644_009234_00D511_A811|\n|S1A_IW_GRDH_1SDV_20160324T223527_20160324T223556_010517_00F9F5_7B63|\n|S1A_IW_SLC__1SDV_20160715T224406_20160715T224433_012165_012DC1_011C|\n|S1A_IW_RAW__0SSV_20150111T111347_20150111T111420_004123_004FE7_AC5F|\n|S1A_IW_RAW__0SDV_20150630T230636_20150630T230709_006609_008CFE_5627|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table594"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Local authority|\n|---|\n|Barnet|\n|Northamptonshire|\n|North East Lincolnshire|\n|Warwickshire|\n|Middlesbrough|\n|Dudley|\n|Solihull|\n|Bracknell Forest|\n|Trafford|\n|Halton|\n|Oldham|\n|East Sussex|\n|Southwark|\n|Lewisham|\n|Bedford|\n|Bristol|\n|Calderdale|\n|Bradford|\n|Wigan|\n|North Tyneside|\n|Knowsley|\n|Bromley|\n|Herefordshire|\n|Enfield|\n|Brent|\n|Southampton|\n|Essex|\n|Windsor and Maidenhead|\n|Harrow|\n|North Yorkshire|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table595"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|OMB_ACCOUNT|\n|---|\n|200-10-8098   Education Benefits Fund|\n|200-05-8097   Military Retirement Fund|\n|200-30-5095   Wildlife Conservation|\n|200-20-8522   Armed Forces Retirement Home Trust Fund|\n|200-05-0040   Payment to Military Retirement Fund|\n|200-20-0100   General Fund Payment Armed Forces Retirement Home|\n|200-15-0101   Foreign Currency Fluctuations Account|\n|200-07-5472   Department of Defense Medicare-Eligible Retiree Health Care Fund|\n|200-45-0400   Salaries and Expenses|\n|200-15-0100   Salaries and Expenses|\n|200-15-8569   Contributions|\n|200-25-1805   Salaries and Expenses|\n|200-25-5602   National Military Cemeteries Concessions Army|\n|200-07-0850   Payment to Department of Defense Medicare-Eligible Retiree Healt|\n|200-25-1809   Construction|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table596"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|TAFS|\n|---|\n|21-5602 \/X - National Military Cemeteries Concessions Army|\n|74-0100 \/X - Salaries and Expenses|\n|21-5095 \/X - Wildlife Conservation Army|\n|21-1805 17\/19 - Salaries and Expenses|\n|97-0040 \/17 - Payment to Military Retirement Fund|\n|74-8569 \/X - Contributions|\n|21-1805 \/17 - Salaries and Expenses|\n|21-1805 16\/17 - Salaries and Expenses|\n|97-8098 \/X - Education Benefits Fund|\n|90-0400 \/17 - Salaries and Expenses|\n|57-5095 \/X - Wildlife Conservation Air Force|\n|97-8097 \/X - Military Retirement Fund|\n|21-5285 \/X - Forest and Wildlife Conservation Military Reservations|\n|21-1809 13\/17 - Construction|\n|97-5472 \/X - Department of Defense Medicare-Eligible Retiree Health Care Fund|\n|84-0100 \/17 - General Fund Payment Armed Forces Retirement Home|\n|84-8522 \/17 - Armed Forces Retirement Home|\n|74-0101 \/X - Foreign Currency Fluctuations Account|\n|21-1805 16\/18 - Salaries and Expenses|\n|21-1805 15\/17 - Salaries and Expenses|\n|84-8522 \/X - Armed Forces Retirement Home|\n|17-5095 \/X - Wildlife Conservation Navy|\n|21-1805 \/X - Salaries and Expenses|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table597"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|LINE_DESC|\n|---|\n|Unob Bal: Exempt from Appor: Anticipated|\n|Unob Bal: Recov of prior year unpaid obligations|\n|Mand: Offset BA: Recov prior year paid obs unex|\n|Mand: Outlays from balances|\n|Unob Bal: Transferred to other accounts|\n|Disc: Offsets BA and OL: Collections nonFed srcs|\n|BA: Disc: Appropriation (special or trust fund)|\n|Memo: Bud resc exempt fr appor excl anticip|\n|Disc: Offsets BA and OL: Collections fm Fed srcs|\n|Program Expense|\n|Disc: Offset BA: Chng in uncol pay Fed src unex|\n|Budget authority net (disc. and mand.)|\n|BA: Disc: Spending auth: Total|\n|Memo: Obligated balance end of year|\n|Disc: Outlays gross (total)|\n|Unob Bal: Exempt fm Appor: Avail in current period|\n|Capital|\n|Disc: Outlays from balances|\n|Mand: Outlays net|\n|Disc: Offsets against gross BA and outlays (total)|\n|BA: Disc: Approps transferred from other accounts|\n|Memo: Bud resc reimb unob bal EOY excl anticip|\n|Unexpired Unobligated Balance: end of year|\n|Mand: Budget authority gross|\n|Unob Bal: Antic recov of prior year unpd\/pd obl|\n|Memo: Bud resc direct unob bal EOY excl anticip|\n|Unob Bal: end of year (total)|\n|Outlays net (disc. and mand.)|\n|Unob Bal: Recov of prior year paid obligations|\n|BA: Disc: Approps transferred to other accounts|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table598"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|TAFS|\n|---|\n|21-0725 \/17 - Family Housing Operation and Maintenance Army|\n|97-0819 \/X - Overseas Humanitarian Disaster and Civic Aid|\n|21-2050 13\/17 - Military Construction Army|\n|97-4555 \/X - National Defense Stockpile Transaction Fund|\n|97-8164 \/X - Surcharge Collections Sales of Commissary Stores Defense|\n|57-3730 14\/18 - Military Construction Air Force Reserve|\n|97-4965 \/X - Emergency Response|\n|21-2099 17\/18 - Counter-Islamic State of Iraq and the Levant Train and Equip|\n|17-1506 16\/18 - Aircraft Procurement Navy|\n|17-1804 \/X - Operation and Maintenance Navy|\n|21-2090 \/X - Operating Expenses of the Coalition Provisional Authority|\n|17-1611 \/17 - Shipbuilding and Conversion Navy|\n|17-0730 13\/17 - Family Housing Construction Navy and Marine Corps|\n|57-3010 \/X - Aircraft Procurement Air Force|\n|97-0107 \/17 - Office of the Inspector General|\n|97-0810 \/X - Environmental Restoration Defense-Wide|\n|17-1319 16\/17 - Research Development Test and Evaluation Navy|\n|97-5195 \/X - Use of Proceeds from the Transfer or Disposition of Commissary F|\n|21-2032 17\/19 - Missile Procurement Army|\n|97-0100 \/17 - Operation and Maintenance Defense-wide|\n|17-1611 11\/20 - Shipbuilding and Conversion Navy|\n|97-0803 \/X - Foreign Currency Fluctuations Construction|\n|21-2033 15\/17 - Procurement of Weapons and Tracked Combat Vehicles Army|\n|21-2031 \/X - Aircraft Procurement Army|\n|21-5098 \/X - Restoration of the Rocky Mountain Arsenal|\n|57-3011 15\/17 - Procurement of Ammunition Air Force|\n|57-3010 17\/19 - Aircraft Procurement Air Force|\n|17-1001 \/17 - Medicare-Eligible Retiree Health Fund Contribution Marine Corps|\n|17-1108 \/17 - Reserve Personnel Marine Corps|\n|57-3830 17\/21 - Military Construction Air National Guard|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table599"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Functional Area|\n|---|\n|Commercial Internships|\n|Corporate Finance|\n|Brand Marketing|\n|Pharma ESPRIT Internships|\n|Investment Banking|\n|Strategic Marketing|\n|Market Research|\n|Finance - Control|\n|not provided|\n|Marketing Internship|\n|Other Marketing|\n|Supply Chain Management Construction & Facilities Management|\n|Real Estate|\n|Management Information Systems|\n|Commercial Strategy|\n|Stategic Marketing|\n|D & I|\n|Sales\/Trading|\n|Private Banking\/Wealth Management|\n|Supply Chain Management|\n|Consulting|\n|Human Resources|\n|Operations|\n|Finance - Mergers & Acquisitions|\n|Brand Management|\n|Supply Chain|\n|Other Finance|\n|Relationship Management|\n|Strategic Planning|\n|Product Management|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Strategic Marketing', 'Stategic Marketing']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table6"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Councillor|\n|---|\n|Adams \/ Lockington|\n|Finch|\n|Jones|\n|Goodwin|\n|Gardiner|\n|Barber|\n|Gage|\n|Waters|\n|Hudson|\n|Martin|\n|Busby|\n|Beer|\n|Burroughes|\n|Anthill|\n|Hackett and Mountford|\n|Poole|\n|Clements|\n|Stringer|\n|Hacket|\n|Hackett|\n|Ipswich St Helens|\n|Bee and Punt|\n|Spicer|\n|Armitage|\n|Gaylard|\n|Spence|\n|Searle|\n|Sayers|\n|Ritchie|\n|Wood|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Hackett', 'Hacket']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table60"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|OMB_ACCT|\n|---|\n|007-25-0391   Chemical Demilitarization Construction Defense-wide|\n|007-10-0130   Defense Health Program|\n|007-55-8165   Foreign National Employees Separation Pay|\n|007-25-0803   Foreign Currency Fluctuations Construction|\n|007-15-2033   Procurement of Weapons and Tracked Combat Vehicles Army|\n|007-10-5185   Kaho' Olawe Island Conveyance Remediation and Environmental Re|\n|007-15-3080   Other Procurement Air Force|\n|007-20-2040   Research Development Test and Evaluation Army|\n|007-15-0380   Coastal Defense Augmentation|\n|007-05-2070   Reserve Personnel Army|\n|007-25-0510   Department of Defense Base Closure Account 1990|\n|007-15-1507   Weapons Procurement Navy|\n|007-15-3021   Space Procurement Air Force|\n|007-05-1006   Medicare-Eligible Retiree Health Fund Contribution National Gua|\n|007-10-2099   Counter-Islamic State of Iraq and Syria Train and Equip|\n|007-25-0804   North Atlantic Treaty Organization Security Investment Program|\n|007-40-4557   National Defense Sealift Fund|\n|007-10-5193   Overseas Military Facility Investment Recovery|\n|007-40-4931   Buildings Maintenance Fund|\n|007-20-5753   Contributions for Renewable Energy Impact Assessments and Mitiga|\n|007-10-0811   Environmental Restoration Formerly Used Defense Sites|\n|007-10-0833   Emergency Response Fund|\n|007-55-8337   Host Nation Support Fund for Relocation|\n|007-15-0350   National Guard and Reserve Equipment|\n|007-30-0836   Military Unaccompanied Housing Improvement Fund|\n|007-15-2034   Procurement of Ammunition Army|\n|007-05-3500   Military Personnel Air Force|\n|007-25-0512   Department of Defense Base Closure Account 2005|\n|007-05-1004   Medicare-Eligible Retiree Health Fund Contribution Army|\n|007-10-9922   Miscellaneous Special Funds|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table600"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Scene ID|\n|---|\n|L1C_T48MYV_A007894_20161226T031409|\n|S2A_OPER_MSI_L1C_TL_EPA__20151122T032034_20170204T161719_A002174_T48NZG_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160808T032020_20160808T095750_A005892_T48NZH_N02_04_01|\n|L1C_T49MEV_A007665_20161210T024937|\n|L1C_T52MFB_A007650_20161209T014656|\n|S2A_OPER_MSI_L1C_TL_SGS__20161101T023007_20161101T072420_A007107_T50MQB_N02_04_01|\n|L1C_T50LNR_A007965_20161231T022638|\n|S2A_OPER_MSI_L1C_TL_MTI__20160320T021220_20160320T085750_A003875_T51NZA_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161116T014156_20161116T063120_A007321_T52MHB_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20160324T015203_20160325T155336_A003932_T52MEV_N02_01_01|\n|L1C_T48MXE_A007651_20161209T032245|\n|S2A_OPER_MSI_L1C_TL_SGS__20161122T020734_20161122T083734_A007407_T51LYL_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160924T031017_20160924T094957_A006564_T49NDA_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160810T022734_20160810T090232_A005920_T51MWQ_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160325T030031_20160325T115331_A003947_T49MGS_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161021T030018_20161021T093541_A006950_T49MDQ_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161116T014156_20161116T063120_A007321_T53MLS_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160115T012020_20160115T061624_A002945_T53MNN_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160806T024034_20160806T092156_A005863_T50NRK_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20160122T024837_20160123T002025_A003046_T50MMC_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161026T020951_20161026T070240_A007021_T51LYL_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20160718T034932_20160718T085635_A005592_T47MQQ_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160728T021024_20160728T070223_A005734_T51NYD_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161107T011138_20161107T041628_A007192_T54LTR_N02_04_01|\n|L1C_T51MXS_A007736_20161215T020440|\n|S2A_OPER_MSI_L1C_TL_SGS__20160901T012521_20160901T061102_A006234_T54MTA_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160819T011530_20160819T060038_A006048_T53MRN_N02_04_01|\n|L1C_T51LWK_A007879_20161225T020656|\n|S2A_OPER_MSI_L1C_TL_SGS__20161111T023109_20161111T072720_A007250_T51MUT_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160924T031017_20160924T094957_A006564_T49MCN_N02_04_01|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table601"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Occupation Title|\n|---|\n|Probation Officers and Correctional Treatment Specialists|\n|Plant and System Operators All Other|\n|Merchandise Displayers and Window Trimmers|\n|Medical and Clinical Laboratory Technologists|\n|Airfield Operations Specialists|\n|Crossing Guards|\n|Shoe and Leather Workers and Repairers|\n|Music Directors and Composers|\n|Commercial Pilots|\n|Producers and Directors|\n|Carpenters|\n|Occupational Health and Safety Technicians|\n|Cutters and Trimmers Hand|\n|Extraction Workers All Other|\n|Demonstrators and Product Promoters|\n|Team Assemblers|\n|Fine Artists Including Painters Sculptors and Illustrators|\n|Healthcare Social Workers|\n|Personal Care and Service Workers All Other|\n|Maintenance and Repair Workers General|\n|Economists|\n|Installation Maintenance and Repair Workers All Other|\n|Electrical and Electronics Repairers Powerhouse Substation and Relay|\n|Payroll and Timekeeping Clerks|\n|Recreation and Fitness Studies Teachers Postsecondary|\n|Construction and Building Inspectors|\n|Conveyor Operators and Tenders|\n|Cargo and Freight Agents|\n|Astronomers|\n|Foundry Mold and Coremakers|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table602"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Theater Freq|\n|---|\n|Daily|\n|Never|\n|Weekly|\n|Rarely|\n|Monthly|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table603"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|F2_USER_ID|\n|---|\n|PMUTWI01|\n|GTHOM546|\n|TDALI500|\n|SGAMB502|\n|DBURGE02|\n|LGRANT02|\n|DLESL506|\n|WMUSE001|\n|JGAMBL04|\n|MLEVIN03|\n|APALME01|\n|LBURN515|\n|MLIU0002|\n|PHALL504|\n|CKUNG002|\n|YLEE0008|\n|DPAGS500|\n|ENEWMA01|\n|BMIRA500|\n|GJANOS01|\n|AHELM001|\n|TSINGH02|\n|SVESS502|\n|DBEAS504|\n|PALEX510|\n|KSHANA02|\n|BPIETR01|\n|LBRIG501|\n|ESANDE05|\n|SKNOTT01|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table604"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Ancho|\n|---|\n|Plana|\n|9|\n|30|\n|Doble Cintillo|\n|19|\n|1\/2 Plana|\n|1\/4 Plana|\n|24|\n|25|\n|20|\n|Encarte|\n|Doble Plana|\n|22|\n|Cintillo|\n|14|\n|Otras Medidas|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table605"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Product Category|\n|---|\n|Condiments|\n|Dairy Products|\n|Seafood|\n|Meat\/Poultry|\n|Grains\/Cereals|\n|Produce|\n|Confections|\n|Beverages|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table606"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Code ZM|\n|---|\n|ZM940011-943450|\n|ZM060010-063410|\n|ZM490013-722420|\n|ZM760015-762130|\n|ZM140011-142270|\n|ZM800008-602190|\n|ZM490006-722420|\n|ZM800004-602190|\n|ZM910007-943450|\n|ZM450007-453490|\n|ZM620007-598370|\n|ZM770008-932410|\n|ZM490009-722420|\n|ZM340006-344200|\n|ZM340002-344200|\n|ZM210013-211980|\n|ZM690009-695630|\n|ZM870009-191960|\n|ZM540010-542470|\n|ZM640002-642020|\n|ZM810010-123320|\n|ZM250009-676000|\n|ZM840011-344200|\n|ZM860004-161400|\n|ZM210017-211980|\n|ZM630009-635490|\n|ZM860011-161400|\n|ZM140001-142270|\n|ZM760020-762130|\n|ZM370018-722420|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table607"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|VENDOR|\n|---|\n|HAISLIP KAMINER LEIGH|\n|ST JOHNS WATER COMPANY|\n|SITES AND INSIGHTS TOURS INC|\n|ALLIED 100|\n|SOCIETY FOR HUMAN RESOURCE MAN|\n|HARLEY HEATHER|\n|EASTSIDE COMMUNITY DEVELOPMENT|\n|STUBBS MULDROW HERIN ARCHITECT|\n|WILLIAMS FIRE APPARATUS  INC|\n|SC DEPARTMENT OF REVENUE|\n|ELITE TOWING|\n|COMCAST CABLEVISION OF CAROLIN|\n|FITBIT INC|\n|WULBERN KOVAL COMPANY|\n|W.W. NORTON & COMPANY|\n|SCRA (SOUTH CAROLINA RESEARCH|\n|MCSWEENEY GUY P|\n|EXTRA SPACE MANAGEMENT|\n|CORKY'S OUTDOOR POWER EQUIPMEN|\n|COC AUTO|\n|ADW ARCHITECTS|\n|PALMETTO COMMERCIAL PROPERTIES|\n|FISK CHARLES ROGERS|\n|SOUTH CAROLINA RETIREMENT SYST|\n|XEROX CORPORATION|\n|GUSTA'S OUTDOOR POWER EQUIPMEN|\n|FRASIER TIRE SERVICE|\n|CUMMINS ATLANTIC|\n|HIRE QUEST|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table608"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|\uc5f0\ub77d\ucc98|\n|---|\n|054-872-3455|\n|054-680-7082|\n|053-231-4800|\n|054-788-2035|\n|054-532-3910|\n|053-235-5182|\n|054-858-8051|\n|053-235-9111|\n|053-231-7800|\n|053-712-9805|\n|054-431-7011|\n|054-751-5053|\n|054-874-2624|\n|053-235-9404|\n|054-372-4594|\n|053-235-6563|\n|054-971-1223|\n|053-235-5800|\n|053-235-7451|\n|054-639-4507|\n|054-858-3211|\n|054-852-2223|\n|054-532-1516|\n|053-719-7700|\n|053-953-6201|\n|053-740-1702|\n|053-235-4553|\n|053-235-4719|\n|054-745-3713|\n|054-841-4091|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table609"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|MILL|\n|---|\n|ARCELORMITT|\n|TALLEY|\n|YIEH MAU|\n|tube mehtods|\n|GERARD DANIEL|\n|OUTO KUMPU|\n|GERARD\/NAS|\n|PLYMOUTH|\n|KUZE|\n|TA CHEN|\n|VALBRUNA|\n|NAS\\PREC|\n|TUBE MEHTODS|\n|CRUCIBLE|\n|KOBE|\n|PLY TUBE|\n|ELECTRALLOY|\n|NAS\\GERARD DANIEL|\n|GIBSON|\n|NAS\\GDW|\n|DOM\/DFAR|\n|tube methods|\n|HPA|\n|SHANXI TAIGANG|\n|THYSSEN KRUPP|\n|WALSIN LINWA|\n|NAS\\PSM|\n|THYSSEN KRUPP\\MEXINOX|\n|MEXINOX|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['tube methods', 'tube mehtods']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table61"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Estado|\n|---|\n|Nayarit|\n|Colima|\n|Jalisco|\n|Zacatecas|\n|Guanajuato|\n|Aguascalientes|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table610"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|\u00c4rende nr|\n|---|\n|SHS2016-0118|\n|SHS2017-0067|\n|SHS2017-0003|\n|SHS2016-0041|\n|SHS2017-0071|\n|SHS2016-0038|\n|SHS2016-0150|\n|SHS2016-0003|\n|SHS2017-0066|\n|SHS2016-0176|\n|SHS2017-0064|\n|SHS2016-0167|\n|SHS2016-0172|\n|SHS2017-0062|\n|SHS2017-0008|\n|SHS2016-0098|\n|SHS2016-0048|\n|SHS2017-0031|\n|SHS2016-0040|\n|SHS2016-0135|\n|SHS2017-0036|\n|SHS2017-0065|\n|SHS2017-0025|\n|SHS2016-0143|\n|SHS2016-0171|\n|SHS2016-0032|\n|SHS2016-0141|\n|SHS2017-0076|\n|SHS2016-0025|\n|SHS2016-0090|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table611"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|County|\n|---|\n|TERRELL|\n|ARANSAS|\n|LAVACA|\n|KAUFMAN|\n|RUNNELS|\n|RANDALL|\n|HALE|\n|KNOX|\n|SUTTON|\n|HARTLEY|\n|FRIO|\n|HUDSPETH|\n|CALLAHAN|\n|TRINITY|\n|DUVAL|\n|LYNN|\n|WOOD|\n|MORRIS|\n|CONCHO|\n|YOAKUM|\n|WARD|\n|MILLS|\n|CLAY|\n|LIPSCOMB|\n|ANDERSON|\n|MONTAGUE|\n|HASKELL|\n|HARRIS|\n|HAYS|\n|STEPHENS|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table612"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Highest Education|\n|---|\n|BL\/LLB|\n|Others|\n|M.Com|\n|BCA|\n|CS|\n|Doctorate(Phd)|\n|BE\/B.Tech|\n|BDS|\n|MCA\/PGDCA|\n|B.Com|\n|MBA\/PGDM|\n|B.Sc|\n|M.Sc|\n|B.A.|\n|ME\/M.Tech|\n|Diploma|\n|M.Phil|\n|MA|\n|BBA|\n|CA|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table613"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Employer's State\/Country|\n|---|\n|RI|\n|Guam|\n|NJ|\n|TX|\n|CT|\n|China|\n|MD|\n|VA|\n|OK|\n|IL|\n|LA|\n|WI|\n|OR|\n|CA|\n|NC|\n|Czech Republic|\n|MN|\n|IN|\n|NH|\n|OH|\n|Honduras|\n|WA|\n|FL|\n|CO|\n|PA|\n|MI|\n|MA|\n|DC|\n|NY|\n|Brazil|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table614"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Race|\n|---|\n|WHITE|\n|HISP|\n|OTHER|\n|ASIAN|\n|BLACK|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table615"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|TRAG_ALLO_TRAC|\n|---|\n|89  0320|\n|89  0314|\n|89  5653|\n|89  0309|\n|89  0216|\n|89  5530|\n|89  0315|\n|89  0303|\n|89  0215|\n|89  5523|\n|89  0242|\n|89  0240|\n|89  0244|\n|89  0319|\n|89  0302|\n|89  0251|\n|89  5649|\n|89  0313|\n|89  0323|\n|89  4486|\n|89  5069|\n|89  4563|\n|89  0321|\n|89  5615|\n|89  4452|\n|89  0228|\n|89  5068|\n|89  0337|\n|89  0318|\n|89  0233|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table616"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Month|\n|---|\n|JUL|\n|DEC|\n|OCT|\n|FEB|\n|AUG|\n|JAN|\n|NOV|\n|SEP|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table617"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|municipio_C_254|\n|---|\n|Utuado|\n|Naranjito|\n|Isabela|\n|Lajas|\n|Jayuya|\n|Humacao|\n|Arecibo|\n|Cidra|\n|Aguas Buenas|\n|Caguas|\n|Cayey|\n|Orocovis|\n|Toa Alta|\n|Ciales|\n|Toa Baja|\n|Aguada|\n|Culebra|\n|Arroyo|\n|Sabana Grande|\n|Guayanilla|\n|Quebradillas|\n|Guayama|\n|Hatillo|\n|Aibonito|\n|Patillas|\n|Guaynabo|\n|Cabo Rojo|\n|Juncos|\n|Carolina|\n|Ponce|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table618"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Vereinsname|\n|---|\n|Birkhahn Eschetshub|\n|SV Reiterhof Teising|\n|Alztaler FS Wald|\n|SV Reiterhof Teising 1|\n|SV Eintracht Wald|\n|SV Falken Niedergottsau|\n|Hubertus Sportsch. Ver. Erlbach 1|\n|Hubertus Sportsch. Ver. Erlbach 2|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table619"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Je|\n|---|\n|Barr & Pervost|\n|Alliga|\n|Solar Testing labs|\n|Barr & Prevost|\n|DLZ|\n|QCS|\n|Summit|\n|SME|\n|CSI|\n|Bowser-Morner|\n|Solar Testing|\n|Terracon|\n|TTL|\n|TLL|\n|Bowser Morner|\n|CCT|\n|Barr|\n|Thelen|\n|Resorce International|\n|S&ME|\n|Geotechincal  Consultants|\n|Rll|\n|Resource International|\n|Solar|\n|shelly  company|\n|PSI|\n|Barr& Prevost|\n|Solar  Testing labs|\n|THELEN CONSULTANTS|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Resource International', 'Resorce International']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table62"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Scene ID|\n|---|\n|S2A_OPER_MSI_L1C_TL_MPS__20161030T234225_20161031T004634_A007091_T57LZH_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20151225T234216_20151226T010640_A002658_T57LWJ_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_MPS__20161109T234034_20161110T004608_A007234_T57LZJ_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_MPS__20161030T234225_20161031T004634_A007091_T57LXJ_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_MPS__20161119T234122_20161120T004609_A007377_T57LYL_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160220T000137_20160220T063736_A003459_T57LTK_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160314T234212_20160315T080940_A003802_T57LZH_N02_01_01|\n|L1C_T57MUN_A007892_20161225T235821|\n|S2A_OPER_MSI_L1C_TL_SGS__20160910T234226_20160911T010147_A006376_T57LWJ_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_MPS__20161205T235831_20161206T010151_A007606_T57MTN_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160104T234049_20160105T011542_A002801_T57LZH_N02_01_01|\n|L1C_T58LBN_A007949_20161229T233809|\n|S2A_OPER_MSI_L1C_TL_SGS__20160304T234211_20160305T094625_A003659_T57LWH_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20151128T235158_20170429T112931_A002272_T57MWM_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161007T233155_20161008T005129_A006762_T58LBQ_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160324T234014_20160325T062604_A003945_T57LYJ_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161013T235012_20161014T011245_A006848_T57MVM_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161102T235014_20161103T011225_A007134_T57LVL_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20151215T234216_20151216T010414_A002515_T57LZH_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20151128T235158_20170509T143613_A002272_T57LUL_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161116T000009_20161116T012340_A007320_T57LTK_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20151205T234046_20170519T134549_A002372_T57LWK_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161206T000008_20161206T012224_A007606_T57MVN_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20151121T235901_20170222T003450_A002172_T57MUN_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160111T000140_20160111T013556_A002887_T57MUN_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160725T235020_20160726T011312_A005704_T57LVJ_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_MPS__20160602T233950_20160603T004457_A004946_T57LXL_N02_02_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20151228T235159_20151229T012636_A002701_T57LXK_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160213T234213_20160214T011155_A003373_T57LXL_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160114T234214_20160115T011500_A002944_T57LYL_N02_01_01|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table620"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|pDomTHREADER recognition|\n|---|\n|b.159.2(3-133)|\n|c.69.1(50-442)|\n|False positive|\n|d.3.1(1-76)|\n|c.69.1(61-411)|\n|f.7.1(1-165)|\n|c.103.1(1-107)|\n|a.118.1(1-669)|\n|d.108.1(1-146)|\n|c.69.1(1-190)|\n|a.281.1(1-108)|\n|b.105.1(1-65)|\n|c.37.1(68-298)|\n|a.276.1(12-88)|\n|c.76.1(128-459)|\n|a.200.1(1-117)|\n|d.129.8(50-127)|\n|d.17.4(8-144)|\n|a.24.29(26-146)|\n|d.349.1(13-82)|\n|b.7.5(2-137)|\n|b.1.19(1-125)|\n|d.50.3(7-75)|\n|b.60.1(1-136)|\n|a.79.1(1-140)|\n|d.331.1(4-79)|\n|d.58.48(1-92)|\n|b.129.2(1-88)|\n|d.86.1(42-236)|\n|d.58.54(1-85)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table621"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Offense|\n|---|\n|90D|\n|280|\n|290|\n|90J|\n|90C|\n|26A|\n|90Z|\n|90H|\n|11D|\n|35B|\n|90E|\n|23H|\n|23C|\n|220|\n|13C|\n|23D|\n|26B|\n|270|\n|250|\n|240|\n|23G|\n|23F|\n|13A|\n|13B|\n|11A|\n|35A|\n|120|\n|100|\n|26C|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table622"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|DESTINO|\n|---|\n|Manzanillo Col.|\n|Puerto Escondido B.C.S.|\n|Topolobampo Sin.|\n|Progreso Yuc.|\n|Ensenada B.C.|\n|Acapulco Gro.|\n|Playa del Carmen Q. Roo|\n|Zihuatanejo Gro.|\n|San Carlos B.C.S.|\n|Majahual Q. Roo|\n|Cozumel Q. Roo|\n|Puerto Vallarta Jal.|\n|Pichilingue B.C.S.|\n|Cabo San Lucas B.C.S.|\n|Huatulco Oax.|\n|Guaymas Son.|\n|La Paz B.C.S.|\n|Loreto B.C.S.|\n|Puerto Chiapas Chis.|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table623"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Vendor Name|\n|---|\n|TX POLICE CHIEF'S ASSOC. FNDTN|\n|JOSHUA ANDREW CONGLETON|\n|MONTGOMERY COUNTY UNITED WAY|\n|TEXAS CHILD SUPPORT|\n|CROWN PAPER & CHEMICAL|\n|CSA TECHNICAL LLC|\n|DXI INDUSTRIES INC.|\n|AW TOWING|\n|LONE STAR PRODUCTS\/EQUIPMENT LLC|\n|MEMORIAL HERMANN HOSPITAL|\n|TEXAS MUNICIPAL RETIREMENT SYSTEM|\n|METLIFE SMALL BUSINESS CENTER|\n|SKELTON BUSINESS EQUIPMENT|\n|PITNEY BOWES GLOBAL FIN. SRVS LLC|\n|TED WASHINGTON VISUAL COMMUNICATIONS|\n|SHI|\n|DELL MARKETING L.P.|\n|ABC HOME\/COMMERCIAL SRVCS OF HOU.|\n|ENTERGY|\n|SYMBOL ARTS|\n|FLEETTRAX INC.|\n|CITY OF SHENANDOAH GENERAL FUND|\n|NCAA|\n|HAHN EQUIPMENT CO. INC.|\n|TERRACON CONSULTANTS INC.|\n|COMPTROLLER OF PUBLIC ACCOUNTS|\n|VALERO MARKETING AND SUPPLY CO.|\n|RED THE UNIFORM TAILOR|\n|BLUE CROSS\/BLUE SHIELD OF TEXAS|\n|MEGHEN OWEN|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table624"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Country|\n|---|\n|S|\n|W|\n|IoM|\n|NI|\n|E|\n|CI|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table625"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|FY2_FY1|\n|---|\n|18  17|\n|16|\n|XX|\n|18|\n|15|\n|19  18|\n|X|\n|18  15|\n|20  18|\n|17|\n|19  17|\n|13  12|\n|13|\n|nan|\n|18  16|\n|15  14|\n|14|\n|17  15|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table626"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|F2_USER_PHONE|\n|---|\n|410-966-1508|\n|410-966-9696|\n|410-965-1234|\n|nan|\n|410-966-5298|\n|410-965-9278|\n|410-965-7161|\n|410-966-5309|\n|410-965-7079|\n|410-965-6081|\n|410-965-5639|\n|410-966-5535|\n|410-965-7074|\n|410-965-0729|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table627"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|country|\n|---|\n|Australia|\n|Fiji|\n|Brazil|\n|Mauritius|\n|Armenia|\n|Tanzania|\n|Jordan|\n|Honduras|\n|Croatia|\n|Estonia|\n|Iran|\n|Afghanistan|\n|Algeria|\n|Palestine|\n|Lithuania|\n|France|\n|Ukraine|\n|Ireland|\n|Switzerland|\n|Taiwan|\n|Belarus|\n|Albania|\n|Hungary|\n|Barbados|\n|Malaysia|\n|Turkey|\n|Nigeria|\n|Morocco|\n|Luxembourg|\n|Sint Maarten|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table628"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Manufacturer|\n|---|\n|Shanghai Surpass Sun Electric Co. Ltd.|\n|Tesla Motors Australia Pty Ltd|\n|Shanghai Trannergy Power Electronics Co. Ltd.|\n|Solax Power Network Technology Zheijiang Co Ltd|\n|Shenzhen Growatt new energy technology Co Ltd|\n|Bosch Power Tec GmbH|\n|Studer Innotec SA (Studer)|\n|Plasmatronics Pty Ltd|\n|Energy Storage Australia Pty Ltd|\n|Morningstar Corporation|\n|One Solar International Pty Ltd|\n|Hansol Technics Co. Ltd|\n|Deutsche Energieversorgung GmbH|\n|Schneider Electric Solar Inverters USA Inc|\n|Omnik New Energy Co Ltd|\n|Global Connections Group Pty Ltd T\/as Aquila power|\n|Shenzhen INVT Electric Co.Ltd.|\n|Siemens Ltd|\n|Hoymiles Converter Technology Corporation Limited|\n|Latronic Sunpower|\n|Sungrow Power Supply Co Ltd|\n|IMEON ENERGY|\n|Ningbo Ginlong Technologies Co Ltd|\n|Zhejiang BLD Solar Technology CO. LTD.|\n|SolarEdge Technologies|\n|Enphase Energy|\n|Hangzhou Sunny Energy Science and Technology Co Ltd|\n|Fronius Australia Pty Ltd|\n|Victron Energy BV|\n|Shenzhen Sinexcel Electric Co Ltd|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table629"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|DEPARTMENT \/ UNIT|\n|---|\n|School of Nursing and Dental Hygiene|\n|Office of VC for Research UHM|\n|School of Ocean and Earth Science and Technology Pacific Biosciences Research Center|\n|Institute for Astronomy|\n|School of Ocean and Earth Science and Technology|\n|Office of VP for B & F\/CFO Financial Management Office Property & Fund Management|\n|instiute for astronomy|\n|College of Tropical Agriculture and Human Resources|\n|Office of VP for B & F\/CFO Financial Management Office Bursar|\n|John A. Burns School of Medicine Anatomy\/IBR|\n|Office of VP for Administration Facilities Business Office|\n|College of Arts & Humanities|\n|School of Pacific and Asian Studies|\n|Office of VP for Research and Innovation Office of Technology Transfer & Economic Development|\n|College of Social Sciences Social Science Research Institute|\n|William S. Richardson School of Law|\n|Office of VC for Academic Affairs UHM Office of Undergraduate Education|\n|Library Services|\n|Community College Leeward Community College|\n|Shidler College of Business|\n|Pacific Disaster Center (RCUH)|\n|Office of VP for Research and Innovation Science Technology Engineering Mathematics|\n|School of Architecture|\n|UHM Facilities Business Office|\n|School of Ocean and Earth Science and Technology Department of Geology & Geophysics|\n|Myron B. Thompson School of Social Work|\n|Instiute for Astronomy|\n|External Affairs and University Relations|\n|Office of VP for B & F\/CFO  Financial Management Office|\n|institute for astronomy|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['institute for astronomy', 'instiute for astronomy']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table63"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Titel|\n|---|\n|Konsultuppdrag Torsten Danfors|\n|Digital Introduktion|\n|Klassificeringsstruktur Version KS 2017 1:0|\n|ISSUANCE OF CORPORATE REGISTRATION NUMBER|\n|Utvecklingsfonden - Akademiska sjukhuset|\n|Leveransavtal Phadia KITM|\n|Sekretessavtal PET-studie om neurodegeneration|\n|Serviceavtal ThermoFischer Scientific - MSI|\n|Akademiskamodellerna|\n|Kadcyla|\n|Lokaler - tvingande flytt|\n|Avtal - reproduktionscentrum och Vitrolife|\n|Serviceplan Merck Millipore - MSI|\n|Avtal om auskultation mellan Takeda och blodmottagningen.|\n|Long-term prognosis of patients with microscopic colitis - Specialmedicin hud och reumatologi|\n|Service Support Qiagen AB - MSI|\n|Leverbiopsiregister - Specialmedicin hud och reumatologi|\n|MR-hybrid - interoperativ 3T MR-kamera - J-huset|\n|Utvecklingsfonden 2017 - Akademiska sjukhuset|\n|Avtal kaffeautomater paramedicin 2017|\n|Baxalta kontrakt human plasma - KITM|\n|Justering till befintligt avtal GE Healthcare Sverige AB - MSI|\n|Serviceavtal (Thermo Fisher Scientific) Phadia AB - MSI|\n|1 serviceavtal Cannon Buisiness Center Uppsala 1 hyresavtal Siemens Financial Services AB|\n|Serviceavtal Tecan Nordic AB - MSI|\n|Akademiska sjukhusets budget 2017|\n|Fullmakt - Nationella upphandlingar|\n|Tillsyn VO Ortopedi Ortopedavdelning 70E2|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table630"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|ACCTLT|\n|---|\n|Public Telecommunications Facilities Planning and Construction|\n|Public Safety Trust Fund|\n|Procurement of Ammunition Army|\n|Research Development Test and Evaluation Defense-wide|\n|Procurement Marine Corps|\n|Military Construction Air Force|\n|Overseas Contingency Operations Transfer Fund|\n|Medicare-Eligible Retiree Health Fund Contribution Navy|\n|United States Court of Appeals for the Armed Forces|\n|Fisheries Finance Program Account|\n|Census Working Capital Fund|\n|National Security Education Trust Fund|\n|Minority Business Development|\n|Fishermen's Contingency Fund|\n|Afghanistan Security Forces Fund|\n|Research Development Test and Evaluation Air Force|\n|Family Housing Improvement Direct Loan Financing Account|\n|Defense Health Program|\n|Emergency Steel Oil and Gas Guaranteed Loan Program Account|\n|Economic Development Revolving Fund Liquidating Account|\n|European Reassurance Initiative|\n|Procurement of Ammunition Navy and Marine Corps|\n|Working Capital Fund Defense-Wide|\n|Drug Interdiction and Counter-Drug Activities Defense|\n|Reserve Personnel Navy|\n|Economic Development Assistance Programs|\n|Family Housing Operation and Maintenance Navy and Marine Corps|\n|Promote and Develop Fishery Products and Research Pertaining to American Fisheries|\n|Concurrent Receipt Accrual Payments to the Military Retirement Fund|\n|Construction of Research Facilities|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table631"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|CM Einheit|\n|---|\n|3\/1|\n|3\/4|\n|Abt. KPA|\n|1\/2|\n|1|\n|2|\n|4\/2|\n|3\/2|\n|3|\n|4|\n|4\/1|\n|2\/3|\n|1\/4|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table632"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Last Name2|\n|---|\n|Peters|\n|Therrien|\n|Ranttila|\n|Allen|\n|Saunders|\n|Stute|\n|Cole|\n|Owen|\n|Martin|\n|Giorgi|\n|Selleck|\n|Jewett|\n|Rivers|\n|DeJnozka|\n|Barrett|\n|Yule|\n|Gates|\n|Burgess|\n|Bruso|\n|Lareau|\n|Niles|\n|Springthorpe|\n|Jomaa|\n|Drew|\n|Barnes|\n|Coppola|\n|Faulkner|\n|Lewis|\n|Treat|\n|Sausville|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table633"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Borough|\n|---|\n|Queens|\n|Manhattan|\n|Brooklyn|\n|Bronx|\n|Staten Island|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table634"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|O\u015b - nazwa|\n|---|\n|Zasoby ludzkie|\n|Informacja i promocja|\n|Kadry dla gospodarki|\n|Infrastruktura edukacyjna|\n|Gospodarka i innowacje|\n|Kompetencje i kwalifikacje|\n|Konwersja|\n|Innowacyjna i konkurencyjna gospodarka|\n|Czysta energia|\n|Rynek pracy|\n|Integracja|\n|Regionalny rynek pracy|\n|Infrastruktura drogowa dla miast|\n|Aktywni na rynku pracy|\n|Gospodarka niskoemisyjna|\n|Zdrowie|\n|Efektywne polityki publiczne dla rynku pracy gospodarki i edukacji|\n|Innowacyjna edukacja|\n|Kultura i dziedzictwo|\n|Pomoc techniczna|\n|Regionalne kadry gospodarki opartej na wiedzy|\n|Edukacja|\n|Infrastruktura publiczna|\n|Regionalna Polityka Energetyczna|\n|Gospodarka Wiedzy|\n|Nowoczesna komunikacja|\n|Wiedza i Kompetencje|\n|Ponadregionalna Infrastruktura Kolejowa|\n|Rewitalizacja Przestrzeni Regionalnej|\n|Konkurencyjna gospodarka|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table635"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Department|\n|---|\n|Dining|\n|Kids Room|\n|Bedroom|\n|Living Room|\n|Kitchen|\n|Bath|\n|Entryways|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table636"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|IPRES|\n|---|\n|00006832 - LA CONGONA|\n|00008922 - CASCARILLA|\n|00004530 - CALLUAN|\n|00007048 - SEXESHITA|\n|00007365 - MINAS|\n|00004835 - YAUYUCAN|\n|00004751 - CHUGUR DE ANGUIA|\n|00018121 - EL PORVENIR|\n|00011061 - NUEVO ORIENTE DE SOCOTA|\n|00004817 - QUIO|\n|00008803 - VILCASIT|\n|00004219 - CHAMBAMONTERA|\n|00004761 - CUTAXI|\n|00004294 - PACAYPITE|\n|00004214 - LAS NARANJAS|\n|00007120 - CHUGUR|\n|00004298 - CESARA|\n|00007178 - RAYME|\n|00004306 - YARARAHUE|\n|00004710 - SEXI|\n|00006862 - PALO QUEMADO|\n|00004568 - SAN SILVESTRE DE COCHAN|\n|00006993 - CHAMANAL|\n|00004491 - CHANCAY|\n|00004230 - SAN AUGUSTIN|\n|00005040 - HOSPITAL VIRGEN DE LA CANDELARIA DE SOCOTA|\n|00004255 - PIQUIJACA|\n|00004808 - MORAN LIRIO|\n|00007710 - LINGAN GRANDE|\n|00007101 - EL GUAYO|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table637"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Day|\n|---|\n|Thu|\n|Fri|\n|Sat|\n|Mon|\n|Tue|\n|Wed|\n|Sun|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table638"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|FirstName|\n|---|\n|Darcy|\n|Joel|\n|Barb|\n|Al|\n|Jay|\n|Cecile|\n|Albert|\n|Jason|\n|Tina|\n|Elis|\n|Mike|\n|Rob|\n|Fred|\n|John|\n|Bob|\n|Janet|\n|Adam|\n|Charles|\n|Janice|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table639"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Worker|\n|---|\n|Federal\/State|\n|Private|\n|Contractor|\n|Other|\n|Federal\/Private|\n|State\/Contractor|\n|Federal\/Contractor|\n|Contractor\/Federal|\n|Military|\n|City|\n|State|\n|Federa|\n|Army|\n|State\/Other|\n|0|\n|Unknown|\n|Volunteer|\n|Federal|\n|County|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Federa', 'Federal']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table64"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Age Group|\n|---|\n|19-24|\n|65 & Above|\n|35-54|\n|55-64|\n|16-18|\n|30-34|\n|25-29|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table640"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Institution Name|\n|---|\n|Medical Educational Center|\n|Chicago Instruction Center for Career Development|\n|General Assembly|\n|Chicago Pulse CPR Training Inc.|\n|Great Paragon Healthcare Inc|\n|Avid CNA School (Avid Associate LLC)|\n|Rockford Career College (New Media Arts Training Center)|\n|ATS Institute of Technology (MDT College of Health Sciences Inc)|\n|Career Options Inc|\n|School of Holistic Massage and Reflexology|\n|Coyne College (Coyne American Institute)|\n|Carepaks Health Services Inc|\n|Skokie Institute of Allied Health and Technology|\n|South Technical Center Inc|\n|Chicago School of Violin Making Inc|\n|The Beauty Crew Academy|\n|Alexander Graham Bell Montessori School (Montessori Teacher Training Institute)|\n|University of Spa and Massage Therapy|\n|IT Expert System Inc|\n|Vital Signs Healthcare Training Institute|\n|Pyramid Career Institute|\n|I See Music LLC|\n|COMNet Group Inc.|\n|Best Step Academy|\n|Phalanx Family Services|\n|French Pastry School|\n|The College of Chicago|\n|Joseph Business School (The Joseph Center)|\n|Midwest Career Source (Rhema Foundation)|\n|Building and Fire Code Academy|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table641"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Kommune|\n|---|\n|AUSTRHEIM|\n|SANDNES|\n|GRIMSTAD|\n|HALDEN|\n|HAREID|\n|ULLENSVANG HERAD|\n|MOSS|\n|VENNESLA|\n|MELDAL|\n|OS (HORDALAND)|\n|SKEDSMO|\n|NESODDEN|\n|FJELL|\n|SOKNDAL|\n|RAUMA|\n|STRANDA|\n|OSLO|\n|GJERDRUM|\n|RANA|\n|BEIARN|\n|LIER|\n|RAKKESTAD|\n|ODDA|\n|TRONDHEIM|\n|MELHUS|\n|HOLE|\n|SKIEN|\n|HOLMESTRAND|\n|HURUM|\n|FAUSKE|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table642"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Denominaci\u00f3n del puesto|\n|---|\n|PEDAGOGO|\n|SECRETARIA DE JEFE DE DEPARTAMENTO|\n|AUX. DE SERVICIOS Y MANTENIMIENTO|\n|CUSTODIO EN RECL. Y CENT. PENITENCIARIOS|\n|RADIO OPERADOR|\n|ANALISTA TECNICO|\n|SECRETARIA AUX. DE SUBDIRECTOR DE AREA|\n|MENSAJERO|\n|AUX. SERVICIOS Y MANTENIMIENTO (CEVASEP)|\n|PROCESADOR DE INFORMACION|\n|PROCESADOR DE ALIMENTOS CENTRO READP.SOC|\n|PLOMERO|\n|SECRETARIA AUXILIAR DE DIRECTOR DE AREA|\n|ADMINISTRADOR|\n|JEFE DE CUSTODIOS|\n|PROFESOR DE EDUCACION FISICA|\n|AUXILIAR DE ANALISTA ADMINISTRATIVO|\n|SUPERVISOR EN ELECTRONICA|\n|JEFE DE SECCION|\n|TECNICO PENITEN. ACTIV. PRODUC.(CEVASEP)|\n|TEC. PENITEN. AUX. ACTIV. PROD.(CEVASEP)|\n|COORDINADOR DE SEGURIDAD (CEVASEP)|\n|AUXILIAR DE SERVICIOS|\n|AUXILIAR DE ANALISTA PROFESIONAL|\n|INTENDENTE|\n|SECRETARIA DE JEFE DE OFICINA|\n|COORD. DE SISTEMATIZACION ADMINISTRATIVA|\n|INSPECTOR EN SEGURIDAD|\n|TEC. PENITEN. AUX. EN PEDAGOGIA(CEVASEP)|\n|SUPERVISOR DE ADUANA EN RECLUSORIOS|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table643"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|DATA FIM ARS|\n|---|\n|29\/04\/2015|\n|31\/12\/2011|\n|08\/02\/2017|\n|17\/08\/2015|\n|30\/04\/2014|\n|07\/03\/2012|\n|04\/02\/2016|\n|23\/04\/2015|\n|10\/02\/2012|\n|31\/03\/2014|\n|02\/06\/2011|\n|01\/04\/2016|\n|16\/10\/2016|\n|05\/01\/2018|\n|11\/01\/2018|\n|09\/07\/2015|\n|31\/05\/2012|\n|29\/05\/2017|\n|28\/02\/2015|\n|26\/08\/2015|\n|31\/12\/2012|\n|03\/06\/2012|\n|02\/10\/2011|\n|24\/08\/2010|\n|10\/10\/2015|\n|31\/10\/2011|\n|18\/03\/2015|\n|11\/07\/2017|\n|06\/04\/2016|\n|15\/03\/2004|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table644"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Laitos|\n|---|\n|Aktia|\n|Kaleva|\n|Mandatum|\n|Aurum|\n|Fennia|\n|OP|\n|Alandia|\n|SHB Liv|\n|Retro|\n|Suomi|\n|Sp|\n|Nordea|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table645"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Thread|\n|---|\n|NPTF|\n|NJC|\n|PL|\n|6125|\n|M|\n|MC|\n|M10C|\n|W12C|\n|NJEF|\n|N.|\n|NPSI|\n|EG-MF|\n|NEF|\n|WF|\n|GC|\n|MJ|\n|EG-NF|\n|PG|\n|G|\n|NC|\n|EG-M|\n|WS|\n|MCS|\n|NPSM|\n|BSC|\n|TR|\n|NPSH|\n|VG|\n|RP|\n|NJF|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table646"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Kind of Tool|\n|---|\n|NOT|\n|ICUNI|\n|MOVIM|\n|ERGP|\n|N|\n|PUNTA|\n|3P|\n|IC|\n|TDINT|\n|TDGP|\n|TDAZ|\n|FCEGP|\n|ESP2S|\n|ELC|\n|TDOT|\n|ERAZ|\n|TD20|\n|CAM|\n|ERUNI|\n|EL|\n|ER|\n|ICGP|\n|FPL|\n|ERVA|\n|ICVA|\n|TD|\n|2P|\n|FORM|\n|CONO|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table647"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|County1|\n|---|\n|Columbia|\n|Clay|\n|Franklin|\n|Dixie|\n|Okaloosa|\n|Miami-Dade|\n|Bay|\n|Lake|\n|Alachua|\n|Marion|\n|Hillsborough|\n|Polk|\n|Suwannee|\n|Hamilton|\n|Lafayette|\n|Gulf|\n|Indian River|\n|Santa Rosa|\n|Calhoun|\n|Madison|\n|Duval|\n|Pinellas|\n|Monroe|\n|Union|\n|Holmes|\n|Escambia|\n|Glades|\n|Bradford|\n|Sumter|\n|Wakulla|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table648"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Rivivalinta|\n|---|\n|1. Kokonaistulos|\n|1.1 Vakuutusliikkeen tulos|\n|2.1 Vakavaraisuuden muutokseen|\n|2.1.3 Arvostuserojen muutokseen|\n|1.2.2 Vastuuvelan tuottovaatimus (-)|\n|2.1.5 Tilikauden voittoon|\n|2.2 Siirtoon asiakashyvityksiin|\n|1.3 Hoitokustannustulos|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table649"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Sector Level 4|\n|---|\n|Harquahala Generating Project (AZ)|\n|Lumber & Wood Products|\n|Computers & Office Machines|\n|Nitric Acid|\n|Klamath Falls Cogen (OR)|\n|Port activities|\n|Effluent Emissions|\n|Heavy-duty Trucks Buses & Motorhomes|\n|Anaerobic Digesters|\n|Plant Emissions|\n|Solid storage|\n|Motorcycles|\n|Dry lot|\n|Blundell (UT)|\n|Apache Station (AZ)|\n|Furniture & Fixtures|\n|Termoelectrica de Mexicali (MEX)|\n|Yuma Cogeneration Associates (AZ)|\n|Kettle Falls (WA)|\n|Anaerobic digester|\n|Flat Glass|\n|Fabricated Metal Products|\n|Poultry with bedding|\n|Four Corners (NM)|\n|Bonanza (UT)|\n|Poultry without bedding|\n|Lime|\n|Griffith Energy (AZ)|\n|Daily spread|\n|Bonneville Power Administration (PNW)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Anaerobic digester', 'Anaerobic Digesters']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table65"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Gamme|\n|---|\n|RC8|\n|RC6|\n|RC6E|\n|RC8R|\n|RC5|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table650"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Hometown City|\n|---|\n|Wonowon|\n|Whitby|\n|Windsor|\n|Mississauga|\n|Burlington|\n|Vercheres|\n|Fort McMurray|\n|Marathon|\n|Dartmouth|\n|Waterford|\n|Charlottetown|\n|New Market|\n|Donkin|\n|Bromont|\n|Sherbrooke|\n|Stony Plain|\n|St. Thomas|\n|Vancouver|\n|Delisle|\n|Kitchener|\n|Langley|\n|Boyle|\n|St-Denis de Brompton|\n|Chilliwack|\n|Leoville|\n|Cochrane|\n|Halifa|\n|Airdrie|\n|Eastern Passage|\n|Greenfield Park|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table651"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Product|\n|---|\n|Product3|\n|Entera CRM|\n|Product4|\n|Product1|\n|Product2|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table652"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Cooling|\n|---|\n|CUT IN WALL AIR COND|\n|nan|\n|NONE|\n|CNTR AIR SEPARAT DTC|\n|OTHER|\n|HEAT PUMP|\n|AIR CONDITIONING|\n|CNTR AIR COMMON DUCT|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table653"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Sources and Uses Category|\n|---|\n|Institutional Support|\n|Student Services|\n|Unrealized Gains \/ (Losses)|\n|Research|\n|Net Auxiliary Enterprises|\n|Endowment and Interest Income|\n|Operations and Maintenance of Plant|\n|Private Gifts and Grants - Restricted|\n|Local Government Grants - Restricted|\n|Auxiliary Enterprises|\n|Other Income|\n|State Grants and Contracts|\n|Tax Collections|\n|Scholarships and Fellowships|\n|Federal Grants and Contracts - Restricted|\n|Mandatory and Non-mandatory Transfers|\n|Sales and Services|\n|Depreciation Expense|\n|Additions to Permanent Endowments|\n|State Appropriations|\n|Instruction|\n|Debt Service Payments|\n|Public Service|\n|Academic Support|\n|Non-Cash Capital Gifts|\n|Other Expenses|\n|Net Tuition and Fees|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table654"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Klient|\n|---|\n|Krzysztof Beca|\n|Marta Ziatyk|\n|Iwona Wentis|\n|Joanna Owczarek|\n|Marcin Kutkowski|\n|Marcin Kucharski|\n|Kazimierz Odziomek|\n|Agnieszka Kijko|\n|Kazimierz Kubik|\n|Justyna Kuras|\n|Marlena Hubicka|\n|Piotr Turowski|\n|Halina Korczyc|\n|Arkadiusz Cymer|\n|Dorota Tujek|\n|Marek Jakubiak|\n|Zofia Szczotkiewicz|\n|Bogdan Olejniczak|\n|Kamil Bednarz|\n|Marek Matela|\n|Teresa Kurowska|\n|Julian Nowicki|\n|Ireneusz Bednarczyk|\n|Wojciech Jankowski|\n|Kamil Puzio|\n|Tadeusz Biernat|\n|Tomasz Kwiatkowski|\n|Zbigniew Pupiec|\n|Alicja Meslin|\n|Andrzej Sokalski|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table655"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|L_District|\n|---|\n|Jablah|\n|Banyas|\n|Homs|\n|Ain Al Arab|\n|Quneitra|\n|Yabroud|\n|Ras Al Ain|\n|Ath-Thawrah|\n|Izra'|\n|Muhradah|\n|Al-Haffa|\n|Al Fiq|\n|As-Sanamayn|\n|Al-Qardaha|\n|At Tall|\n|Ariha|\n|As-Sweida|\n|Tell Abiad|\n|Damascus|\n|An Nabk|\n|Idleb|\n|As-Salamiyeh|\n|Qatana|\n|Jarablus|\n|Masyaf|\n|Salkhad|\n|Tartous|\n|Tall Kalakh|\n|Al Qutayfah|\n|Darayya|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table656"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Granule Name|\n|---|\n|S1A_IW_GRDH_1SDV_20160130T175237_20160130T175306_009727_00E345_4D10|\n|S1A_IW_RAW__0SDV_20160715T061206_20160715T061236_012155_012D73_59FA|\n|S1B_IW_RAW__0SDV_20161221T054938_20161221T054957_003490_005F75_0D02|\n|S1B_IW_SLC__1SDV_20161210T062854_20161210T062919_003330_005AF5_0441|\n|S1B_IW_GRDH_1SDV_20161108T055519_20161108T055544_002863_004DA7_7658|\n|S1B_IW_GRDH_1SDV_20161207T060400_20161207T060425_003286_0059AB_894A|\n|S1A_IW_RAW__0SDV_20160311T052226_20160311T052303_010317_00F45C_D168|\n|S1A_IW_GRDH_1SDV_20161027T174523_20161027T174548_013679_015EF6_E943|\n|S1A_IW_GRDH_1SDV_20160606T054535_20160606T054600_011586_011B3B_3159|\n|S1A_IW_GRDH_1SDV_20160113T174446_20160113T174511_009479_00DC0B_CDC5|\n|S1B_IW_GRDH_1SDV_20161015T055519_20161015T055544_002513_0043E0_13CA|\n|S1A_IW_SLC__1SDV_20150315T053800_20150315T053827_005038_006529_53DA|\n|S1A_IW_RAW__0SDV_20160307T055559_20160307T055631_010259_00F2A6_0CE8|\n|S1A_IW_SLC__1SDV_20150327T181621_20150327T181651_005221_00697B_7CEB|\n|S1A_IW_SLC__1SDV_20150522T061219_20150522T061233_006030_007C89_7699|\n|S1A_IW_RAW__0SDV_20150403T052846_20150403T052919_005315_006BAF_310E|\n|S1A_IW_RAW__0SDV_20151123T171851_20151123T171923_008735_00C703_1BFF|\n|S1B_IW_RAW__0SDV_20161115T054751_20161115T054823_002965_005090_6626|\n|S1A_IW_GRDH_1SDV_20161014T060241_20161014T060306_013482_0158E0_E949|\n|S1A_IW_SLC__1SDV_20150504T052135_20150504T052202_005767_007683_6460|\n|S1A_IW_GRDH_1SDV_20160201T173548_20160201T173617_009756_00E41D_9A75|\n|S1A_IW_GRDH_1SDV_20160919T052316_20160919T052345_013117_014D39_CF57|\n|S1A_IW_RAW__0SDV_20160512T174512_20160512T174544_011229_010FB1_5D5C|\n|S1A_IW_SLC__1SDV_20151110T181629_20151110T181659_008546_00C1B3_5DE8|\n|S1B_IW_RAW__0SDV_20161211T053344_20161211T053400_003344_005B61_AB8B|\n|S1A_IW_RAW__0SDV_20160314T054601_20160314T054634_010361_00F59F_05F9|\n|S1A_IW_GRDH_1SDV_20141126T173618_20141126T173636_003456_0040B4_AEC0|\n|S1A_IW_GRDH_1SDV_20150407T173224_20150407T173254_005381_006D59_4C23|\n|S1A_IW_RAW__0SDV_20151217T172005_20151217T172037_009085_00D0C9_A0C1|\n|S1A_IW_SLC__1SDV_20161029T172800_20161029T172827_013708_015FD5_D81C|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table657"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|On Hours|\n|---|\n|Monday to Saturday 11.00 to 01.00; Sunday 12.00 to 23.00|\n|Monday to Saturday 11.00 to 23.00 and Sunday 12.00 to 23.00|\n|Monday to Sunday 11.00 to 23.45|\n|Monday to Sunday 18.00 to 01.00|\n|Monday to Sunday 10.00 to 18.00|\n|Monday to Saturday 11.00 to 17.30|\n|Monday to Thursday 10.00 to 24.00; Friday and Saturday 10.00 to 02.00 and Sunday 10.00 to 01.00|\n|Monday to Thursday 10.00 to 24.00; Friday and Saturday 10.00 to 01.00 and Sunday 10.00 to 24.00|\n|Monday to Wednesday 11.00 to 23.00; Thursday 11.00 to 24.00; Friday and Saturday 11.00 to 01.00 and Sunday 12.30 to 23.00|\n|Monday to Sunday 18.30 to 21.30|\n|Monday to Wednesday 11.00 to 23.00; Thursday to Saturday 11.00 to 24.00 and Sunday 11.00 to 23.00|\n|Monday to Thursday 11.00 to 24.00; Friday to Sunday 11.00 to 01.00|\n|Monday to Sunday 17.00 to 23.00|\n|Monday to Sunday 13.00 to 24.00|\n|Monday to Saturday 11.00 to 02.00 and Sunday 12.30 to 02.00|\n|Monday to Saturday 11.00 to 23.00 and Sunday 18.30 to 23.00|\n|Monday to Sunday 18.00 to 22.00|\n|Monday to Thursday 11.00 to 24.00; Friday and Saturday 11.00 to 02.00 and Sunday 12.30 to 24.00|\n|Closed Mondays; Tuesday to Sunday 11.00 to 21.30|\n|Monday to Sunday 12.00 to 24.00|\n|Monday to Sunday 10.00 to 01.00|\n|Monday to Saturday 11.00 to 01.00 and Sunday 12.00 to 01.00|\n|Monday to Wednesday 11.00 to 23.00; Thursday to Saturday 11.00 to 01.00 and Sunday 10.00 to 23.00|\n|Monday to Saturday 15.00 to 01.00 and Sunday 13.00 to 01.00|\n|Monday to Thursday 11.00 to 23.00; Friday and Saturday 11.00 to 01.00 and Sunday 12.30 to 23.00|\n|Monday to Thursday 11.00 to 23.00; Friday and Saturday 11.00 to 01.00 and Sunday 12.00 to 23.00|\n|Monday to Saturday 11.00 to 24.00 and Sunday 12.00 to 24.00|\n|Monday to Friday 11.00 to 01.00; Saturday 11.00 to 02.00 and Sunday 11.00 to 01.00|\n|Monday and Tuesday 18.30 to 23.00; Wednesday 14.00 to 23.00; Thursday 18.30 to 23.00; Friday 18.30 to 01.00; Saturday 11.00 to 01.00 and Sunday 11.00 to 21.00|\n|Monday to Sunday 09.00 to 01.00|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table658"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Sources and Uses Category|\n|---|\n|Net Tuition and Fees|\n|Depreciation Expense|\n|Local Government Grants - Restricted|\n|Endowment and Interest Income|\n|Other Income|\n|Mandatory and Non-mandatory Transfers|\n|State Appropriations|\n|Unrealized Gains \/ (Losses)|\n|Sales and Services|\n|Debt Service Payments|\n|Non-Cash Capital Gifts|\n|Public Service|\n|Institutional Support|\n|Student Services|\n|Operations and Maintenance of Plant|\n|Tax Collections|\n|Academic Support|\n|Additions to Permanent Endowments|\n|Auxiliary Enterprises|\n|Net Auxiliary Enterprises|\n|Instruction|\n|Federal Grants and Contracts - Restricted|\n|State Grants and Contracts|\n|Scholarships and Fellowships|\n|Private Gifts and Grants - Restricted|\n|Other Expenses|\n|Research|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table659"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name|\n|---|\n|A & G Portable Toilets|\n|A+ Ready Restrooms & Septic Inc.|\n|Rhea's Septic Tank|\n|A&A Atlantic|\n|Roanoke Porta-Johns|\n|Asbury's Septic Tank Cleaning Service Inc.|\n|Camp Tekoa Inc|\n|Environmental Inc.|\n|Davis Septic Tank Cleaning|\n|A Countywide Septic|\n|J & B Const Co & A&A Port-A-Jon's Rental & Service|\n|Thomas Septic Tank Service|\n|Valley Proteins Inc. (Strawberry Plains TN)|\n|Septic Blue of North Carolina L.L.C.|\n|Septic Pumping Service|\n|Watson's Septic Tank Cleaning Service|\n|Smith Pumping Service|\n|Rogers Septic Tank Service|\n|Roto-Rooter of Macon County|\n|Porter's Septic Service|\n|Septic Pumping Services|\n|Elite Waste Services|\n|Hodnett Septic Tank Cleaning|\n|Clark's Septic Tank Service|\n|Shorty's|\n|Bennie A Moore Septic Tank Service Inc|\n|Long's Septic Pumping|\n|Brinson & Miller Inc.|\n|Rachel Locklear Porta John Service|\n|HHM Porta Toilet LLC|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Septic Pumping Services', 'Septic Pumping Service']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table66"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Scene ID|\n|---|\n|S2A_OPER_MSI_L1C_TL_SGS__20160915T023542_20160915T073519_A006435_T51QUE_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160911T025645_20160911T075608_A006378_T50QRM_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161028T024541_20161028T074536_A007050_T50RRN_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160720T024602_20160720T074513_A005620_T50QRL_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20151226T025530_20151226T075630_A002660_T51RTH_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160829T024559_20160829T074508_A006192_T51QTG_N02_04_01|\n|L1C_T51QUE_A007622_20161207T023453|\n|L1C_T51QUF_A007622_20161207T023453|\n|S2A_OPER_MSI_L1C_TL_EPA__20151210T023342_20170605T041430_A002431_T51QUG_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160720T024602_20160720T074513_A005620_T50QRK_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161001T025426_20161001T075515_A006664_T50QRM_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161031T025814_20161031T075854_A007093_T51QTG_N02_04_01|\n|L1C_T51QTF_A007908_20161227T023520|\n|S2A_OPER_MSI_L1C_TL_SGS__20161127T024244_20161127T060118_A007479_T50QRL_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160112T024412_20160112T074737_A002903_T51RUH_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160720T024602_20160720T074513_A005620_T51QTG_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161028T024541_20161028T074536_A007050_T51QTE_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20151130T023453_20170512T230414_A002288_T51QUG_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160211T024150_20160211T074747_A003332_T51RTH_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160211T024150_20160211T074747_A003332_T50QRK_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161114T024029_20161114T073502_A007293_T51QUF_N02_04_01|\n|L1C_T50QRM_A007622_20161207T023453|\n|S2A_OPER_MSI_L1C_TL_EPA__20151024T024143_20161221T062557_A001759_T51QTG_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161117T024217_20161117T074806_A007336_T50QRM_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161008T024617_20161008T074525_A006764_T50QRK_N02_04_01|\n|L1C_T50QRL_A007622_20161207T023453|\n|S2A_OPER_MSI_L1C_TL_SGS__20161008T024617_20161008T074525_A006764_T51QTE_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20151230T023349_20151230T073857_A002717_T51QUE_N02_01_01|\n|L1C_T51QTG_A007908_20161227T023520|\n|L1C_T50RRN_A007665_20161210T024937|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table660"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Form\u00e5lsnavn|\n|---|\n|Diplomuddannelse i informationsteknologi IT-Vest|\n|Teknologisk diplomuddannelse i parkvirksomhed|\n|Akademiuddannelse i human ressource|\n|Diplomuddannelse i oral helse|\n|Akademiuddannelse i international transport og logistik|\n|VVS-installation|\n|Akademiuddannelse i socialt arbejde|\n|Akademiuddannelse i sundhedspraksis|\n|Diplomuddannelse i ledelse|\n|Akademiuddannelse i kommunikation og formidling|\n|Akademiuddannelse i gastronomi|\n|Diplomuddannelse i formidling af kunst og kultur|\n|Diplomuddannelse i psykiatri|\n|Diplomuddannelse i kriminologi|\n|Akademiuddannelse i informationsteknologi|\n|Journalistisk videreuddannelse (diplom)|\n|Akademiuddannelse i retail|\n|Teknologisk diplomuddannelse i projektledelse|\n|Akademiuddannelse i automation og drift|\n|Diplomuddannelse i socialformidling|\n|Teknologisk diplomuddannelse i vedligehold|\n|Projektledelse - medie- og kommunikationsbranchen|\n|Akademiuddannelse i ungdoms- og voksenundervisning|\n|Videreuddannelse i odontologisk praksis|\n|Diplomuddannelse i digital konceptudvikling|\n|Indledende kurser til akademiuddannelser - teknik|\n|Diplomuddannelse i offentlig forvaltning|\n|Diplomuddannelse i fagjournalistik|\n|Diplomuddannelse i skat|\n|Akademiuddannelse i ledelse|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table661"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|ESD Name|\n|---|\n|ESD 123|\n|State|\n|ESD 112|\n|ESD 101|\n|Northwest ESD 189|\n|Olympic ESD 114|\n|Puget Sound ESD 121|\n|ESD 105|\n|ESD 113|\n|North Central ESD 171|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table662"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Current Local Zone|\n|---|\n|BM6|\n|SM6B|\n|MM5G|\n|MM7E|\n|SM6F|\n|MM3D|\n|BM3|\n|SM5E|\n|MM5C|\n|SAL14|\n|SM4D|\n|BM9|\n|BM10|\n|SM3F|\n|MM5H|\n|MM5E|\n|SAL5|\n|MM4D|\n|SM6D|\n|SM9E|\n|SAL3|\n|SM6E|\n|SM4G|\n|SM7D|\n|BM5|\n|SM6A|\n|SM3A|\n|SM8A|\n|MM1|\n|SM6C|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table663"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|PURPOSE\/DESCRIPTION|\n|---|\n|VENDOR WIRE|\n|CASH BOOK ENTRY - DEBT PYMT|\n|VENDOR WIRE P-CARD|\n|CASH BOOK ENTRY - PAYROLL|\n|VENDOR PAYMENT|\n|CASH BOOK ENTRY|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table664"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|ARS|\n|---|\n|ARS LVT|\n|ARS NORTE|\n|ARS CENTRO|\n|ARS ALGARVE|\n|ARS ALENTEJO|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table665"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Date Acquired|\n|---|\n|2016-01-12|\n|2016-11-16|\n|2016-09-01|\n|2015-10-20|\n|2016-12-03|\n|2016-08-15|\n|2016-12-30|\n|2016-11-03|\n|2016-09-07|\n|2016-11-13|\n|2016-10-17|\n|2016-01-22|\n|2016-12-07|\n|2016-10-27|\n|2016-07-26|\n|2016-12-23|\n|2015-09-10|\n|2015-11-22|\n|2016-03-11|\n|2016-03-08|\n|2015-08-05|\n|2016-11-06|\n|2016-10-01|\n|2016-01-18|\n|2015-12-03|\n|2016-03-05|\n|2015-08-28|\n|2016-02-01|\n|2016-02-11|\n|2016-01-08|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table666"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Jenis Nakes|\n|---|\n|Bidan|\n|Lainnya|\n|Pikes|\n|Perawat|\n|Gizi|\n|TLM|\n|KL|\n|Perawat Gigi|\n|Farmasi|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table667"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|MONTH|\n|---|\n|SEPTEMBER|\n|MAY|\n|NOVEMBER|\n|APRIL|\n|FEBRUARY|\n|OCTOBER|\n|JULY|\n|JANUARY|\n|JUNE|\n|MARCH|\n|DECEMBER|\n|AUGUST|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table668"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|LAST_NAME|\n|---|\n|Barttelot|\n|Kaye|\n|Thapa|\n|Titcomb|\n|Hassan|\n|Bryson|\n|Gordon|\n|Magar|\n|Farrugia|\n|Scotter|\n|Ackey|\n|Groom|\n|Riley|\n|Wheeldon|\n|Haynes|\n|Davis|\n|Dalrymple|\n|Taylor|\n|Roberts|\n|Mulderig|\n|Jarvis|\n|Vickers|\n|Fuke|\n|Fleck|\n|Murphy|\n|Guthrie|\n|Murray|\n|Evans|\n|Lane De Courtin|\n|Parr|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table669"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Lead Applicant|\n|---|\n|Pavel Baranov|\n|Patrick Kiely|\n|Stephen Rooke|\n|Jeremy D. Glennon|\n|Richard Roche|\n|Michael White|\n|Rachel McLoughlin|\n|Mark Little|\n|Roger West|\n|Michael Delaney|\n|Walter Kolch|\n|Sean Dineen|\n|Fionnuala Murphy|\n|Andrea Degasperi|\n|Miguel Bustamante|\n|Simon Elliott|\n|Edward Johns|\n|John Laffey|\n|Michael Organ|\n|Edward Jones|\n|John Sheridan|\n|Annie Curtis|\n|Mary Pryce|\n|Suzanne Foley|\n|Ed Lavelle|\n|Eoin Scanlan|\n|Milovan Krnjajic|\n|Thomas Coffey|\n|Urska Demsar|\n|Martin Klepal|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Edward Johns', 'Edward Jones']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table67"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Sort|\n|---|\n|Tenho|\n|Toria|\n|Rhonia|\n|Wanamo|\n|Vilde|\n|Skagen|\n|Delfin|\n|Kuusiku 1|\n|Herbert|\n|Zebra|\n|Pedja|\n|Kauni|\n|Mehis|\n|Bor 12273|\n|Goplana|\n|Laulema|\n|KWS Sharki|\n|KWS Hobbs|\n|Harenda|\n|Selene|\n|Cosmopolitan|\n|Esto|\n|Peppi|\n|Talvike|\n|Gale|\n|Eugen|\n|Amulett|\n|Katniss|\n|Tia|\n|Edvins|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table670"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|OMB_ACCT|\n|---|\n|019-20-0213   Fossil Energy Research and Development|\n|019-10-0251   Defense Environmental Cleanup|\n|019-20-0318   Electricity Delivery and Energy Reliability|\n|019-20-0222   Science|\n|019-20-0322   Advanced Technology Vehicles Manufacturing Loan Program Account|\n|019-60-4563   Working Capital Fund|\n|019-20-8575   Advances for Cooperative Work|\n|019-20-5523   Ultra-deepwater and Unconventional Natural Gas and Other Petrole|\n|019-20-5369   Northeast Home Heating Oil Reserve|\n|019-60-0236   Office of the Inspector General|\n|019-20-5105   Payments to States under Federal Power Act|\n|019-20-5615   Energy Security and Infrastructure Modernization Fund|\n|019-20-4455   Title 17 Innovative Technology Direct Loan Financing Account|\n|019-05-0309   Defense Nuclear Nonproliferation|\n|019-10-0249   Defense Environmental Services|\n|019-10-0244   Defense Nuclear Waste Disposal|\n|019-20-4579   Advanced Technology Vehicles Manufacturing Direct Loan Financing|\n|019-50-4452   Colorado River Basins Power Marketing Fund Western Area Power A|\n|019-20-0212   Federal Energy Regulatory Commission|\n|019-20-0350   Tribal Indian Energy Loan Guarantee Program|\n|019-05-0240   Weapons Activities|\n|019-50-0303   Operation and Maintenance Southwestern Power Administration|\n|019-50-4045   Bonneville Power Administration Fund|\n|019-50-5649   Continuing Fund Southwestern Power Administration|\n|019-20-0216   Energy Information Administration|\n|019-05-0313   Salaries and Expenses|\n|019-60-0228   Departmental Administration|\n|019-20-0320   Legacy Management|\n|019-50-5178   Falcon and Amistad Operating and Maintenance Fund|\n|019-20-0208   Title 17 Innovative Technology Loan Guarantee Program|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table671"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|O\u015b - kod|\n|---|\n|RPLB.04.00.00|\n|RPWP.10.00.00|\n|RPPD.04.00.00|\n|RPWP.03.00.00|\n|RPPK.06.00.00|\n|RPLU.08.00.00|\n|RPSL.10.00.00|\n|RPWP.07.00.00|\n|RPMA.11.00.00|\n|RPZP.06.00.00|\n|RPMA.10.00.00|\n|POWR.06.00.00|\n|POPC.01.00.00|\n|RPPD.06.00.00|\n|RPOP.03.00.00|\n|RPKP.04.00.00|\n|RPMA.01.00.00|\n|POPC.04.00.00|\n|RPWM.03.00.00|\n|RPWM.01.00.00|\n|RPKP.12.00.00|\n|POIS.08.00.00|\n|RPWM.09.00.00|\n|RPLU.03.00.00|\n|RPMP.04.00.00|\n|RPOP.10.00.00|\n|RPSL.05.00.00|\n|RPLD.09.00.00|\n|RPMA.07.00.00|\n|RPLD.11.00.00|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table672"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Address|\n|---|\n|0120 F ST NW|\n|1029 VERMONT AV NW|\n|2111 WISCONSIN AVE NW|\n|1776 K ST NW|\n|3145 MOUNT PLEASANT ST NW|\n|2320 WISCONSIN AVE NW|\n|1899 PENNSYLVANIA AVE NW|\n|4550 CONNECTICUT AVE NW|\n|2100 38TH ST SE|\n|0654 GIRARD ST NW|\n|1625 K ST NW|\n|2829 CONNECTICUT AVE NW|\n|1229 - 1231 25TH ST NW|\n|1099 22ND ST NW|\n|500 NORTH CAPITOL ST NW|\n|1111 11TH ST NW|\n|0800 25TH ST NW|\n|1401 H ST NW|\n|3939 WISCONSIN AV NW|\n|2041 - 2121 GEORGIA AV NW|\n|2801 14TH ST NW|\n|0461 N ST SW|\n|2501 PORTER ST NW|\n|1121 NEW HAMPSHIRE AVE NW|\n|4301 3RD ST SE|\n|2501 25TH ST SE|\n|2501 M ST NW|\n|400 V ST NW|\n|2013 NEW HAMPSHIRE AVE NW|\n|200 RHODE ISLAND AVE NE|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table673"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|\u88fd\u54c1\u540d\u30bb\u30a4\u30d2\u30f3\u30e1\u30a4|\n|---|\n|CD103 (Integrin alpha E) Monoclonal Antibody (2E7) APC eBioscience|\n|CD134 (OX40) Monoclonal Antibody (ACT35 (ACT-35)) PE-Cyanine7 eBioscience|\n|MHC Class I (H-2Kd) Monoclonal Antibody (SF1-1.1.1) Biotin eBioscience|\n|CD279 (PD-1) Monoclonal Antibody (eBioJ105 (J105)) PE eBioscience|\n|CD19 Monoclonal Antibody (HIB19) eBioscience|\n|CD127 Monoclonal Antibody (A7R34) PE-Cyanine7 eBioscience|\n|CD137 Ligand (4-1BB Ligand) Monoclonal Antibody (TKS-1) PerCP-eFluor 710 eBioscience|\n|CD40 Functional Grade Monoclonal Antibody (HM40-3) eBioscience|\n|CD45 Monoclonal Antibody (MEM-28) FITC|\n|Mouse IgG2a kappa Isotype Control Super Bright 780 eBioscience|\n|CD45 Monoclonal Antibody (OX1) Super Bright 436 eBioscience|\n|CD184 (CXCR4) Monoclonal Antibody (2B11) Biotin eBioscience|\n|CD49f (Integrin alpha 6) Monoclonal Antibody (eBioGoH3 (GoH3)) eBioscience|\n|CD163 Monoclonal Antibody (TNKUPJ) Super Bright 600 eBioscience|\n|CD279 (PD-1) Monoclonal Antibody (RMP1-30) PE eBioscience|\n|CD197 (CCR7) Monoclonal Antibody (3D12) Super Bright 645 eBioscience|\n|CD172a (SIRP alpha) Monoclonal Antibody (P84) PE-Cyanine7 eBioscience|\n|AHR Monoclonal Antibody (4MEJJ) eFluor 660 eBioscience|\n|CD15 Monoclonal Antibody (HI98) eFluor 450 eBioscience|\n|Rat IgG1 kappa Isotype Control Biotin eBioscience|\n|O-GlcNAc Monoclonal Antibody (RL2) Alexa Fluor 488 eBioscience|\n|SSEA1 Monoclonal Antibody (eBioMC-480 (MC-480)) eBioscience|\n|CD42b Monoclonal Antibody (HIP1) PE-Cyanine7 eBioscience|\n|CD3e Monoclonal Antibody (145-2C11) PerCP-Cyanine5.5 eBioscience|\n|CD27 Monoclonal Antibody (O323) PE eBioscience|\n|CD54 (ICAM-1) Monoclonal Antibody (HA58) Biotin eBioscience|\n|Mouse IgE Monoclonal Antibody (23G3) Biotin eBioscience|\n|CD178 (Fas Ligand) Monoclonal Antibody (MFL3) APC-eFluor 780 eBioscience|\n|CD69 Monoclonal Antibody (FN50) PE eBioscience|\n|CD109 Monoclonal Antibody (HU17) eBioscience|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table674"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|MODELO|\n|---|\n|Luv D-Max 4X2 2_5 Diesel C\/D TM Std.|\n|Cerato 1.6 MT A\/C|\n|G.Vitara SZ 5P. AT 4X4 2.7|\n|Luv D-Max 4X2 2_5 Diesel C\/S TM Std.|\n|G.Vitara SZ 5P. AT 4X2 2.0|\n|Luv D-Max 4X4 3_0 Diesel C\/S TM|\n|Sportage 2.0 LX AT|\n|D-MAX CS 2.5L DSL 4X4 TM AC CHASIS RAPA.|\n|BT-50 4X4 Action 2.6 C\/D|\n|D-MAX 2.5L DSL CRDI CD 4X2 TM A\/C RAPA.|\n|Rio LS 1.5 A\/C|\n|D-MAX  2.5L DSL CRDI CS 4X4 TM AC RAPA.|\n|Luv D-Max 4X2 2_5 Diesel C\/D TM Std. A\/C|\n|CHEVROLET DMAX DOHC 2.4 CD 4x2 TM AC ABS.|\n|Luv D-Max 4X2 2_4 Hec C\/D TM|\n|Luv D-Max 4X4 2_5  C\/D Chasis TM AC|\n|D-MAX CD 2.5L  DSL 4X4TM AC WORK RAPA|\n|Luv D-Max 4X4 2_5 Diesel C\/D TM Full|\n|Luv D-Max 4X2 3_0 Diesel C\/D TM|\n|BT-50 4X2 Std C\/D Action|\n|G.Vitara SZ 5P. TM 4X4 2.0|\n|Luv D-Max 4X2 2_5 Diesel C\/D TM A\/C|\n|G.Vitara SZ 5P. TM 4X2 2.0|\n|G.Vitara SZ 5P. TM 4X4 2.7|\n|Luv D-Max 4X4 3_0 Diesel C\/D TM A\/C|\n|Luv D-Max 4X2 2_5 Diesel C\/S TM A\/C|\n|DMAX CS 2.5L DSL 4X2 TM STD CHASIS RAPA.|\n|BT-50 4X2 Action 2.6 C\/D|\n|G.Vitara 3P. DLX T\/M A\/C WIDE|\n|BT-50 4X4 Std C\/D Action|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table675"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|LINE_DESC|\n|---|\n|Interest on uninvested funds (-)|\n|Total investments EOY: Federal securities: Par value|\n|Total investments EOY: non-Federal securities: Market value|\n|Outlays from discretionary balances|\n|Change in uncollected payments Federal sources (+ or -)|\n|Obligations incurred unexpired accounts|\n|Total investments SOY: Federal securities: Par value|\n|Borrowing authority|\n|Total new obligations|\n|Discretionary unobligated balance brought forward Oct 1|\n|Outlays from new mandatory authority|\n|Unobligated balance transferred from other accounts|\n|Non-Federal sources (-)|\n|Uncollected pymts Fed sources brought forward Oct 1 (-)|\n|Outlays from mandatory balances|\n|Unobligated balance brought forward Oct 1|\n|Change in uncollected pymts Fed sources expired accounts (+ or -)|\n|Unexpired unavailable balance EOY: Offsetting collections|\n|Unobligated balance transferred to other accounts (-)|\n|Appropriation|\n|Unobligated balance transfers between expired and unexpired accounts|\n|Unexpired unavailable balance SOY: Offsetting collections|\n|Appropriations transferred to other accounts (-)|\n|Appropriation (special or trust fund)|\n|Unpaid obligations brought forward Oct 1|\n|Offsetting collections credited to expired accounts|\n|Spending authority from offsetting collections applied to repay debt (-)|\n|Appropriations transferred from other accounts|\n|Obligations incurred expired accounts|\n|Collected|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table676"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|NCBI_id9|\n|---|\n|YP_007674084.1|\n|YP_002939714.1|\n|YP_007010467.1|\n|YP_004306107.1|\n|YP_001994658.1|\n|YP_002899042.1|\n|YP_002128475.1|\n|YP_007676747.1|\n|YP_007007011.1|\n|YP_002117675.1|\n|YP_007236603.1|\n|YP_007003084.1|\n|YP_007673703.1|\n|YP_007111506.1|\n|YP_006560815.1|\n|YP_008058903.1|\n|YP_002241912.1|\n|YP_008051950.1|\n|YP_007002942.1|\n|YP_004327314.1|\n|YP_007517483.1|\n|YP_007236694.1|\n|YP_008129846.1|\n|YP_005087052.1|\n|YP_006561150.1|\n|YP_008059864.1|\n|YP_005098325.1|\n|YP_006989468.1|\n|YP_008126167.1|\n|YP_007673991.1|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table677"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|classif|\n|---|\n|Siphoviridae of Type1 (Cluster 1)|\n|Undefined (Mixed Types)|\n|Myoviridae of Type1 (Cluster 10)|\n|Myoviridae of Type1 (Cluster 6)|\n|Myoviridae of Type1 (Cluster 3)|\n|Siphoviridae of Type1 (Cluster 5)|\n|Myoviridae of Type1 (Cluster 1)|\n|Podoviridae of Type3|\n|Siphoviridae of Type1 (Cluster 3)|\n|Myoviridae of Type1 (Cluster 9)|\n|Siphoviridae of Type1 (Cluster 2)|\n|Myoviridae of Type2|\n|Siphoviridae of Type1 (Cluster 8)|\n|Siphoviridae of Type1 (no Cluster assigned)|\n|Siphoviridae of Type1 (Cluster 4)|\n|Myoviridae of Type1 (no Cluster assigned)|\n|Siphoviridae of Type1 (Cluster 10)|\n|Podoviridae of Type4|\n|Myoviridae of Type1 (Cluster 7)|\n|Not assigned|\n|Myoviridae (no Type assigned)|\n|Myoviridae of Type1 (Cluster 8)|\n|Siphoviridae of Type1 (Cluster 6)|\n|Siphoviridae of Type1 (Cluster 7)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table678"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|SIZE|\n|---|\n|.047 X 48 X 103|\n|.025 X 27.375 X 48|\n|1.75 X 4.0 X 84.125|\n|.160 X 14 X 31.75|\n|.063 X 36 X 48|\n|.025 X 34 X 36|\n|BAC1517-1781 X 191.6|\n|.080 X 48 X 144|\n|1.5 X 3.937 X 5.315|\n|.012 X 48 X 144|\n|.100 X 42 X 48|\n|.050 X 48 X 104.75|\n|1.188 X 144.25|\n|.750 X 3.0 X 38.5|\n|TMS60-4986 X 67|\n|2.0 X 6.0 X .250 X 99|\n|.080 X 48 X 41.9375|\n|1.0 X 26|\n|.8125 X 73|\n|.020 X 46.25 X 48|\n|.50 X .50 X 120|\n|.040 X 48 X 122.5|\n|.040 X 36 X 24|\n|AND10138-0604 X 24|\n|.016 X 48 X 124.5|\n|BAC1506-3922 X 120.1875|\n|.025 X 36 X 24|\n|.040 X 23.75 X 48|\n|1.75 X 8.6 X 30|\n|.040 X 48 X 23.875|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table679"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Polling Place Name|\n|---|\n|VINCENT HIGH SCHOOL|\n|OUR SAVIOR LUTHERAN CHURCH|\n|MOSINEE WISCONSIN NATIONAL GUARD ARMORY|\n|CITY OF TOMAH MUNICIPAL CENTER|\n|BELOIT PUBLIC LIBRARY|\n|SMITH CENTER|\n|OUR SAVIOUR LUTHERAN CHURCH|\n|EUREKA TOWN HALL|\n|Sand Creek Town Hall|\n|RANDOM LAKE VILLAGE HALL|\n|TIPLER TOWN HALL|\n|BUENA VISTA TOWN HALL|\n|WOODMAN TOWN HALL|\n|SOMERSET TOWN HALL|\n|STEVENS POINT TRANSIT|\n|BLAIR CITY HALL|\n|LOMIRA MUNICIPAL BUILDING|\n|MARTELL TOWN HALL|\n|WISCONSIN HUMANE SOCIETY|\n|SAINT MATTHEW LUTHERAN CHURCH|\n|District Service Center (DSC)|\n|BAY VIEW LUTHERAN CHURCH|\n|DELAFIELD TOWN HALL|\n|SARONA TOWN HALL|\n|LAKESIDE TOWN HALL|\n|RED RIVER TOWN HALL|\n|BARRE TOWN HALL|\n|HIXON TOWN HALL|\n|LITTLE RIVER TOWN HALL|\n|WEBSTER COMMUNITY CENTER|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['OUR SAVIOUR LUTHERAN CHURCH', 'OUR SAVIOR LUTHERAN CHURCH']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table68"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|TIPO DE VEHICULO|\n|---|\n|CAMPEROS|\n|HIBRIDOS AUTOMOVILES|\n|CAMIONES|\n|CHASIS BUS|\n|HIBRIDOS BUSES|\n|BUSES|\n|TRACTOCAMION|\n|TRACTOCAMIONES|\n|CAMIONETAS|\n|AUTOMOVILES|\n|VEH. ESPECIALES|\n|FURGONETAS|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table680"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|PAIS|\n|---|\n|RUMANIA|\n|BRASIL|\n|CANADA|\n|ESTADOS UNIDOS|\n|TAILANDIA|\n|PORTUGAL|\n|ESTADOS UNIDOS ISLAS MENORES|\n|COREA|\n|ARGENTINA|\n|MEXICO|\n|FR-FRANCIA|\n|ALEMANIA|\n|PANAMA|\n|URUGUAY|\n|CZ-REPUBLICA CHECA|\n|JAPON|\n|BR-BRASIL|\n|US-ESTADOS UNIDOS|\n|DE-ALEMANIA|\n|BELGICA|\n|JP-JAPON|\n|CO-COLOMBIA|\n|CHINA|\n|IT-ITALIA|\n|AR-ARGENTINA|\n|PAISES BAJOS|\n|REPUBLICA CHECA|\n|CHILE|\n|COLOMBIA|\n|HU-HUNGRIA|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table681"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|SA3 Name|\n|---|\n|Outback - South|\n|Maryborough|\n|Hervey Bay|\n|Hills District|\n|Bribie - Beachmere|\n|Narangba - Burpengary|\n|Cairns - South|\n|Centenary|\n|Beaudesert|\n|Wynnum - Manly|\n|Brisbane Inner - East|\n|Surfers Paradise|\n|Beenleigh|\n|Outback - North|\n|Cleveland - Stradbroke|\n|Nathan|\n|Kenmore - Brookfield - Moggill|\n|Caloundra|\n|Brisbane Inner - West|\n|Port Douglas - Daintree|\n|Buderim|\n|Nundah|\n|Springwood - Kingston|\n|Nerang|\n|Carindale|\n|Robina|\n|Holland Park - Yeronga|\n|Sandgate|\n|Ipswich Inner|\n|Loganlea - Carbrook|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table682"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|County|\n|---|\n|KERR|\n|TITUS|\n|HUDSPETH|\n|BELL|\n|SAN SABA|\n|GILLESPIE|\n|HUNT|\n|TRINITY|\n|HALE|\n|VICTORIA|\n|PALO PINTO|\n|CALDWELL|\n|PARMER|\n|UVALDE|\n|CHEROKEE|\n|ARCHER|\n|PANOLA|\n|EDWARDS|\n|RUNNELS|\n|LEON|\n|DEAF SMITH|\n|COCHRAN|\n|ZAVALA|\n|TRAVIS|\n|LAMPASAS|\n|PARKER|\n|HASKELL|\n|WASHINGTON|\n|GAINES|\n|COLEMAN|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table683"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Division Name|\n|---|\n|Prince William County|\n|Roanoke County|\n|Danville City|\n|Wise County|\n|Appomattox County|\n|Rockingham County|\n|Buckingham County|\n|Lancaster County|\n|Salem City|\n|Orange County|\n|West Point|\n|Lynchburg City|\n|New Kent County|\n|Buchanan County|\n|Alleghany County|\n|Louisa County|\n|Wythe County|\n|Amherst County|\n|Floyd County|\n|Caroline County|\n|Brunswick County|\n|Loudoun County|\n|Radford City|\n|Frederick County|\n|Henrico County|\n|Northampton County|\n|Manassas Park City|\n|Galax City|\n|Page County|\n|Surry County|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table684"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|System Name|\n|---|\n|Athens City|\n|Pell City|\n|Thomasville City|\n|Tuscaloosa City|\n|Satsuma City|\n|Dallas County|\n|Brewton City|\n|St Clair County|\n|Eufaula City|\n|Anniston City|\n|Mobile County|\n|Oneonta City|\n|Sumter County|\n|Cullman County|\n|Wilcox County|\n|Chickasaw City|\n|Alexander City|\n|Roanoke City|\n|Hale County|\n|Boaz City|\n|Lamar County|\n|Saraland City|\n|Lawrence County|\n|Daleville City|\n|Chilton County|\n|Butler County|\n|Greene County|\n|Blount County|\n|Franklin County|\n|Marion County|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table685"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Financial Year|\n|---|\n|2010\/11|\n|2012\/13|\n|2007\/08|\n|2015\/16|\n|2011\/12|\n|2014\/15|\n|2016\/17|\n|2009\/10|\n|2008\/09|\n|2013\/14|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table686"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Provider Name|\n|---|\n|HOLDEN MANOR CARE CENTER|\n|PEMISCOT COUNTY MEMORIAL HOSPITAL|\n|LIVING COMMUNITY OF ST JOSEPH|\n|PUXICO NURSING AND REHABILITATION CENTER|\n|LAWSON MANOR & REHAB|\n|OAK GROVE NURSING & REHAB|\n|HIDDEN LAKE CARE CENTER|\n|SARCOXIE NURSING CENTER|\n|BIG RIVER NURSING & REHABILITATION CENTER|\n|ST ANDREW'S AT FRANCIS PLACE|\n|BERTRAND NURSING AND REHAB CENTER|\n|SILVERSTONE PLACE|\n|JEFFERSON HEALTH CARE|\n|SYLVIA G THOMPSON RESIDENCE CENTER INC|\n|MARSHFIELD CARE CENTER FOR REHAB AND HEALTHCARE|\n|HILLSIDE MANOR HEALTHCARE AND REHAB CENTER|\n|NEW MARK CARE CENTER|\n|SHANGRI LA REHAB & LIVING CENTER|\n|CHARLESTON MANOR|\n|FULTON MANOR CARE CENTER|\n|ST PETERS MANOR CARE CENTER|\n|MANOR AT ELFINDALE THE|\n|RIVERWAYS MANOR|\n|LEE'S SUMMIT POINTE HEALTH & REHABILITATION|\n|OZARKS METHODIST MANOR THE|\n|ADAMS STREET -A STONEBRIDGE COMMUNITY|\n|TABLEROCK HEALTHCARE|\n|CARTHAGE HEALTH AND REHABILITATION CENTER|\n|SHADY OAKS HEALTHCARE CENTER|\n|CRYSTAL OAKS|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table687"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|STATE|\n|---|\n|FL|\n|NM|\n|NV|\n|WA|\n|HI|\n|MS|\n|CT|\n|MO|\n|KY|\n|ME|\n|OK|\n|PR|\n|DE|\n|VT|\n|AR|\n|OH|\n|NC|\n|NJ|\n|MN|\n|MI|\n|UT|\n|IL|\n|NH|\n|DC|\n|ID|\n|OR|\n|TN|\n|IA|\n|NE|\n|ND|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table688"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Case Officer|\n|---|\n|1420 - Grozik|\n|2534 - Richards Michael|\n|2154 - Mathis S.|\n|2535 - McKenzie Mark|\n|1459 - C.S.I. T. Bergin|\n|2374 - Gilbert B.|\n|1713 - Wright|\n|2405 - Haag Kevin|\n|2467 - Nagel Derek|\n|2465 - Adent S|\n|2112 - Wittmayer Todd|\n|1921 - Coffey T.|\n|2344 - Bowman Jacob|\n|1503 - C.S.I. Simeon|\n|2388 - Markarian Jacob|\n|1681 - Beck|\n|2083 - Allen J.|\n|1947 - Eiden|\n|1664 - Schlottman|\n|2510 - Baker Anthony|\n|2005 - Reyes P.|\n|2386 - Kahr Charles|\n|1882 - Kudla G|\n|2311 - Campbell Joel|\n|2294 - Neale Justice|\n|2229 - Hofer Anthony|\n|1811 - Coleman D.|\n|2140 - Bartunek|\n|2391 - Albin Derek|\n|2014 - Blaesing-Sovich Martin|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table689"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Location|\n|---|\n|STATE ROUTE 17M|\n|MUD MILLS ROAD|\n|474 ROUTE 211 E|\n|COUNTY RD 78|\n|RESERVOIR RD|\n|ORANGE PLAZA LANE|\n|CRYSTAL RUN RD|\n|CORTRIGHT RD|\n|DUNNING ROAD|\n|WATKINS AVE|\n|644 SILVER LAKE SCOTCHTOWN RD|\n|state route 211 east|\n|EAST MAIN ST @ DUNNING RD|\n|470 STATE ROUTE 211 EAST|\n|TRUST WAY|\n|GIBBS COURT|\n|17 M|\n|STATE ROUTE 17 M|\n|ST RTE 17M|\n|PROSPEROUS VALLEY ROAD|\n|1 KENSINGTON MANOR|\n|VANBURENVILLE|\n|PATIO RD|\n|CRYSTAL RUN XING|\n|CORWIN AVENUE|\n|TAMMS RD|\n|sstate route 211 east|\n|680 ROUTE 211 EAST|\n|STATE ROUTE 211E|\n|GANDER MOUNTAIN PARKING LOT|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['state route 211 east', 'sstate route 211 east']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table69"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Region|\n|---|\n|West|\n|Central|\n|North|\n|South|\n|East|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table690"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Titel|\n|---|\n|Regional filmproduktion 2017:1|\n|Utvecklingsbidrag ungdomsorganisationer 2010 (KU2010-0006)|\n|Landstingets kulturstipendier 2017|\n|Sjukhusbiblioteket -  avtal mellan Kultur och bildning och Akademiska sjukhuset|\n|Borttagande av konstverk 2016|\n|Regional filmproduktion 2015:1 (KU2015-0008)|\n|Regional filmproduktion 2016:1 (KU2016-0008)|\n|Inkommen skrivelse|\n|Internkontrollplan 2017|\n|Reversaler 2016|\n|Kultur och bildnings anslag 2017|\n|Regional filmproduktion 2016:2|\n|Into the forest extended tour\/ revolve 2017 - Gustaf Broms|\n|Scenkonstkarusellen 2016 (KU2016-0019)|\n|Remiss nya Medcontroll|\n|Inspirationsdag kulturombud 2016|\n|Regional filmproduktion 2015:3 (KU2015-0068)|\n|Avtal Landsting - Utvalda verk|\n|Mentorsprogram inom dans|\n|Ombyggnadsprojekt hus D 3814: Hotell And (KU2014-0035)|\n|Avtal om uppdragsforskning|\n|Kontrakt mellan Kulturenheten och artist\/producent Girilal Baars och Mats Dimming|\n|Avtal\/kontrakt Dans|\n|Upphandlingar (KU2016-0004)|\n|Revisionsrapport: Granskning av landstingets hantering av konst|\n|Rapport: Kultursamverkansmodellen|\n|Utvecklingsbidrag till ungdomsorganisationer 2013:2 (KU2013-0014)|\n|Verksamhetsbidrag till ungdomsorganisationer 2017|\n|Investeringsplan 2017-2019|\n|Verksamhetsbidrag ungdomsorganisationer 2016 (KU2015-0046)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table691"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Category|\n|---|\n|Trial Update|\n|Earnings|\n|NDA|\n|Enrollment|\n|Data|\n|Marketing Authorization|\n|Initiate trial|\n|Commercial Launch|\n|Corporate Update|\n|Publication|\n|Candidate Selection|\n|Regulatory|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table692"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|County|\n|---|\n|Clay|\n|Harrison|\n|Martin|\n|Galveston|\n|Lubbock|\n|Erath|\n|Terry|\n|Stephens|\n|Kimble|\n|Uvalde|\n|Eastland|\n|Bee|\n|Borden|\n|Caldwell|\n|Hudspeth|\n|Ellis|\n|Smith|\n|Jeff Davis|\n|Medina|\n|Newton|\n|Brown|\n|Leon|\n|Hidalgo|\n|Marion|\n|Winkler|\n|Guadalupe|\n|Tarrant|\n|Coryell|\n|Wilson|\n|Upton|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table693"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|arrival time|\n|---|\n|22.07.17 09:32:06:94|\n|22.07.17 08:57:59:41|\n|22.07.17 17:23:46:04|\n|22.07.17 09:09:42:44|\n|22.07.17 08:59:17:01|\n|22.07.17 09:42:07:47|\n|22.07.17 09:08:12:78|\n|22.07.17 08:59:22:75|\n|22.07.17 19:15:36:48|\n|22.07.17 08:59:05:18|\n|22.07.17 08:59:10:50|\n|22.07.17 09:07:15:15|\n|22.07.17 09:02:02:18|\n|22.07.17 08:59:32:50|\n|22.07.17 09:13:48:31|\n|22.07.17 08:57:16:30|\n|22.07.17 09:51:47:27|\n|22.07.17 09:30:24:10|\n|22.07.17 08:59:20:18|\n|22.07.17 17:22:19:22|\n|22.07.17 09:05:07:86|\n|22.07.17 09:05:41:72|\n|22.07.17 08:58:51:78|\n|22.07.17 09:46:18:47|\n|23.07.17 10:09:06:44|\n|22.07.17 08:59:02:60|\n|22.07.17 08:59:57:43|\n|22.07.17 08:58:58:56|\n|22.07.17 09:05:12:10|\n|22.07.17 09:20:21:73|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table694"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|LINE_DESC|\n|---|\n|Unexpired unobligated balance carried forward end of year|\n|Borrowing authority|\n|Unobligated balance of appropriations permanently reduced (-)|\n|Outlays (gross) (-)|\n|Outlays from new mandatory authority|\n|Total investments end of year: non-Federal securities: Market value|\n|Recoveries of prior year unpaid obligations expired accounts (-)|\n|Federal sources (-)|\n|Change in uncollected customer payments from Federal sources (+or -)|\n|Unobligated balance expiring (-)|\n|Unpaid obligations transferred to other accounts (-)|\n|Obligations incurred unexpired accounts|\n|Appropriations transferred to other accounts (-)|\n|Appropriation|\n|Outlays from discretionary balances|\n|Interest on uninvested funds (-)|\n|Spending authority from offsetting collections applied to repay debt (-)|\n|Outlays from new discretionary authority|\n|Total investments end of year: Federal securities: Par value|\n|Total investments start of year: Federal securities: Par value|\n|Collected|\n|Unobligated balance brought forward October 1|\n|Total new obligations|\n|Non-Federal sources (-)|\n|Offsetting collections credited to expired accounts|\n|Total investments start of year: non-Federal securities: Market value|\n|Recoveries of prior year unpaid obligations unexpired accounts (-)|\n|Unobligated balance transferred to other accounts (-)|\n|Appropriations transferred from other accounts|\n|Unpaid obligations transferred from other accounts|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table695"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|gdename|\n|---|\n|Ferden|\n|Schafisheim|\n|Monteggio|\n|Braunau|\n|Gerlafingen|\n|Ormont-Dessous|\n|Villars-le-Grand|\n|La Tour-de-Peilz|\n|Riddes|\n|Breggia|\n|Stettfurt|\n|Hagneck|\n|Essert-Pittet|\n|Oberburg|\n|Birrhard|\n|Kallern|\n|Correvon|\n|Poliez-le-Grand|\n|Romoos|\n|Luven|\n|Birwinken|\n|Valeyres-sous-Montagny|\n|Obergerlafingen|\n|Schenkon|\n|Brugg|\n|Vrin|\n|Eclagnens|\n|Pfungen|\n|Suhr|\n|Neuhausen am Rheinfall|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table696"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Rubro|\n|---|\n|Granos|\n|Frutas y Verduras|\n|Minerales|\n|Carga Proyecto|\n|Piedras|\n|Subproductos|\n|Otros|\n|Fertilizantes|\n|Arena|\n|Biodiesel|\n|Industriales|\n|Carnes|\n|Lana|\n|Madera|\n|Combustibles|\n|Aceites|\n|Oro|\n|Pesca|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table697"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|kl\u00e4ranlagenname|\n|---|\n|4610092011 KA Rodenkirchen-Hartwarden|\n|SKA Kirchheim Kirchheim|\n|Windeck Herchen|\n|Ludwigsau \/ Mecklar|\n|SKA RHEINHAUSEN - NIEDERHAUSEN|\n|Hainichen ZKA|\n|Essenbach|\n|KA GEHWEILER|\n|SKA ASSAMSTADT|\n|3600252076 KA Uelzen|\n|SKA AWV HAUSACH HORNBERG|\n|Wagenitz|\n|ZV Brannenburg-Flintsbach|\n|SKA STETTEN-STORZINGEN|\n|Stralsund|\n|Hirschau|\n|Waxweiler ZKA|\n|ZV Schlierachtal Sitz Miesbach|\n|Gundelsheim|\n|AV PFINZ-U. RENNACHTAL KLA Ittersbach|\n|Brandenburg - Briest|\n|Stemwede_Wehdem (1)|\n|Porta Westfalica Nammen|\n|Ramstein|\n|Schwaan|\n|Fahlenkamp|\n|Salzkotten Hengelsberg|\n|4624022001 KA Westerholt|\n|Rollsdorf|\n|Obernzell|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table698"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|CITY|\n|---|\n|CARMEL|\n|WEST BADEN SPRINGS|\n|NORTH MANCHESTER|\n|GREENTOWN|\n|WINCHESTER|\n|OSGOOD|\n|MONROVIA|\n|JEFFERSONVILLE|\n|MERRILLVILLE|\n|REMINGTON|\n|FORT WAYNE|\n|GOSHEN|\n|FERDINAND|\n|MISHAWAKA|\n|COVINGTON|\n|PRINCETON|\n|UPLAND|\n|LIBERTY|\n|NEW HAVEN|\n|ASHLEY|\n|MONTICELLO|\n|HUNTINGBURG|\n|ORLEANS|\n|SALEM|\n|PAOLI|\n|KENTLAND|\n|BROWNSTOWN|\n|HAMILTON|\n|LINTON|\n|VEEDERSBURG|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table699"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Nom Pr\u00e9nom(s) d'exercice|\n|---|\n|VENE Gaelle|\n|MICHALET Harmony|\n|pistone nocolas|\n|LEFEVRE Yves|\n|BRENOT Irene|\n|VRILLACQ Anne|\n|BOYER Alexia|\n|MASCRE Florence|\n|PIFFERO Jessica|\n|STROZIK Nicolas|\n|FRICK Agnes|\n|BARBIER Anaelle|\n|KLOCK Melanie|\n|BRACHET Virginie|\n|POZIN Isabelle|\n|pistone nicolas|\n|ABITBOL Arielle|\n|RODIER Maryse|\n|DUMONT Lea|\n|ROIDOR Jacques|\n|CROZET Claire|\n|PARISI Maryne|\n|GANDON Christophe|\n|BEN SALEM Intissar|\n|BACHMANN Benoit|\n|LEVRAT Ghislaine|\n|CACHET Evelyne|\n|ABRAHAM Catherine|\n|BOUVIER Anthony|\n|MATHIEU Pauline|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['pistone nocolas', 'pistone nicolas']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table7"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Type of Filing  (e.g. 30-day filing instant mirroring or other)|\n|---|\n|Instant Mirroring|\n|Replacement Tariff Filing|\n|30-Day Filing|\n|Informational|\n|30 Day|\n|Other|\n|intstant mirroring|\n|Instant Mirroring\/Concurrence|\n|Replacement Access Tariff|\n|instant mirroring|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['instant mirroring', 'intstant mirroring']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table70"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Venue|\n|---|\n|Adelaide Hockey Club - Adelaide|\n|Prince Alfred College - Ground|\n|State Hockey Centre - Ground|\n|Seacliff Hockey Club - Ground 1|\n|Woodville Hockey Club - Ground|\n|North East Hockey Club - North East Hockey Club|\n|St. Peters Old Collegians - SPOC|\n|Adelaide University Hockey Club - West Beach|\n|Port Adelaide Hockey Club - Ground|\n|State Hockey Centre Pitch 2 - Ground|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table700"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|SETOR_SUPERVISIONADO|\n|---|\n|Bens de luxo ou de alto valor|\n|Bolsas de mercadorias|\n|Remessas alternativas de recursos|\n|Fomento comercial (factoring)|\n|Joias pedras e metais preciosos|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table701"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|TIPO DE VEHICULO|\n|---|\n|CAMPEROS|\n|CHASIS BUS|\n|TRACTOCAMIONES|\n|BUSES|\n|VEH. ESPECIALES|\n|CAMIONETAS|\n|CAMIONES|\n|FURGONETAS|\n|HIBRIDOS BUSES|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table702"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Distrito|\n|---|\n|SAN ANTON|\n|SAN GABAN|\n|SANTA ROSA|\n|CONIMA|\n|TIQUILLACA|\n|ITUATA|\n|PICHACANI|\n|HUACULLANI|\n|SAN ANTONIO|\n|CUTURAPI|\n|CABANILLAS|\n|YUNGUYO|\n|ARAPA|\n|COPANI|\n|MACARI|\n|CAPACHICA|\n|SAMAN|\n|CABANA|\n|LIMBANI|\n|COATA|\n|KELLUYO|\n|ROSASPATA|\n|AYAVIRI|\n|PATAMBUCO|\n|PALCA|\n|PAUCARCOLLA|\n|PILCUYO|\n|PUCARA|\n|TILALI|\n|SANDIA|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table703"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Director|\n|---|\n|LUNA DIAZ FLORENCIA MAGDALENA|\n|VELASQUEZ NINA HUGO|\n|ARIAS ORTIZ BERNARDO|\n|NAKAYAMA MACEDO EMERSON DAVID|\n|HUANCA FLORES JACKELINE GIOVANA|\n|BAUTISTA GUTIERREZ BERNARDO|\n|MUSAJA VILCANQUI PORFIRIO|\n|LUIS SEBASTIAN YAPU GUEVARA|\n|TICONA COLQUE MANUEL BASILIO|\n|VALDEZ JAEN TONY OVER|\n|MAMANI APAZA ISIDRO|\n|RAMOS QUISPE FIDEL TEOFILO|\n|FLORENCIO VICENTE ALVAREZ PADILLO|\n|QUISPE AQUINO DAVID|\n|COSI MAMANI ROGER|\n|CANAZA CHOQUE ROLANDO|\n|LAMA QUISPE AGUSTIN URIEL|\n|HUANCA QUENAYA ELEJANDRO|\n|PAREDES LARICO SOCRATES|\n|MAMANI CONDORI EDWIN|\n|COARITE MAMANI MAURO MARIO|\n|VRAGAS PAREDES CLAUDIO FRANCISCO|\n|COLQUEHUANCA HUACANI TEOFILO RODOLFO|\n|TICONA GOMEL AURELIO CIPRIANO|\n|JULIAN FLORES ARACAYO|\n|CHOQUEHUANCA MAMANI FLAVIO|\n|CHOQUE CRUZ HAYDEE|\n|SANTOS CALVO PABLO|\n|HUANACUNI CUSI LENDRO FLORENTINO|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table704"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|external_gene_name|\n|---|\n|SOCS4|\n|KIAA0226L|\n|FNBP1L|\n|C11orf98|\n|RP11-6L6.2|\n|GPSM2|\n|FAM47E|\n|LCNL1|\n|ACYP1|\n|TMEM43|\n|RNF25|\n|GABBR2|\n|BCR|\n|PARP2|\n|FBXO7|\n|RP11-762H8.2|\n|LGALS3BP|\n|MAP1B|\n|NFAT5|\n|RP11-726G1.1|\n|FAM134C|\n|ZNF763|\n|ARHGAP27|\n|NUDT16P1|\n|ABLIM2|\n|SSR3|\n|MEAF6|\n|TRIM52|\n|PRCP|\n|ZNF264|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table705"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Weekday|\n|---|\n|Friday|\n|Wednesday|\n|Tuesday|\n|Saturday|\n|Monday|\n|Thursday|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table706"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Puerto|\n|---|\n|Comodoro Rivadavia|\n|Cofco International Argentina S.A. (PGSM)|\n|Minera Alumbrera|\n|Rosales|\n|Molinos San Benito|\n|Coop. Agr. La Paz|\n|Cargill Diamante - Muelle Elevador|\n|Shell (Arroyo Seco)|\n|Caleta Olivia|\n|Santa Fe|\n|Mar del Plata - Muelle YPF|\n|Cargill - Muelle Quebracho|\n|Mar del Plata|\n|Pan American Energy (Campana)|\n|Bunge (Dempa y Pampa)|\n|Barranqueras - Muelle Provincial|\n|Barranqueras - Muelle Elevador|\n|La Plata|\n|Oil Combustibles|\n|Buenos Aires|\n|Akzo Nobel|\n|Renova|\n|ADM AGRO (Arroyo Seco)|\n|Dock Sud|\n|ACA (Vilelas)|\n|Dreyfus (Gral Lagos)|\n|Siderca|\n|Punta Loyola|\n|Comodoro Rivadavia - Muelle YPF|\n|Punta Quilla|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table707"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Country|\n|---|\n|Germany|\n|United Kingdom|\n|United States|\n|Australia|\n|Luxembourg|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table708"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Congressional District|\n|---|\n|TX-17|\n|NY-25|\n|SC-06|\n|OK-03|\n|MA-06|\n|CA-44|\n|MA-09|\n|TX-21|\n|CA-45|\n|TX-06|\n|NJ-06|\n|CA-30|\n|MD-03|\n|TX-02|\n|VA-02|\n|UT-01|\n|NM-03|\n|NM-01|\n|NY-12|\n|CT-03|\n|NE-02|\n|AL-05|\n|NJ-12|\n|ME-02|\n|UT-02|\n|NC-11|\n|MS-03|\n|VA-11|\n|KS-03|\n|CA-43|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table709"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|GENRE|\n|---|\n|crime|\n|thriler|\n|music|\n|Animation|\n|horror|\n|drama|\n|biography|\n|musical|\n|sci-fi|\n|adventure|\n|western|\n|war|\n|family|\n|thriller|\n|document|\n|action|\n|fantasy|\n|comedy|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['thriller', 'thriler']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table71"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Miejsce realizacji - wojew\u00f3dztwo|\n|---|\n|POMORSKIE|\n|LUBUSKIE|\n|PODKARPACKIE|\n|KUJAWSKO-POMORSKIE|\n|WIELKOPOLSKIE|\n|PODLASKIE|\n|MAZOWIECKIE|\n|ZACHODNIOPOMORSKIE|\n|OPOLSKIE|\n|LUBELSKIE|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table710"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Studieretning|\n|---|\n|Skoleledelse|\n|Demens|\n|Brand og kommunikationsdesign|\n|Design management|\n|Procesteknologi|\n|PROJEKTLEDELSE OG ORGANISATIONSUDVIKLING|\n|Transport og supply chain optimering|\n|Webteknologi|\n|NATURFAGSVEJLEDER|\n|Rusmiddel|\n|Revision|\n|Merkantil diplom i kommunikation|\n|Anvendt scenekunst|\n|Drift|\n|Seksualvejledning|\n|Sportsmanagement|\n|DANSK SOM ANDET SPROG|\n|Performative processer|\n|Sikkerhed|\n|Bank og realkredit|\n|VEJLEDNING OG SUPERVISION|\n|Systemadministration|\n|DANSKVEJLEDER|\n|Laboratorieteknologi|\n|Produktion|\n|Sundhedsformidling og klinisk uddannelse|\n|Innovation|\n|Vej- & parkdrift|\n|Webudvikling|\n|Udvikling|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table711"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Occupation Title|\n|---|\n|Electrical and Electronics Repairers Commercial and Industrial Equipment|\n|Food Preparation and Serving Related Workers All Other|\n|Conveyor Operators and Tenders|\n|Subway and Streetcar Operators|\n|Genetic Counselors|\n|Occupational Health and Safety Specialists|\n|Retail Salespersons|\n|Social and Community Service Managers|\n|Librarians|\n|Set and Exhibit Designers|\n|Electrical Power-Line Installers and Repairers|\n|Title Examiners Abstractors and Searchers|\n|Education Administrators Elementary and Secondary School|\n|Fence Erectors|\n|Cabinetmakers and Bench Carpenters|\n|Molding Coremaking and Casting Machine Setters Operators and Tenders Metal and Plastic|\n|Cooks Restaurant|\n|Inspectors Testers Sorters Samplers and Weighers|\n|Radiologic Technologists|\n|Shoe and Leather Workers and Repairers|\n|Log Graders and Scalers|\n|Extruding and Forming Machine Setters Operators and Tenders Synthetic and Glass Fibers|\n|Electrical and Electronics Drafters|\n|Loan Interviewers and Clerks|\n|Agricultural Sciences Teachers Postsecondary|\n|File Clerks|\n|Cleaning Washing and Metal Pickling Equipment Operators and Tenders|\n|Postal Service Mail Carriers|\n|Physical Therapist Assistants|\n|Zoologists and Wildlife Biologists|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table712"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Ansvarig person|\n|---|\n|Marta Fallgren|\n|Marianne Pira|\n|Cecilia Ulleryd|\n|Johan Lindqvist|\n|Gustaf af Ugglas|\n|Birgitta Lejman|\n|Martina Melander|\n|Anne Hallvig|\n|Henrik Andreasson|\n|Ylva Tottmar|\n|Marie-Charlotte Gustafsson|\n|Jonatan Dahlkvist|\n|Angelica Wiklund|\n|Christina Lindberg|\n|Anna Harrysson|\n|Agneta Eklund|\n|Josefin Haraldsson|\n|Christina Hermans|\n|Marianne Rutqvist|\n|Niklas Rommel|\n|Christina Dahlmann|\n|Jan Andersson|\n|Stefan Lindh|\n|Ingrid Larsson|\n|Anne Nilsson|\n|Monika Saarm|\n|Christianne Simson|\n|Thomas Lindqvist|\n|Fredrik Rosenberg|\n|Niklas Magnusson|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table713"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|\u9023\u7d61\u5148TEL\u30ec\u30f3\u30e9\u30af\u30b5\u30ad2|\n|---|\n|078-581-1121|\n|078-798-3600|\n|078-646-9880|\n|0794-68-9013|\n|0799-22-0897|\n|079-251-0025|\n|0796-32-0161|\n|078-596-6622|\n|078-934-0868|\n|0795-773281|\n|0791-67-8055|\n|0795-22-1358|\n|0798-65-5282|\n|1798-65-5282|\n|078-743-8293|\n|078-646-3111|\n|0797-82-1506|\n|079-590-2121|\n|078-595-9401|\n|0796-48-0778|\n|0794-32-8511|\n|0798-81-6717|\n|079-568-2588|\n|079-253-6711|\n|078-792-1011|\n|0794-67-0900|\n|0794-70-0201|\n|079-563-0306|\n|079-246-7234|\n|078-794-3901|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table714"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|BORROWER|\n|---|\n|MURRY JR ROBERT F & PAULA N|\n|BAIRD JOHN R & SUSAN R|\n|FORDHAM ORLYN & JANICE|\n|MILLER FRANK H & JANE F|\n|TAYLOR JON|\n|FINCH DOUGLAS E & DORIS J|\n|O'NEIL DAVID & MELISSA CECIL TRUSTEES|\n|MCCORMACK JOHN B & JOYCE|\n|MDA ENTERPRISES INC.|\n|LAMBERT CHARLES & MARY|\n|RAYMATT LLC|\n|GODTFREDSEN EINER L & CAROL M|\n|BURGESON MARY N|\n|STEWART WILLIAM & VICKY|\n|LOVE THOMAS & SUSAN|\n|KASCHNER RUDOLF H & BARBARA A|\n|DICKS JOHN E & KARIN T|\n|PARENTEAU KAYLI E|\n|BEUCHAMP MERRILL LYNN & TERRI ANN MCGUIGAN|\n|NORBERG JACK W & KAREN E|\n|BARGER NICOLE & AARON W|\n|DAMATO GIOVANNI R|\n|DOUGLAS KENNETH ROBERT & SHARON LA VON|\n|WALDEN LANCE M & SUSAN J|\n|GRAY RAYMOND & LUCIA L|\n|KNUTZON RANDY K & DEBORAH S|\n|MOLINE DAVID N & LAURA L|\n|MEIER CARL C & SHARON A|\n|PACHECO-MONTES ARNULFO & SARA|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table715"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Payment Date|\n|---|\n|06\/20\/2017|\n|06\/08\/2017|\n|06\/15\/2017|\n|06\/01\/2017|\n|06\/14\/2017|\n|06\/30\/2017|\n|06\/28\/2017|\n|06\/29\/2017|\n|06\/07\/2017|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table716"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Matr\u00edcula|\n|---|\n|HK4519|\n|HK2118|\n|HK2907|\n|HK1666|\n|HK1997|\n|HK4535|\n|HK4191|\n|HK2945|\n|HK5016|\n|N331QT|\n|N973AV|\n|HK4636|\n|HK3286|\n|HK5058|\n|HK5069|\n|N334QT|\n|HK2432|\n|HK5026|\n|HK2441|\n|HK4253|\n|HK1664|\n|HK876|\n|HK3312|\n|HK1353|\n|HK5092|\n|HK4484|\n|HK2127|\n|HK4955|\n|HK2657|\n|HK4669|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table717"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Category|\n|---|\n|POL|\n|LIQ|\n|CHZ|\n|DRY|\n|FRZ|\n|WTR|\n|LAB|\n|LOC|\n|DIN|\n|CFR|\n|USP|\n|PAP|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table718"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|LOCATION|\n|---|\n|I01|\n|B122|\n|B132|\n|B01|\n|B204|\n|B133|\n|B104|\n|B218|\n|B107|\n|B127|\n|B134|\n|B253|\n|Q04|\n|B251|\n|J03|\n|B230|\n|SH204|\n|B3STK|\n|N01|\n|H04|\n|B206|\n|B252|\n|B02|\n|ROOF|\n|H03|\n|B128|\n|C03|\n|B220|\n|B306|\n|B101|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table719"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|City|\n|---|\n|East Setauket|\n|Annapolis|\n|Twinsburg|\n|Jacksonville|\n|New Haven|\n|Columbus AFB|\n|Honolulu|\n|Belmont|\n|Midlothian|\n|Lawrenceville|\n|Palantine|\n|Harrisbug|\n|Salinas|\n|Endeavor|\n|St. Joseph|\n|Irvine|\n|Laurel|\n|Weymouth|\n|Jericho|\n|Rosemead|\n|Hampden|\n|Clinton|\n|Harrisburg|\n|Hastings On Hudson|\n|Hilton|\n|Waltham|\n|Tustin|\n|Santa Rosa|\n|Sherman|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Harrisburg', 'Harrisbug']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table72"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|CT ID|\n|---|\n|A0900|\n|A0523|\n|A0551|\n|A0033|\n|A2042|\n|A0607|\n|A0604|\n|A0409|\n|A0128|\n|A0109|\n|A0298|\n|A0458|\n|A0929|\n|A0715|\n|A0742|\n|A1851|\n|A1827|\n|A1034|\n|A1821|\n|A1822|\n|A0614|\n|A0729|\n|A0233|\n|A1381|\n|A1830|\n|A0434|\n|A0878|\n|A0661|\n|A0738|\n|A0025|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table720"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|\u00c4rende nr|\n|---|\n|LS2016-0380|\n|LS2017-0167|\n|LS2016-0517|\n|LS2017-0141|\n|LS2016-0306|\n|LS2017-0066|\n|LS2017-0023|\n|LS2016-0461|\n|LS2016-0699|\n|LS2016-0513|\n|LS2016-0353|\n|LS2016-0386|\n|LS2016-0003|\n|LS2016-0424|\n|LS2016-0086|\n|LS2017-0195|\n|LS2016-0720|\n|LS2016-0243|\n|LS2017-0211|\n|LS2017-0014|\n|LS2016-0393|\n|LS2016-0745|\n|LS2016-0286|\n|LS2017-0122|\n|LS2016-0659|\n|LS2017-0033|\n|LS2016-0620|\n|LS2016-0038|\n|LS2016-0368|\n|LS2017-0082|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table721"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Titel|\n|---|\n|Leasingavtal kaffeautomater|\n|Region Uppsalas forskningspris 2016|\n|Gallring av IMx RoS och PAS|\n|Organisationsbidrag till RFHL|\n|Avtal it externa parter (CK2015-0277)|\n|Framtagande av funktionshinderpolitiskt program (CK2016-0031)|\n|Avtal The National Prostate Cancer Register|\n|Remiss - SOU2016:4 Politisk information i skolan - ett led i demokratiuppdraget|\n|Avtal kaffemaskin 16-0004736 (CK2014-0353)|\n|Hyresavtal Uniflow Regionens hus|\n|Motion (M) - Etablera samarbete med Experio Lab|\n|Tecknande av lokalt kollektivavtal LOK16|\n|UNT 20 mars - 16|\n|Regionstyrelsens delegationsordning|\n|Socialt Recruit - lediga jobbapplikation|\n|Avisering om verksamhetskontroll helikopterflygplats|\n|Befolkningsprognos 2017|\n|Avtal skrivbordskopiator\/MFP A8203123 (upphandlingen) (CK2015-0541)|\n|Regleringsbrev\/regeringsbeslut 2017|\n|Avtal kaffemaskiner 16-0004737 (CK2014-0354)|\n|Granskning av pensionskostnader|\n|Avtal Kopiator\/MFP A8105457 (plan3) (CK2015-0038)|\n|Granskning av intern styrning och kontroll|\n|Hyresavtal|\n|Medicinhistoriskt stipendium 2016|\n|Upphandling ambulansflyg|\n|Samordning och dimensionering av AT och ST|\n|PHM-projektet|\n|Kurser och konferenser 2017|\n|Avtal kopiator\/MFP A8225078 (Storgatan 27)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table722"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Miejsce realizacji - gmina|\n|---|\n|Rozprza|\n|Damnica|\n|Sierakowice|\n|Lubanie|\n|Sztutowo|\n|Zwierzyn|\n|Skwierzyna|\n|Milicz|\n|Bobrowice|\n|Rejowiec|\n|Rybczewice|\n|Rzeczyca|\n|Zakrzew|\n|Brzuze|\n|Goraj|\n|Sadowne|\n|Marklowice|\n|Skarbimierz|\n|Trzciana|\n|Jeleniewo|\n|Widawa|\n|Osiek Jasielski|\n|Mieleszyn|\n|Skawina|\n|Gdynia|\n|Wydminy|\n|Iwaniska|\n|Puszczykowo|\n|Jedlicze|\n|Nurzec-Stacja|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table723"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|LPTK|\n|---|\n|UMP|\n|UNNES|\n|Unesa|\n|UMalang|\n|UAD|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table724"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|CURP|\n|---|\n|TOMS620916MSPRCN03|\n|TEOG570214HSPRCR06|\n|MATJ820624HSPRRN11|\n|SAML701004MSPLRR09|\n|EADC731211MSPSQL09|\n|NICH500406HOCCRC04|\n|BIGC730914MSPRTR09|\n|GUMI730706HSPRNS01|\n|HENF580407MTSRTT02|\n|AACC640724HSPRNT02|\n|GAHL630515MSPRRL02|\n|DESC531115MSPLVR05|\n|DETR550304HSPBPB07|\n|OOSL700110HSPLLS06|\n|AOMM570312MSPLDR05|\n|CEAS560904HCMRVN09|\n|GOGV400220HSPNNC13|\n|VEGE630912MSPGRS06|\n|PEGJ790701HASRNL07|\n|MUZF701029HSPXPD07|\n|ROLA600205MSPDPD01|\n|TOEX860325MSPRSC06|\n|MERA670804HSPDNL04|\n|HEHR531031HTSRRB09|\n|BAXY600213MSPRXL06|\n|COCR820311HSPRNC04|\n|ROME710215MSPJYL08|\n|REAI710311HSPYRS06|\n|MOSM510718HSPNVR01|\n|ZAEN580910HSPMLC05|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table725"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Scope Severity Code|\n|---|\n|D|\n|E|\n|K|\n|G|\n|F|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table726"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|ACTIVITY DESCRIPTION|\n|---|\n|Manufacturing (Leather & products thereof)|\n|Construction|\n|Electricity Gas & Water companies|\n|Trading|\n|Business Services|\n|Community personal & Social Services|\n|Manufacturing (Paper & Paper products Publishing printing|\n|Manufacturing (Others)|\n|Manufacturing (Metals & Chemicals and products thereof)|\n|Manufacturing (Machinery & Equipments)|\n|Manufacturing (Textiles)|\n|Manufacturing (Food stuffs)|\n|Insurance|\n|Agriculture and Allied Activities|\n|Transport storage and Communications|\n|Finance|\n|Manufacturing (Wood Products)|\n|Mining & Quarrying|\n|Real Estate and Renting|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table727"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Cell1|\n|---|\n|$AT$19|\n|$E$12|\n|$AU$48|\n|$AV$23|\n|$J$101|\n|$BA$15|\n|$AI$61|\n|$AT$48|\n|$AF$67|\n|$AT$28|\n|$J$47|\n|$V$52|\n|$AX$30|\n|$AU$15|\n|$AI$78|\n|$AY$15|\n|$AT$23|\n|$AE$54|\n|$AX$56|\n|$AY$54|\n|$T$79|\n|$AX$58|\n|$AT$17|\n|$J$118|\n|$AZ$17|\n|$AY$32|\n|$J$105|\n|$AG$61|\n|$V$20|\n|$AU$58|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table728"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|District|\n|---|\n|Mountainside Boro|\n|Salem County Vocational|\n|Galloway Twp|\n|Woodstown-Pilesgrove Reg|\n|Frelinghuysen Twp|\n|Parsippany-Troy Hills Twp|\n|Lenape Regional|\n|Cumberland Co Vocational|\n|Lavallette Boro|\n|Blairstown Twp|\n|Estell Manor City|\n|Hanover Park Regional|\n|Northvale Boro|\n|Oaklyn Boro|\n|Hampton Twp|\n|Bound Brook Boro|\n|Marlboro Twp|\n|East Greenwich Twp|\n|Haddonfield|\n|Winfield Twp|\n|Ramapo-Indian Hill Reg|\n|Fredon Twp|\n|Wharton Boro|\n|Fair Lawn Boro|\n|Tuckerton Boro|\n|Weymouth Twp|\n|Lebanon Boro|\n|Woodlynne Boro|\n|North Bergen Twp|\n|Northern Highlands Reg|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table729"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|TRUSTOR|\n|---|\n|PASCUS CONNIE BRIGHT|\n|SIMON ROBERT M SIMON MARGARET A|\n|THIERIOT JOSHUA PETER|\n|GONZALES ARMANDO JR|\n|FORBES ROGER H TR FORBES ROGER H REVOCABLE LIVING TRUST FORBES ROGER H FORBES ANNE JA FORBES ANNE J|\n|gonzalez ernersto|\n|LAXALT URZA MONIQUE TR LAXALT URZA TRUST LAXALT MONIQUE TR LAXALT URZA MONIQUE|\n|SABAH MICHELE D|\n|BURGET WILLIAM|\n|BRIGGS BRADLEY O BRIGGS KELLY A|\n|KORSON DONALD M KORSON MARY JEAN|\n|WARD KENNETH V WARD LORNA L|\n|gonzalez ernesto|\n|PARKER DAVID TR BOWER TRUST|\n|GONZALES PENNIE J MALING FRANCIS GUZMAN ANDREW S|\n|REED JOSEPH H REED JAMES A|\n|BRYANT WILLIAM E BRYANT PAMELA R|\n|SKYBOX|\n|JAFFE ELIZABETH M TR JAFFE ELIZABETH M TRUST BYERS BRIDGET ANN TR BYERS BRIDGET ANN TRUST BYERS BRIDGET A ...|\n|ORTIZ ROLAND W ORTIZ ELAINE C|\n|HAMRICK LEE EDWARD HAMRICK DIANNA|\n|ARDITO JULIE L|\n|LEFEBVRE ROBERT|\n|ELLENWOOD LINDA L|\n|HAMMOND VIVIAN R|\n|HERNANDEZ FRANCISCO HERNANDEZ PAULA|\n|TURKETTE BONNIESUE MOSS MICHAEL E|\n|CLOUTIER MATTHEW D CLOUTIER HEATHER A|\n|THOMPSON JASON E THOMPSON KIMBERLY K|\n|WARD L LYNNE TR WARD FAMILY TRUST|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['gonzalez ernesto', 'gonzalez ernersto']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table73"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|CNPJ RFB|\n|---|\n|48.555.775\/0077-58|\n|78.674.702\/0001-48|\n|09.510.849\/0001-80|\n|48.555.775\/0060-00|\n|22.232.359\/0001-27|\n|13.832.644\/0001-98|\n|05.803.744\/0001-68|\n|09.493.986\/0001-53|\n|05.848.263\/0001-79|\n|77.782.332\/0001-08|\n|09.323.277\/0002-00|\n|08.362.458\/0001-00|\n|36.975.258\/0001-50|\n|16.441.263-0002-57|\n|79.372.108\/0001-65|\n|03.589.319\/0001-92|\n|13.253.390\/0001-53|\n|09.351.494\/0001-23|\n|48.555.775\/0073-24|\n|06.286.080\/0001-70|\n|04.309.546\/0001-80|\n|13.696.686\/0001-49|\n|04.177.669\/0001-04|\n|01.740.753\/0001-04|\n|48.555.775\/0091-06|\n|20.837.725\/0001-46|\n|11.208.669\/0001-90|\n|17.515.115\/0002-00|\n|11.994.939\/0002-16|\n|03.005.452\/0001-54|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table730"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Location|\n|---|\n|94x N JACKSON ST|\n|43xx N PERSHING DR|\n|60x N MANCHESTER ST|\n|CLARENDON BL\/N QUEEN ST|\n|70x S COURTHOUSE RD|\n|12xx N HERNDON ST|\n|CLARENDON BL\/ WASHINGTON BL|\n|14xx N FILLMORE ST|\n|23xx N 14 ST|\n|49xx COLUMBIA PK|\n|34xx WASHINGTON BL|\n|N 10 RD\/N KENSINGTON ST|\n|N GLEBE RD\/ LEE HW|\n|11xx 17TH ST S|\n|46xx 26TH ST N|\n|11xx S THOMAS ST|\n|17xx ARLINGTON BL|\n|91x S ORME ST|\n|12xx S COURTHOUSE RD|\n|24xx JEFFERSON DAVIS HW|\n|43x S 23 ST|\n|18xx FORT MYER DR|\n|10xx N QUINCY ST|\n|18xx S 24 ST|\n|80x 21ST ST S|\n|CAMPBELL AVE\/ SHIRLINGTON CIR|\n|55xx LEE HW|\n|16xx N TROY ST|\n|14xx N TROY ST|\n|61x S 25 ST|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table731"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|N\u00ba PROCESSO|\n|---|\n|08129.007610\/2018-37|\n|08129.009575\/2018-91|\n|08129.029797\/2014-04|\n|08129.030209\/2014-77|\n|08129.005468\/2018-93|\n|08129.007217\/2018-43|\n|08129.006820\/2018-16|\n|08129.007196\/2018-66|\n|08129.009793\/2018-25|\n|08129.009104\/2018-82|\n|08129.006249\/2018-21|\n|08129.009079\/2018-37|\n|08129.008822\/2018-31|\n|08129.010115\/2018-13|\n|08129.009470\/2018-31|\n|08129.009881\/2018-27|\n|08129.005651\/2018-99|\n|08129.010392\/2018-18|\n|08129.012059\/2013-39|\n|08129.008041\/2018-47|\n|08129.006779\/2018-70|\n|08129.009175\/2018-85|\n|08129.008977\/2018-78|\n|08129.015596\/2013-31|\n|08129.006301\/2018-40|\n|08129.014728\/2013-15|\n|08129.009644\/2018-66|\n|08129.008910\/2018-33|\n|08129.006302\/2018-94|\n|08129.006927\/2018-56|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table732"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|SERVICE CATEGORY|\n|---|\n|Prosthodontics Fixed|\n|Periodontics|\n|Preventive|\n|Implant Services|\n|Prosthodontics Removable|\n|Orthodontics|\n|NOT FOUND|\n|Adjunctive General Services|\n|Endodontics|\n|Oral Surgery|\n|Diagnostic|\n|Restorative|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table733"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Category|\n|---|\n|Activity Trackers|\n|GPS Units|\n|Camcorders|\n|Voice Recorders|\n|Cameras|\n|Displays|\n|Tablet-transformers|\n|Viewfinders|\n|Drawing Tablets|\n|Flashes|\n|Keyboards|\n|Batteries|\n|Media Players|\n|Smart Watches|\n|TV sets|\n|Webcams|\n|Speakers|\n|VR-HMD|\n|Desktops|\n|Game Controllers|\n|Lenses|\n|Routers|\n|Cases & Covers|\n|Headphones|\n|Cell Phones|\n|MP3 Players|\n|Tools|\n|All-in-One Desktops|\n|E-Books|\n|Dashcams|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table734"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|TREASURY_ACCT_ID|\n|---|\n|28-  -    \/18  -0404  -000-0   Payments to Social Security Trust Funds|\n|28-  -    \/X   -8007  -000-0   Federal Disability Insurance Trust Fund|\n|-  -    \/    -      -   -|\n|28-  -18  \/20  -0406  -000-0   Supplemental Security Income Program|\n|28-  -    \/15  -8704  -000-0   Limitation on Administrative Expenses|\n|28-  -    \/X   -0440  -000-0   Payments for Credits against Social Security Contributions|\n|28-  -    \/X   -0401  -000-0   Special Benefits for Certain World War II Veterans|\n|28-  -    \/13  -0400  -000-0   Office of the Inspector General|\n|28-  -14  \/15  -0406  -000-0   Supplemental Security Income Program|\n|28-  -    \/16  -0400  -000-0   Office of the Inspector General|\n|28-  -    \/X   -0404  -000-0   Payments to Social Security Trust Funds|\n|28-28-    \/X   -8007  -000-0   Federal Disability Insurance Trust Fund|\n|28-  -    \/15  -0400  -000-0   Office of the Inspector General|\n|28-28-    \/X   -8006  -000-0   Federal Old-age and Survivors Insurance Trust Fund|\n|28-  -    \/X   -5419  -000-0   State Supplemental Fees|\n|28-  -18  \/19  -8704  -000-0   Limitation on Administrative Expenses|\n|28-  -    \/14  -0400  -000-0   Office of the Inspector General|\n|28-  -    \/14  -8704  -000-0   Limitation on Administrative Expenses|\n|28-  -    \/17  -0404  -000-0   Payments to Social Security Trust Funds|\n|28-  -    \/17  -8704  -000-0   Limitation on Administrative Expenses|\n|28-  -    \/13  -8704  -000-0   Limitation on Administrative Expenses|\n|28-  -    \/X   -8006  -000-0   Federal Old-age and Survivors Insurance Trust Fund|\n|28-  -    \/X   -0416  -000-0   Administrative Costs Children's Health Insurance Program|\n|28-  -    \/X   -0415  -000-0   Administrative Costs The Medicare Improvements for Patients and|\n|28-  -16  \/18  -8704  -000-0   Limitation on Administrative Expenses|\n|28-  -    \/X   -0417  -000-0   Administrative Expenses Recovery Act|\n|28-  -15  \/17  -0406  -000-0   Supplemental Security Income Program|\n|28-  -    \/16  -8704  -000-0   Limitation on Administrative Expenses|\n|28-  -16  \/18  -0406  -000-0   Supplemental Security Income Program|\n|28-  -15  \/18  -8704  -000-0   Limitation on Administrative Expenses|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table735"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|\u0645\u062f\u0644 \u06a9\u0627\u0644\u0627|\n|---|\n|DMT 630f  DMT 630u_DMT 630s_DMT 630II|\n|Sahand|\n|FB 904 IB|\n|Hospina|\n|701 Handoxy|\n|Cut Off:500 ng\/mL|\n|Multi purpose|\n|ARIAN300RF_ARIAN600RF_ARIAN800RF_ARIAN1000RF|\n|PA03B Cut Off: 300 ng\/ml|\n|JTIL600-JTIL400-JTIL200|\n|601 -OT|\n|H210  H200|\n|SW1_SW2|\n|601-SK|\n|CBC_PT_PTT_ESR|\n|(6) Alpha Classic|\n|PMS 2114|\n|HYAIR85-HYAIR45-HYAIR37-HYAIR30-HYAIR22-HYAIR15|\n|P.S.P|\n|502 OT|\n|AZ\/LM920  -  AZ\/LM910|\n|M10-CDH|\n|DMEM- DMEM\/F12 -RPMI1640|\n|PMMA  Foldable Yellow Foldable|\n|T.S.N.P.T|\n|130|\n|REF RE-1200|\n|bs8000|\n|Cut off=300 ng\/mL|\n|TSC-650-SON|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table736"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Term|\n|---|\n|2009 Fall|\n|2011 Fall|\n|2010 Fall|\n|2012 Fall|\n|2014 Fall|\n|2013 Fall|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table737"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Spalte2|\n|---|\n|Costruzione di locomotive e di materiale rotabile ferro-tranviario|\n|Industria del legno e dei prodotti in legno e sughero esclusi i mobili; fabbricazione di articoli in paglia e materiali da intreccio|\n|Fabbricazione di macchine per la formatura dei metalli e di altre macchine utensili|\n|Istruzione|\n|Riparazione di computer e di beni per uso personale e per la casa|\n|Estrazione di petrolio greggio|\n|Commercio all'ingrosso di materie prime agricole e animali vivi|\n|Fabbricazione di prodotti di cokeria|\n|Servizi di supporto per la silvicoltura|\n|Fabbricazione di articoli di coltelleria utensili e oggetti di ferramenta|\n|Installazione di impianti elettrici idraulici e altri lavori di costruzione e installazione|\n|Servizi veterinari|\n|Industrie manifatturiere n.c.a.|\n|Fabbricazione di fitofarmaci e di altri prodotti chimici per l'agricoltura|\n|Intermediazione monetaria|\n|Commercio al dettaglio ambulante in bancarelle e mercati|\n|Fabbricazione di articoli in materie plastiche|\n|Fabbricazione di prodotti in legno sughero paglia e materiali da intreccio|\n|Servizi degli studi medici ed odontoiatrici|\n|Fabbricazione di apparecchiature per le comunicazioni|\n|Commercio al dettaglio di prodotti alimentari bevande e tabacco in esercizi specializzati|\n|Fabbricazione di tubi condotti profilati cavi e relative guarnizioni in acciaio|\n|Fabbricazione di preparati farmaceutici|\n|Raccolta di prodotti non legnosi selvatici|\n|Fabbricazione di veicoli militari da combattimento|\n|Estrazione di lignite|\n|Fabbricazione di coke e prodotti derivanti dalla raffinazione del petrolio|\n|Produzione trasmissione e distribuzione di energia elettrica|\n|Istruzione primaria|\n|Commercio all'ingrosso e al dettaglio e riparazione di autoveicoli e motocicli|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table738"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Circuit or Region|\n|---|\n|17 Circuit|\n|16 Circuit|\n|05 Circuit|\n|03 Circuit|\n|20 Circuit|\n|Statewide|\n|Northern Region|\n|04 Circuit|\n|10 Circuit|\n|01 Circuit|\n|13 Circuit|\n|11 Circuit|\n|12 Circuit|\n|14 Circuit|\n|06 Circuit|\n|18 Circuit|\n|09 OC Circuit|\n|Southern Region|\n|07 Circuit|\n|Central Region|\n|08 Circuit|\n|09 OS Circuit|\n|15 Circuit|\n|02 Circuit|\n|19 Circuit|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table739"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|LNAME|\n|---|\n|Frazier|\n|Bernadina|\n|Carter|\n|Merchan|\n|Beckham|\n|Forsythe|\n|Ibanez|\n|Escobar|\n|Andrus|\n|Hughes|\n|Kozma|\n|Brantley|\n|Decker|\n|Avery|\n|DeJesus|\n|Jackson|\n|Kratz|\n|Dickerson|\n|Cedeno|\n|Grossman|\n|Brantly|\n|Arencibia|\n|Morrison|\n|McKenry|\n|Laird|\n|Drew|\n|Jimenez|\n|Kipnis|\n|Franklin|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Brantley', 'Brantly']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table74"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Library Email|\n|---|\n|masontexaslibrary@gmail.com|\n|Terry.moore@midlothian.tx.us|\n|aregalado@co.brooks.tx.us|\n|kristen.satterfield@rockspringsisd.net|\n|library@co.franklin.tx.us|\n|library@libraryofgraham.org|\n|lajoyalib@yahoo.com|\n|mchristopher@camerontexas.net|\n|whitehousetxlibrary@gmail.com|\n|barbara@ilovetoread.org|\n|informationdesk@cityofdenison.com|\n|caprocklibrary90@gmail.com|\n|motleycountylibrary@hotmail.com|\n|dunagand@fivearea.com|\n|ppeters@decaturtx.org|\n|chandlerpublib@yahoo.com|\n|library@livingstonlibrary.net|\n|library@cleburne.net|\n|library@crockettlibrary.com|\n|jacqulynhorton@hotmail.com|\n|haskell.library@yahoo.com|\n|stonewall.lib@gmail.com|\n|dpldir@dallascityhall.com|\n|sesin@sanjuanlibrary.com|\n|cowanl@cityofalvarado.org|\n|swishercountylibrary@gmail.com|\n|pmcanally@paristexas.gov|\n|mayfield@honeygrove.org|\n|ptnlib@ptn.lib.tx.us|\n|whlibrary@yahoo.com|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table740"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Other|\n|---|\n|CTH: 88 (+1);  RBK: 64 (+2);  IMP: 60 (+5)|\n|ACC: 84 (-1);  AWR: 95 (-1);  RBK: 92 (-2);  PBK: 85 (-1)|\n|RBK: 79 (-2)|\n|TAK: 76 (-3);  BKS: 65 (-2);  PUR: 73 (-1);  PRC: 69 (+2);  ZCV: 81 (+3)|\n|AWR: 49 (-5);  CTH: 80 (-2)|\n|AGI: 65 (+1);  AWR: 90 (+1);  PWM: 78 (+2);  PUR: 93 (+1);  PRC: 92 (+1)|\n|STR: 68 (+2);  AWR: 75 (+3);  CTH: 86 (+5);  RBK: 65 (+2);  JMP: 93 (+2);  IMP: 65 (+1);  SPC: 91 (+2);  CIT: 79 (+1);  RTE: 76 (+4);  RLS: 75 (+5)|\n|AWR: 73 (+1);  TAK: 84 (+2);  PUR: 82 (+1);  PRC: 70 (+1)|\n|STR: 77 (+1);  AWR: 73 (+1);  RBK: 77 (+2);  PBK: 63 (+1)|\n|ACC: 93 (-1);  MCV: 86 (-2)|\n|PBK: 76 (-2)|\n|AGI: 91 (+2);  AWR: 65 (+2);  CAR: 69 (+1);  THA: 76 (+1);  ELUS: 77 (+2);  BCVision: 90 (+2);  TAS: 74 (+1);  ThrowAccuracyMid: 76 (+1)|\n|ACC: 90 (-1);  AGI: 87 (-1);  JMP: 90 (-1);  PUR: 83 (-1);  MCV: 84 (-1);  ZCV: 91 (-1);  PRS: 90 (-1)|\n|AWR: 56 (+2);  CAR: 77 (-1);  TRK: 82 (-1);  ELUS: 69 (+4);  BCVision: 91 (+1);  SFA: 67 (+2);  SPM: 80 (+2);  JKM: 87 (+2)|\n|PBK: 78 (-1)|\n|TAK: 84 (-1);  BKS: 74 (-2);  PUR: 94 (-1)|\n|RBK: 79 (-1);  PBK: 84 (-1)|\n|AWR: 69 (+1);  RBK: 75 (+2)|\n|AWR: 75 (+1);  PRC: 71 (+2);  MCV: 78 (+1);  ZCV: 83 (+1)|\n|AGI: 53 (+1);  RBK: 86 (+2);  IMP: 76 (+4);  RBF: 72 (+10)|\n|RBK: 90 (-1);  PBK: 74 (-2)|\n|AWR: 62 (+2);  RBK: 84 (+2)|\n|TAK: 88 (-1);  BKS: 75 (-1);  PUR: 91 (-1);  PRC: 94 (-1);  MCV: 66 (-1);  ZCV: 72 (-2)|\n|RBK: 80 (-1);  PBK: 73 (-1)|\n|SPD: 66 (-1);  AWR: 84 (-1);  STA: 82 (-2);  PWM: 82 (-3);  FNM: 61 (-2);  BKS: 77 (+1);  PRC: 80 (-2)|\n|CTH: 88 (-1);  TRK: 78 (-1);  ELUS: 69 (-1);  SPC: 90 (-2);  CIT: 93 (-2)|\n|AWR: 78 (+1);  CTH: 90 (+2);  BCVision: 77 (+2);  JKM: 83 (+1);  CIT: 86 (+3);  RLS: 70 (+1)|\n|CTH: 85 (+2);  CAR: 90 (+1)|\n|CTH: 70 (+2)|\n|AWR: 66 (+1);  TAK: 79 (+1);  PUR: 76 (+2);  PRC: 58 (+4)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table741"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Titel|\n|---|\n|Framtidens Akademiska nyhetsbrev (LSU2016-0241)|\n|Ytskiktsrenovering plan 5 hus B12 Akademiska sjukhuset (LSU2016-0081)|\n|Energispar - Installation av belysning hus Tengbom Wik (LSU2016-0056)|\n|Byte kylmedelkylare hus B16 Akademiska sjukhuset (LSU2015-0369)|\n|Nya brandavskiljande partier vid hisshallar hus B11 Akademiska sjukhuset (LSU2011-0135)|\n|Fortsatt styrbyte i hus F11\/F12  Akademiska sjukhuset (LSU2015-0575)|\n|Landstingsservice (LSU) Suite hela regionen|\n|Ombyggnad hiss A9-H3 hus A9  Akademiska sjukhuset (LSU2015-0581)|\n|Avfuktning av operationssalar och uppdukningsrum hus B9 Akademiska sjukhuset (LSU2014-0326)|\n|Installation av solceller hus M1 Akademiska sjukhuset (LSU2016-0431)|\n|Delegationsordning LSU 2017|\n|Nytt P3 laboratorium hus D1 Akademiska sjukhuset (LSU2014-0427)|\n|Byte stabilisatorer hus P1 och P3 Akademiska sjukhuset (LSU2015-0552)|\n|Ytskiktsrenovering trapphus hus T2 Akademiska sjukhuset (LSU2016-0088)|\n|Energispar - Installation av solceller hus T2 Akademiska sjukhuset (LSU2016-0403)|\n|Ytskiktsrenovering plan 4 hus B19 Akademiska sjukhuset (LSU2016-0084)|\n|Demontering av tekniksysteminstallationer i kulvert hus B11 Akademiska sjukhuset|\n|Installation av ny porttelefon hus B19 Akademiska sjukhuset (LSU2016-0032)|\n|Att arbeta med byggprojekt i Region Uppsala|\n|Byte belysningsarmaturer i trapphus hus B10 Akademiska sjukhuset (LSU2015-0427)|\n|Ytskiktsrenovering plan 4 hus N2 Akademiska sjukhuset (LSU2016-0216)|\n|Lokalanpassning Arbetsterapin hus A och B Samariterhemmet (LSU2015-0539)|\n|Ny mediakulvert mellan hus B9 och hus F14 samt VA i mark Akademiska sjukhuset (LSU2016-0416)|\n|Samverkan Transport 2016 (LSU2016-0009)|\n|Utreda placering av MRT 1_5T-kamera till Bild- och funktionsmedicinskt centrum (BFC) hus B16 Akademiska sjukhuset (LSU2014-0282)|\n|Uppbyggnad av fiberredundans inom Akademiska sjukhuset (LSU2015-0222)|\n|Nytt tak inomhusproblem hus E Tierp (LSU2016-0194)|\n|Installation av  tre stycken reservkylaggregat i datahall rum 1040 hus B9 Akademiska sjukhuset (LSU2016-0030)|\n|Avtal Administration 2017|\n|Hyresavtal inhyrda lokaler 2017|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table742"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|County|\n|---|\n|DOUGLAS COUNTY|\n|DUNN COUNTY|\n|IOWA COUNTY|\n|GREEN LAKE COUNTY|\n|BARRON COUNTY|\n|MILWAUKEE COUNTY|\n|BUFFALO COUNTY|\n|CHIPPEWA COUNTY|\n|DODGE COUNTY|\n|DOOR COUNTY|\n|ROCK COUNTY|\n|GRANT COUNTY|\n|RACINE COUNTY|\n|WASHBURN COUNTY|\n|VERNON COUNTY|\n|COLUMBIA COUNTY|\n|KENOSHA COUNTY|\n|DANE COUNTY|\n|JUNEAU COUNTY|\n|TREMPEALEAU COUNTY|\n|BURNETT COUNTY|\n|PRICE COUNTY|\n|VILAS COUNTY|\n|MONROE COUNTY|\n|GREEN COUNTY|\n|LA CROSSE COUNTY|\n|OZAUKEE COUNTY|\n|WOOD COUNTY|\n|IRON COUNTY|\n|MARQUETTE COUNTY|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table743"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|COMPANY NAME|\n|---|\n|HARYANA AGRICULTURE AND MILK PRODUCER COMPANY LIMITED|\n|RAMALAKSHMI MINERALS UDHYOG PRIVATE LIMITED|\n|CALIPHONY SOFTWARES PRIVATE LIMITED|\n|D&R FASHION TRADING PRIVATE LIMITED|\n|CAPESTONEADS ADVERTISING SERVICES (OPC) PRIVATE LIMITED|\n|KOLTAR PETROCHEM PRIVATE LIMITED|\n|MINUNSHOW4ALL VENTURES PRIVATE LIMITED|\n|MAN AND MONETA EXPERTS PRIVATE LIMITED|\n|SUMUKHA INFRATECH PRIVATE LIMITED|\n|VANDANA EXPRESS PRIVATE LIMITED|\n|TROS ONLINE SHOPPING PRIVATE LIMITED|\n|VISHVAKARMA MULTI SERVICES PRIVATE LIMITED|\n|KORDONBLEU TRADING (OPC) PRIVATE LIMITED|\n|NOUF'S ACADEMY PRIVATE LIMITED|\n|IVANA FASHION EXIM PRIVATE LIMITED|\n|LINGASS MEDIA NETWORK PRIVATE LIMITED|\n|INSPRENEURS PRIVATE LIMITED|\n|CONFIDENT NIDHI LIMITED|\n|BINGZER INDIA PRIVATE LIMITED|\n|CULINARY INNOVATIONS PRIVATE LIMITED|\n|TRUPHONE SOLUTIONS PRIVATE LIMITED|\n|IKOGITATE PRIVATE LIMITED|\n|NAMOKAAR CHANNELS PRIVATE LIMITED|\n|ATKLLOUD SOLUTIONS PRIVATE LIMITED|\n|PROGRESSIVE ENVIRO CARE PRIVATE LIMITED|\n|BRAND MARSHALS CONSULTING PRIVATE LIMITED|\n|QUESTDA TECHNOLOGY SOLUTIONS PRIVATE LIMITED|\n|COLOSSUS EXPORTS PRIVATE LIMITED|\n|BAGAHAN ENERGY PRIVATE LIMITED|\n|NEOVEDAN AROMA CARE PRIVATE LIMITED|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table744"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Ansvarig person|\n|---|\n|Mari Brolund|\n|Ammar Korshed|\n|Ilyas Alhassan|\n|Daniel Elenbring|\n|Stefan Adolfsson|\n|Christina Nordlund|\n|Thomas Hallberg|\n|Anki Lindgren|\n|Johan Wezelius|\n|Stefan Bojander|\n|Felicia Bohm|\n|Sture Jonsson|\n|Daniel Lund|\n|Helene Gustafsson|\n|Johan Wadman|\n|Ebba Blomstrand|\n|Mireil Dahlberg|\n|Sofia Reinholdsson|\n|Yvonne Francsics|\n|Johan Hammar|\n|Anna Geschwindt|\n|Tommi Kumpulainen|\n|Anders Nordling|\n|Fredrik Berg|\n|Anders Bergquist|\n|Mikael Eriksson|\n|Nina Waara|\n|My Larsson|\n|Rickard Ehn|\n|Katarina Pollack|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table745"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Reading achievement|\n|---|\n|q4|\n|q3|\n|q2|\n|q5|\n|q1|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table746"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Vendeur|\n|---|\n|Marcel|\n|Guy|\n|Luc|\n|Christian|\n|Lisa|\n|Elsa|\n|Dominique|\n|Gina|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table747"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|ACCTLT|\n|---|\n|FLAME Wildfire Suppression Reserve Fund|\n|Healthy Food Financing Initiative|\n|Pima Agriculture Cotton Trust Fund|\n|Forest and Rangeland Research|\n|Miscellaneous Trust Funds|\n|Energy Assistance Payments|\n|Agricultural Credit Insurance Fund Liquidating Account|\n|Miscellaneous Contributed Funds|\n|Buildings and Facilities|\n|Limitation on Inspection and Weighing Services Expenses|\n|Capital Improvement and Maintenance|\n|Office of the Secretary|\n|Distance Learning Telemedicine and Broadband Direct Loan Financing Account|\n|Office of Budget and Program Analysis|\n|Rural Housing Insurance Fund Program Account|\n|Rural Housing Insurance Fund Direct Loan Financing Account|\n|Funds for Strengthening Markets Income and Supply (section 32)|\n|Foreign Service National Separation Liability Trust Fund|\n|McGovern-Dole International Food for Education and Child Nutrition Program|\n|Repayable Advances to Agricultural Disaster Relief Fund|\n|Agricultural Credit Insurance Fund Guaranteed Loan Financing Account|\n|Rural Microenterprise Investment Direct Loan Financing Account|\n|Land Acquisition|\n|National Agricultural Statistics Service|\n|Stewardship Contracting Product Sales|\n|Emergency Forest Restoration Program|\n|Perishable Agricultural Commodities Act Fund|\n|Common Computing Environment|\n|Rural Housing Insurance Fund Guaranteed Loan Financing Account|\n|Rural Communication Development Fund Liquidating Account|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table748"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Provincia-Registro|\n|---|\n|Limon|\n|Heredia|\n|Puntarenas|\n|CARTAGO|\n|Alajuela|\n|Guanacaste|\n|San jose|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table749"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|City|\n|---|\n|SIOUX CITY|\n|HELENA|\n|FT WALTON BEACH|\n|CHARLEROI|\n|CHANTILLY|\n|BUTTE|\n|WEST PALM BEACH|\n|HIAWATHA|\n|ALEXANDRIA|\n|HUNTINGTON|\n|EAU CLAIRE|\n|SAN ANGELO|\n|GREAT FALLS|\n|WORCESTER|\n|ELK CITY|\n|ALBUQUERQUE|\n|RAPID CITY|\n|SANTA ROSA|\n|SEATTLE|\n|FORT WALTON BEACH|\n|MIDDLETON|\n|MUSKOGEE|\n|KALISPELL|\n|BELLINGHAM|\n|SAN DIEGO|\n|CHARLESTON|\n|ST LOUIS|\n|COLORADO SPGS|\n|KIRKSVILLE|\n|LAKE CHARLES|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['FT WALTON BEACH', 'FORT WALTON BEACH']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table75"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Miejsce realizacji - gmina|\n|---|\n|Przechlewo|\n|Duszniki|\n|Grabowiec|\n|Studzienice|\n|Wierzchowo|\n|Bieliny|\n|Olkusz|\n|Lipsko|\n|Korycin|\n|Piaseczno|\n|Niwiska|\n|Stare Kurowo|\n|Drezdenko|\n|Komprachcice|\n|Mszana Dolna|\n|Korczew|\n|Iwanowice|\n|Solec Kujawski|\n|Szprotawa|\n|Sosnowica|\n|Spiczyn|\n|Poronin|\n|Jasienica Rosielna|\n|Jawornik Polski|\n|Zielonka|\n|Wolin|\n|Krokowa|\n|Korytnica|\n|Wodzierady|\n|Sosnowiec|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table750"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Notes|\n|---|\n|IURC Tariff No. T-1 General Rules and Regulations Part 1 Sec. 1 - 3rd Revised Page 10|\n|FCC Transmittal 1407|\n|FCC Transmittal 1396|\n|FCC Tr. 1502 (mirror NECA)|\n|FCC Transmittal 1409|\n|FCC Tr. 201|\n|IURC Tariff No. 20 revisions|\n|FCC Transmittal 1423|\n|Tr. 72 (mirrors CLOC F.C.C. Tariff No. 9)|\n|FCC Transmittal 1427 & 1428|\n|FCC Transmittal 1433|\n|30-Day Filing ID # 3295|\n|FCC Filing 1437|\n|FCC Transmittal 1388|\n|CBAD mirrors Cincinnati Bell Telephone's interstate access rates  (Tariff FCC No. 35)|\n|30-Day Filing ID 3362|\n|FCC Filing 1823 for Tariff Nos. 2 and 3|\n|Initial Access Tariff Submission; 30-Day Filing ID #3313|\n|FCC Transmittal 1392|\n|Tr. 1829|\n|FCC Filing 1444|\n|FCC Filing 1440|\n|Initial Access Tariff Submission|\n|FCC Transmittals 1414 & 1415|\n|FCC Transmittal 1796|\n|IURC No. 1 - Updates|\n|30-day Filing ID # 3240|\n|IURC No. T-6 revisions|\n|30-Day Filing ID # 3167|\n|FCC Filing 1820|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table751"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|DIRECCION|\n|---|\n|MARIANO MELGAR 1315|\n|TACNA T 16 LA TOMILLA|\n|URB CESAR GARRIDO LECCA SOTO MZ A LT 13C|\n|AAHH BALNEARIO DE JESUS MZ J LOTE 3|\n|CERRITO BELEN L 3|\n|AUGUSTO GILARDI  MZ. BLT. 02|\n|PEDREGAL  SUR II ETAPA  NZ I4  LT 9|\n|ALIANZA 413|\n|CRR. PRINCIPAL QUISCAY SN   PISO  1|\n|AMPLIACION PUERTO NUEVO MZ L LT 12|\n|PP JJ CIUDAD DE DIOS KM14 CTE 12 MZA G LTE 9|\n|ASC FUNDO LA QUEBRADA MZA D LOTE5|\n|CALLE 5 DE MAYO|\n|ASOC EL NAZARENO MZ L LT 33|\n|UMACHULCO  SN|\n|AAHH ELVALLEDELAVIRGEN DE COPACABANA MZ A LT 3ZN A|\n|ASOC HERNAN BEDOYA FORGA MZ D LT 6|\n|ZONA II MZ N LOTE 18|\n|ASOC ELMER FAUCET PROFAM KM 16 MZA F LTE 13 ZONA 3|\n|ASOC. CIUDAD MUNICIPAL VII mz. M lt. 20|\n|calle jose carlos mariategui 402 urb manuel prado|\n|AAHH JAVIER HERAUD MZ  E  LT 4A|\n|AV. MIGUEL GRAU P-1|\n|ASOC ANDRES AVELINO CACERES MZ P LT 12|\n|PARQUE LA PERLITA 108 B|\n|VILLA LA JOYA J 9 LA JOYA|\n|CAYARABI|\n|ASOC PERUARBO SECT BOLIVIA III MZ J LTE 13|\n|ASOC EL PORVENIR  CALLE PRINCIPAL SIN NRO|\n|NICOLAS DE PIEROLA 2006|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table752"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|CIN|\n|---|\n|U01400KA2017PTC099351|\n|U74999MH2017PTC289533|\n|U74999MP2017OPC042230|\n|U74999PN2017PTC167838|\n|U15549UP2017PTC089412|\n|U70109UP2017PTC089283|\n|U74999UP2017PTC088918|\n|U52609WB2017PTC218894|\n|U74999TG2017PTC114229|\n|U74999KA2017PTC099376|\n|U74999BR2017PTC033313|\n|U74999UP2017PTC088885|\n|U74999WB2017PTC218988|\n|U74999UP2017PTC089097|\n|U45309DL2017PTC311153|\n|U74999KA2017PTC099488|\n|U45500OR2017PTC026313|\n|U01110TG2017PTC114175|\n|U72900TN2017PTC114241|\n|U27320GJ2017PTC095201|\n|U52609CT2017OPC007717|\n|U45400GJ2017PTC095035|\n|U72900KA2017PTC099370|\n|U74999KA2017PTC098972|\n|U74999HR2017PTC067141|\n|U72200PN2017PTC167994|\n|U74999DL2017PTC310512|\n|U74999DL2017PTC310936|\n|U74999HR2017PTC066927|\n|U74999MH2017PTC289836|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table753"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Course Number  |\n|---|\n|FN416X0|\n|BL045X0|\n|12685X0|\n|FN435X0|\n|IT345X0|\n|IM616X0|\n|11002Z5|\n|TL122X0|\n|TE132X0|\n|2I018X0|\n|53792Y0|\n|0C385X0|\n|52842Z0|\n|5C665X0|\n|99189Y0|\n|12002Z0|\n|99339Y0|\n|TS212X0|\n|TL236X0|\n|WC312X0|\n|1I048X0|\n|IL975X0|\n|BM206X0|\n|CS135X0|\n|IL145X0|\n|0C065X0|\n|FH115X0|\n|HL142X0|\n|3I068X0|\n|II136X0|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table754"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|TimeOfDay2|\n|---|\n|(Before 8AM_12PM - 5PM_After 5PM)|\n|12PM - 5PM|\n|After 5PM|\n|(12PM - 5PM_After 5PM)|\n|BLANK|\n|(Before 8AM_12PM - 5PM)|\n|(8AM - 12PM_After 5PM)|\n|(Before 8AM_8AM - 12PM_12PM - 5PM)|\n|(Before 8AM_8AM - 12PM_After 5PM)|\n|(Before 8AM_After 5PM)|\n|DUP|\n|(Before 8AM_8AM - 12PM)|\n|8AM - 12PM|\n|Before 8AM|\n|(8AM - 12PM_12PM - 5PM)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table755"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|M\u00caS|\n|---|\n|Jan|\n|Abr|\n|Jul|\n|Ago|\n|Fev|\n|Mar|\n|Out|\n|Set|\n|Jun|\n|Mai|\n|Nov|\n|Dez|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table756"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Concatenate|\n|---|\n|CHINABPReportedPrimary energy total|\n|TAIWANEIAHarmonizedCommercial fuels|\n|POLANDEIAHarmonizedPrimary energy total|\n|GERMANYBPHarmonizedCommercial fuels|\n|SOUTH KOREAEIAHarmonizedCommercial fuels|\n|TAIWANBPHarmonizedCommercial fuels|\n|AUSTRALIAEIAHarmonizedCommercial fuels|\n|RUSSIAIEAReportedPrimary energy total|\n|KAZAKHSTANBPReportedCommercial fuels|\n|GERMANYEIAHarmonizedPrimary energy total|\n|SPAINEIAReportedCommercial fuels|\n|JAPANIEAReportedPrimary energy total|\n|SAUDI ARABIABPReportedCommercial fuels|\n|INDONESIAEIAReportedPrimary energy total|\n|AUSTRALIABPReportedPrimary energy total|\n|SAUDI ARABIABPReportedPrimary energy total|\n|SOUTH KOREABPHarmonizedPrimary energy total|\n|CANADAEIAReportedCommercial fuels|\n|FRANCEEIAReportedCommercial fuels|\n|ALGERIAIEAHarmonizedPrimary energy total|\n|INDIABPHarmonizedCommercial fuels|\n|ITALYBPHarmonizedPrimary energy total|\n|ITALYBPReportedCommercial fuels|\n|CANADABPHarmonizedCommercial fuels|\n|SPAINIEAReportedPrimary energy total|\n|EGYPTBPHarmonizedCommercial fuels|\n|JAPANIEAHarmonizedPrimary energy total|\n|TAIWANEIAReportedCommercial fuels|\n|FRANCEBPReportedCommercial fuels|\n|ITALYIEAHarmonizedPrimary energy total|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table757"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|STATE|\n|---|\n|West Bengal|\n|Telangana|\n|Uttarakhand|\n|Jharkhand|\n|Assam|\n|Delhi|\n|Himachal Pradesh|\n|Rajasthan|\n|Orissa|\n|Andaman & Nicobar Islands|\n|Arunachal Pradesh|\n|Haryana|\n|Punjab|\n|Dadra & Nagar Haveli|\n|Meghalaya|\n|Jammu & Kashmir|\n|Manipur|\n|Karnataka|\n|Tamil Nadu|\n|Nagaland|\n|Gujarat|\n|Madhya Pradesh|\n|Bihar|\n|Chhattisgarh|\n|Tripura|\n|Goa|\n|Maharashtra|\n|Andhra Pradesh|\n|Chandigarh|\n|Daman and Diu|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table758"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Subject Disciplines |\n|---|\n|Computer Science (General)|\n|Automotive Engineering|\n|Civil and Mechanical Engineering|\n|Computational Mechanics|\n|Aerospace Engineering|\n|Computer Networks and Communications|\n|Computer Science Applications|\n|Engineering (General)|\n|Biomedical Engineering|\n|Ocean Engineering|\n|Computational Theory and Mathematics|\n|Industrial and Manufacturing Engineering|\n|Civil and Structural Engineering|\n|Computer Graphics and Computer-Aided Design|\n|Mechanical Engineering|\n|Safety Risk Reliability and Quality|\n|Software|\n|Electrical and Electronic Engineering|\n|Information Systems|\n|Artificial Intelligence|\n|Control and Systems Engineering|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table759"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name|\n|---|\n|Gaulin|\n|Gavel|\n|Ferguson|\n|Brown|\n|Molnar|\n|Trudgeon|\n|Fried-Levine|\n|Beckles|\n|Sametz|\n|Fergusson|\n|Karanja|\n|Fleming|\n|Khanmohammad|\n|Cornale|\n|Rapatel|\n|Ishikawa|\n|Hickey|\n|Wright|\n|Mehain|\n|Vietnieks|\n|Vickery|\n|Nordell|\n|Bruggeman|\n|Ross|\n|Whitehouse|\n|Travers|\n|Foessel|\n|Orr|\n|Michie|\n|Quarcoo|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Ferguson', 'Fergusson']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table76"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Titel|\n|---|\n|Utredning av palliativt centrum|\n|Diskussion om kvalitetsdata|\n|Akademiska sjukhuset|\n|Synpunkter|\n|Sustains (CK2012-0190)|\n|Motion (M) - Chattfunktion inom psykiatrin|\n|Kontroll av inloggningar i patientjournal - GH (CK2015-0313)|\n|Ansvariga politiker Akademiska|\n|Delegationsbeslut 2016 (CK2016-0007)|\n|Upphandling av konsulter inom informations- och kommunikationsteknik (CK 2015-0492)|\n|Motion (M) - Etablera samarbete med Experio Lab|\n|Avtal kopiator\/MFP A8128191 (Vita Huset) (CK2015-0183)|\n|Hyresavtal|\n|Ambulans i Knivsta|\n|Projektet KISA|\n|Inspektionsmeddelande - 2016\/023593|\n|Delgivning 2016 (CK2016-0008)|\n|Regeringsbeslut 2016|\n|Avtal vattenkylare Eldaren|\n|Draftit huvudlicens HR avdelningen Landstingets ledningskontor|\n|Ny regional indelning (CK 2015-0363)|\n|Landstingets riktade FoU-medel 2014  (CK2013-0305)|\n|Psykiatrin. Det blev som jag trodde!|\n|Avtal frankeringsmaskin Neepost 102937.221450 (Smittskyddsenheten) (CK2015-0340)|\n|Patientmatsituationen vid Akademiska sjukhuset (CK2014-0426)|\n|Medicinhistoriskt stipendium 2017|\n|Kallelser och protokoll landstingsstyrelsen 2016|\n|Landstingets riktade FoU-medel 2017|\n|Protokoll Landstingsstyrelsens arbetsutskott 2016 (CK2016-0021)|\n|SAS Institute AB - Premium Support Services Agreement 2016-06-15--2017-12-31|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table760"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Prov_name|\n|---|\n|Milne Bay Province|\n|Eastern Highlands Province|\n|New Ireland Province|\n|West New Britain Province|\n|East Sepik Province|\n|Morobe Province|\n|West Sepik (Sandaun) Province|\n|Manus Province|\n|Hela Province|\n|Chimbu (Simbu) Province|\n|Gulf Province|\n|Southern Highlands Province|\n|Madang Province|\n|National Capital District|\n|East New Britain Province|\n|Western Highlands Province|\n|Jiwaka Province|\n|Enga Province|\n|Autonomous Region of Bougainville|\n|Central Province|\n|Western Province|\n|Northern (Oro) Province|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table761"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|IPCity|\n|---|\n|Porec|\n|Makarska|\n|Daruvar|\n|Opuzen|\n|Mostar|\n|Baska Voda|\n|Sollentuna|\n|Hodosan|\n|Zeljezno Polje|\n|Glina|\n|Radoboj|\n|Postire|\n|Gospic|\n|Garesnica|\n|Dubrovnik|\n|Novska|\n|Trilj|\n|Lipovljani|\n|Karojba|\n|Gorazde|\n|Vidovci|\n|Biograd na Moru|\n|Virovitica|\n|Jezerce|\n|Zdenci|\n|Dusseldorf|\n|Banjol|\n|Sarajevo|\n|Zadar|\n|Kutina|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table762"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|PHN-State|\n|---|\n|TAS|\n|VIC|\n|ACT|\n|WA|\n|TOTAL|\n|NT|\n|SA|\n|NSW|\n|QLD|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table763"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|gdename|\n|---|\n|Collonge-Bellerive|\n|Riedern|\n|Grancia|\n|Wiesendangen|\n|Birwinken|\n|Maisprach|\n|Renan (BE)|\n|Hottwil|\n|Rickenbach (BL)|\n|Tschugg|\n|Frenkendorf|\n|Claro|\n|Sonvilier|\n|Niederweningen|\n|Salgesch|\n|Endingen|\n|Bever|\n|Vordemwald|\n|Prilly|\n|Schaffhausen|\n|Meisterschwanden|\n|Falera|\n|Grandson|\n|Val-d'Illiez|\n|Oberuzwil|\n|Eiken|\n|Sulz (LU)|\n|Gondiswil|\n|Couvet|\n|Martisberg|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table764"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|transcript id|\n|---|\n|COGR_14048.1|\n|COGR_14726.1|\n|COGR_14698.1|\n|COGR_14407.1|\n|COGR_14553.1|\n|COGR_14502.1|\n|COGR_14276.1|\n|COGR_14009.1|\n|COGR_14178.1|\n|COGR_14625.1|\n|COGR_14783.1|\n|COGR_14510.1|\n|COGR_14787.1|\n|COGR_14300.1|\n|COGR_14504.1|\n|COGR_14378.1|\n|COGR_14792.1|\n|COGR_14073.1|\n|COGR_14678.1|\n|COGR_14243.1|\n|COGR_14605.1|\n|COGR_14614.1|\n|COGR_14192.1|\n|COGR_14269.1|\n|COGR_14249.1|\n|COGR_14608.1|\n|COGR_14274.1|\n|COGR_14028.1|\n|COGR_14359.1|\n|COGR_14487.1|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table765"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Campus \/ School Name|\n|---|\n|Star of the Sea Primary School CLEVELAND|\n|St Mary's Primary School IPSWICH|\n|St Finbarr's School ASHGROVE|\n|Sacred Heart Catholic Primary School YEPPOON|\n|Mt St Michael's College ASHGROVE|\n|St Clare's Catholic School BURDELL|\n|St Martin's School CARINA|\n|St Joseph's School CHILDERS|\n|Stella Maris School MAROOCHYDORE|\n|St Mary MacKillop Primary School BIRKDALE|\n|Holy Cross School WOOLOOWIN|\n|St Mary's College TOOWOOMBA|\n|Southern Cross Catholic College ANNANDALE|\n|St Paul's School WOODRIDGE|\n|St Anthony's Catholic College DEERAGUN|\n|St Mary's School - Upper Primary Campus WARWICK|\n|St Francis De Sales School CLIFTON|\n|Gympie Flexible Learning Centre GYMPIE|\n|St Flannan's School ZILLMERE|\n|McAuley College BEAUDESERT|\n|St Mary's School GOONDIWINDI|\n|Saint Mary's Catholic College KINGAROY|\n|St Michael's School GORDONVALE|\n|St Francis Xavier's School MANUNDA|\n|MacKillop Catholic Primary School ANDERGROVE|\n|Immaculate Heart School LEICHHARDT|\n|St William's Primary School GROVELY|\n|St Patrick's College Townsville TOWNSVILLE|\n|Burdekin Catholic High School AYR|\n|St Peter's Primary School ROCHEDALE|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table766"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|No of Axles|\n|---|\n|7 Axles|\n|3 Axles|\n|6 Axles|\n|4 Axles|\n|5 Axles|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table767"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Month|\n|---|\n|Oct|\n|May|\n|Mar|\n|Aug|\n|Feb|\n|Jul|\n|Nov|\n|Dec|\n|Jan|\n|Sep|\n|Apr|\n|Jun|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table768"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|MON_UNIT_COD2|\n|---|\n|RON|\n|PLN|\n|EEK|\n|DKK|\n|GBP|\n|MTL|\n|HRK|\n|BGN|\n|SKK|\n|LVL|\n|LTL|\n|CYP|\n|CZK|\n|SEK|\n|HUF|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table769"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|City|\n|---|\n|Mooresville|\n|Erie|\n|Orange City|\n|Overland Park|\n|Monroe|\n|Gary|\n|Flushing|\n|Henderson|\n|Schaumberg|\n|Rancho Cucamonga|\n|Livonia|\n|Peru|\n|West Hartford|\n|Sellersburg|\n|Owasso|\n|Bethlehem|\n|Puyallup|\n|Blue Mountain|\n|Sunnyvale|\n|Central Islip|\n|Lawrenceville|\n|Elizabeth City|\n|Cheyney|\n|Bloomfield|\n|Schaumburg|\n|Fort Meade|\n|Alliance|\n|North Canton|\n|Trenton|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Schaumberg', 'Schaumburg']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table77"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Term|\n|---|\n|2009 Fall|\n|2010 Fall|\n|2011 Fall|\n|2012 Fall|\n|2013 Fall|\n|2014 Fall|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table770"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|District|\n|---|\n|Reasi|\n|Udhampur|\n|Baramulla|\n|Pulwama|\n|Kargil|\n|Rajouri|\n|Leh|\n|Bandipora|\n|Budgam|\n|Shopian|\n|Ganderbal|\n|Ramban|\n|Samba|\n|Kishtwar|\n|Doda|\n|Kathua|\n|Kupwara|\n|Poonch|\n|Srinagar|\n|Anantnag|\n|Kulgam|\n|Jammu|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table771"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Kod pocztowy|\n|---|\n|55-369|\n|46-368|\n|54-481|\n|78-521|\n|10-024|\n|99-301|\n|48-060|\n|15-239|\n|30-269|\n|02-364|\n|02-808|\n|01-075|\n|42-071|\n|75-090|\n|23-602|\n|66-762|\n|45-431|\n|01-945|\n|23-111|\n|06-492|\n|98-105|\n|66-202|\n|98-011|\n|79-072|\n|36-067|\n|99-336|\n|48-841|\n|65-109|\n|72-023|\n|94-306|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table772"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|No of Axles|\n|---|\n|4 Axles|\n|5 Axles|\n|6 Axles|\n|3 Axles|\n|7 Axles|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table773"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Offense|\n|---|\n|35B|\n|90J|\n|26A|\n|40A|\n|250|\n|290|\n|26B|\n|240|\n|270|\n|23G|\n|23B|\n|23C|\n|35A|\n|90E|\n|90D|\n|26C|\n|26E|\n|90G|\n|23D|\n|220|\n|370|\n|23F|\n|90H|\n|13A|\n|100|\n|23A|\n|90Z|\n|520|\n|200|\n|120|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table774"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Sucursal|\n|---|\n|CELAYA|\n|PTO. VALLARTA|\n|TEPIC|\n|QUERETARO|\n|LAZARO CARDENAS|\n|ZACATECAS|\n|S.L.P.|\n|TEP \/ PTV|\n|COLIMA|\n|GUADALAJARA|\n|FUERA DE TERRITORIO|\n|LEON|\n|AGUASCALIENTES|\n|MORELIA|\n|MOR \/ COL|\n|MOR QRO.|\n|IRAPUATO|\n|ZAC \/ AGS|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table775"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Location|\n|---|\n|53xx WASHINGTON BL|\n|31xx COLUMBIA PK|\n|22xx N ROOSEVELT ST|\n|12xx S THOMAS ST|\n|11xx N HIGHLAND ST|\n|21xx N PIERCE ST|\n|20xx N 14 ST|\n|20xx N ROOSEVELT ST|\n|40xx 23RD ST N|\n|14xx N COURTHOUSE RD|\n|23xx N ROOSEVELT ST|\n|20xx JEFFERSON DAVIS HW|\n|15xx S GEORGE MASON DR|\n|N 16 ST\/N ROOSEVELT ST|\n|90x S 15 ST|\n|30xx LEE HW|\n|42xx WILSON BL|\n|44xx FAIRFAX DR|\n|54xx COLUMBIA PK|\n|KIRKWOOD RD\/ WASHINGTON BL|\n|35xx 16TH ST S|\n|31x S FENWICK ST|\n|22xx N TUCKAHOE ST|\n|42xx N 2 ST|\n|14xx S HAYES ST|\n|80x S GREENBRIER ST|\n|22xx S EADS ST|\n|27xx N PERSHING DR|\n|27xx S LANG ST|\n|S 26 ST\/ CRYSTAL DR|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table776"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Previously Valued Bands|\n|---|\n|$100-300K|\n|Less than $50k|\n|$500K+|\n|$50-100K|\n|$300K-500K|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table777"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|\u00dcRET\u0130M YER\u0130|\n|---|\n|ADIYAMAN|\n|KONYA|\n|FRANSA|\n|AKSARAY|\n|Hindistan|\n|A.B.D.|\n|ALMANYA|\n|Avustralya|\n|ANKARA|\n|RUSYA|\n|POLONYA|\n|BURSA|\n|MALATYA|\n|YALOVA|\n|HOLLANDA|\n|TAYVAN|\n|BELGIUM|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table778"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Age Group|\n|---|\n|55-64|\n|25-29|\n|19-24|\n|16-18|\n|30-34|\n|65 & Above|\n|35-54|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table779"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|STREET  NAME |\n|---|\n|EMORY STREET|\n|CROSSGATES STREET|\n|NORTH STREET|\n|PROSPECT STREET|\n|PIERCE AVENUE|\n|JORDAN AVENUE|\n|RAVINE AVENUE|\n|WHITON STREET|\n|EGE AVENUE|\n|MERSELES STREET|\n|GARRISON AVENUE|\n|DELMAR ROAD|\n|MAGNOLIA AVENUE|\n|MONTGOMERY STREET|\n|MANNING AVENUE|\n|PEARSALL AVENUE|\n|GIFFORD AVENUE|\n|FREEMAN AVENUE|\n|GARDNER AVENUE|\n|MONMOUTH STREET|\n|JEWETT AVENUE|\n|brinkerhoff street|\n|BOORAEM AVENUE|\n|STEGMAN TERRACE|\n|brinkerhof street|\n|MADISON AVENUE|\n|KENNEDY BOULEVARD|\n|NELSON AVENUE|\n|TERHUNE AVENUE|\n|WALES AVENUE|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['brinkerhof street', 'brinkerhoff street']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table78"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|School Name|\n|---|\n|SPARKMAN HIGH SCHOOL|\n|MARVIN PRIMARY SCHOOL|\n|MOUNTAINBURG MIDDLE SCHOOL|\n|HOT SPRINGS WORLD CLASS HIGH SCHOOL|\n|CLARENDON HIGH SCHOOL|\n|GARDNER STEM MAGNET SCHOOL|\n|WEST SIDE ELEMENTARY SCHOOL|\n|LAKE HAMILTON PRIMARY SCHOOL|\n|HARRISBURG MIDDLE SCHOOL|\n|DELIGHT ELEMENTARY SCHOOL|\n|MCCLELLAN MAGNET HIGH SCHOOL|\n|CLINTON ELEMENTARY SCHOOL|\n|WONDERVIEW ELEMENTARY SCHOOL|\n|JESSIEVILLE HIGH SCHOOL|\n|HOPE HIGH SCHOOL|\n|HARP ELEMENTARY SCHOOL|\n|ATKINS MIDDLE SCHOOL|\n|UMPIRE K-12 SCHOOL|\n|WATSON ELEMENTARY SCHOOL|\n|DEQUEEN HIGH SCHOOL|\n|MARGUERITE VANN ELEM. SCHOOL|\n|NEMO VISTA ELEMENTARY SCHOOL|\n|VAN COVE ELEMENTARY SCHOOL|\n|HOLLY HARSHMAN ELEM. SCHOOL|\n|ARKANSAS VIRTUAL ACADEMY HIGH SCHOOL|\n|YELLVILLE-SUMMIT ELEM. SCHOOL|\n|MANN MAGNET MIDDLE SCHOOL|\n|PINEWOOD ELEMENTARY SCHOOL|\n|RIVERVIEW HIGH SCHOOL|\n|DEWITT ELEMENTARY SCHOOL|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table780"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|First Trade Date|\n|---|\n|10\/01\/2003|\n|11\/25\/2008|\n|12\/18\/2007|\n|12\/01\/2010|\n|1\/17\/2007|\n|5\/26\/2000|\n|3\/22\/2011|\n|8\/16\/2005|\n|2\/02\/2001|\n|2\/26\/2008|\n|8\/27\/2003|\n|9\/13\/2007|\n|5\/30\/2007|\n|11\/30\/2010|\n|8\/15\/2008|\n|3\/23\/2007|\n|6\/18\/2007|\n|12\/24\/2007|\n|10\/08\/2004|\n|9\/27\/2007|\n|5\/01\/2003|\n|6\/16\/2000|\n|9\/09\/2009|\n|9\/09\/2010|\n|1\/08\/2010|\n|11\/17\/2006|\n|6\/23\/2005|\n|12\/05\/2003|\n|10\/18\/2007|\n|1\/04\/2011|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table781"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Date Acquired|\n|---|\n|2016-02-14|\n|2016-12-17|\n|2016-12-05|\n|2016-10-25|\n|2016-12-09|\n|2016-07-14|\n|2016-06-02|\n|2016-03-04|\n|2015-12-30|\n|2016-07-12|\n|2016-10-05|\n|2016-11-06|\n|2016-06-04|\n|2016-01-26|\n|2016-07-28|\n|2016-04-24|\n|2016-10-22|\n|2016-05-26|\n|2016-08-26|\n|2016-02-07|\n|2015-12-27|\n|2015-09-11|\n|2016-02-15|\n|2016-11-04|\n|2016-10-16|\n|2016-01-17|\n|2016-07-05|\n|2016-09-12|\n|2016-09-05|\n|2016-05-10|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table782"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Direcci\u00f3n|\n|---|\n|SANTIAGO LAS LUCIERNAGAS 5827|\n|COPIAPO LOS CARRERA 6268|\n|COLINA CAMINO DEL REFUGIO 13888|\n|SANTIAGO DOCTOR JOHOW 775|\n|SANTIAGO AUGUSTO LEGUIA NORTE 100|\n|SANTIAGO SANTA TERESITA DE LISEAUX 01|\n|CHILLAN LOS PARRONALES 227|\n|SANTIAGO HAYDN 5145|\n|SANTIAGO EL OIDOR 1887|\n|SANTIAGO COMPANIA DE JESUS 1291|\n|SANTIAGO CATEDRAL 1582|\n|SANTIAGO LOS OLMOS 3140|\n|SANTIAGO CURACO TORRE II 1940|\n|SANTIAGO ESPOZ 2333|\n|ARICA LAS CODORNICES 1698|\n|SANTIAGO ISIDORA GOYENECHEA 2925|\n|ARICA 7 DE JUNIO 176|\n|IQUIQUE PDTE SALVADOR ALLENDE GOSSENS 2250|\n|SANTIAGO PASAJE TRENTO SUR 390|\n|COPIAPO ATACAMA 240|\n|SANTIAGO AHUMADA 312|\n|SANTIAGO JACARANDA OCHO 18425|\n|ANTOFAGASTA SANTA CLARA 02065|\n|LA SERENA AVDA. DEL MAR 5710|\n|SANTIAGO LOTA 2763|\n|CONCEPCION BARROS ARANA 462|\n|SANTIAGO DIAGONAL PASAJE MATTE 957|\n|SANTIAGO AVENIDA FRANCIA 1498|\n|CONCEPCION AVENIDA ANDALUE 1440|\n|CONCEPCION PEDRO AGUIRRE CERDA 548|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table783"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Identifying Details|\n|---|\n|87 001 548 401|\n|60 057 361 805|\n|48 135 315 767|\n|95 002 429 781|\n|89 009 666 700|\n|39 076 569 769|\n|84 002 705 224|\n|68 124 425 396|\n|24 086 409 949|\n|25 110 150 055|\n|18 540 492 861|\n|92 003 280 699|\n|88 000 014 675|\n|74 134 686 525|\n|20 007 617 969|\n|80 093 220 136|\n|12 057 463 671|\n|26 076 286 578|\n|39 009 301 964|\n|97 003 872 848|\n|49 000 002 728|\n|17 090 574 431|\n|16 125 927 308|\n|69 112 437 331|\n|80 009 132 405|\n|16 009 661 901|\n|74 084 669 036|\n|93 103 879 054|\n|38 008 436 011|\n|68 070 871 831|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table784"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Cargo presupuestario|\n|---|\n|Colaborador de 2a. Clase|\n|Enfermera Supervisora|\n|Oficial de 2a. Clase|\n|Enfermera Jefe de Servicio Especializado|\n|Colaborador de 4a. Clase|\n|Jefe III|\n|Colaborador de 6a. Clase|\n|Jefe VII|\n|Jefe I|\n|Administrador I|\n|Oficial de 5a. Clase|\n|Enfermera Jefe II|\n|Enfermera de Servicio Especializado|\n|Sub-Director General|\n|Colaborador de 1a. Clase|\n|Jefe IV|\n|Colaborador de 3a. Clase|\n|Administrador III|\n|Jefe VI|\n|Enfermera Jefe I|\n|Director General|\n|Oficial de 3a. Clase|\n|Jefe V|\n|Oficial de 4a. Clase|\n|Oficial de 6a. Clase|\n|Enfermera General|\n|Sub-Director|\n|Jefe Residente|\n|Auxiliar de Servicio|\n|Oficial de 1a. Clase|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table785"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Gemeindename|\n|---|\n|Wermsdorf|\n|Sandersdorf-Brehna Stadt|\n|Goseck|\n|Muldestausee|\n|Stauchitz|\n|Karsdorf|\n|Kaiserpfalz|\n|Nossen Stadt|\n|Zschepplin|\n|Nobitz|\n|Vollmershain|\n|Wiehe Stadt|\n|Eckartsberga Stadt|\n|Jesewitz|\n|Rackwitz|\n|Parthenstein|\n|Wiedemar|\n|Gerbstedt Stadt|\n|Treben|\n|Starkenberg|\n|Braunsbedra Stadt|\n|Strehla Stadt|\n|Schkeuditz Stadt|\n|Pegau Stadt|\n|Petersberg|\n|Elsteraue|\n|Geithain Stadt|\n|Arzberg|\n|Teutschenthal|\n|Mehna|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table786"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Ansvarig person|\n|---|\n|Annika Tapper|\n|Ida Vessman|\n|Carina Warme|\n|Helena Broberg|\n|Maria Gray|\n|Karin Erlandsson|\n|Anneli Johansson|\n|Jennie Larsson|\n|Susanne Lindblom|\n|Eva-Lena Nilsson|\n|Birgitta Nordfeldt|\n|Marianne Van Rooijen|\n|Andrea Covarrubias|\n|Anna-Carin Gullbrand|\n|Marianne Tufveson|\n|Frida Antesson|\n|Christina Skoghammar|\n|Anna-Lena Karlsson|\n|Maggie Hynd|\n|Lena Hadad|\n|Linda Paavilainen|\n|Anna Lindberg|\n|Cecilia Bernhardsson|\n|Maria Lindfors|\n|Henrik Pederby|\n|Stephanie Stoll|\n|Eva Andersson|\n|Anna Dufflin|\n|Carina Abrahamsson|\n|Elisabeth Bergqvist|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table787"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Homeless Liaison|\n|---|\n|Kelli Killen|\n|Meghan Bamford|\n|Lucinda McKenney|\n|Laurie Melanson|\n|Diana Fontaine|\n|Kelly Mask|\n|Judith Turk|\n|Jeff Martel|\n|Linda Sheff|\n|Mike Curtin|\n|Heather Cantagallo|\n|Susan Buck|\n|Amy Bottomley Director|\n|Rich Boardman|\n|Michael Tenters|\n|Matora Fiorey|\n|Maria Easton|\n|Christopher O'Reilly|\n|Rhett Darak|\n|Jennifer Boudrieau|\n|Katie McEntee|\n|Jane Johnson|\n|Kim Carpinone|\n|Meredith Jacques|\n|Stacey Hammerlind|\n|Marie Braley|\n|Paul Borsh|\n|Madelyn Crudo-Burke|\n|Debra Wilson|\n|Kathryn Duncan|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table788"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Rakennuksen k\u00e4ytt\u00f6tarkoitus|\n|---|\n|AA Asuinrakennukset|\n|SSS Kaikki rakennukset|\n|BB Vapaa-ajan asuinrakennukset|\n|CDE Liike- ja toimistorakennukset|\n|MM Maatalousrakennukset|\n|FGHL Julkiset palvelurakennukset|\n|JK Teollisuus- ja varastorakennukset|\n|NN Muut rakennukset|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table789"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Apellido Paterno|\n|---|\n|LIMON|\n|BASILIO|\n|PODESTA|\n|RICCI|\n|AGUAYO|\n|RINCON|\n|QUINTANA|\n|FELIPA|\n|VELASQUEZ|\n|TANTA|\n|ARHUIS|\n|LLAPAPASCA|\n|VENTOCILLA|\n|ESPINO|\n|SIMON|\n|CATALAN|\n|LEDESMA|\n|MARALLANO|\n|PUENTE|\n|RIVAS|\n|CABEZUDO|\n|VILCHEZ|\n|VELASQUE|\n|LARREA|\n|GAMBOA|\n|CATACORA|\n|YUPANQUI|\n|DORADOR|\n|ZAMALLOA|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['VELASQUEZ', 'VELASQUE']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table79"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Model (Representation)|\n|---|\n|CMMI-DEV+IPPD v1.2(Staged)|\n|CMMI-SVC v1.2(Staged)|\n|CMMI-ACQ v1.2(Continuous)|\n|CMMI-SVC+SSD v1.2(Staged)|\n|CMMI-DEV v1.2(Continuous)|\n|CMMI-ACQ v1.2(Staged)|\n|CMMI-DEV+IPPD v1.2(Continuous)|\n|CMMI-DEV v1.2(Staged)|\n|People CMM v2.0(Staged)|\n|CMMI-SVC+SSD v1.2(Continuous)|\n|CMMI-DEV v1.3(Continuous)|\n|CMMI-SVC v1.2(Continuous)|\n|CMMI-SVC v1.3(Staged)|\n|CMMI-DEV v1.3(Staged)|\n|CMMI-SVC+SSD v1.3(Staged)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table790"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|LINE_DESC_SHORT|\n|---|\n|Ob Bal: Obs (upward adjustments): Expired accts|\n|BA: Mand: Spending auth: Previously unavailable|\n|Disc: Outlays net|\n|Memo: Unexp unavail balance EOY: Offset collect|\n|Ob Bal: Change uncoll pymt Fed src exp|\n|Sub-total 3000|\n|Sub-total 1802|\n|Sub-total 4052|\n|Unob Bal: Recov of prior year unpaid obligations|\n|BA: Mand: Appropriation (previously unavailable)|\n|Ob Bal: SOY: Uncoll pymt Fed src brought fwd Oct 1|\n|Sub-total 4050|\n|BA: Disc: Spending auth: Total|\n|Sub-total 4011|\n|Mand: Budget authority gross|\n|Ob Bal: Recov prior year unpaid obs exp accts|\n|Total new obligations unexpired accounts|\n|BA: Mand: Spending auth: Collected|\n|Unob Bal: Recov of prior year paid obligations|\n|Sub-total 1701|\n|Sub-total 4120|\n|Sub-total 1711|\n|Disc: Outlays gross (total)|\n|Sub-total 3070|\n|Disc: Offset BA: Chng in uncol pay Fed src unex|\n|Sub-total 1101|\n|Sub-total 4123|\n|Memo: Unexp unavail balance SOY: Offset collect|\n|Unob Bal: Unobligated balance (total)|\n|Sub-total 3050|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table791"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Printer Type\/Model|\n|---|\n|Xerox ColorQube 9201|\n|HP LaserJet 4250 PCL 6|\n|HP LaserJet 4300 PCL 6|\n|HP LaserJet 2430 PCL 6|\n|Xerox WorkCentre 5765 v1 Multifunction System|\n|Xerox WorkCentre 7120 PCL6|\n|Xerox Phaser 6280DN; Net 13.40_ESS 200903261043_IOT 05.06.00|\n|Xerox WorkCentre 7346 v  3.  3.  0 Multifunction System|\n|Xerox WC 4118 Series PS|\n|HP LaserJet P2055dn|\n|Xerox WorkCentre 5735 v1 Multifunction System|\n|hp LaserJet 4350|\n|HP LaserJet 4100 Series|\n|hp LaserJet 2430|\n|Xerox WorkCentre 4250|\n|HP Color LaserJet 4700|\n|Xerox Phaser 6180MFP-N PS|\n|Xerox ColorQube 9201 PS|\n|Xerox Phaser 3300MFP PS|\n|HP Color LaserJet CP4005 PCL6|\n|Xerox WC 4118 Series PCL 6|\n|Xerox Phaser 3250|\n|Xerox Phaser 3300MFP|\n|HP Officejet Color MFP X585|\n|Xerox WorkCentre 7120 v  5. 12.  0 Multifunction System|\n|Xerox Phaser 3250 PS|\n|hp LaserJet 4300|\n|HP Universal Printing PS|\n|Xerox DocuColor 252 with EFI Fiery Controller;|\n|Xerox 4112 v 46. 20.  0 Multifunction System|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table792"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Genere|\n|---|\n|FANTASCIENZA|\n|GIALLO|\n|NARRAT. ITALIANA|\n|LETTER. GRECA|\n|BOTANICA|\n|NARRAT. AMERICANA|\n|LETTER. LATINA|\n|MINERALOGIA|\n|AGRICOLTURA|\n|NARRAT. ALTRI PAESI|\n|NARRAT. RUSSA|\n|CINEMA|\n|ARREDAMENTO|\n|ANIMALI|\n|ZOOLOGIA|\n|SATIRA|\n|POESIA|\n|RELIGIONE|\n|HOBBISTICA|\n|COSTUME|\n|NARRAT. FRANCESE|\n|GEOGRAFIA|\n|SCIENZA|\n|SPETTACOLO|\n|GASTRONOMIA|\n|NARRAT. ASIATICA|\n|MUSICA|\n|NARRAT. SPAGNOLA|\n|GIORNALISMO|\n|NARRAT. SUDAMERICANA|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table793"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Product|\n|---|\n|Carlota|\n|V-Rang|\n|Aspen|\n|Sunshine|\n|Sunbell|\n|Bellen|\n|Doublers|\n|Quad|\n|FlatTop|\n|Sunset|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table794"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Cap\u00edtulo|\n|---|\n|5159 - DIRECCION GENERAL DE IMPUESTOS INTERNOS|\n|5178 - FONDO NACIONAL PARA EL MEDIO AMBIENTE Y RECURSOS NATURALES|\n|5174 - MERCADOS DOMINICANOS DE ABASTO AGROPECUARIO|\n|5109 - DEFENSA CIVIL|\n|5108 - CRUZ ROJA DOMINICANA|\n|5157 - CORPORACION DOMICANA DE EMPRESAS ESTATALES (CORDE|\n|0222 - MINISTERIO DE ENERGIA Y MINAS|\n|5176 - CONSEJO NACIONAL DE DISCAPACIDAD (CONADIS)|\n|5132 - INSTITUTO DOMINICANO DE INVESTIGACIONES AGROPECUARIAS Y FORESTALES|\n|5142 - FONDO PATRIMONIAL DE LAS EMPRESAS REFORMADAS|\n|0201 - PRESIDENCIA DE LA REPUBLICA|\n|5007 - CONS. NAC. PROM. Y APOYO A LA MICRO PEQ. Y MEDIANA EMPRESA-PROMIPYME|\n|5112 - INSTITUTO AZUCARERO DOMINICANO|\n|5119 - INSTITUTO PARA EL DESARROLLO DEL SUROESTE|\n|5172 - ORGANISMO DOMINICANO DE ACREDITACION (ODAC)|\n|0215 - MINISTERIO DE LA MUJER|\n|5163 - CONSEJO DOMINICANO DE PESCA Y ACUICULTURA|\n|5133 - MUSEO DE HISTORIA NATURAL|\n|5121 - LIGA MUNICIPAL DOMINICANA|\n|5152 - CONSEJO NACIONAL DE ESTANCIAS INFANTILES|\n|0205 - MINISTERIO DE HACIENDA|\n|5135 - OFICINA NACIONAL DE PROPIEDAD INDUSTRIAL|\n|0221 - MINISTERIO DE ADMINISTRACION PUBLICA|\n|0217 - MINISTERIO DE LA JUVENTUD|\n|5150 - CONSEJO NACIONAL DE ZONAS FRANCAS|\n|6119 - INSTITUTO NACIONAL DE LA VIVIENDA|\n|0102 - CAMARA DE DIPUTADOS|\n|5008 - SUPERINTENDENCIA DEL MERCADO DE VALORES|\n|0209 - MINISTERIO DE TRABAJO|\n|5207 - CONSEJO NACIONAL DE SEGURIDAD SOCIAL|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table795"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|DIRECTION|\n|---|\n|DRH|\n|Admin|\n|Techn|\n|Ingen|\n|Affaires|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table796"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Granule Name|\n|---|\n|S1B_IW_SLC__1SDV_20161013T165715_20161013T165742_002490_004332_D2B1|\n|S1A_IW_GRDH_1SDV_20161219T034708_20161219T034733_014443_0176CA_5BC4|\n|S1B_IW_GRDH_1SDV_20161223T161643_20161223T161708_003525_006068_BD6D|\n|S1B_IW_SLC__1SDV_20161019T160916_20161019T160944_002577_0045A9_7BC5|\n|S1B_IW_RAW__0SDV_20161015T164124_20161015T164156_002519_00440A_96AD|\n|S1A_IW_GRDH_1SSV_20150202T161734_20150202T161759_004446_005722_DF60|\n|S1A_IW_GRDH_1SSV_20160204T161014_20160204T161039_009798_00E559_55B6|\n|S1B_IW_GRDH_1SDV_20161224T165740_20161224T165805_003540_0060D6_A1B3|\n|S1B_IW_RAW__0SDV_20161110T162423_20161110T162455_002898_004EA6_F39D|\n|S1A_IW_GRDH_1SSV_20160802T160935_20160802T161000_012423_013646_06BB|\n|S1A_IW_SLC__1SDV_20150901T161002_20150901T161033_007523_00A64B_3EB4|\n|S1A_IW_RAW__0SDV_20161001T160950_20161001T161022_013298_01530E_4AAA|\n|S1B_IW_RAW__0SDV_20161219T164831_20161219T164903_003467_005EC1_FEBD|\n|S1A_IW_SLC__1SSV_20160315T032229_20160315T032243_010374_00F605_929D|\n|S1A_IW_RAW__0SSV_20151230T160857_20151230T160930_009273_00D62D_8964|\n|S1A_IW_RAW__0SSV_20151020T164853_20151020T164928_008238_00B998_8F17|\n|S1B_IW_RAW__0SDV_20161228T162447_20161228T162519_003598_006295_86AD|\n|S1A_IW_SLC__1SSV_20150218T033050_20150218T033120_004672_005C4E_A11B|\n|S1B_IW_GRDH_1SSV_20161104T032215_20161104T032240_002803_004BFA_8589|\n|S1A_IW_SLC__1SDV_20150420T162629_20150420T162659_005569_007204_6DD4|\n|S1A_IW_RAW__0SDV_20150425T163310_20150425T163342_005642_0073B3_DD57|\n|S1A_IW_GRDH_1SSV_20151231T164845_20151231T164921_009288_00D69A_E72F|\n|S1A_IW_SLC__1SSV_20160802T161025_20160802T161053_012423_013646_46EE|\n|S1A_IW_SLC__1SDV_20160104T161813_20160104T161839_009346_00D83E_E0CE|\n|S1A_IW_GRDH_1SSV_20160727T165704_20160727T165733_012336_013356_E107|\n|S1B_IW_RAW__0SDV_20161212T165622_20161212T165654_003365_005BEE_51FD|\n|S1A_IW_SLC__1SSV_20161218T165705_20161218T165735_014436_017694_C3D9|\n|S1A_IW_SLC__1SSV_20151112T160926_20151112T160953_008573_00C27E_0EA0|\n|S1A_IW_GRDH_1SSV_20141004T032207_20141004T032232_002674_002FB7_B327|\n|S1B_IW_GRDH_1SDV_20161108T164153_20161108T164220_002869_004DD3_281E|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table797"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|CURP|\n|---|\n|GATC580722HMSRRL04|\n|HERY851208MMCRYL05|\n|RAGC870109HMCMTS06|\n|GACS600126MDFMRF02|\n|BABB710703MMCLRR03|\n|SAMG710205MDFNRL01|\n|PIAE680824MGRMML07|\n|BAAO831128HDFRLM04|\n|PARL860127MMCRNR07|\n|YALE551116MDFBNL05|\n|TOCC870420MMSRRC04|\n|MACS800918MMCRLF03|\n|CACC640716HMCSSR08|\n|LAGL741217HMCNRZ07|\n|SADB931008MMCNZR01|\n|HIAL640421HVZDVS08|\n|OIVN851116MMNLLH13|\n|AARS680627MDFLJC06|\n|MECM880419HMCNSG02|\n|SAHM880925MMCNRR03|\n|FOGJ640221HDFLRN04|\n|REML720213MMCYRZ01|\n|YEDM820220MDFPMR05|\n|SESL880825HDFRNS06|\n|PEGH740404MMSRNY02|\n|MAHL840927MMCRRL04|\n|SONJ790723MHGLJN00|\n|PASC640415MDFDNR05|\n|EIBJ840604HDFSRR07|\n|VIOE580614MGRLCL00|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table798"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Fund|\n|---|\n|Special Revenue- 200|\n|Capital Projects- 400|\n|Water\/Sewer- 600|\n|Trash & Recycling - 140|\n|Tree Fund - 101|\n|Payroll- 990|\n|General Fund - 100|\n|Equipment Replacement - 120|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table799"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|City|\n|---|\n|New Cairo|\n|Red Deer|\n|Dortmund|\n|San Pedro Garza Garcia|\n|Jouy-En-Josas|\n|Ramat-Gan|\n|Coleraine|\n|Cooranbong|\n|Kingston Upon Thames|\n|Hamilton|\n|Kingston|\n|North Ryde|\n|Berlin|\n|Neubrandenburg|\n|Bielefeld|\n|Regensburg|\n|Sarajevo|\n|Canterbury|\n|North York|\n|Oberursel|\n|Munchen|\n|Bielfeld|\n|Gold Coast|\n|Kaiserslautern|\n|Liverpool|\n|Prince George|\n|Galway|\n|Northwood|\n|Coventry|\n|Victoria|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Bielfeld', 'Bielefeld']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table8"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Work City|\n|---|\n|Olympia|\n|Pleasant Lake|\n|West Sacramento|\n|Burlingame|\n|Schertz|\n|Palmetto Bay|\n|Portland|\n|Erie|\n|Olympiaq|\n|Waterbury|\n|Tallahassee|\n|Hawthorne|\n|Southlake|\n|Jeffersonville|\n|Bettendorf|\n|salt lake city|\n|Langhorne|\n|Naples|\n|Lenexa|\n|DULLES|\n|Warwick|\n|Tuckahoe|\n|St. Paul|\n|Kapolei|\n|Quincy|\n|Dallas|\n|Tenino|\n|Phoenix|\n|Brisbane|\n|San Francisco|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Olympia', 'Olympiaq']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table80"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|RESP FINANCEIRA|\n|---|\n|ARS NORTE|\n|ULS NORDESTE|\n|ARS ALGARVE|\n|ULS Litoral Alentejano|\n|ARS LVT|\n|ARS ALENTEJO|\n|ARS CENTRO|\n|ULS Alto Minho|\n|ULS Castelo Branco|\n|ULS Matosinhos|\n|ULS Norte Alentejano|\n|ULS Baixo Alentejo|\n|ULS Guarda|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table800"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|LINE_DESC|\n|---|\n|Federal sources (-)|\n|Borrowing authority applied to repay debt (-)|\n|Interest on uninvested funds (-)|\n|Contract authority|\n|Total investments SOY:  non-Federal securities: Market value|\n|Unavailable balance end of year: Offsetting collections|\n|Other balances withdrawn and returned to general fund (special and trust funds)|\n|Adjustment for change in allocation of trust fund limitation or foreign exchange valuation|\n|Unavailable balance start of year: Appropriations|\n|Unavailable balance end of year: Contract authority|\n|Borrowing authority permanently reduced (-)|\n|Advance appropriation|\n|Unexpired unobligated balance carried forward end of year|\n|Appropriation (special or trust fund)|\n|Recoveries of prior year unpaid obligations unexpired accounts (-)|\n|New and\/or unobligated balance of spending authority from offsetting collections temporarily reduced (-)|\n|Unavailable balance end of year: Appropriations|\n|Advance appropriations permanently reduced (-)|\n|Unobligated balance of appropriations temporarily reduced (-)|\n|Unpaid obligations transferred to other accounts (-)|\n|Change in uncollected customer payments from Federal sources (+or -)|\n|Unpaid obligations transferred from other accounts|\n|Change in uncollected customer payments from Federal sources unexpired accounts (+ or -)|\n|Appropriations and\/or unobligated balance of appropriations permanently reduced (-)|\n|Total investments EOY:  non-Federal securities: Market value|\n|Unpaid obligations brought forward October 1|\n|Outlays net (discretionary and mandatory)|\n|Appropriation (previously unavailable)|\n|Expired unobligated balance carried forward end of year (special and trust funds)|\n|Unobligated balance transferred to other accounts (-)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table801"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|GRAD|\n|---|\n|VLADISLAVCI|\n|NIJEMCI|\n|BUJE - BUIE|\n|KLAKAR|\n|STARI JANKOVCI|\n|ERVENIK|\n|HRVACE|\n|TOMPOJEVCI|\n|GORNJA RIJEKA|\n|KIJEVO|\n|GLINA|\n|ORAHOVICA|\n|SLIVNO|\n|DONJA DUBRAVA|\n|PODTUREN|\n|BLATO|\n|GALOVAC|\n|BOL|\n|KRALJEVEC NA SUTLI|\n|ZADVARJE|\n|DARDA|\n|VIS|\n|SLAVONSKI BROD|\n|DUBROVNIK|\n|CERNA|\n|DUBRAVA|\n|TISNO|\n|PETRINJA|\n|VUKA|\n|KOSTRENA|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table802"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|ProgramArea|\n|---|\n|Individualized Occupational Training|\n|Business & Marketing|\n|Engineering & Technology|\n|Agriculture Food & Natural Resources|\n|Family & Consumer Sciences and Human Services|\n|CTE Assignments|\n|Skilled & Technical Sciences|\n|Health Professions and Public Safety|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table803"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Community PCODE|\n|---|\n|C5906|\n|C6138|\n|C6208|\n|C5206|\n|C5714|\n|C5889|\n|C6518|\n|C2117|\n|C1272|\n|C3656|\n|C1020|\n|C3651|\n|C2216|\n|C6034|\n|C6383|\n|C4098|\n|C3008|\n|C4701|\n|C5033|\n|C4316|\n|C3878|\n|C4564|\n|C5960|\n|C5762|\n|C5879|\n|C3198|\n|C1249|\n|C6032|\n|C1260|\n|C3083|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table804"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Nahya PCODE|\n|---|\n|SY030501|\n|SY100403|\n|SY050301|\n|SY050304|\n|SY100400|\n|SY120004|\n|SY050303|\n|SY110201|\n|SY120002|\n|SY060204|\n|SY020602|\n|SY080200|\n|SY040100|\n|SY020405|\n|SY100302|\n|SY060202|\n|SY090202|\n|SY120302|\n|SY110100|\n|SY020203|\n|SY040200|\n|SY110202|\n|SY030800|\n|SY100401|\n|SY110102|\n|SY100305|\n|SY100201|\n|SY070202|\n|SY070205|\n|SY090201|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table805"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|OMB_ACCT_SORT|\n|---|\n|012 003|\n|009 000|\n|012 011|\n|012 000|\n|007 000|\n|999 001|\n|012 016|\n|010 001|\n|002 001|\n|012 001|\n|011 000|\n|013 002|\n|004 000|\n|016 005|\n|004 002|\n|006 002|\n|012 014|\n|011 002|\n|012 008|\n|007 002|\n|016 006|\n|016 001|\n|012 005|\n|015 000|\n|014 000|\n|003 002|\n|013 001|\n|012 010|\n|005 000|\n|011 004|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table806"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|IPAddress|\n|---|\n|089.017.016.092|\n|188.252.135.167|\n|193.198.011.242|\n|161.053.106.041|\n|188.129.119.071|\n|141.138.037.092|\n|031.217.117.178|\n|089.143.162.221|\n|161.053.204.180|\n|161.053.116.022|\n|093.141.116.119|\n|213.149.061.071|\n|093.143.180.035|\n|161.053.207.127|\n|161.053.051.204|\n|031.147.184.202|\n|078.001.132.223|\n|161.053.104.047|\n|078.000.174.094|\n|161.053.027.004|\n|161.053.189.035|\n|031.216.218.026|\n|193.198.209.241|\n|213.149.061.184|\n|161.053.043.053|\n|193.198.209.244|\n|161.053.121.253|\n|031.045.142.051|\n|161.053.092.042|\n|161.053.125.034|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table807"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Rep. Contact Phone|\n|---|\n|803-648-0829|\n|503-314-9910|\n|803-469-4049|\n|864-321-4070|\n|843-245-0252|\n|803-729-9040|\n|800-420-2058|\n|216-470-4608|\n|864-337-0777|\n|314-493-8767|\n|216-592-7090|\n|512-925-9056|\n|802-371-2989|\n|803-316-4990|\n|661-317-3254|\n|843-471-9483|\n|803-840-2901|\n|803-643-3358|\n|503-710-4725|\n|216-912-4440|\n|216-324-7582|\n|843-907-3356|\n|216-401-7247|\n|803-429-9507|\n|240-751-2998|\n|469-288-1576|\n|915-258-7408|\n|803-359-4555|\n|843-714-1146|\n|864-337-1135|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table808"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Company Name|\n|---|\n|Big River Telephone Company LLC|\n|The Merchants & Farmers Telephone Company|\n|Camden Telephone Company Inc.|\n|TDS Telecom|\n|Granite Telecommunications LLC|\n|Common Point LLC|\n|Endeavor Communications|\n|Rochester Telephone Co. Inc.|\n|Yeoman Telephone Company|\n|Daviess-Martin County Rural Tel. Corp. d\/b\/a RTC Communications|\n|Sweetser Telephone Co. Inc.|\n|West Point Telephone Company|\n|Community Fiber Solutions Inc.|\n|Pulaski White Rural Telephone Company|\n|United Telephone Company of Indiana Inc. d\/b\/a CenturyLink|\n|Endeavor Communications (Clay County Rural Cooperative)|\n|Time Warner Cable Information Services (Indiana) LLC d\/b\/a Time Warner Cable|\n|Enhanced Telecommunications Corporation|\n|Craigville Telephone  Company Inc.|\n|Indiana Bell Tel. Co. Inc. d\/b\/a AT&T Indiana|\n|Tri County Telephone Company Inc.|\n|Southeastern Indiana Rural Tel. Coop. Inc.|\n|Hancock Rural Telephone Corp. d\/b\/a NineStar|\n|Monon Telephone Company Inc.|\n|CenturyTel of Central Indiana d\/b\/a CenturyLink|\n|Clear Rate Communications|\n|Craigville Telephone Company|\n|Level 3 Telecom of Indiana LP|\n|New Lisbon Telephone Co. Inc.|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table809"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|MSA Name|\n|---|\n|Bennington|\n|Essex - Methuen City|\n|Oklahoma City|\n|Rockingham - North Hampton Town|\n|Forrest City|\n|York - Lebanon Town|\n|Yuba City|\n|Johnson City|\n|Middlesex - Ayer Town|\n|Erie|\n|Lincoln|\n|Worcester - Lunenburg Town|\n|Cumberland - Casco Town|\n|Dallas-Fort Worth-Arlington|\n|Okeechobee|\n|Cumberland - Falmouth Town|\n|Forest City|\n|Rockingham - Chester Town|\n|Penobscot - Springfield Town|\n|Middlesex - Wilmington Town|\n|Wausau|\n|Americus|\n|Seneca|\n|Tallahassee|\n|Middlesex - Holliston Town|\n|Nacogdoches|\n|Kendallville|\n|Mobile|\n|Warren|\n|New Haven - Ansonia Town|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Forrest City', 'Forest City']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table81"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|RAZ\u00c3O SOCIAL|\n|---|\n|AUTO PECAS GIDIAO LTDA|\n|REI DAS PECAS LTDA ME|\n|CASA DA BORRACHA LTDA|\n|MOTORAL MOTORES DE ALAGOAS LTDA|\n|JP DE SOUSA AUTOPECAS ME|\n|AUTO PECAS CONTINENTAL LTDA EPP 5|\n|AUTO PECAS MECANICA FERRARI LTDA|\n|AUTO ELETRICA SOCIAL LTDA EPP|\n|GIRASSOL MERCADAO DE PECAS AGRICOLAS LTDA - QUERENCIA|\n|MEGATRUCKS PECAS E ACESSORIOS LTDA 83|\n|CENTRO AUTOMOTIVO MONAM LTDA EPP|\n|RENO PECAS E ACESSORIOS LTDA|\n|PARANA PECAS LTDA (SP)|\n|REDIESEL RECIFE AUTODIESEL LTDA|\n|PECAS AUTOMOTIVAS E SERVICOS LTDA|\n|COMERCIAL AUTO PECAS WINGERT LTDA|\n|BORJAO TRATORES LTDA|\n|M MEIRA CARDOSO ME - JUINA|\n|F. DELGADO E CIA|\n|ADHEMAR CLETO CAPELA-ME|\n|AUTOMECRI CENTRO AUTOMOTIVO LTDA|\n|COPECAL DISTR.DE AUTO PECAS LTDA - SINOP|\n|IBAD AUTO PECAS LTDA|\n|C BRAGA LUBRIFICACOES LTDA|\n|AR COMERCIO DE PECAS PRODUTOS E SERVICOS LTDA|\n|AUDIPECAS DIESEL LTDA EPP|\n|AF MOTA SERVICOS LTDA|\n|AUTOBC COMERCIO DE PECAS AUTOMOTIVAS E INDUSTRIAIS LTDA|\n|ROGER DE SOUZA GOMES SILVA|\n|J. H. DOS SANTOS CORDEIRO-ME|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table810"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|TAFS_ACCT|\n|---|\n|80-0130 16\/21 - Construction and Environmental Compliance and Restoration|\n|80-0130 17\/22 - Construction and Environmental Compliance and Restoration|\n|80-8978 \/X - Science Space and Technology Education Trust Fund|\n|80-0122 17\/18 - Safety Security and Mission Services|\n|80-0120 17\/18 - Science|\n|80-0109 17\/18 - Office of Inspector General|\n|80-0130 14\/18 - Construction and Environmental Compliance and Restoration|\n|80-0122 16\/18 - Safety Security and Mission Services|\n|80-0110 \/X - Science Aeronautics and Technology|\n|80-8980 \/X - Gifts and Donations|\n|80-0130 13\/17 - Construction and Environmental Compliance and Restoration|\n|80-0128 16\/17 - Education|\n|80-4546 \/X - Working Capital Fund|\n|80-0131 \/X - Space Technology|\n|80-0130 16\/20 - Construction and Environmental Compliance and Restoration|\n|80-0130 13\/18 - Construction and Environmental Compliance and Restoration|\n|80-0124 16\/17 - Exploration|\n|80-0122 17\/19 - Safety Security and Mission Services|\n|80-0122 15\/17 - Safety Security and Mission Services|\n|80-0114 \/X - Science Aeronautics and Exploration|\n|80-0130 \/X - Construction and Environmental Compliance and Restoration|\n|80-0115 17\/18 - Space Operations|\n|80-0115 16\/17 - Space Operations|\n|80-0120 \/X - Science|\n|80-0126 17\/18 - Aeronautics|\n|80-0128 17\/18 - Education|\n|80-0130 17\/21 - Construction and Environmental Compliance and Restoration|\n|80-0124 \/X - Exploration|\n|80-0126 16\/17 - Aeronautics|\n|80-0124 17\/18 - Exploration|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table811"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Nr zam\u00f3wienia|\n|---|\n|PL-2013-088285|\n|PL-2011-048483|\n|PL-2014-090886|\n|PL-2011-090753|\n|PL-2011-088685|\n|PL-2014-087828|\n|PL-2014-014916|\n|PL-2011-089209|\n|PL-2011-086454|\n|PL-2011-085948|\n|PL-2014-088792|\n|PL-2014-090373|\n|PL-2011-090048|\n|PL-2012-087863|\n|PL-2011-089176|\n|PL-2013-087922|\n|PL-2012-087606|\n|PL-2014-089183|\n|PL-2014-086823|\n|PL-2011-086003|\n|PL-2012-087751|\n|PL-2012-086817|\n|PL-2011-088319|\n|PL-2012-091188|\n|PL-2013-091266|\n|PL-2014-091566|\n|PL-2014-085935|\n|PL-2014-086351|\n|PL-2012-088377|\n|PL-2014-090519|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table812"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Type of Truck|\n|---|\n|Tanker|\n|Furniture Removal|\n|Container|\n|Refuse Truck|\n|Fridge|\n|Volume Van|\n|Car carrier|\n|Drop Side|\n|Tipper|\n|Abnormal|\n|Lowbed|\n|Flat Bed|\n|Cement Mixer|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table813"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Estado|\n|---|\n|Aguascalientes|\n|Guanajuato|\n|Nayarit|\n|Colima|\n|Zacatecas|\n|Jalisco|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table814"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Specifi\u010dni cilj\/mjera|\n|---|\n|4c1|\n|7ii2|\n|9a1|\n|1b1|\n|1a1|\n|6ii1|\n|7iii1|\n|9a2|\n|6c2|\n|3d1|\n|9a3|\n|4c2|\n|3a2|\n|TA1|\n|3d2|\n|6ii2|\n|7i1|\n|6i1|\n|4b1|\n|6c1|\n|9b1|\n|10a2|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table815"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Naziv projekta|\n|---|\n|E-Libar|\n|TERA - Savjetnik za poduzetnike (TERA-SAPO)|\n|E - inkubator|\n|NABAVA RADNOG VOZILA I ALATA ZA PROIZVODNJU OPREME ZA|\n|Cesta zlatne niti|\n|Projekt ulaganja u nabavku strojeva za obradu drveta|\n|Ulaganje u kupovinu stroja za proizvodnju glazbenih instrumenata|\n|Konkurentnost za Zebru|\n|Elektor-impuls|\n|Microplet - Moderan Inovativan Koncept za Razvoj Obrta u PLETernici|\n|NOVI IMPULS ZA KVALITETNIJE INSTALACIJE|\n|Izgradnja fotonaponske elektrane Stiloplast za potrebe proizvodnog pogona|\n|ZA NIJANSU BOLJI: ICT|\n|Flexibilna Presoflex gradnja|\n|EU tisak - tisak konkurentnosti|\n|Interpretacijski centar Terra Panonica|\n|Tehnologijom u barokni svijet|\n|Nabava i instalacija kompijutorske opreme i softvera|\n|Zelene staze Dunava i Drave|\n|Dom zdravlja - centar zdravlja|\n|Nabava autobusa za Polet d.o.o. Vinkovci|\n|Lominy - multifunkcionalna mobilna platforma za modne zaljubljenike|\n|e multinorm - redizajn poslovnih procesa putem ERP-a|\n|Razvoj konkurentnog Domino dizajna d.o.o.|\n|Digitalizacija tiskarskog obrta Zebra|\n|E-impulsom do boljeg sna|\n|TURN - enTrepreneURship iN Slavonski Brod|\n|Projekt nabave strojeva za PVC stolariju|\n|Izaberi nijansu-oboji svijet|\n|URALAN IMPULS|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table816"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Article|\n|---|\n|PSE-ZEB-3280|\n|OTO-TET-2614|\n|COP-ATR-532|\n|AUL-HAN-146|\n|PRO-TAE-2996|\n|PRO-ANN-2886|\n|AUL-STU-360|\n|PSE-POL-3180|\n|COP-CHR-572|\n|AUL-STE-352|\n|AUL-SPE-282|\n|PSE-DEM-3076|\n|PSE-TRO-3205|\n|NIM-VEN-2316|\n|LAB-SPE-1778|\n|PET-SPE-2772|\n|AUL-JAC-174|\n|AUL-SPE-296|\n|PRO-KIR-2998|\n|AUL-STE-346|\n|PSE-ACE-63103|\n|AUL-MAY-41966|\n|AUL-SAU-230|\n|PRO-PLE-2966|\n|PSE-XAN-64701|\n|PSE-TRO-3224|\n|PRO-SPI-2986|\n|OTO-LIT-2568|\n|PSE-ELO-3082|\n|OTO-AUR-2530|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table817"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|OMB_ACCT|\n|---|\n|009-70-1502   Low Income Home Energy Assistance|\n|009-10-5629   FDA Innovation Cures Act|\n|009-70-1522   Contingency Fund|\n|009-91-9941   HHS Service and Supply Fund|\n|009-70-1515   Payments to States for the Child Care and Development Block Gran|\n|009-25-5736   10-Year Pediatric Research Initiative Fund|\n|009-38-0114   Early Retiree Reinsurance Program|\n|009-38-0512   Grants to States for Medicaid|\n|009-15-0350   Health Resources and Services|\n|009-25-0147   Payment to the NIH Innovation Account CURES Act|\n|009-38-4482   Consumer Operated and Oriented Plan Program Contingency Fund Fin|\n|009-17-0391   Indian Health Facilities|\n|009-38-8393   Health Care Fraud and Abuse Control Account|\n|009-20-0943   CDC-wide Activities and Program Support|\n|009-38-0524   Consumer Operated and Oriented Plan Program Contingency Fund|\n|009-92-0128   Office of Inspector General|\n|009-38-8308   Medicare Prescription Drug Account Federal Supplementary Insura|\n|009-38-0118   Consumer Operated and Oriented Plan Program Account|\n|009-90-0139   Office of Medicare Hearings and Appeals|\n|009-38-8004   Federal Supplementary Medical Insurance Trust Fund|\n|009-20-0946   World Trade Center Health Program Fund|\n|009-70-1550   Child Care Entitlement to States|\n|009-90-3902   Section 241 Evaluation Transactions Account|\n|009-20-0944   Agency for Toxic Substances and Disease Registry Toxic Substanc|\n|009-90-0140   Public Health and Social Services Emergency Fund|\n|009-70-1534   Social Services Block Grant|\n|009-70-1552   Temporary Assistance for Needy Families|\n|009-10-0148   Payment to the FDA Innovation Account CURES Act|\n|009-10-4309   Revolving Fund for Certification and Other Services|\n|009-15-8175   Vaccine Injury Compensation Program Trust Fund|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table818"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|OMB_ACCOUNT|\n|---|\n|009-70-1545   Payments for Foster Care and Permanency|\n|009-90-5627   State Response to the Opioid Abuse Crisis Cures Act|\n|009-70-1536   Children and Families Services Programs|\n|009-38-0113   Pre-Existing Condition Insurance Plan Program|\n|009-38-0512   Grants to States for Medicaid|\n|009-38-0580   Payments to Health Care Trust Funds|\n|009-10-9911   Salaries and Expenses|\n|009-38-5735   Transitional Reinsurance Program|\n|009-90-0116   Prevention and Public Health Fund|\n|009-75-0142   Aging and Disability Services Programs|\n|009-25-5628   NIH Innovation Cures Act|\n|009-10-4309   Revolving Fund for Certification and Other Services|\n|009-38-8393   Health Care Fraud and Abuse Control Account|\n|009-70-1501   Payments to States for Child Support Enforcement and Family Supp|\n|009-90-0130   Office of the National Coordinator for Health Information Techno|\n|009-91-9971   Miscellaneous Trust Funds|\n|009-70-1515   Payments to States for the Child Care and Development Block Gran|\n|009-38-4482   Consumer Operated and Oriented Plan Program Contingency Fund Fin|\n|009-38-0519   Quality Improvement Organizations|\n|009-38-0511   Program Management|\n|009-70-1552   Temporary Assistance for Needy Families|\n|009-15-0321   Maternal Infant and Early Childhood Home Visiting Programs|\n|009-38-5551   Child Enrollment Contingency Fund|\n|009-90-0139   Office of Medicare Hearings and Appeals|\n|009-91-0379   Retirement Pay and Medical Benefits for Commissioned Officers|\n|009-17-0390   Indian Health Services|\n|009-30-1362   Substance Abuse and Mental Health Services|\n|009-20-4553   CDC Working Capital Fund|\n|009-15-0350   Health Resources and Services|\n|009-90-3902   Section 241 Evaluation Transactions Account|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table819"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|FormID2|\n|---|\n|PR Ethnic Studies|\n|PR Anthropology|\n|pr blology|\n|PR Sociology|\n|PR Language|\n|pr biology|\n|PR Core|\n|PR Language|\n|PR NonCredit|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['pr biology', 'pr blology']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table82"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Nome_Mesorregi\u00e3o|\n|---|\n|Oeste Potiguar|\n|Oeste Paranaense|\n|Sudoeste Rio-grandense|\n|Agreste Paraibano|\n|Metropolitana do Rio de Janeiro|\n|Assis|\n|Distrito Federal|\n|Leste Potiguar|\n|Norte de Minas|\n|Metropolitana de Porto Alegre|\n|Jaguaribe|\n|Centro Oriental Paranaense|\n|Norte de Roraima|\n|Sudeste Paranaense|\n|Sul Maranhense|\n|Oeste Maranhense|\n|Norte Piauiense|\n|Norte Maranhense|\n|Leste Sergipano|\n|Baixadas|\n|Oeste de Minas|\n|Serrana|\n|Bauru|\n|Leste Goiano|\n|Metropolitana de Salvador|\n|Norte Amazonense|\n|Sudeste Piauiense|\n|Centro-Sul Paranaense|\n|Central Potiguar|\n|Litoral Sul Paulista|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table820"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Scene ID|\n|---|\n|S2A_OPER_MSI_L1C_TL_SGS__20160813T141852_20160813T191108_A005970_T20KRA_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20151117T142732_20170101T162534_A002109_T20KQV_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20160820T141625_20160820T202705_A006070_T21KVS_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160929T141111_20160929T185850_A006642_T21KUQ_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160120T135944_20160120T192344_A003024_T21JXL_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161111T142712_20161111T191305_A007257_T20KNB_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160113T141828_20160113T193225_A002924_T21JUK_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161128T141827_20161128T190440_A007500_T21KTQ_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20160813T142826_20160813T203718_A005970_T21JTN_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160103T141003_20160103T192741_A002781_T21JVN_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20161025T143810_20161025T204824_A007014_T20KPV_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161125T140720_20161125T185531_A007457_T21JXM_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20161205T140441_20161206T164240_A007600_T21KYP_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20160814T135324_20160814T200521_A005984_T21JYM_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161204T143811_20161204T174724_A007586_T20KND_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_EPA__20150819T141815_20160928T053642_A000822_T20KQC_N02_04_03|\n|S2A_OPER_MSI_L1C_TL_SGS__20160323T141001_20160323T193745_A003925_T20KQU_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20151228T134952_20151228T190230_A002695_T21JYM_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_MTI__20160817T135951_20160817T201258_A006027_T21JXM_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161108T141328_20161108T190606_A007214_T21KVR_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161111T142712_20161111T191305_A007257_T20KPV_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160126T142120_20160126T192946_A003110_T21KTQ_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161012T142818_20161012T191637_A006828_T21KTR_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160303T140959_20160303T211249_A003639_T21JVM_N02_01_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161013T135328_20161013T183907_A006842_T21JYM_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161101T142147_20161101T191557_A007114_T20KPD_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20160604T141959_20160604T190651_A004969_T21JTN_N02_02_02|\n|S2A_OPER_MSI_L1C_TL_MTI__20161026T140227_20161026T201554_A007028_T21KXR_N02_04_01|\n|S2A_OPER_MSI_L1C_TL_SGS__20161108T141328_20161108T190606_A007214_T21JVL_N02_04_01|\n|L1C_T20KQC_A007829_20161221T141040|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table821"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|SOC Code|\n|---|\n|11-9111|\n|53-7062|\n|29-2011|\n|51-1011|\n|43-3031|\n|25-3021|\n|17-3026|\n|35-3041|\n|33-3012|\n|47-2061|\n|29-1128|\n|13-1022|\n|43-4141|\n|47-1011|\n|51-9071|\n|19-2011|\n|49-9012|\n|29-1041|\n|29-2061|\n|39-3031|\n|41-9031|\n|13-2051|\n|21-1798|\n|47-2161|\n|27-1023|\n|43-6013|\n|27-4011|\n|29-1181|\n|29-1062|\n|43-4151|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table822"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Mailing City|\n|---|\n|Aubrey|\n|Wichita Falls|\n|Hallettsville|\n|Whitewright|\n|San Diego|\n|Athens|\n|White Settlement|\n|Carthage|\n|Kountze|\n|Conroe|\n|Bastrop|\n|Baytown|\n|Lockhart|\n|River Oaks|\n|Dublin|\n|Post|\n|Weimar|\n|Buffalo|\n|Wallis|\n|Tom Bean|\n|Shiner|\n|Cuero|\n|Bartlett|\n|Pecos|\n|Newton|\n|Carrizo Springs|\n|Big Lake|\n|Burkburnett|\n|Onalaska|\n|Texarkana|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table823"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|OCLC Code|\n|---|\n|TXNPL|\n|TXBVM|\n|TXCHA|\n|T7B|\n|MULAP|\n|FLWMD|\n|TXROP|\n|SBRWN|\n|TY2|\n|E9T|\n|TXMTH|\n|TXL|\n|QT8|\n|TXKUR|\n|TXSVP|\n|CRSBY|\n|TXGRV|\n|TXLYT|\n|TXSAI|\n|TXLAM|\n|WT2|\n|TXBRI|\n|T3Q|\n|BCPCP|\n|JHWCP|\n|T3H|\n|PALES|\n|POSTP|\n|LAJOY|\n|TXBKB|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table824"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Aldea\/Caser\u00edo|\n|---|\n|CUYUTA|\n|CANTON CENTRAL ALDEA SAN PEDRO COTZAN|\n|PALIMONIX|\n|GARCIA|\n|CANTON LA CRUZ ALDEA SAN PEDRO COTZAN|\n|LAS CANOAS|\n|FINCA EL NARANJO|\n|FCA. EL RECREO|\n|MATASANO|\n|LOS MARROQUIN|\n|EL BOSQUE|\n|CHICHIMECAS|\n|COLONIA MARISCAL|\n|LA BENDICION|\n|SAN JOSE DEL GOLFO|\n|SAJCAVILLA|\n|SANTA ISABEL|\n|AGUA CALIENTE|\n|LAS VEGAS|\n|LLANO LARGO|\n|CHACHAN|\n|FCA. MARIA SANTISIMA|\n|AGUA ZARCA|\n|EL MATASANO|\n|TULUMAJE|\n|EL JOCOTILLO|\n|SASPAN|\n|SAN GABRIEL|\n|FINCA HACIENDA NUEVA|\n|EL SAUCE|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table825"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Enfermedad|\n|---|\n|INFLUENZA AVIAR H7N3|\n|CORIZA INFECCIOSA|\n|NEWCASTLE|\n|SALMONELLA|\n|COLERA AVIAR|\n|NO APLICA|\n|VIRUELA AVIAR|\n|INFLUENZA AVIAR H5N2|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table826"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|gene|\n|---|\n|Gyc88E|\n|SppL|\n|CR43855|\n|CG4829|\n|Lpin|\n|CG9932|\n|ng4|\n|eIF5B|\n|unpg|\n|CG13135|\n|att-ORFA|\n|MYPT-75D|\n|cpo|\n|zfh2|\n|Rtnl1|\n|Sfp33A3|\n|CG8735|\n|fl(2)d|\n|CG3835|\n|Osi19|\n|IP3K1|\n|CR43399|\n|tai|\n|CG4151|\n|Syp|\n|CG12027|\n|CG13998|\n|pnt|\n|uex|\n|CG31522|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table827"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Financial year|\n|---|\n|2010\/11|\n|2008\/09|\n|2005\/06|\n|2011\/12|\n|2013\/14|\n|2007\/08|\n|2015\/16|\n|2006\/07|\n|2014\/15|\n|2009\/10|\n|2012\/13|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table828"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Pr\u00e1ctico|\n|---|\n|19:00|\n|09:00|\n|20:00|\n|18:00|\n|15:00|\n|17:00|\n|17:15|\n|15:30|\n|0.54166666666666663|\n|20:30|\n|19:30|\n|16:00|\n|18:30|\n|14:00|\n|14:30|\n|13:00|\n|17:30|\n|0.625|\n|16:30|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table829"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Ville|\n|---|\n|Saint jean de Luz|\n|Alberville|\n|Etaples|\n|Brignoles|\n|Poissy|\n|Saint-Auban|\n|Vitry sur Seine|\n|BETHUNE|\n|Antibes|\n|Albertville|\n|Lille|\n|LA CIOTAT|\n|Saint-Paul|\n|ANNECY|\n|Etampes|\n|Saint Dizier|\n|L'Isle sur la Sorgue|\n|Digne|\n|Istres|\n|Valenciennes|\n|MONTBELIARD|\n|Fourmies|\n|Rousies|\n|Villiers-le-Bel|\n|Strasbourg|\n|Montpellier|\n|Craon|\n|Annemasse|\n|Saint Philbert de grand Lieu|\n|Artigues|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Alberville', 'Albertville']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table83"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Age Group|\n|---|\n|65 & Above|\n|55-64|\n|25-29|\n|30-34|\n|Under 16|\n|19-24|\n|Unknown|\n|16-18|\n|35-54|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table830"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Occupation Title|\n|---|\n|Environmental Scientists and Specialists Including Health|\n|Broadcast News Analysts|\n|Surveying and Mapping Technicians|\n|Purchasing Managers|\n|Sales and Related Workers All Other|\n|Rehabilitation Counselors|\n|Brokerage Clerks|\n|Food Scientists and Technologists|\n|Air Traffic Controllers|\n|Retail Salespersons|\n|Advertising and Promotions Managers|\n|Business Operations Specialists All Other|\n|Jewelers and Precious Stone and Metal Workers|\n|First-Line Supervisors of Farming Fishing and Forestry Workers|\n|Other Protective Service Workers|\n|Architecture and Engineering Occupations|\n|Social and Community Service Managers|\n|Postal Service Mail Sorters Processors and Processing Machine Operators|\n|Secretaries and Administrative Assistants Except Legal Medical and Executive|\n|Astronomers|\n|Forest and Conservation Technicians|\n|Other Production Occupations|\n|Signal and Track Switch Repairers|\n|Cooks Short Order|\n|Woodworkers|\n|Postmasters and Mail Superintendents|\n|Lodging Managers|\n|Metal Workers and Plastic Workers All Other|\n|Legal Occupations|\n|Epidemiologists|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table831"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|CNPJ|\n|---|\n|18.210.391\/0001-34|\n|22.535.466\/0001-24|\n|10.478.512\/0001-11|\n|56.419.492\/0001-09|\n|03.662.899\/0001-04|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table832"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|UNIDAD|\n|---|\n|S23|\n|S21|\n|S04|\n|S07|\n|S12|\n|S22|\n|S25|\n|S32|\n|S06|\n|S17|\n|S05|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table833"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Fagbetegnelse|\n|---|\n|Fundraising|\n|Spin og professionel politisk kommunikation|\n|Kommunikationsledelse|\n|Tidstypiske bygninger og konstruktioner|\n|Sagsbehandling|\n|Vurdering af boliginvesterings- og andelsboligejendomme mv.|\n|Projektledelse i mediebranchen|\n|Kostvaner og livsstilssygdomme|\n|Strategisk fundraising|\n|Indledende biokemi|\n|Brugervenlighed og grafisk design|\n|Automations design|\n|Produktionsoptimering|\n|Afgangsmodul ENGELSKVEJLEDER|\n|Overgangsmodul ledelse|\n|Ledelse og forhandling i politisk styrede organisationer|\n|Drift og vedligehold|\n|Vejledning undervisning og udvikling i seksualvejledningen|\n|Afgangsprojekt Perfomative processer|\n|Strategisk kommunikation for fagjournalister|\n|Ledelse og medarbejdere 1: Ledelse i dynamiske relationer|\n|Produktudvikling|\n|Sociale medier|\n|Kvalitetsudvikling og dokumentation|\n|Systemintegration|\n|Innovation projektledelse og intervention|\n|Afgangsmodul PROJEKTLEDELSE OG ORGANISATIONSUDVIKLING|\n|Ledelse og styring i politisk styrede organisationer|\n|Sensorik|\n|Dysleksi|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table834"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|CRASH REPORT STATE|\n|---|\n|RI|\n|TX|\n|MN|\n|NC|\n|ID|\n|NH|\n|MS|\n|IL|\n|AL|\n|PA|\n|SD|\n|NE|\n|MI|\n|CA|\n|CT|\n|ND|\n|NY|\n|KY|\n|OH|\n|TN|\n|AZ|\n|ME|\n|HI|\n|NM|\n|KS|\n|VT|\n|AR|\n|SC|\n|CO|\n|FL|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table835"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|UA Subject Area Description|\n|---|\n|Microbiology|\n|Music Main|\n|Regional Nonmetro Commerce|\n|Pharmacology & Toxicology|\n|Medicine: Interdept.|\n|Mexican American Studies|\n|Global Change|\n|Science Teaching|\n|Agricultural Education Main|\n|Molecular & Cellular Biology|\n|Planning|\n|Pathology|\n|Music Individual Studies|\n|Leadership|\n|Biomedical Engineering|\n|Theatre Arts|\n|Bachelor Applied Science Core|\n|Public Administration & Policy|\n|Computer Science UA South|\n|Physiology|\n|Business Communications|\n|English UA South|\n|Chinese Studies|\n|History Main|\n|Physical Education Main|\n|Greek|\n|Educational Technology|\n|Biochemistry|\n|Religious Studies Main|\n|Physics|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table836"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Detail Account Description|\n|---|\n|MAINTENANCE SUPPLIES - STREETS|\n|JURY FEES|\n|GCAD\/GCTAC|\n|BLANTON DEVELOPMENT REIMB|\n|SAFETY SUPPLIES AND EQUIPMENT|\n|POSTAGE|\n|NON-CAPITAL OUTLAY|\n|VEHICLE REPAIRS|\n|TOWER SITE MAINTENANCE|\n|REGIONAL WTR DEV GRP|\n|JANITORAL SUPPLIES|\n|A\/R - CIBOLO PARKWAY PROJ|\n|A\/R - MISCELLANEOUS|\n|REINSPECTION FEES|\n|SOCIAL SECURITY PAYABLE|\n|LEGAL SERVICES-COLLECTION|\n|PREPAID LIABILITY INSURANCE|\n|2011 GENERAL OBLIG - INTEREST|\n|PREPAID PUBLIC SAFETY|\n|MINOR TOOLS AND EQUIPMENT|\n|NATIONWIDE PAYABLE|\n|COMMUNICATION EQUIPMENT|\n|OFFICERS EQUIPMENT\/SUPPLIES|\n|UNIFORM AND CLOTHING|\n|2003 CERT OF OBLIGATION-PRINC|\n|EMP'EE DENTAL INS PAYABLE|\n|GENERAL LIABILITY INSURANCE|\n|BUILDING MAINTENANCE|\n|LEGAL SERVICES|\n|EMPLOYEE ENGAGEMENT|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table837"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Data rozpocz\u0119cia realizacji projektu [format: rrrr-mm-dd]|\n|---|\n|2015-09-01|\n|2017-05-05|\n|2017-03-08|\n|2017-09-01|\n|2015-12-30|\n|2018-02-15|\n|2019-01-07|\n|2015-03-31|\n|2015-12-01|\n|2015-09-18|\n|2016-07-09|\n|2018-04-12|\n|2018-04-17|\n|2017-10-19|\n|2015-11-01|\n|2018-07-16|\n|2017-10-18|\n|2017-05-04|\n|2016-11-30|\n|2015-06-01|\n|2017-11-30|\n|2015-06-24|\n|2016-10-10|\n|2015-10-01|\n|2018-03-30|\n|2015-12-28|\n|2019-05-06|\n|2018-04-01|\n|2017-06-01|\n|2015-08-13|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table838"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Business Phone|\n|---|\n|(402)626-7235|\n|(402)494-2433|\n|(402)436-1303|\n|(308)995-6558|\n|(402)829-4600|\n|(402)755-5701|\n|(402)852-2988|\n|(402)289-4239|\n|(402)375-3150|\n|(402)557-3500|\n|(402)339-3606|\n|(308)423-2738|\n|(308)458-2202|\n|(402)925-2890|\n|(402)266-5911|\n|(402)557-3300|\n|(402)436-1302|\n|(402)436-1301|\n|(308)428-3145|\n|(402)443-4332|\n|(402)635-2484|\n|(308)863-2228|\n|(402)868-5235|\n|(402)645-3326|\n|(308)636-2252|\n|(402)627-3375|\n|(402)725-3116|\n|(402)857-2741|\n|(308)882-4304|\n|(308)784-2744|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table839"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Casedescription|\n|---|\n|2-1K G 1-2K G|\n|Failed SIR for December 2010|\n|Tank #3A (Premium) had failing SIR result for March 2017|\n|SITE CHECK|\n|Sir failure Case 2|\n|Tank Closure for Superfund Div.|\n|No RP found yet|\n|Tank closure in place line replacement and dispenser removal.|\n|Suspected release from reported failed LTT|\n|Leaking LLD reported 10\/26\/12|\n|Case Close|\n|1-20K D|\n|pre tracking case not a registered facility|\n|Tanks floated out due to water in tank pit.|\n|Suspected Release for regular-grade gasoline tank (Tank #4)|\n|spill bucket replacement|\n|CASE CLOSED|\n|3- 6K G|\n|soil treatment by aeration|\n|Phase II Audit.|\n|Gross line fail and PLLD shutdown alarms on PU line during inspection.|\n|6-3K G|\n|Suspected release SIR INC|\n|unexplained presence of water|\n|Complaint of water with oil\/fuelflowing across sidewalk.|\n|Diesel Tank closure.|\n|failing SIR result for Tank #2 (6_000 gallon regular gas)|\n|Enforcement closure|\n|water with fuel in all 3 STP sumps|\n|Kerosene tank pit TP# 2|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['CASE CLOSED', 'Case Close']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table84"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Co-Dist-Sch#|\n|---|\n|01-4001-001|\n|87-0017-001|\n|54-0576-001|\n|30-0600-001|\n|72-0075-001|\n|60-0090-001|\n|19-0039-001|\n|15-0536-001|\n|33-0021-001|\n|66-0111-001|\n|20-0020-001|\n|55-0148-001|\n|06-0001-001|\n|57-0501-001|\n|59-0002-001|\n|93-0012-001|\n|21-0044-001|\n|73-0017-001|\n|13-0097-001|\n|41-0504-001|\n|51-0001-001|\n|11-0020-001|\n|90-0017-001|\n|14-0101-001|\n|27-0595-001|\n|17-0009-001|\n|28-4021-001|\n|24-0004-001|\n|42-0002-001|\n|55-0001-009|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table840"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|titre FR|\n|---|\n|Chef du Service Facturation|\n|Accompagnateur CANTOU|\n|Chef d'Equipe Administrative|\n|Infirmier - Chef de Service|\n|Acheteur|\n|Animateur|\n|Aide-Laborantin|\n|Chauffeur|\n|Coordinateur des Psychomotriciens|\n|Chef-Adjoint du Service Administratif|\n|Infirmier en Chef - Coordinateur|\n|Collaborateur au Service Social - Revalidation|\n|Coiffeur|\n|Collaborateur au Service Social|\n|Infirmier en Consultation|\n|Aide-Comptable|\n|Garde|\n|Assistant en Psychologie|\n|Chauffeur Transport des Patients|\n|Caissier|\n|Infirmier en Soins Palliatifs|\n|Aide en Pharmacie|\n|Psychomotricien|\n|Accompagnateur Spirituel|\n|Chef-Cuisinier|\n|Infirmier en Soins Intensifs|\n|Aide-Cuisine|\n|Infirmier Chef d'Equipe Centre de Transfusion Sanguine|\n|Chef du Service Informatique|\n|Chef du Service Accompagnement Spirituel|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table841"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|SIZE|\n|---|\n|1.45GB|\n|1.03GB|\n|0.72GB|\n|1.16GB|\n|0.91GB|\n|1.24GB|\n|0.82GB|\n|1.18GB|\n|1.04GB|\n|0.69GB|\n|1.23GB|\n|1.3GB|\n|1.28GB|\n|0.79GB|\n|1.49GB|\n|0.98GB|\n|1.01GB|\n|0.76GB|\n|1.35GB|\n|1.12GB|\n|1.05GB|\n|1.15GB|\n|1.31GB|\n|0.83GB|\n|1.11GB|\n|0.60GB|\n|1.39GB|\n|0.95GB|\n|1.37GB|\n|0.87GB|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table842"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Project Name in English|\n|---|\n|Synthesis and biological evaluation of controllably activated anticancer prodrugs|\n|Ecology and evolution of decapod crustaceans: genomic and transcriptomic analyses|\n|Energy-efficient Training of Multiple Deep Learning Models on GPU Clusters|\n|Pickering Emulsions: Formation Structure and Food Applications|\n|Metabolic Engineering of Non-Model Bacteria for Biobased Chemicals Production|\n|ultrasensitive nanothermometry using quantum sensors|\n|Microfluidics for high-content drug screening and precision medicine|\n|Thermoregulatory Textiles and Clothing|\n|Evolutionary Computing for Large-Scale Multi-Objective Optimization|\n|Novel 2D materials used for laser photonic applications|\n|L-lactate Released by Optogenetic Activation of Astrocytes Rescues Decision-making Deficit in Visceral Hypersensitive Rats|\n|Crop physiology and production under water-limited conditions|\n|Nonlinear optical characteristics of inorganic perovskite single crystals in glass|\n|Development of Chiral maging Probes|\n|Reversing cancer drug resistance using small molecules|\n|Relational Self and Psychological Health|\n|To identify antidiabetic compounds from the medicinal plants in Lingnan region|\n|Fundamental Design and Development of Electrochemcial Catalysts|\n|Real-time approach to detecting and avoiding unsafe behaviors of workers based on Internet of Things|\n|Large-Scale Distributed Machine Learning: System and Theory|\n|Pollutants in Combustion Research|\n|Smart Materials and Structures Energy Harvesting Vibration Mechatronics Robotic Exoskeleton|\n|Optimal Access Design of M2M Communications in Next-Generation Communication Networks|\n|Superhydrophobic surface|\n|System reliability: Modelling Analysis and Decision making|\n|DNA methylation in multiple myeloma|\n|Development of Novel Multifunctional Nanocarriers for Image-guided Cancer Therapy|\n|Gaze Tracking for Robotic Limb Control: Calibration Estimation of POG and Tracking|\n|Impact of marine biofilm on marine benthos|\n|Properties and functions of bioactive polysaccharides through gut microbiota|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table843"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Product|\n|---|\n|Sunshine|\n|Doublers|\n|Sunbell|\n|Carlota|\n|Quad|\n|Sunset|\n|Crested Beaut|\n|Bellen|\n|FlatTop|\n|Aspen|\n|V-Rang|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table844"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Type of Cargo|\n|---|\n|Wood \/ Timber \/ Lumber|\n|Vehicles|\n|People|\n|Container|\n|Sand \/ Earth|\n|Sail \/ Tarpaulin|\n|Perishables|\n|Fuels|\n|Chemicals|\n|Cement|\n|Machinery|\n|Iron \/ Steel \/ Metals|\n|Empty|\n|Drinks \/ Beverages|\n|Livestock|\n|Other|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table845"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Miejsce realizacji - gmina|\n|---|\n|Wodzierady|\n|Granowo|\n|Zawoja|\n|Jemielnica|\n|Zawichost|\n|Trzemeszno|\n|Sadowie|\n|Radziechowy-Wieprz|\n|Siemiatycze|\n|Brzyska|\n|Mucharz|\n|Kruszyna|\n|Policzna|\n|Alwernia|\n|Braniewo|\n|Kamionka Wielka|\n|Szemud|\n|Nowe Skalmierzyce|\n|Sicienko|\n|Bircza|\n|Obsza|\n|Lipnik|\n|Kock|\n|Lubliniec|\n|Kleszczewo|\n|Wyryki|\n|Opalenica|\n|Kunice|\n|Mszana Dolna - gmina wiejska|\n|Puszczykowo|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table846"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Organisation code|\n|---|\n|RYR|\n|RMC|\n|RFF|\n|RWK|\n|RTG|\n|RH5|\n|NR5|\n|RXX|\n|RY5|\n|RET|\n|RWR|\n|RW5|\n|RLQ|\n|RW6|\n|RY9|\n|RCD|\n|NQL|\n|RXK|\n|RA4|\n|R1L|\n|RNL|\n|RV9|\n|RHM|\n|RAL|\n|RGQ|\n|RD8|\n|RPG|\n|RV5|\n|RQW|\n|RYC|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table847"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Age Group|\n|---|\n|25-29|\n|55-64|\n|35-54|\n|16-18|\n|19-24|\n|65 & Above|\n|30-34|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table848"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Location|\n|---|\n|24XX S GLEBE RD|\n|23XX WILSON BL|\n|17XX S LOWELL ST|\n|13XX S EADS ST|\n|NB I395 NORTH AT WASHINGTON BL AC <168|\n|42XX 2ND RD N|\n|23XX N 11 ST|\n|29XX COLUMBIA PK|\n|75X S GREENBRIER ST|\n|55X 23RD ST S|\n|11XX S JOYCE ST|\n|30X S EDGEWOOD ST|\n|42XX N 2 RD|\n|70X S ARLINGTON MILL DR|\n|18XX N QUINN ST|\n|20XX N LYNN ST|\n|WB I66 WEST AT SPOUT RUN PK AC <0\/0>|\n|34XX N ABINGDON ST|\n|E 66 RT\/ LEE HW|\n|395 S\/ SHIRLINGTON CIR|\n|11XX S HAYES ST|\n|22XX WILSON BL|\n|S 2 ST\/S FILLMORE ST|\n|COLUMBIA PK\/ WASHINGTON BL|\n|38XX S 22 ST|\n|13XX S SCOTT ST|\n|19XX N LYNN ST|\n|11XX S 21 ST|\n|11X BROOKSIDE DR|\n|18XX N NASH ST|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table849"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Polling Place Name|\n|---|\n|Greenland School|\n|JRM Library|\n|Levis Town Hall|\n|Clam Falls Town Hall|\n|Tilden Town Hall|\n|Life Church|\n|Multicultural Center|\n|Sampson Town Hall|\n|Columbus Senior Center|\n|Pelican Town Hall|\n|Town of Medina Garage|\n|FDL High School|\n|River of Life UMC|\n|Wellington Town Hall|\n|Bose School|\n|Town of Rush River Hall|\n|Polish Center of Wisc|\n|Community Center|\n|MILLSTON TOWN HALL|\n|Scott Town Hall|\n|Commuity Center|\n|Living Water Church|\n|Elvehjem Elementary|\n|St Marys Care Center|\n|Neenah Police Station|\n|First Lutheran Church|\n|Star Prairie Town Hall|\n|Hope Lutheran|\n|P.C. Govt Center|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Community Center', 'Commuity Center']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table85"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Miejsce realizacji - powiat|\n|---|\n|bydgoski|\n|bytowski|\n|tucholski|\n|tczewski|\n|lipski|\n|konecki|\n|Gdynia|\n|raciborski|\n|sieradzki|\n|kartuski|\n|Kalisz|\n|hrubieszowski|\n|drawski|\n|leski|\n|Warszawa|\n|szamotulski|\n|kazimierski|\n|Konin|\n|janowski|\n|tarnowski|\n|bartoszycki|\n|buski|\n|radomski|\n|Koszalin|\n|suski|\n|prudnicki|\n|Siedlce|\n|obornicki|\n|myszkowski|\n|Sosnowiec|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table850"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Estado|\n|---|\n|Zacatecas|\n|Guanajuato|\n|Jalisco|\n|Aguascalientes|\n|Colima|\n|Nayarit|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table851"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Projekti asukoha maakonna nimetus|\n|---|\n|Rapla maakond|\n|Hiiu maakond|\n|Saare maakond|\n|Valga maakond|\n|Ida-Viru maakond|\n|Harju maakond|\n|Viljandi maakond|\n|Tartu maakond|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table852"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Job Number|\n|---|\n|KY1119260|\n|KY1112875|\n|KY1116413|\n|KY1117146|\n|KY1114778|\n|KY1101599|\n|KY1119261|\n|KY1118537|\n|KY1113025|\n|KY1115040|\n|KY1112655|\n|KY1097997|\n|KY1118373|\n|KY1113688|\n|KY1114451|\n|KY1111913|\n|KY1110817|\n|KY1110762|\n|KY1110819|\n|KY1113507|\n|KY1118114|\n|KY1117486|\n|KY1116414|\n|KY1089432|\n|KY1112503|\n|KY1112009|\n|KY1117682|\n|KY1101597|\n|KY1118912|\n|KY1107997|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table853"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|account|\n|---|\n|5-0655-52-101|\n|4-0301-42-206|\n|5-0317-51-910|\n|5-0210-50-109|\n|5-0422-51-537|\n|5-0845-51-899|\n|5-0524-51-500|\n|5-0637-51-911|\n|9-0880-90-065|\n|5-0532-50-200|\n|5-0107-51-500|\n|2-0000-24-091|\n|4-0601-40-209|\n|5-0653-51-630|\n|1-0000-11-027|\n|9-0380-90-085|\n|4-0001-42-151|\n|1-0000-11-110|\n|3-0000-32-000|\n|5-0556-51-620|\n|5-0209-50-110|\n|5-0744-50-109|\n|5-0530-51-900|\n|5-0529-50-303|\n|5-0338-51-899|\n|4-0201-44-306|\n|6-9990-63-999|\n|9-0880-90-108|\n|5-0350-51-520|\n|5-0503-50-110|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table854"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Circuit or Region|\n|---|\n|11 Circuit|\n|01 Circuit|\n|17 Circuit|\n|20 Circuit|\n|05 Circuit|\n|07 Circuit|\n|03 Circuit|\n|13 Circuit|\n|12 Circuit|\n|08 Circuit|\n|North Region|\n|09 OS Circuit|\n|South Region|\n|14 Circuit|\n|18 Circuit|\n|16 Circuit|\n|09 OC Circuit|\n|15 Circuit|\n|02 Circuit|\n|04 Circuit|\n|06 Circuit|\n|10 Circuit|\n|Statewide|\n|19 Circuit|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table855"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|ACTIVITY DESCRIPTION|\n|---|\n|Manufacturing (Others)|\n|Insurance|\n|Business Services|\n|Real Estate and Renting|\n|Manufacturing (Food stuffs)|\n|Manufacturing (Metals & Chemicals and products thereof)|\n|Manufacturing (Wood Products)|\n|Agriculture and Allied Activities|\n|Manufacturing (Leather & products thereof)|\n|Transport storage and Communications|\n|Construction|\n|Mining & Quarrying|\n|Manufacturing (Paper & Paper products Publishing printing and reproduction of recorded media)|\n|Finance|\n|Community personal & Social Services|\n|Electricity Gas & Water companies|\n|Manufacturing (Textiles)|\n|Trading|\n|Manufacturing (Machinery & Equipments)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table856"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Ansvarig person|\n|---|\n|Marie Johansson|\n|Inge Bruce|\n|Erica Hult|\n|Birgitta Lejman|\n|Pierre Houdet|\n|Christina Lindberg|\n|Staffan Thore|\n|Jennifer Blom|\n|Karin Lindblom|\n|Agneta Eklund|\n|Helen Askebro|\n|Charlotta Gullbrandsson|\n|Jan Andersson|\n|Cecilia Ulleryd|\n|Agneta Roos|\n|Angelica Wiklund|\n|Birgitta Pleijel|\n|Claudio Troncoso Munoz|\n|Birgitta Olsson|\n|Ylva Tottmar|\n|Nina Anundsson|\n|Maria Lindblom|\n|Niklas Rommel|\n|Henrik Andreasson|\n|Annika Brehmer|\n|Sofie Schwan|\n|Sandra Hult Sellin|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table857"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Local authority|\n|---|\n|Dudley|\n|Wolverhampton|\n|Bristol City of|\n|Gloucestershire|\n|Manchester|\n|Calderdale|\n|Suffolk|\n|Leicester|\n|Leeds|\n|Waltham Forest|\n|Wokingham|\n|Lewisham|\n|Sandwell|\n|Sefton|\n|Doncaster|\n|Wandsworth|\n|Haringey|\n|Kent|\n|Kirklees|\n|Brighton and Hove|\n|Warwickshire|\n|Westminster|\n|Worcestershire|\n|Tameside|\n|Nottinghamshire|\n|Bradford|\n|Liverpool|\n|Stoke-On-Trent|\n|Newham|\n|Coventry|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table858"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|glcategory|\n|---|\n|Z non procurement|\n|Information and Communication Technology|\n|Materials|\n|Travel|\n|Medical|\n|Machinery Plant and Equipment|\n|Vehicles|\n|Facilities Management|\n|Business Services|\n|Labour hire|\n|Logistics|\n|Grants and Subsidies|\n|Construction|\n|Energy|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table859"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Municipality|\n|---|\n|TOWN OF STEPHENSON|\n|VILLAGE OF REDGRANITE|\n|TOWN OF ONEIDA|\n|CITY OF MEDFORD|\n|TOWN OF BLAINE|\n|TOWN OF HILLSBORO|\n|VILLAGE OF CEDAR GROVE|\n|TOWN OF REMINGTON|\n|TOWN OF GERMANIA|\n|VILLAGE OF YORKVILLE|\n|TOWN OF MONTROSE|\n|VILLAGE OF BROWNTOWN|\n|VILLAGE OF GAYS MILLS|\n|TOWN OF PECK|\n|TOWN OF SPENCER|\n|TOWN OF THORNAPPLE|\n|TOWN OF WAUMANDEE|\n|TOWN OF OSHKOSH|\n|TOWN OF SMELSER|\n|TOWN OF BLOOMING GROVE|\n|VILLAGE OF OGDENSBURG|\n|VILLAGE OF GRAFTON|\n|VILLAGE OF DOWNING|\n|TOWN OF SPRINGVALE|\n|TOWN OF ERIN|\n|CITY OF LOYAL|\n|TOWN OF TRUE|\n|VILLAGE OF GRANTON|\n|TOWN OF PACKWAUKEE|\n|VILLAGE OF NECEDAH|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['VILLAGE OF GRANTON', 'VILLAGE OF GRAFTON']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table86"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Site|\n|---|\n|Eastside Nursery|\n|Elder Mill Covered Bridge|\n|Morgan County African American Museum|\n|Best Western Inn-Braselton|\n|The Rogers House and Rose Cottage|\n|Double Barreled Cannon|\n|Birthplace of the Poppy Lady Moina Michael|\n|Deer Trail Country Club|\n|Quality Inn-Covington|\n|Dow's Pulpit Monument|\n|Reynolds Plantation|\n|Crow's Lake Inc.|\n|Farmington Depot Gallery|\n|University President's House|\n|Historic Monticello|\n|Pine Hills Golf Club|\n|Old Church & Kitty's Cottage|\n|Hilton Garden Inn Athens|\n|Budget Inn-Elberton|\n|Emmanuel Episcopal Church|\n|Davis Edwards House|\n|Broad River Wildlife Management Area|\n|Pendergrass Flea Market|\n|Oconee Forest Park|\n|University of Georgia Performing Arts Center|\n|Oxford College Walking Tour|\n|Featherwoods B&B|\n|Comfort Inn-Jefferson|\n|Elberton Fairgrounds|\n|Thompson Mills Forest|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table860"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|County\/Tribal Government|\n|---|\n|Spencer|\n|Mingo|\n|Benton|\n|Moore|\n|Leake|\n|Cocke|\n|Bradley|\n|Ventura|\n|Kodiak Island|\n|Coahoma|\n|Coshocton|\n|Archer|\n|San Luis Obispo|\n|Mitchell|\n|Washoe|\n|Tama|\n|Edwards|\n|Andrew|\n|Elliott|\n|Guilford|\n|Colusa|\n|Grayson|\n|Hitchcock|\n|Buchanan|\n|Cullman|\n|St. Louis|\n|Tipton|\n|Harlan|\n|Ottawa|\n|La Salle|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table861"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|PHYS_STATE|\n|---|\n|ME|\n|MD|\n|NH|\n|PR|\n|MS|\n|MN|\n|DE|\n|LA|\n|VI|\n|AK|\n|WA|\n|NC|\n|NJ|\n|CA|\n|OR|\n|NE|\n|GU|\n|NV|\n|AR|\n|SC|\n|IA|\n|VA|\n|AS|\n|CO|\n|MT|\n|WI|\n|HI|\n|IN|\n|MI|\n|AZ|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table862"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|CURP|\n|---|\n|AIBE811209HDFRNM03|\n|SESL791124HMCRLS04|\n|IAGA790111MDFSZL06|\n|TAMM821206HMCVRG00|\n|BERM890216HTSNMN09|\n|SASJ810323MMCNRN06|\n|AAPA901109MGRBLD00|\n|GUFL640421HMCTLS08|\n|TOTB771121MDFRVR00|\n|LALF610304HDFGRR02|\n|LOFJ670509HDFRLR06|\n|MAHJ800711HMCNRN01|\n|LONR850712HDFPGL03|\n|AIEL640817MJCVST01|\n|GOCC860415MDFNSR04|\n|GOAL791012HMCNLS09|\n|SACM620712HMCNCR02|\n|GANC791107HMCRXR01|\n|AAPB830322MDFLRR09|\n|AUHI730713HMCCRN07|\n|LOFC791124HMCRLR03|\n|REDM670111MMCNMR06|\n|MEOM741009MMCNRR00|\n|JUAH880104HDFRRC08|\n|ZEOV840228HDFNRC14|\n|ROJJ860319MMCJRS02|\n|REHC820904MMCYRR00|\n|MEHJ900421HHGNRN03|\n|VAHB710331HMCLRL02|\n|VEZN790210HMSRXP00|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table863"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|GEOGR_AREA_ID|\n|---|\n|9A18|\n|2020|\n|9A15|\n|9L04|\n|9E09|\n|9A29|\n|3000|\n|9A19|\n|1033|\n|2301|\n|1011|\n|9A31|\n|9A39|\n|1009|\n|9A16|\n|9A12|\n|2110|\n|9A30|\n|1013|\n|9A13|\n|1007|\n|9A25|\n|9A27|\n|9A22|\n|9P02|\n|9A36|\n|9A26|\n|9A37|\n|9A38|\n|2400|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table864"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|vej_navn|\n|---|\n|Pingels Alle|\n|Hedevej|\n|Smedegade|\n|Gadevejen|\n|Brogade|\n|Lyrsbyskov|\n|Bukkevadsvejen|\n|Olsgade|\n|Svanekegade|\n|Vallevadsvej|\n|Kirkevej|\n|Melstedvej|\n|Bohnebakken|\n|Gottegade|\n|Ringebyvejen|\n|Kredsen|\n|Pedersker Hovedgade|\n|Ved Parken|\n|I Pilene|\n|Tangvej|\n|Paradisgade|\n|Gadebyvej|\n|Fyrvej|\n|Sigtevej|\n|Petersborgvej|\n|Larsegade|\n|Rapsmarken|\n|Bedegadevej|\n|Eskesvej|\n|Mortensgade|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table865"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|FN|\n|---|\n|JAYLA|\n|JESSICA|\n|AARON|\n|GAVIN|\n|VICTORIA|\n|DANIEL|\n|JACOB|\n|GRACIE|\n|AUSTIN|\n|GABRIEL|\n|ELIJAH|\n|RILEY|\n|PEYTON|\n|ALEXIS|\n|BRYCE|\n|MEGAN|\n|CADEN|\n|AUBREY|\n|NOLAN|\n|ISABEL|\n|RYLEE|\n|TAYLOR|\n|SAVANNAH|\n|ALIVIA|\n|TYLER|\n|BRANDON|\n|LEAH|\n|KAYLA|\n|COOPER|\n|HAILEY|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table866"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|BUREAU|\n|---|\n|Architect of the Capitol|\n|Government Accountability Office|\n|Botanic Garden|\n|Capitol Police|\n|United States Court of Appeals for the Federal Circuit|\n|Judicial Retirement Funds|\n|United States Sentencing Commission|\n|House of Representatives|\n|Supreme Court of the United States|\n|Federal Judicial Center|\n|Administrative Office of the United States Courts|\n|Senate|\n|Congressional Budget Office|\n|United States Tax Court|\n|Joint Items|\n|Legislative Branch Boards and Commissions|\n|Courts of Appeals District Courts and other Judicial Services|\n|United States Court of International Trade|\n|Library of Congress|\n|Office of Compliance|\n|Government Printing Office|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table867"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Term Descr Long|\n|---|\n|2010 Fall|\n|2013 Fall|\n|2012 Fall|\n|2009 Fall|\n|2011 Fall|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table868"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Customer|\n|---|\n|MAISD|\n|QUICK|\n|VICTE|\n|TRADH|\n|SIMOB|\n|BLAUS|\n|OTTIK|\n|VAFFE|\n|HILAA|\n|LAMAI|\n|BOTTM|\n|OCEAN|\n|OLDWO|\n|FRANK|\n|VINET|\n|NORTS|\n|BLONP|\n|QUEDE|\n|RATTC|\n|PRINI|\n|ERNSH|\n|SAVEA|\n|LONEP|\n|WOLZA|\n|CHOPS|\n|RICSU|\n|WARTH|\n|RICAR|\n|GOURL|\n|RANCH|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table869"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Entity Name|\n|---|\n|PROMOX SPA|\n|Cargill PLC|\n|Alcoholes Oliva S.A.|\n|Hokochimie Sarl|\n|Kenya Pyrethrum Information Company GmbH & Co. KG|\n|Bondalti Chemicals S.A|\n|CAFFARO BRESCIA S.r.l|\n|PZ Cussons (International) Ltd.|\n|SMA Mineral AS|\n|Belchim Crop Protection NV (Acting for Natong Shenyu Green Medicine Co. Ltd)|\n|saniXTREME GmbH & Co KG|\n|Pigeon chaux|\n|Ing. Conti Vecchi SpA|\n|Biomca Quimica SL|\n|Sanitized Europe S.a.r.l.|\n|Lafarge Tarmac Trading Limited|\n|M2i Biocontrol|\n|Ecas Quattro Srl|\n|evonic peroxid gmbh|\n|Sumitomo Chemical (UK) PLC|\n|Diversey Europe Operations BV|\n|GRACE Silica GmbH|\n|Albemarle Europe SPRL|\n|Calcis Warstein GmbH & Co. KG|\n|evonik peroxid gmbh|\n|GHC Gerling Holz & Co. Handels GmbH|\n|Electroquimica del Noroeste|\n|Lubrizol Deutschland GmbH|\n|Carmeuse SA|\n|Scandic Distilleries S.A.|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['evonik peroxid gmbh', 'evonic peroxid gmbh']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table87"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Offense|\n|---|\n|250|\n|240|\n|23H|\n|23G|\n|35A|\n|26B|\n|26A|\n|90J|\n|11D|\n|90E|\n|40A|\n|120|\n|90D|\n|23F|\n|220|\n|13B|\n|13C|\n|90Z|\n|90G|\n|35B|\n|280|\n|23C|\n|90C|\n|100|\n|11C|\n|23D|\n|23A|\n|26C|\n|90F|\n|13A|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table870"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|APE_PATERNO|\n|---|\n|TELLEZ|\n|BABILONIA|\n|PINEDA|\n|VELASQUE|\n|AYALA|\n|ROSARIO|\n|TEVES|\n|VELASQUEZ|\n|CHOQUECONDO|\n|SERGO|\n|CAHUADA|\n|LIMAHUAY|\n|SUASACA|\n|LLANOS|\n|CHEVARRIA|\n|DE LA CRUZ|\n|SUYO|\n|SANCHEZ|\n|DURAN|\n|MENDOZA|\n|ALVARADO|\n|BERNILLA|\n|QUIROZ|\n|ARPASI|\n|BARREDA|\n|IBEROS|\n|HUARACHI|\n|KANA|\n|CUELLAR|\n|VALDIVIESO|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['VELASQUEZ', 'VELASQUE']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table88"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Fagbetegnelse|\n|---|\n|Produktudvikling|\n|Statistik|\n|Ledelse og samarbejde i de frie skoler|\n|Videnskabsfilosofi og designmetode|\n|Kvalitetsdeltagelse|\n|Brugervenlighed og grafisk design|\n|Forretningsmodeller|\n|Markeds- og kulturanalyse|\n|Afgangsprojekt FAMILIETERAPI|\n|Ledelse af marketing og ekstern kommunikation|\n|Afgangsmodul RUSMIDDEL|\n|Krisekommunikation|\n|Patientologi|\n|Andelsbolig- og ejerforeninger|\n|Supply chain management|\n|Lovgivning og organisation|\n|Problem og Change management|\n|Database|\n|Ledelse der skaber social kapital|\n|Sundhedsindsatser og -begreber i praksis|\n|Systemintegration|\n|Sikkerhed|\n|Indledende kursus i matematik og fysik|\n|Databaser|\n|Procesledelse|\n|Teorier og metoder i det boligsociale arbejde|\n|Organisation styring rammer og samarbejde i socialt arbejde|\n|Produktionsledelse af tv og video|\n|E-handel 2: Optimering af salg og indtjening|\n|Bioorganisk kemi|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Databaser', 'Database']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table89"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Shop Name|\n|---|\n|Belle Vue Convenience|\n|Belvoir Filling Station|\n|Carols Corner Shop|\n|Express Food Center|\n|T and A Superstore|\n|Westmorland Motorway Services Ltd|\n|Brackens News|\n|Bourne Stores|\n|South Farm Food and Wine|\n|New Kwiki Mart|\n|West Wellow Stores|\n|Dhesi Mini Market|\n|Sharma Bros Newsagents Costcutter|\n|Foodfare|\n|Navsarka t\/a Mace|\n|Llanilar Village Stores|\n|New Road Food and Wines|\n|Costcutter|\n|Brockley Farm Shop|\n|Morgans Local Shop|\n|Jay's Costcutter Supermarket|\n|M N Akmal Stores|\n|Poltonhall Stores|\n|Asif Bros|\n|Hart of the Triangle|\n|Costcutters|\n|North |Stores|\n|Family Friends (Mace)|\n|Northland Stores|\n|Fair Deal Stores|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Costcutter', 'Costcutters']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table9"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|COMPONENT_TITLE|\n|---|\n|Non Verbal Communications|\n|Food Choice and Health|\n|Emergency Lighting Fundamentals|\n|Potato Production and Storage|\n|Animal Production Science|\n|Deep Water Pool Lifeguarding Skills|\n|Non Verbal Communication|\n|Behavioural Studies|\n|Boat Angling|\n|Seafood Hygiene Management|\n|Computer 3D Modelling and Animation|\n|Personal Water Safety|\n|Farm Safety and Farm Assurance|\n|Compliance Management|\n|Grass Management|\n|Literary Visual and Performing Arts|\n|Health Related Cleaning Skills|\n|Animal Grooming|\n|Craft - Toolmaking|\n|Grief Awareness|\n|Farm Business Planning|\n|Meat and Meat Products|\n|Suicide Awareness|\n|Word Processing|\n|Positive Behavioural Support|\n|Sports Psychology|\n|Person Centred Focus to Disability|\n|Shellfish Processing Techniques|\n|Digital Imaging|\n|Music Performance|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Non Verbal Communication', 'Non Verbal Communications']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table90"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|County|\n|---|\n|Sheboygan County|\n|Coweta County|\n|Philadelphia County|\n|Logan County|\n|Goodhue County|\n|Caldwell County|\n|Sweetwater County|\n|Amador County|\n|St. Clair County|\n|Riverside County|\n|Etowah County|\n|Kanawha County|\n|Becker County|\n|Loudoun County|\n|Indian River County|\n|Powder River County|\n|Jo Daviess County|\n|Pearl River County|\n|Mille Lacs County|\n|Bibb County|\n|Bradford County|\n|Muscogee County|\n|Dauphin County|\n|Loudon County|\n|Highlands County|\n|Cascade County|\n|Uinta County|\n|Crow Wing County|\n|Brevard County|\n|Rock Island County|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Loudon County', 'Loudoun County']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table91"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Description of the services included in the tariff filing |\n|---|\n|Access Service Tariff IURC No. T-3|\n|Changes to late payment penalty|\n|Basic Telecommunication Services Lifeline Tariff|\n|Intrastate Access Service Tariff Revisions  (T-4)|\n|Access Tariff|\n|Tariff No. T-2|\n|Competitive Access Provider Services Tariff|\n|Facilities for Intrastate Access|\n|Wholesale Tariffs|\n|Intrastate Access Service Tariff Revisions (T-7)|\n|Intrastate Access Services|\n|Changes to late payment penalty and deposit interest rates|\n|Increase Toll Service Monthly Recurring charge for Long Distance|\n|Access Services Tariff IURC No. 1|\n|intrastate access service tariff revisions|\n|Switched Access Services|\n|Carrier Common Line Rates|\n|Lifeline Provisions|\n|Interstate Access Service Tariff Revisions|\n|Non-Access  Reciprocal Compensation Arrangements (T-6)|\n|T-7 Tariff|\n|Dedicated Access Services Detariffing|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['intrastate access service tariff revisions', 'intrastate access service tariff rivisions']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table92"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Marca|\n|---|\n|OLIVETI|\n|MABE|\n|SKB|\n|FURMAN|\n|SURTEK|\n|ACTEK|\n|PEGASUS|\n|ROSCO|\n|XEROX|\n|ACER|\n|TRIPP-LITE|\n|TOSHIBA|\n|IMAC|\n|CROWN|\n|ENCORE|\n|HUSQVARNA|\n|SAMSUNG|\n|COOL CONFORT|\n|CANON|\n|WHITE|\n|NOKIA|\n|SAMSUMG|\n|SOYO|\n|EVERCOLD|\n|LENOVO|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['SAMSUNG', 'SAMSUMG']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table93"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Columna2|\n|---|\n|LOZANO DE LIRA|\n|CABRERA MANUEL|\n|ESPARZA DEL RIO|\n|LARA RODRIGUEZ|\n|RUELAS RAMOS|\n|GUERRA RODRIGUEZ|\n|DE LOS REYES MEJIA|\n|VELASCO GUTIERREZ|\n|VELASCO OVANDO|\n|ALBA MACIAS VALADEZ|\n|orozco martines|\n|orozco martinez|\n|IRETA MC PHERSON|\n|TRUJILLO VILCHIS|\n|MARTIN DEL CAMPO GARCIA|\n|ANDRADE SERAFIN|\n|CANSECO GARCIA|\n|RAMIREZ ARCIBAR|\n|PALACIOS VELAZQUEZ|\n|DELGADILLO ALONSO|\n|VELASCO JIMENEZ|\n|GUZMAN COLIS|\n|GAMEZ HERRERA|\n|CRUZ SOTO|\n|CASTILLO CHAVEZ|\n|AGUILAR MONTERRUBIO|\n|MORAN HERRERA|\n|IRACHETA GAMEZ|\n|CHAVEZ TAPIA|\n|MEDINA OCHOA|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['orozco martines', 'orozco martinez']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table94"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|LAST_NAME|\n|---|\n|BOCXE|\n|CHASE|\n|PITFIELD|\n|QUARTERMAN|\n|WATSON|\n|RICHARDSON|\n|Stoll|\n|WRIGHTSON|\n|POLLARD|\n|MCDERMOTT|\n|HUTCHEN|\n|KINNAIRD|\n|McDERMOT|\n|CHAPMAN|\n|GARAD|\n|BONSOR|\n|CARR|\n|POWER|\n|PHILLIPS|\n|GABRIELSEN|\n|WAUGH|\n|LOMAS|\n|HAGAN|\n|PEISLEY|\n|COULIN|\n|CASEY|\n|VOZZA|\n|NICKALLS|\n|FLOOD|\n|GEER|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['McDERMOT', 'MCDERMOTT']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table95"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Agency|\n|---|\n|Metaline Police Department|\n|Covington Police Department|\n|Metaline Falls Police Department|\n|Colville Police Department|\n|Clallam County Sheriff's Office|\n|Department of Natural Resources|\n|Renton Police Department|\n|Kittitas County Sheriff's Office|\n|Prosser Police Department|\n|Edmonds Police Department|\n|Brewster Police Department|\n|Skamania County Sheriff's Office|\n|Forks Police Department|\n|Republic Police Department|\n|Washington State Patrol|\n|Washington State Parks & Recreation Commission|\n|Chelan Police Department|\n|North Bonneville Police Department|\n|Department of Natural Resouces|\n|Clyde Hill Police Department|\n|Federal Way Police Department|\n|Washington State University Police Department|\n|Maple Valley Police Department|\n|La Push Tribal Police Department|\n|Winlock Police Department|\n|College Place Police Department|\n|Grant County Sheriff's Office|\n|Rock Island Police Department|\n|Redmond Police Department|\n|Vancouver Police Department|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Department of Natural Resouces', 'Department of Natural Resources']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table96"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Term\u00e9kcsoport|\n|---|\n|Sensing|\n|Small Switches|\n|Software|\n|Motion & Drives|\n|Switches|\n|Sofware|\n|Switching components|\n|Control components|\n|Automation systems|\n|Safety|\n|Connectors|\n|Quality control & Inspection|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Software', 'Sofware']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table97"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Column8|\n|---|\n|Arnolde|\n|Adkisson|\n|Doss|\n|jefferd|\n|duguid|\n|Lovewell|\n|Chase|\n|Schneider|\n|Slavik|\n|Catone|\n|Essenburg|\n|Linn|\n|Rue|\n|Schreiber|\n|Verga|\n|Kipp|\n|Tabor|\n|Jeroski|\n|Toomajian III|\n|Midthun|\n|Bridges|\n|Ross|\n|Meyers|\n|brodbeck|\n|LaLonge|\n|Day|\n|Tyson|\n|Horn|\n|zona|\n|Arnold|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Arnolde', 'Arnold']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table98"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|County|\n|---|\n|Esmeralda|\n|McIntosh|\n|Oscoda|\n|Lowndes|\n|Noxubee|\n|Deuel|\n|Orleans|\n|Tangipahoa|\n|Meagher|\n|Wayne|\n|Kent|\n|Kennebec|\n|Morrow|\n|Genesee|\n|Carbon|\n|Smyth|\n|Umatilla|\n|Florence|\n|Valley|\n|Evangeline|\n|Harrison|\n|Lyman|\n|Androscoggin|\n|Routt|\n|Lynman|\n|Stone|\n|Turner|\n|Jackson|\n|McDowell|\n|Monroe|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Lyman', 'Lynman']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"Spreadsheets-Real-ED","table":"Table99"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Trade|\n|---|\n|Homes & Household Goods|\n|Building & Maintentance|\n|Condiments|\n|Corsetiere & Lingerie Specialists|\n|Horticulture|\n|Transport & Storage|\n|Fancy Goods|\n|Fine Jewelry, Watches and Luxury Goods|\n|Cosmetics, health and beauty|\n|Groceries and provisions|\n|Manufacturers and Suppliers of Audio Equipment|\n|Tea and Coffee|\n|Scotch Whisky|\n|Electronics|\n|Condiment|\n|Transportation and vehicles|\n|Hotel|\n|Gate Manufacturers|\n|Consumer products|\n|Manufacturers of Toiletry Products|\n|Jewellers, Gold\/Silversmiths\/Clockmakers|\n|Luxury Bespoke Men's Clothier|\n|Self Adhesive Protection Film|\n|Beers|\n|building & maintentance|\n|building & maintenance|\n|Luxury goods|\n|Tea|\n|Antiques, Art & Conservation|\n|Office and Commercial Cleaning|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['building & maintenance', 'building & maintentance']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table1"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Association|\n|---|\n|Golden Globe Awards|\n|Satellite Awards|\n|Kids' Choice Awards|\n|People's Choice Award|\n|People's Choice Awards|\n|Black Reel Awards|\n|Glamour Awards|\n|2016 Premios Juventud|\n|Screen Actors Guild|\n|NAACP Image Awards|\n|ALMA Awards|\n|Golden Globe Award|\n|Critics' Choice Television Awards|\n|Primetime Emmy Awards|\n|Imagen Foundation Awards|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Golden Globe Awards', 'Golden Globe Award']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table10"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Constituency|\n|---|\n|Mazandaran Province|\n|South Khorasan Province|\n|Khuzestan Province|\n|Sistan & Baluchestan Province|\n|Razavi Khorasan Province|\n|Semnan Province|\n|Chaharmahal & Bakhtiari Province|\n|Qazvin Province|\n|Kermanshah Province|\n|Isfahan Province|\n|Gilan Province|\n|North Khorasan Province|\n|Hormozgan Province|\n|Markazi Province|\n|Hamedan Province|\n|Bushehr Province|\n|Ilam Province|\n|Zanjan Province|\n|Luristan Province|\n|East Azerbaijan Province|\n|Fars Province|\n|Qom Province|\n|Kerman Province|\n|Tehran Province|\n|Kurdistan Province|\n|Kohgiluyeh & Boyerahmad Province|\n|Golestan Province|\n|West Azerbaijan Province|\n|Ardabil Province|\n|Alborz Province|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table100"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|1948(FRA)|\n|---|\n|SF|\n|1R|\n|F|\n|A|\n|2R|\n|W|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table101"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Team|\n|---|\n|Southern Mississippi:|\n|Tennessee|\n|Morehead State:|\n|Southern Miss|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table102"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Home team|\n|---|\n|Squires Gate|\n|Sandbach United|\n|Widnes|\n|Winsford United|\n|West Didsbury & Chorlton|\n|St Helens Town|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table103"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Category|\n|---|\n|L4|\n|KOR|\n|EOS|\n|THM|\n|PHO|\n|URS|\n|NYS|\n|L5|\n|HEN|\n|FLO|\n|MAR|\n|AMO|\n|APO|\n|KAR|\n|MIS|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table104"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name|\n|---|\n|Heinrich Timm|\n|Heinz Thieme|\n|August Thiele+|\n|Arno Taulien|\n|Heinrich Tummer|\n|Heinrich Tromm|\n|Fritz Tadje|\n|Paul Trabandt|\n|Kurt Tiesler|\n|Dr. Egon Treeck|\n|Werner Trey|\n|Rolf Thomsen+|\n|Hannes (Johann) Trenke|\n|Rudolf Trenn|\n|Johann Thaler|\n|Werner Thierfelder|\n|Dr. Ernst-Heinrich Thomsen|\n|Hermann Tietz|\n|Herbert Tischendorf|\n|Walter Tank|\n|Georg Thumbeck|\n|Adolf-Hilmar von Tippelskirch|\n|Wilhelm Trabandt|\n|Christian Tychsen+|\n|Fritz Tegtmeier|\n|Werner Thofern|\n|Hans Theilen|\n|Harry Tech|\n|Gottfried Tornau|\n|Karl-Heinz Tesch|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table105"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Title|\n|---|\n|Scooby-Doo and Looney Tunes Cartoon Universe: Adventure|\n|My Friend Scooby-Doo!|\n|Scooby-Doo! Mystery of the Fun Park Phantom|\n|Scooby-Doo|\n|Scooby-Doo (based on the 2002 feature film)|\n|Scooby-Doo's Maze Chase|\n|Scooby-Doo 2: Monsters Unleashed (based on the 2004 feature film)|\n|Scooby-Doo! Unmasked|\n|Scooby-Doo Case Files: Scooby-Doo Case File Number 1: The Glowing Bug Man, Scooby-Doo Case File Number 2: The Scary Stone Dragon, and Scooby-Doo Case File Number 3 Frights, Camera, Mystery!|\n|Scooby-Doo! Classic Creep Capers|\n|Scooby-Doo and Scrappy-Doo|\n|Scooby-Doo! First Frights|\n|Scooby-Doo Mystery|\n|Scooby-Doo and the Cyber Chase|\n|Scooby-Doo! and the Spooky Swamp|\n|Scooby-Doo! Mystery Mayhem|\n|Lego Dimensions|\n|Scooby-Doo! Mystery Adventures: Scooby-Doo: Showdown in Ghost Town, Scooby-Doo: Phantom of the Knight, and Scooby-Doo: Jinx at the Sphinx|\n|Scooby-Doo! Who's Watching Who?|\n|Scooby-Doo! Night of 100 Frights|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table106"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Common name|\n|---|\n|American bittern|\n|Great blue heron|\n|Green heron|\n|Cattle egret|\n|Tricolored heron|\n|Black-crowned night heron|\n|Great egret|\n|Snowy egret|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table107"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Country|\n|---|\n|Grenada|\n|Sri Lanka|\n|Morocco|\n|Jamaica|\n|Zimbabwe|\n|South Africa|\n|Malaysia|\n|Antigua and Barbuda|\n|India|\n|Saint Lucia|\n|Netherlands|\n|Saint Kitts and Nevis|\n|New Zealand|\n|Northern Ireland|\n|Canada|\n|Australia|\n|United Arab Emirates|\n|Wales|\n|Pakistan|\n|Guyana|\n|Trinidad and Tobago|\n|Barbados|\n|Scotland|\n|England|\n|Bangladesh|\n|Dominica|\n|Ireland|\n|Kenya|\n|Singapore|\n|Saint Vincent and the Grenadines|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table108"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discoverer(s)|\n|---|\n|P. G. Comba|\n|N. Danzl|\n|SCAP|\n|R. A. Tucker|\n|T. Urata|\n|W. Bickel|\n|E. W. Elst|\n|J. Broughton|\n|Santa Lucia Obs.|\n|NEAT|\n|Spacewatch|\n|G. Forti, M. Tombelli|\n|P. Pravec|\n|Y. Shimizu, T. Urata|\n|I. P. Griffin|\n|F. B. Zoltowski|\n|T. Kobayashi|\n|LINEAR|\n|M. Cavagna, P. Ghezzi|\n|ODAS|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table109"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Champion|\n|---|\n|Roger Harrison|\n|Tim Schenken|\n|Reg Hunt|\n|Warren Brown|\n|peter holinger|\n|Stan Keen|\n|peter hollinger|\n|Paul England|\n|Gary West|\n|Ian Judd|\n|Malcolm Oastler|\n|Frank Kleinig|\n|John Davies|\n|Dick White|\n|Peter Hollinger|\n|Jack Brabham|\n|Tim Edmondson|\n|Brett Hayward|\n|Peter Whitehead|\n|John Barraclough|\n|Bill Patterson|\n|Arthur Wylie|\n|Ivan Tighe|\n|Lex Davison|\n|Garry McFadyen|\n|Murray Bingham|\n|Keith Martin|\n|Kym Rohrlach|\n|Peter Gumley|\n|John Crouch|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['peter hollinger', 'peter holinger']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table11"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Bronze|\n|---|\n|Madoka Hisagae Japan|\n|Japan|\n|Kazakhstan|\n|Sakura Kaneko Japan|\n|Sabrina Lui Hong Kong|\n|Hong Kong|\n|Liu Yuan China|\n|South Korea|\n|Kim Na-rae South Korea|\n|Zhang Jiangqing China|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table110"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Award|\n|---|\n|Most Desirable Female|\n|BMI Film Music Award|\n|Best Supporting Actor|\n|Best Visual Effects|\n|Best Villain|\n|Best Kiss|\n|Best Director|\n|Worst Supporting Actor|\n|Best Fantasy Film|\n|Best Costumes|\n|Best Makeup Artist|\n|Best Make-Up|\n|Best Dramatic Presentation|\n|Best Special Effects|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table111"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Publisher\/ Developer|\n|---|\n|Traveller's Tales Warner Bros. Interactive Entertainment|\n|Warner Bros. Interactive Entertainment WayForward Technologies|\n|Elite Systems Gargoyle Games|\n|Mattel Electronics|\n|A2M THQ|\n|The Learning Company|\n|Hi-Tec Software PAL Developments|\n|Torus Games Warner Bros. Interactive Entertainment|\n|THQ|\n|Warner Bros. Interactive Entertainment|\n|Sunsoft Acclaim Entertainment|\n|THQ Microsoft|\n|Engineering Animation, Inc. SouthPeak Games|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table112"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Title|\n|---|\n|The Haunted World of El Superbeasto|\n|Grind|\n|Sleeping Dogs Lie|\n|Eulogy|\n|Ergo Proxy|\n|Scooby-Doo! Abracadabra-Doo|\n|Pom Poko|\n|Fantastic Four: Rise of the Silver Surfer|\n|Hell and Back|\n|The Five-Year Engagement|\n|Sorority Boys|\n|Cake Boy|\n|The Wedding Singer|\n|Dumb and Dumberer: When Harry Met Lloyd|\n|Desperate But Not Serious|\n|Run Ronnie Run!|\n|Sex Drive|\n|Uncle Nick|\n|Knights of Badassdom|\n|Lloyd the Conqueror|\n|The Devil's Rejects|\n|Spy School|\n|Adventures in Homeschooling|\n|Brother Bear|\n|Surf's Up|\n|Sarah Silverman: Jesus Is Magic|\n|Captain Underpants: The First Epic Movie|\n|Undead or Alive|\n|Smiley Face|\n|The Independent|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table113"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Party|\n|---|\n|Independent|\n|Majority|\n|Democrat|\n|Labour|\n|Reform|\n|Informal votes|\n|Turnout|\n|Registered electors|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table114"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Pos.|\n|---|\n|Midfielder|\n|Midfielder\/Striker|\n|Left\/right winger|\n|Deep-lying forward|\n|Right Winger|\n|Striker|\n|Ultras|\n|Right fullback|\n|Right Back|\n|Forward\/Winger|\n|Midfielder Forward|\n|Left fullback|\n|Goalkeeper|\n|Forward|\n|Centre back|\n|Defender|\n|Defender\/Midfielder|\n|Winger|\n|Sweeper|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table115"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Event|\n|---|\n|team sprint|\n|individual sprint|\n|team pursuit|\n|Keirin|\n|Omnium|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table116"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Chart (1975-76)|\n|---|\n|Canadian RPM Albums Chart|\n|New Zealand Albums Chart|\n|U.S. Billboard 200|\n|Dutch Mega Albums Chart|\n|UK Albums Chart|\n|Norwegian VG-lista Albums Chart|\n|Swedish Albums Chart|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table117"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Category|\n|---|\n|LOR|\n|DOR|\n|WAT|\n|EOS|\n|EUT|\n|L4|\n|GEF|\n|NYS|\n|HYG|\n|PHO|\n|URS|\n|KOR|\n|APO|\n|THM|\n|EUN|\n|V|\n|H|\n|FLO|\n|L5|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table118"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Driver|\n|---|\n|Vitantonio Liuzzi|\n|Anthony Davidson|\n|Rubens Barrichello|\n|Jarno Trulli|\n|Giancarlo Fisichella|\n|Sakon Yamamoto|\n|Takuma Sato|\n|Alexander Wurz|\n|Adrian Sutil|\n|Sebastian Vettel|\n|Robert Kubica|\n|Fernando Alonso|\n|Ralf Schumacher|\n|Jenson Button|\n|Nick Heidfeld|\n|Lewis Hamilton|\n|Heikki Kovalainen|\n|Felipe Massa|\n|David Coulthard|\n|Mark Webber|\n|Nico Rosberg|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table119"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name of place|\n|---|\n|Lime|\n|Lincoln|\n|Lato|\n|Lawley|\n|Lois Spring|\n|Loflin|\n|Lakeside Acres|\n|Long Island|\n|Lacon|\n|Laurendine|\n|Loree|\n|Lexington|\n|Lime Rock|\n|Loveless Park|\n|LaFayette|\n|Loosier|\n|Leonard|\n|Lynn|\n|Lola City|\n|Little Texas|\n|Little New York|\n|Leroy|\n|Lewis|\n|Lawrence|\n|Lim Rock|\n|Lindsey|\n|Lovelace Crossroads|\n|Lakeside Highlands|\n|Lock Three|\n|Lake Highlands|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Lime Rock', 'Lim Rock']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table12"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Portfolio|\n|---|\n|Social Affairs (Vice President)|\n|Internal Market and Services|\n|Personnel and Administration|\n|Research, Innovation and Science|\n|Social Affairs and Employment|\n|Agriculture and Rural Development|\n|Taxation, Consumer Affairs, Transport and Parliamentary Relations|\n|Competition, Social Affairs, Education and Training|\n|Health and Consumer Protection|\n|Social Affairs, Employment, Immigration, Home Affairs and Justice|\n|Competition and Parliamentary Relations|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table120"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|License|\n|---|\n|GPLv3|\n|GPLv2|\n|?|\n|BSD|\n|GPL|\n|Freemium|\n|Freeware|\n|Proprietary|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table121"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Preceding station|\n|---|\n|Terminus|\n|Linndale toward Toledo|\n|Toledo toward Chicago|\n|Linndale toward Cincinnati|\n|East 55th Street toward Pymatuning|\n|Linndale toward Chicago|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table122"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Party|\n|---|\n|Turnout|\n|Labour hold|\n|Liberal Democrat|\n|Labour|\n|Conservative|\n|UKIP|\n|Majority|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table123"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Player|\n|---|\n|Jason Platt (D)|\n|Craig Kowalski (G)|\n|Chad Wiseman (LW)|\n|Pasi Saarinen (D)|\n|Evgeni Bumagin (RW)|\n|Reinhard Divis (G)|\n|Eric Johansson (C)|\n|Eric Bowen (RW)|\n|Flavien Conne (C)|\n|Janis Sprukts (C)|\n|Warren McCutcheon (C)|\n|Dan Eberly (D)|\n|Todd Jackson (RW)|\n|Zdenek Kutlak (D)|\n|Adam Berkhoel (G)|\n|Steven Crampton (RW)|\n|Lubomir Sekeras (D)|\n|Matthew Sommerfeld (LW)|\n|Sami Venalainen (RW)|\n|Samu Isosalo (RW)|\n|Darryl Bootland (RW)|\n|Dan Welch (RW)|\n|Regan Kelly (D)|\n|Sean McMorrow (D)|\n|Evan Nielsen (D)|\n|Nathan Barrett (C)|\n|Joni Puurula (G)|\n|Alexander Shinkar (RW)|\n|Pete Zingoni (C)|\n|David Hajek (D)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table124"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discoverer(s)|\n|---|\n|LONEOS|\n|J. Broughton|\n|LINEAR|\n|R. A. Tucker|\n|F. B. Zoltowski|\n|Y. Shimizu, T. Urata|\n|P. G. Comba|\n|Spacewatch|\n|CSS|\n|T. Okuni|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table125"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|TV|\n|---|\n|ESPNU|\n|CSS|\n|CBSCS|\n|SEC Network|\n|ESPN|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table126"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Chart (2001-2002)|\n|---|\n|US Dance Club Songs (Billboard)|\n|Belgium (Ultratop 50 Flanders)|\n|US Hot R&B\/Hip-Hop Songs (Billboard)|\n|France (SNEP)|\n|Switzerland (Schweizer Hitparade)|\n|Germany (Official German Charts)|\n|Australia (ARIA)|\n|UK Singles (Official Charts Company)|\n|New Zealand (Recorded Music NZ)|\n|Netherlands (Dutch Top 40)|\n|Sweden (Sverigetopplistan)|\n|US Billboard Hot 100|\n|UK R&B (Official Charts Company)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table127"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Title|\n|---|\n|\"Traveler\"|\n|\"Moment Circle\"|\n|\"Shadow Of The Moon\"|\n|\"Solar Eclipse\"|\n|\"Jupiter's Beam\"|\n|\"Valley Of The Spirit\"|\n|Final Call|\n|\"After Glow\"|\n|\"Yo-En\"|\n|\"Wind From The Desert\"|\n|\"Whispering Shore\"|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table128"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Nationality|\n|---|\n|Slovakia|\n|Austria|\n|Czech Republic|\n|Finland|\n|Latvia|\n|Kazakhstan|\n|Russia|\n|Sweden|\n|United States|\n|Switzerland|\n|Canada|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table129"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Poll source|\n|---|\n|Fox News|\n|Rasmussen Reports|\n|Hays Research\/AFL-CIO|\n|Magellan Strategies|\n|CNN\/ORC|\n|Basswood Research|\n|CBS News\/NYT\/YouGov|\n|Moore Information*|\n|Hellenthal & Associates|\n|Harstad Strategic Research|\n|Public Policy Polling|\n|Harper Polling|\n|CBS News\/New York Times|\n|Rassmussen Reports|\n|Ivan Moore|\n|Dittman|\n|Marc Hellenthal|\n|Hickman Analytics|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Rasmussen Reports', 'Rassmussen Reports']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table13"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|reliability\/include\/delete|\n|---|\n|not notable|\n|no reliable source|\n|notable|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table130"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|1946(FRA)|\n|---|\n|QF|\n|3R|\n|SF|\n|A|\n|F|\n|W|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table131"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Player|\n|---|\n|Sherwin Stanley|\n|Chris Stowe|\n|Kris Newby|\n|Martin Tuohy|\n|Billy Holland|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table132"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discovery(Site)|\n|---|\n|Suno|\n|Kitt Peak|\n|Palomar|\n|RAS|\n|Catalina|\n|Anderson Mesa|\n|Mount Lemmon|\n|Socorro|\n|Junk Bond|\n|Kitami|\n|Needville|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table133"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discovery(Site)|\n|---|\n|Kuma Kogen|\n|Kushiro|\n|Kiyosato|\n|Palomar|\n|Susono|\n|Chiyoda|\n|Kitami|\n|Karasuyama|\n|Nauchnij|\n|Dynic|\n|Oizumi|\n|La Silla|\n|Yorii|\n|Fujieda|\n|Geisei|\n|Tautenburg Observatory|\n|Bologna|\n|Oohira|\n|Siding Spring|\n|Anderson Mesa|\n|Yatsugatake|\n|Kitt Peak|\n|Bassano Bresciano|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table134"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Party|\n|---|\n|Majority|\n|Independent hold|\n|Conservative|\n|Green|\n|Independent|\n|Turnout|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table135"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Info, sales and certifications|\n|---|\n|Language:English released in: Sweden Format: CD Certification:|\n|Language: Swedish Released in: Sweden Certification: Gold|\n|Language:Swedish released in: Sweden Certification:|\n|Language: English Released in: Sweden, USA, Poland, China Certification: Platinum|\n|Language:English released in: Sweden Certification:|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table136"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Song (original artist)|\n|---|\n|\"Kheriyan De Naal\" (Shafqat Amanat Ali)|\n|\"Zinda Hoon\" (Faisal Kapadia)|\n|\"Haniya Dil Jaaniyan\" (Fariha Pervez)|\n|\"Har Zulm Tera Yaad Hai\" (Sajjad Ali)|\n|\"Kaho Na Kaho\" (Amir Jamal)|\n|\"Aasman Ko Chootay Jain\" (Ali Zafar)|\n|\"Sar Kiye Ye Pahar\" (Strings)|\n|\"Dupatta Mera Malmal Da\" (Hadiqa Kiyani)|\n|\"In Se Nain Mila\" (Najam Sheraz)|\n|\"Khwaab\" (Junoon)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table137"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Theme Deck Name|\n|---|\n|Kithkin Militia|\n|Elementals Path|\n|Merrow Riverways|\n|Boggart Feast|\n|Elvish Predation|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table138"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Driver|\n|---|\n|Mark Larkham|\n|Tomas Mezera|\n|John Faulkner|\n|Larry Perkins|\n|Craig Lowndes|\n|Jason Bargwanna|\n|Garth Tander|\n|Russell Ingall|\n|Mark Skaife|\n|Dean Crosswell|\n|John Briggs|\n|Steve Reed|\n|Kevin Heffernan|\n|Alan Jones|\n|Steven Johnson|\n|Paul Romano|\n|Tony Longhurst|\n|Wayne Gardner|\n|Simon Emerzidis|\n|Jason Bright|\n|Neil Crompton|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table139"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Category|\n|---|\n|Funniest Performance|\n|Best Stunt|\n|Best Bed Boy|\n|Best Bitch|\n|Soap's Biggest Bitch|\n|Best Newcomer|\n|Best Dramatic Performance|\n|Outstanding Achievement|\n|Funniest Male|\n|Best Affair|\n|Best Soap|\n|Best Young Actor|\n|Most Dramatic Storyline|\n|Funniest Star|\n|Best Couple|\n|Best Actress|\n|best bad boy|\n|Best Exit|\n|Best Show-Stopper|\n|Best Bad Girl|\n|best bed boy|\n|Lifetime Achievement|\n|Best Family|\n|Best Shock Twist|\n|Best Wedding|\n|Best Storyline|\n|Soap's Biggest Bad Guy|\n|Best Actor|\n|Best Actor in Soap|\n|Best British Soap|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['best bad boy', 'best bed boy']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table14"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Episode|\n|---|\n|\"Return of the Kings\"|\n|\"Dancing with Angels\"|\n|\"Hopeless\"|\n|\"Sticky Hands and a Walk on the Wild Side\"|\n|\"Pirates of the Care of Eden\"|\n|\"Sips, Sonnets, and Sodomy\"|\n|\"Checkpoint Joyce\"|\n|\"The Final Page, Part 2\"|\n|\"Daisy\"|\n|Hookers, Hookers, Hookers|\n|\"The Convergence Convergence\"|\n|\"Weekend at Peggy's\"|\n|\"Grab a Feather and Get in Line\"|\n|\"Rocket Man\"|\n|\"Uh Oh, It's Magic\"|\n|\"46 Minutes\"|\n|\"Go Hollywood\"|\n|\"And the Old Bike Yarn\"|\n|\"Eve's Boyfriend\"|\n|\"Molly's Birthday\"|\n|\"And the Psychic Shakedown\"|\n|\"The Expedition Approximation\"|\n|\"Con-Troversy\"|\n|\"Pilot\"|\n|\"White Trash\"|\n|\"When Haskell Met Sammy\"|\n|\"Victoria Can't Drive\"|\n|\"And the Near Death Experience\"|\n|\"The Evil King, Part 2\"|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table140"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Affix|\n|---|\n|cili-|\n|cycl-|\n|carp(o)-|\n|cerat(o)-|\n|cost-|\n|-cidal, -cide|\n|colp(o)-|\n|cervic-|\n|chol(e)-|\n|com-|\n|co-|\n|cata-|\n|-centesis|\n|-cele|\n|crani(o)-|\n|cyan(o)-|\n|chlor-|\n|coron(o)-|\n|cyt(o)-, -cyte|\n|cyph(o)-|\n|cutane-|\n|cox-|\n|cephal(o)-|\n|clast|\n|circum-|\n|clostr-|\n|capill-|\n|cornu-|\n|cortic(o)|\n|chrom(ato)-|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table141"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|1948(WIM)|\n|---|\n|2R|\n|4R|\n|A|\n|SF|\n|QF|\n|W|\n|F|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table142"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discoverer(s)|\n|---|\n|C.-I. Lagerkvist|\n|Boyden Obs.|\n|N. S. Chernykh|\n|Y. Shimizu, T. Urata|\n|L. V. Zhuravleva|\n|P. G. Comba|\n|T. Kobayashi|\n|L. Kohoutek|\n|E. F. Helin, S. J. Bus|\n|S. J. Bus|\n|C. J. van Houten, I. van Houten-Groeneveld, T. Gehrels|\n|L. Oterma|\n|ODAS|\n|LONEOS|\n|L. I. Chernykh|\n|L. G. Karachkina|\n|T. Okuni|\n|T. Urata|\n|NEAT|\n|R. Linderholm|\n|LINEAR|\n|H.-E. Schuster|\n|W. R. Cooney Jr., M. Collier|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table143"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discovery(Site)|\n|---|\n|Nauchnij|\n|Ojima|\n|Tautenburg Observatory|\n|Palomar|\n|Nyukasa|\n|Kiyosato|\n|Karasuyama|\n|Anderson Mesa|\n|Lake Tekapo|\n|Mauna Kea|\n|Kagoshima|\n|Kitami|\n|La Silla|\n|Cerro Tololo|\n|La Palma|\n|Kani|\n|Kushiro|\n|Yatsugatake|\n|Oizumi|\n|Geisei|\n|Harvard Observatory|\n|Caussols|\n|Siding Spring|\n|Yorii|\n|Dynic|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table144"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Third Round|\n|---|\n|Segal|\n|Coghlan|\n|Long|\n|Truman|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table145"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Duncan Hall Medalist(Club)|\n|---|\n|Wynnum Manly Seagulls|\n|Ipswich Jets|\n|Mackay Cutters|\n|Northern Pride|\n|Tweed Heads Seagulls|\n|Burleigh Bears|\n|Sunshine Coast Sea Eagles|\n|Souths Logan Magpies|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table146"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Event|\n|---|\n|A U.S. Army reconnaissance expedition under the command of Lieutenant Zebulon Pike departs Fort Bellefontaine near Saint Louis to explore the southern Louisiana Territory.|\n|The Lewis and Clark expedition sets out to explore and chart the territory acquired in the Louisiana Purchase. Officially titled the Corps of Discovery, the party canoes up the Missouri River from Saint Charles, spending the winter at Fort Mandan on Indian territory in what is now North Dakota.|\n|Lewis and Clark sight the Pacific Ocean for the first time, near the mouth of the Columbia River. The expedition winters at Fort Clatsop on the south side of the river, near present-day Astoria, Oregon.|\n|The United States officially takes control of Louisiana, an enormous area of imprecise boundaries extending from the Mississippi River west to the Rocky Mountains, more than doubling the land area of the new nation.|\n|The United States agrees to buy the colony of La Louisiane from the French Republic for the price of $15 million.|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table147"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Drivers|\n|---|\n|Kyle Hornby|\n|Tristan Charpentier|\n|Charlie Fagg|\n|Matt Chapman|\n|Sebastian Perez|\n|Dave Wooder|\n|Cameron Roberts|\n|Connor Grady|\n|Billy Monger|\n|Stuart Middleton|\n|Alex Day|\n|Esmee Hawkey|\n|Lewis Brown|\n|Rowan Bailey|\n|Senna Proctor|\n|Benjamin Wallace|\n|Geri Nicosia|\n|Devlin DeFrancesco|\n|Jonathan Hadfield|\n|Patrik Matthiesen|\n|Jamie Caroline|\n|Dan Zelos|\n|William Stacey|\n|Will Tregurtha|\n|Harry Mailer|\n|Ben Green|\n|Frankie Bird|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table148"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Second Round|\n|---|\n|Evgeny Karlovskiy|\n|Julian Reister|\n|Andrey Golubev|\n|Farrukh Dustov|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table149"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name|\n|---|\n|Askepott (originally the name of Askeladden)|\n|Cenicienta|\n|Pepeljuga|\n|Tuhkimo|\n|Cinderella|\n|Kopciuszek|\n|Aspoestertjie|\n|Cenerentola|\n|Mari Errauskin|\n|Ventafocs|\n|Cinderela|\n|Assepoester|\n|Pepelka|\n|Tuhkatriinu|\n|Cendrillon|\n|Askepot|\n|Askungen|\n|Oskepott (originally the name of Oskeladden)|\n|La Cenicienta|\n|Popelka|\n|Bawang merah|\n|Cinderella\/Upik Abu|\n|Hirushja|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Cinderella', 'Cinderela']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table15"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Player, Team|\n|---|\n|Dennis Johnson, Boston Celtics|\n|Sidney Moncrief, Milwaukee Bucks|\n|Bill Laimbeer, Detroit Pistons|\n|Larry Bird, Boston Celtics|\n|Michael Jordan, Chicago Bulls|\n|Bernard King, New York Knicks|\n|Robert Parish, Boston Celtics|\n|Isiah Thomas, Detroit Pistons|\n|Terry Cummings, Milwaukee Bucks|\n|Micheal Ray Richardson, New Jersey Nets|\n|Moses Malone, Philadelphia 76ers|\n|Julius Erving, Philadelphia 76ers|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table150"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name|\n|---|\n|X-Ray|\n|Visible|\n|Gamma ray|\n|Radio|\n|Ultraviolet|\n|Infrared|\n|Microwave|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table151"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discovery(Site)|\n|---|\n|Harvard Observatory|\n|Kiso|\n|Palomar|\n|Flagstaff|\n|Brooklyn|\n|Johannesburg|\n|Cerro El Roble|\n|Zimmerwald|\n|Heidelberg|\n|Caussols|\n|El Leoncito|\n|Kvistaberg|\n|Mount Hamilton|\n|La Silla|\n|Nauchnij|\n|Crimea-Simeis|\n|Anderson Mesa|\n|Hamburg-Bergedorf|\n|Belgrade|\n|Uccle|\n|Turku|\n|Nanking|\n|Mount Wilson|\n|Konkoly|\n|Williams Bay|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table152"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|1949(USA)|\n|---|\n|W|\n|3R|\n|QF|\n|F|\n|2R|\n|SF|\n|A|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table153"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Director|\n|---|\n|Mike Newell|\n|Paul Schrader|\n|John Irvin|\n|George Armitage|\n|Adam Bernstein|\n|Quentin Tarantino|\n|Leslie Greif|\n|Bill Bennett|\n|Alexei Balabanov|\n|Lee Chang-dong|\n|Peter Lindmark|\n|Tom Schulman|\n|Larry Clark|\n|Andrew Lau|\n|Peter O'Fallon|\n|Jan Kounen|\n|James Mangold|\n|Curtis Hanson|\n|Andy Wilson|\n|Mathieu Kassovitz|\n|Quinton Peeples|\n|Michael Haneke|\n|Claude Chabrol|\n|Stefan Schwartz|\n|Kiyoshi Kurosawa|\n|Nonzee Nimibutr|\n|Rod McCall|\n|Beat Takeshi Kitano|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table154"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Location|\n|---|\n|Birmingham, AL|\n|Greenville, MS|\n|Tuscaloosa, AL|\n|Jackson, MS|\n|Columbus, MS|\n|Mobile, AL|\n|Montgomery, AL|\n|New Orleans, LA|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table155"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Party|\n|---|\n|Liberal|\n|Majority|\n|Liberal Democrat|\n|Liberal Democrat gain from Conservative|\n|Natural Law|\n|Conservative|\n|Mebyon Kernow|\n|Labour|\n|UKIP|\n|Turnout|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table156"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|First Round|\n|---|\n|Pericoli|\n|De La Courtie|\n|Rouwenhorst-Tekelenburg|\n|Segal|\n|Truman|\n|Coghlan|\n|Bucaille|\n|Martin|\n|Schuurman|\n|Carter|\n|Trauttmann|\n|Bouchet|\n|Cox|\n|De Amorim|\n|Topel|\n|Long|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table157"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Platform(s)|\n|---|\n|Cross-platform|\n|Windows, macOS|\n|macOS, Windows, Web, Android|\n|Linux, macOS, Windows|\n|Web, Android, iOS|\n|Linux, Windows, Unix, macOS, KDE|\n|Windows, macOS, Web, Android, Windows Phone|\n|Web|\n|Windows, Android|\n|Linux, Windows, macOS, others|\n|Windows|\n|macOS|\n|Windows, iOS, Android|\n|Linux, Windows|\n|Linux, Windows, Unix, GNOME|\n|macOS, iOS|\n|Linux, macOS, Windows, Web|\n|Linux, Windows, macOS|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table158"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Writer(s)|\n|---|\n|Thornton Nashiem Myrick Donald Davidson Dwight Grant|\n|Thornton Timothy Mosley Jetmir Milli Salii Christopher Wallace Sean Hamilton Tracey Horton Mark Richardson|\n|Thornton Matthew Samuels Adam Feeney Terius Nash|\n|Thornton Rico Love Bobby Death|\n|Gianfranco Reverberi Claudio Ghiglino Susan Duncan-Smith|\n|Terrence Thornton Leland Wayne Rob Mandell Julian Gramma|\n|Thornton Mosley Salii Shawn Carter Ricardo Thomas|\n|Thornton Kanye West Che Pope Mark Batson Rakim Mayers Nash|\n|Thornton Kamaal Fareed|\n|Thornton Mario Winans Carlton Mays Maurice Jordan|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table159"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Directed by|\n|---|\n|Mark Piznarski|\n|Jesse Warn|\n|lee toland kreiger|\n|Allison Anders|\n|Rob Seidenglanz|\n|David Katzenberg|\n|Lee Toland Kreiger|\n|Kevin Rodney Sullivan|\n|lee toland krieger|\n|Lee Toland Krieger|\n|Steven A. Adelson|\n|Dawn Wilkinson|\n|Lee Rose|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['lee toland krieger', 'lee toland kreiger']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table16"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discovery(Site)|\n|---|\n|Goodricke-Pigott|\n|La Silla|\n|Socorro|\n|Modra|\n|Stroncone|\n|Prescott|\n|Cima Ekar|\n|Sormano|\n|Nachi-Katsuura|\n|Cocoa|\n|Caussols|\n|Steward Observatory|\n|Bergisch Gladbach|\n|Woomera|\n|Kitt Peak|\n|Oohira|\n|Oizumi|\n|Xinglong|\n|Reedy Creek|\n|Haleakala|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table160"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Producer(s)|\n|---|\n|Tha Bizness|\n|The VIPs|\n|Lee Major|\n|The Neptunes, Left Brain|\n|The Neptunes|\n|Hit-Boy, Deezy (co.)|\n|Bangladesh|\n|Shawty Redd|\n|Rico Beats|\n|Nottz|\n|A-Traxx|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table161"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Album|\n|---|\n|Bagong Bayani Alay Kay Flor Released: August 2, 2005|\n|Sinisinta Kita|\n|Viva Films Great Movie Themes|\n|Golden Collection Series - Mga Himig ng Pag-Ibig|\n|Golden Collection Series - Sariling Atin|\n|Golden Collection Series - Immortal Pilipino Songs|\n|Mga Awiting Pamasko|\n|25 Great Songs 25 Great Artists|\n|Alpha Music OPM Hits Vol. 2|\n|Golden Collection Series - Immortal Pilipino Songs Volume 2|\n|The Best of Kundiman Songs|\n|Favorite Philippine Folk Songs|\n|Edsa: Ikalawang Yugto|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table162"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Written by|\n|---|\n|Gail Lerner|\n|Katie Palmer|\n|Michelle Bochner|\n|Alex Herschlag|\n|Jon Kinnally & Tracy Poust|\n|Adam Barr|\n|Jhoni Marchinko|\n|David Kohan & Max Mutchnick|\n|Jeff Greenstein|\n|Jon Kinnally, Tracy Poust & Jhoni Marchinko|\n|Alex Herschlag & Laura Kightlinger|\n|Ellen Idelson & Rob Lotterstein|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table163"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Pos|\n|---|\n|G|\n|D|\n|C|\n|RW|\n|LW|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table164"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Description|\n|---|\n|Very Good|\n|Fail|\n|Very Poor|\n|Good|\n|Poor|\n|Fairly Good|\n|Fair|\n|Excellent|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table165"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Final(Runner-up)|\n|---|\n|Mexico Monarcas Morelia|\n|Mexico Atlante FC|\n|Costa Rica Saprissa|\n|Mexico Club Universidad Nacional|\n|Mexico Deportivo Toluca F.C.|\n|Mexico Club Celaya|\n|Mexico Cruz Azul|\n|Mexico C.F. Pachuca|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table166"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Route Name|\n|---|\n|Hampton Railway District|\n|Astoria Line (\"A-Line\")|\n|Forest Grove District (\"OE Line\")|\n|Oregon Electric District (\"OE Line\")|\n|Willamina District|\n|Westside District|\n|Bailey District|\n|Dallas District|\n|Toledo District|\n|United Railways District|\n|Willsburg District|\n|Tillamook District|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table167"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Dance\/Song|\n|---|\n|Quickstep \/ \"Diamonds Are a Girl's Best Friend\"|\n|Rumba \/ \"Just Give Me a Reason\"|\n|Samba \/ \"Hey Mama\" Team Freestyle \/ \"Bom Bom\"|\n|Jive \/ \"Mickey\"|\n|Foxtrot \/ \"Build Me Up Buttercup\" Switch-Up Challenge \/ Various|\n|Jazz \/ \"Work Bitch\"|\n|Cha-cha-cha \/ \"Wild Ones\"|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table168"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discoverer(s)|\n|---|\n|E. Meyer, H. Raab|\n|Y. Shimizu, T. Urata|\n|V. Giuliani|\n|Farra d'Isonzo|\n|S. P. Laurie|\n|A. Asami|\n|T. Kobayashi|\n|T. Urata|\n|ODAS|\n|K. Endate, K. Watanabe|\n|M. Tombelli, U. Munari|\n|Oak Ridge Observatory|\n|P. G. Comba|\n|LONEOS|\n|D. di Cicco|\n|T. B. Spahr|\n|S. Ueda, H. Kaneda|\n|LINEAR|\n|SCAP|\n|H. Abe|\n|V. S. Casulli|\n|C. S. Shoemaker, D. H. Levy|\n|T. Pauwels|\n|Spacewatch|\n|E. W. Elst|\n|NEAT|\n|T. Okuni|\n|T. Stafford|\n|S. Otomo|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table169"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|ARTIST|\n|---|\n|Nobody|\n|Jack Hardin & The Silhouettes|\n|Mel West & The Meteors|\n|David Clayton Thomas|\n|COC North Pole|\n|The Butterfingers|\n|The Scoundrelz|\n|Linda Layne|\n|Shirley Matthews|\n|The Paupers|\n|little casear & the consuls|\n|The Rainvilles|\n|The Characters|\n|Little Casear & The Consuls|\n|Jimmy Dybold|\n|Bobby Vann|\n|Jay Jackson|\n|The British Modbeats|\n|The Teenyboppers|\n|?|\n|The Magic Cycle|\n|Greg Hamon|\n|little caesar & the consuls|\n|Little Caesar & The Consuls|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['little casear & the consuls', 'little caesar & the consuls']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table17"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Nominees|\n|---|\n|Gary Baum|\n|Donald A. Morgan|\n|George Mooradian|\n|Rick F. Gunter|\n|Christian La Fountaine|\n|Wayne Kennan|\n|Chris La Fountaine|\n|John Simmons|\n|Steven V. Silver|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table170"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Service|\n|---|\n|Luftwaffe|\n|Kriegsmarine|\n|Heer|\n|Volkssturm|\n|Waffen-SS|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table171"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|(Khitan or granted Chinese) First name(Westernized)|\n|---|\n|Xi'er \/Xi'erzhi|\n|(Li) Guozhe|\n|Dinian Zuli Li Huaixiu\/Li Huaijie|\n|Qushu|\n|Kailuo|\n|Qinde|\n|Unknown|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table172"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Written by:|\n|---|\n|Donald Ross|\n|James L. Novack|\n|Story by : Peter Barwood & Laurence Heath Teleplay by : Laurence Heath|\n|Bruce Lansbury|\n|Philip John Taylor|\n|Tom Sawyer|\n|Robert Van Scoyk|\n|Mark A. Burley|\n|Anne C. Collins|\n|Cynthia Deming & William Royce|\n|Jerry Ludwig|\n|Laurence Heath|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table173"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Song|\n|---|\n|\"Flashlight\"|\n|\"Maniac 2000|\n|\"One and Only\"|\n|Standing in the Way of Control|\n|\"Electric Feel\"|\n|\"Dancing in the Dark\"|\n|\"I See Fire\"|\n|\"Ooh La La\"|\n|\"Try\"|\n|\"Fight Song\"|\n|\"Dancing on My Own\"|\n|\"My Baby Just Cares for Me\"|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table174"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Song|\n|---|\n|\"Dito Ba?\"|\n|\"Halina sa Bukid\"|\n|\"Muling Umawit ang Puso\"|\n|\"Ang Pipit\"|\n|\"Mariposa\"|\n|\"Dahil Sa Iyo\"|\n|\"Pasko ay Pagdiwang\"|\n|\"Ikaw ay Akin\"|\n|\"Heal Our Land\"|\n|\"Aking Mahal\"|\n|\"Pag-ibig ang Lunas\"|\n|\"Leron Leron Sinta\"|\n|\"Paru-parong Bukid\"|\n|\"Biyaya ng Pasko\"|\n|\"Bulaklak Sa Parang\"|\n|\"Buhat\"|\n|\"Dahil Sa Yo\"|\n|The Song of My Life|\n|\"Kahit na Konting Awa\"|\n|\"Sinisinta Kita\"|\n|\"Handog\"|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table175"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|name|\n|---|\n|Thubten Nyinche|\n|Ngawang Lobsang Tenpe Gyeltshen|\n|Thubten Lungtog Tendzin Thrinle|\n|Lobsang Chinpa|\n|Lobsang Khyenrab Wangchug|\n|Ngawang Norbu|\n|Lobsang Nyima Rinpoche|\n|Yeshe Wangden|\n|Jampel Shenpen|\n|Thubten Nyima Lungtok Tenzin Norbu|\n|Lobsang Nyandrag Gyatsho|\n|Lobsang Gyeltshen|\n|Khensur Lungri Namgyel|\n|Jetsun Lobsang Tenzin|\n|Changchub Namkha|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table176"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Creature|\n|---|\n|Baatezu|\n|Titan|\n|Yugoloth, Lesser - Piscoloth|\n|Tanar'ri, Lesser - Cambion|\n|Tanar'ri, True - Vrock|\n|Animal Lord|\n|Aasimon|\n|Baatezu, Greater - Gelugon|\n|Yugoloth, Greater - Nycaloth|\n|Tanar'ri, Greater - Chasme|\n|Tanar'ri, True - Glabrezu|\n|Slaad|\n|Yugoloth|\n|Tanar'ri, Guardian - Molydeus|\n|Tanar'ri, Lesser - Alu-Fiend|\n|Vaporighu|\n|Einheriar|\n|Gehreleth|\n|Zoveri|\n|Night Hag|\n|Baatezu, Greater - Pit Fiend|\n|Baatezu - Lemure|\n|Yugoloth, Greater - Ultroloth|\n|Tanar'ri, Greater - Nabassu|\n|Bariaur|\n|Balaena|\n|Tanar'ri|\n|Yugoloth, Greater - Arcanoloth|\n|Yugoloth, Lesser - Yagnoloth|\n|Yugoloth, Lesser - Mezzoloth|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table177"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Title|\n|---|\n|Donnie Brasco|\n|Kiss or Kill|\n|Funny Games|\n|9 millimeter|\n|Dobermann|\n|Hana-bi|\n|Brother|\n|City of Industry|\n|Joyride|\n|Assassin(s)|\n|Young and Dangerous 4|\n|8 Heads in a Duffel Bag|\n|Playing God|\n|Six Ways To Sunday|\n|Shooting Fish|\n|Affliction|\n|Jackie Brown|\n|Another Day in Paradise|\n|Dang Bireley's and Young Gangsters|\n|Grosse Pointe Blank|\n|Suicide Kings|\n|The Swindle|\n|Lewis and Clark and George|\n|Green Fish|\n|Perdita Durango|\n|Cop Land|\n|Keys to Tulsa|\n|Cure|\n|L.A. Confidential|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table178"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Origin|\n|---|\n|Houses of the Holy, 1973|\n|Led Zeppelin III|\n|Led Zeppelin IV|\n|Houses of the Holy|\n|Physical Graffiti, 1975|\n|Led Zeppelin IV, 1971|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table179"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Party|\n|---|\n|communist party of armenia|\n|Tuvan People's Revolutionary Party|\n|Communist Party of Kampuchea|\n|Communist Party of Armenia|\n|Congolese Party of Labour|\n|Workers' Party of Ethiopia|\n|Russian Communist Party|\n|Communist Party of Finland|\n|Kampuchean People's Revolutionary Party|\n|Hungarian Socialist Workers' Party|\n|Communist Party of China|\n|Communist Party of Persia|\n|MPLA|\n|Communist Party of Byelorussia|\n|nan|\n|Yemeni Socialist Party|\n|FRELIMO|\n|New Jewel Movement|\n|Communist Party of Lithuania and Belorussia|\n|Communist Party of Azerbaijan|\n|Communist Party of Ukraine|\n|Communist Party of Latvia|\n|communist part of armenia|\n|Communist Party of Lithuania|\n|Russian Communist Party (Central Committee of the Estonian Sections)|\n|Communist Party of the Soviet Union|\n|Hungarian Working People's Party|\n|People's Revolutionary Party of Benin|\n|Communist Party of Georgia|\n|Mongolian People's Revolutionary Party|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['communist party of armenia', 'communist part of armenia']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table18"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Club|\n|---|\n|TSV Bayer 04 Leverkusen|\n|Randers HK|\n|HSG Blomberg-Lippe|\n|Frankfurter HC|\n|FCK Handball|\n|KIF Kolding|\n|Viborg HK|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table180"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Mountain Name|\n|---|\n|Joffre Peak|\n|Mount Howard|\n|Mount Hartzeel|\n|Tszil Mountain|\n|Mount Spetch|\n|Mount Matier|\n|Slalok Mountain|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table181"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discoverer(s)|\n|---|\n|LONEOS|\n|Spacewatch|\n|Needville Obs.|\n|K. Endate|\n|D. Healy|\n|CSS|\n|Mount Lemmon Survey|\n|S. Foglia|\n|A. Lowe|\n|LINEAR|\n|NEAT|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table182"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Unnamed: 0|\n|---|\n|West End Line|\n|Brighton Beach Line|\n|Broadway (Brooklyn) Line|\n|Fourth Avenue Line|\n|Fulton Street Line|\n|Astoria Line|\n|Lexington Avenue Line|\n|14th Street-Canarsie Line|\n|Culver Line|\n|Myrtle Avenue Line|\n|Jamaica Line|\n|Flushing Line|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table183"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Role|\n|---|\n|Brenda Brown|\n|Lily|\n|Denise Huxtable|\n|Justine|\n|Carrie|\n|Marisol|\n|Tandice Moncrief|\n|Carla|\n|Mary Ellen Pleasant and Rosa Parks|\n|Maya Daniels|\n|Sky Van Der Veen|\n|Herself|\n|Heather Lelache|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table184"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Romani|\n|---|\n|ekh, jekh|\n|inja|\n|trin|\n|oxto|\n|ifta|\n|duj|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table185"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Position|\n|---|\n|2B|\n|C|\n|3B|\n|1B|\n|OF|\n|SS|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table186"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|From|\n|---|\n|Stevenage Borough|\n|Truro City|\n|Oxford United|\n|Lincoln City|\n|Released|\n|Oxford City|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table187"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name|\n|---|\n|Sabrina Neukamp|\n|Grit Jurack|\n|Sabine Englert|\n|Clara Woltering|\n|Maren Baumbach|\n|Nadine Krause|\n|Mandy Hering|\n|Anja Althaus|\n|Stefanie Melbeck|\n|Anna Loerper|\n|Lara Steinbach|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table188"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Software license|\n|---|\n|Commercial|\n|AGPL|\n|GPL|\n|Freeware|\n|MIT|\n|MPL, GPL, LGPL|\n|BSD 3-clause|\n|Freemium|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table189"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Part of|\n|---|\n|Wave of Terror in Europe|\n|War in Somalia|\n|CPP-NPA-NDF rebellion|\n|Insurgency in the Maghreb|\n|Dissident Irish Republican campaign|\n|Insurgency in Egypt|\n|Northern Mali conflict|\n|Islamist insurgency in West Africa|\n|Iraq Civil War|\n|Iraqi Civil War|\n|ISIL insurgency in Tunisia|\n|Boko Haram insurgency|\n|Libyan Civil War|\n|nan|\n|Syrian Civil War spillover in Lebanon|\n|Terrorism in Canada|\n|Sinai insurgency|\n|Internal conflict in Bangladesh|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Iraqi Civil War', 'Iraq Civil War']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table19"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|1947(FRA)|\n|---|\n|F|\n|W|\n|3R|\n|A|\n|2R|\n|SF|\n|QF|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table190"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Binomial|\n|---|\n|Botaurus lentiginosus|\n|Butorides virescens|\n|Nycticorax nycticorax|\n|Egretta tricolor|\n|Bubulcus ibis|\n|Ardea alba|\n|Egretta thula|\n|Ardea herodias|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table191"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Grand Final Information(Runners-Up)|\n|---|\n|Ipswich Jets|\n|Burleigh Bears|\n|Easts Tigers|\n|Wests Panthers|\n|Toowoomba Clydesdales|\n|Norths Devils|\n|Redcliffe Dolphins|\n|Northern Pride|\n|Tweed Heads Seagulls|\n|Townsville Blackhawks|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table192"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Notes|\n|---|\n|At-Large|\n|At-Large, Council President|\n|Ward II|\n|Ward I|\n|Ward V|\n|Ward III|\n|Ward VI|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table193"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Last operator|\n|---|\n|Metrobus|\n|Stagecoach London|\n|Stagecoach East London|\n|Cowie South London|\n|Tower Transit|\n|Westlink|\n|East Thames Buses|\n|London General|\n|Tellings-Golden Miller|\n|Grey-Green|\n|Selkent|\n|Travel London|\n|London United|\n|Bharat Travel|\n|London General (Red Arrow)|\n|South London|\n|Kentish Bus|\n|Cowie Leaside|\n|Abellio London|\n|Arriva London|\n|First Capital|\n|Airlinks|\n|Stagecoach Selkent|\n|London Sovereign|\n|Arriva Shires & Essex|\n|First CentreWest|\n|London Central|\n|Metroline|\n|First London|\n|Arriva Kent Thameside|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table194"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|U.S. H.S.(Imperial)|\n|---|\n|19.75 ft|\n|Non-existent|\n|Same as NBA|\n|84 ft|\n|Same as NCAA|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table195"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Origin language and etymology|\n|---|\n|Latin cortex, \"Bark of a tree\"|\n|Latin (cerebrum), brain|\n|Latin cum|\n|Latin (circum), around|\n|Latin (coxa), hip|\n|Latin (caput, capit-), the head|\n|Latin (cheilitis)|\n|Latin (cor, cordi-), \"heart\"|\n|Latin (cerebellum), little brain|\n|Latin (costa), \"rib\"|\n|Latin cutis|\n|Latin|\n|Latin (cilium), eyelash; eyelid|\n|Latin (capillus), hair|\n|Latin cis|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table196"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Candidate|\n|---|\n|David Becket|\n|Andrew Williams|\n|Turnout|\n|Olwyn Speed|\n|Trevor Sproston|\n|Liberal Democrat hold|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table197"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|1944(USA)|\n|---|\n|F|\n|W|\n|2R|\n|QF|\n|SF|\n|A|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table198"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Party|\n|---|\n|Conservative hold|\n|Labour|\n|Conservative|\n|Green|\n|Natural Law|\n|Turnout|\n|Liberal Democrat|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table199"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Work|\n|---|\n|Evolve|\n|Boys in the Trees|\n|Ultra-Lounge (Leopard Skin Sampler)|\n|Bob Dylan's Greatest Hits|\n|10,000 Days|\n|The Forgotten Arm|\n|puccini: madama butterfly|\n|The Complete Decca Recordings|\n|Days of Open Hand|\n|Music|\n|The Intimate Bach|\n|Everything That Happens Will Happen Today|\n|Love Notes|\n|Lightning Bolt|\n|Shostakovich: Symphony No. 5|\n|Ride With Bob|\n|King's Record Shop|\n|Get Closer|\n|Indianola Mississippi Seeds|\n|Brothers|\n|puccini: madame butterfly|\n|A Ghost Is Born|\n|Pollution|\n|Lush Life|\n|Tribute to the Music of Bob Willis and the Texas Playboys|\n|Biophilia|\n|Home|\n|Still the King: Celebrating the Music of Bob Wills and His Texas Playboys|\n|The Siegel-Schwall Band|\n|Amnesiac (Special Limited Edition)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['puccini: madame butterfly', 'puccini: madama butterfly']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table2"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Manufacturer|\n|---|\n|Dodge|\n|Toyota|\n|Ford|\n|Toyotoa|\n|Chevrolet|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Toyota', 'Toyotoa']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table20"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Constituency|\n|---|\n|Great Grimsby|\n|Portsmouth|\n|North Cheshire|\n|Coventry|\n|Plymouth Devonport|\n|Wells|\n|Kildare|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table200"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discovery(Site)|\n|---|\n|Nanking|\n|La Silla|\n|Harvard Observatory|\n|Zimmerwald|\n|Siding Spring|\n|Anderson Mesa|\n|Heidelberg|\n|Bickley|\n|Kiso|\n|El Leoncito|\n|Chirorin|\n|Johannesburg|\n|Geisei|\n|Hamburg-Bergedorf|\n|Palomar|\n|Flagstaff|\n|Cerro El Roble|\n|Nauchnij|\n|Turku|\n|Brooklyn|\n|Uccle|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table201"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Current use|\n|---|\n|Anthorn Radio Station|\n|Industry|\n|HMS Gannet|\n|RAF Lossiemouth|\n|RAF Drem Museum|\n|Southampton International Airport|\n|Kai Tak Development|\n|Katukurunda Airport|\n|Various|\n|Bankstown Airport|\n|Cawdor Barracks|\n|City of Derry Airport|\n|Dalgety Bay|\n|Housing|\n|AAC Middle Wallop|\n|Moi International Airport|\n|Coastguard base|\n|HMS Sultan|\n|George Best Belfast City Airport|\n|RM Condor|\n|HMAS Albatross|\n|Worthy Down Barracks|\n|Isle of Man Airport|\n|Glasgow Prestwick Airport|\n|Lee-on-Solent Airfield|\n|Campbeltown Airport|\n|Shackleton Barracks|\n|Kirkwall Airport|\n|Stornoway Airport|\n|Sembawang Air Base|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table202"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name|\n|---|\n|Daniel Lafferty|\n|Liam Coyle|\n|Victor Hunter|\n|Jimmy Kelly|\n|Terry Cochrane|\n|Paddy McCourt|\n|Jimmy Elwood|\n|Shaun Holmes|\n|David Campbell|\n|Niall McGinn|\n|Bobby Irvine|\n|Jimmy Hill|\n|Fay Coyle|\n|Sammy Curran|\n|S.R. Russell|\n|Liam O'Kane|\n|Terry Harkin|\n|Johnny Campbell|\n|Rory Patterson|\n|Tony O'Doherty|\n|Paul Ramsey|\n|Gerry Bowler|\n|Jim McLaughlin|\n|Bobby Browne|\n|Shane Ferguson|\n|Jobby Crossan|\n|Felix Healy|\n|Billy Gillespie|\n|Matt Doherty|\n|Gerry McElhinney|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table203"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discovery(Site)|\n|---|\n|Haleakala|\n|Bergisch Gladbach|\n|Anderson Mesa|\n|Palomar|\n|Socorro|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table204"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Street|\n|---|\n|Deereco Road|\n|Dundalk Avenue|\n|Dolfield Road \/ Boulevard|\n|Dover Road|\n|Dulaney Valley Road|\n|Deer Park Road|\n|Dogwood Road|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table205"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Crew|\n|---|\n|S. Savitskaya launch|\n|R. Sharma launch O. Atkov landing|\n|A. Serebrov|\n|I. Volk|\n|G. Grechko launch V. Savinykh landing|\n|S. Savitskaya landing|\n|G. Strekalov|\n|O. Atkov launch R. Sharma landing|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table206"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Silver|\n|---|\n|Megumi Harada Japan|\n|Japan|\n|Ma Na China|\n|Kim Young-ju South Korea|\n|South Korea|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table207"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discovery(Site)|\n|---|\n|Socorro|\n|Anderson Mesa|\n|Palomar|\n|Turku|\n|La Silla|\n|Hamburg-Bergedorf|\n|Siding Spring|\n|Lime Creek|\n|Baton Rouge|\n|Nachi-Katsuura|\n|Prescott|\n|Caussols|\n|Nanyo|\n|Bloemfontein|\n|Nauchnij|\n|Oohira|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table208"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|1947(WIM)|\n|---|\n|3R|\n|1R|\n|A|\n|4R|\n|F|\n|W|\n|SF|\n|2R|\n|QF|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table209"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Original language|\n|---|\n|Norwegian|\n|Swedish|\n|English|\n|Japanese|\n|Japanase|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Japanese', 'Japanase']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table21"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Visiting team|\n|---|\n|#5 Pittsburg State|\n|Emporia State|\n|Washburn|\n|Missouri Western|\n|#7 Northwest Missouri|\n|Fort Hays State|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table210"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Title|\n|---|\n|Livet i Lyriaka|\n|Angels and Daemons at Play|\n|Red|\n|Spin|\n|Lucia|\n|When Susannah Cries|\n|Emperor Norton|\n|Vintersang|\n|Andre bilder|\n|Kmher|\n|From the Makers of Ozium|\n|Levandes live|\n|Segner syng|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table211"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Weight class|\n|---|\n|Featherweight|\n|Welterweight|\n|Women's Strawweight|\n|Women's Flyweight|\n|Lightweight|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table212"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Termini|\n|---|\n|Edmonds Station, Lynnwood Transit Center|\n|Downtown Seattle, Swamp Creek Park and Ride|\n|Northgate Transit Center|\n|Downtown Seattle, Mariner Park and Ride|\n|Downtown Seattle, North Lynnwood|\n|Brier|\n|Downtown Seattle, Everett|\n|Downtown Seattle, Lynnwood Transit Center|\n|University District, Edmonds Park and Ride|\n|Downtown Seattle, Everett Station|\n|University District, McCollum Park Park and Ride|\n|Downtown Seattle, Mill Creek|\n|Ash Way Park and Ride|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table213"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Result|\n|---|\n|2nd place|\n|Non-classified finish (NC)|\n|Did not start (DNS)|\n|Winner|\n|Withdrew (WD)|\n|Retired (Ret)|\n|Points finish|\n|Excluded (EX)|\n|Race cancelled (C)|\n|Did not pre-qualify (DNPQ)|\n|Did not qualify (DNQ)|\n|Non-points finish|\n|3rd place|\n|Disqualified (DSQ)|\n|Did not participate (DNP)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table214"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Directed by:|\n|---|\n|Kevin Corcoran|\n|Paul Lazarus|\n|Anthony Shaw|\n|Walter Grauman|\n|Vincent McEveety|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table215"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Team 2|\n|---|\n|Palmeiras (SP)|\n|Portuguesa (SP)|\n|Flamengo (RJ)|\n|Coritiba (PR)|\n|Fluminense (RJ)|\n|Santos (SP)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table216"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|1943(USA)|\n|---|\n|QF|\n|A|\n|F|\n|W|\n|1R|\n|SF|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table217"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Postseason|\n|---|\n|NCAA Round of 32|\n|CBI Quarterfinals|\n|NIT Quarterfinals|\n|NCAA Round of 64|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table218"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Significant changes|\n|---|\n|Added SQRT, POISSONLCL, and POISSONUCL functions to Analysis. Fixed regional number formatting issues in Enter. Added small cell size and sparse data warnings to 2x2 and MxN analyses. Included various changes to support the VHF application and to support the Android Companion. Included other minor updates to Form Designer, Enter, Analysis, and Dashboard.|\n|Release build. Added ability to install Epi Info 7 using a traditional setup file; Added new check code commands; Added ability to calculate z-scores for the WHO Child Growth Standards and WHO Reference 2007.|\n|Major updates to Dashboard module; Added web-based data entry capability; Added features to allow compatibility with the Epi Info for Android app.|\n|Added a right-to-left language controller in Analysis|\n|Increased precision for some statistical results and other improvements to Analysis. Added ability to decrypt and import data collected on iOS devices and other improvements to Import\/Export. Included other minor updates to Form Designer, Enter, and Dashboard.|\n|Upgraded framework to .NET version 3.5; Added ability to run Epi Info 7 from a flash drive without administrator rights; Added ability for Epi Info 7 forms to work with essentially unlimited number of fields; Mapping module added; Geocoding added; Visual Dashboard module added; plugin-based data driver model added; Linux and MySQL support removed; Growth charting added.|\n|Minor update to the Epi Info Enter tool released with 3.5.2.|\n|Year 2000 compatibility upgrade|\n|First version compatible with Windows Vista. This version also fixed compatibility for languages that are read right-to-left.|\n|Added programmable menu system|\n|Ability to use standard ISO date formats, disallowed multiple instances of the Analysis module, added ability to run reports from Analysis, and CDC flags added to the Nutrition module.|\n|Programming language changed to Visual C# .NET; MySQL and SQL Server database support added; XML meta-data support added; Linux compatibility added; first Windows version of Epi Info to be open source.|\n|Allowed European date formats and non-English characters in data fields.|\n|Windows 95 no longer supported, case-based mapping functionality added to the Analysis MAP command.|\n|First Windows-compatible version of Epi Info.|\n|Modified installation packaging.|\n|First version compatible with Windows 7. Also included a preview of the new Epi Info 7 MakeView and Enter tools.|\n|Added feature to use standardized vocabularies. First version to require Service Pack 3 if running Epi Info on a computer with Windows XP.|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table219"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Gold|\n|---|\n|Mary Diane Trimble \/ David Ross|\n|Veronica Clarke \/ Jack Eastwood|\n|Pierrette Paquin \/ Donald Tobin|\n|Olga Bernyk \/ Alex Fulton|\n|Margaret Davis \/ Melville Rogers|\n|Lindis Johnston \/ Jeffery Johnston|\n|Joy Forsyth \/ William de Nance, Jr.|\n|Margaret Roberts \/ Bruce Hyland|\n|Janet Sweatman \/ Fraser Sweatman|\n|Norah McCarthy \/ Sandy McKechnie|\n|Veronica Clarke \/ Ralph McCreath|\n|Frances Dafoe \/ Norris Bowden|\n|Suzanne Morrow \/ Wallace Distelmeyer|\n|Gerladine Fenton \/ William McLachlan|\n|Evelyn Rogers \/ George McCullough|\n|Geraldine Fenton \/ William McLachlan|\n|Louise Bertram \/ Stewart Reburn|\n|No competition held due to World War II|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Gerladine Fenton \/ William McLachlan', 'Geraldine Fenton \/ William McLachlan']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table22"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Second Round|\n|---|\n|De La Courtie|\n|Bucaille|\n|Truman|\n|Long|\n|Bouchet|\n|Coghlan|\n|Segal|\n|Pericoli|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table220"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Party|\n|---|\n|INC|\n|INC gain from LRP|\n|LRP|\n|Independent|\n|NCO|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table221"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Chart (2016)|\n|---|\n|Hungarian Albums (MAHASZ)|\n|Mexican Albums (AMPROFON)|\n|Danish Albums (Hitlisten)|\n|Scottish Albums (OCC)|\n|Greek Albums (IFPI)|\n|UK Albums (OCC)|\n|Norwegian Albums (VG-lista)|\n|Croatian International Albums (HDU)|\n|German Albums (Offizielle Top 100)|\n|Spanish Albums (PROMUSICAE)|\n|US Billboard 200|\n|Australian Albums (ARIA)|\n|Italian Albums (FIMI)|\n|Irish Albums (IRMA)|\n|French Albums (SNEP)|\n|Belgian Albums (Ultratop Flanders)|\n|Japanese International Albums (Oricon)|\n|New Zealand Albums (RMNZ)|\n|Finnish Albums (Suomen virallinen lista)|\n|Polish Albums (ZPAV)|\n|Swiss Albums (Schweizer Hitparade)|\n|South Korean International Albums (Gaon)|\n|US Hard Rock Albums (Billboard)|\n|Portuguese Albums (AFP)|\n|Brazilian Albums (ABPD)|\n|US Vinyl Albums (Billboard)|\n|Belgian Albums (Ultratop Wallonia)|\n|Canadian Albums (Billboard)|\n|Argentinean Albums (CAPIF)|\n|US Top Album Sales (Billboard)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table222"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Communities|\n|---|\n|Timonium|\n|Windsor Mill Woodlawn|\n|Hampton Timonium Long Green|\n|Owings Mills|\n|Dundalk|\n|Randallstown Reisterstown|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table223"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Title|\n|---|\n|\"Sunshine\" (featuring Jill Scott)|\n|\"Untouchable\"|\n|\"M.F.T.R.\" (featuring The-Dream)|\n|\"Keep Dealing\" (featuring Beanie Sigel)|\n|\"Crutches, Crosses, Caskets\"|\n|\"M.P.A.\" (featuring Kanye West, A$AP Rocky and The-Dream)|\n|Intro|\n|\"Got Em Covered\" (featuring Ab-Liva)|\n|\"F.I.F.A.\"|\n|\"Retribution\" (featuring Kehlani)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table224"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Constructor|\n|---|\n|Mercedes|\n|McLaren|\n|Ferrari|\n|Red Bull|\n|Lotus|\n|\/ Renault|\n|Tyrrell|\n|\/ Benetton|\n|Brabham|\n|Williams|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table225"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Terminating Station|\n|---|\n|Forest Grove|\n|Cook|\n|Tigard Yard|\n|Dallas|\n|Eugene|\n|Banks|\n|Fort Hill|\n|Willamina|\n|Toledo|\n|Dawson|\n|Astoria|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table226"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Semifinals|\n|---|\n|Sofya Zhuk|\n|Danielle Collins|\n|Claire Liu|\n|Madison Brengle|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table227"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discovery(Site)|\n|---|\n|Dynic|\n|Oohira|\n|Chiyoda|\n|Lake Tekapo|\n|Yatsugatake|\n|Okutama|\n|Farra d'Isonzo|\n|Kushiro|\n|Kitami|\n|Heidelberg|\n|Catalina Station|\n|Palomar|\n|Susono|\n|Mount Wilson|\n|Tautenburg Observatory|\n|Oizumi|\n|Nauchnij|\n|Xinglong|\n|Cerro El Roble|\n|Harvard Observatory|\n|Geisei|\n|La Silla|\n|San Marcello|\n|Catalina|\n|Ayashi Station|\n|Stakenbridge|\n|Yorii|\n|Uenohara|\n|Cima Ekar|\n|Kani|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table228"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Title|\n|---|\n|\"Hip Cat\" (narrated by Ann Duquesnay)|\n|\"Giving Thanks: A Native American Good Morning Message\" (narrated by Nicholson Earl Billey)|\n|On the Day You Were Born (narrated by Patrick Stewart)|\n|\"Regina's Big Mistake\" (narrated by Anna Holbrooks)|\n|\"The Carousel\" (narrated by Sarah Hubbard)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table229"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Ethnicity or tribe|\n|---|\n|Tlingit|\n|Aleut|\n|Dena'ina|\n|?|\n|Inupiaq|\n|Koyukon|\n|Haida|\n|Tinglit|\n|Gwich'in|\n|Deg Hit'an|\n|Alutiiq|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Tlingit', 'Tinglit']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table23"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Title|\n|---|\n|Captain's Table: Once Burned|\n|Excalibur #2: Renaissance|\n|Excalibur #3: Restoration (1st printing hardcover)|\n|After the Fall|\n|Being Human|\n|The Quiet Place|\n|Into the Void|\n|Blind Man's Bluff|\n|Stone and Anvil (1st printing hardcover)|\n|The Two-Front War|\n|The Returned Part 3|\n|Excalibur #1: Requiem|\n|No Limits|\n|End Game|\n|Fire on High|\n|Gateways: Cold Wars|\n|House of Cards|\n|The Returned Part 2|\n|Martyr|\n|Double Helix: Double or Nothing|\n|Treason|\n|Gods Above|\n|Dark Allies|\n|The Returned Part 1|\n|Missing in Action|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table230"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discovery(Site)|\n|---|\n|Siding Spring|\n|Harvard Observatory|\n|Karasuyama|\n|Yatsugatake|\n|Socorro|\n|Ojima|\n|Oizumi|\n|Cima Ekar|\n|Ramonville|\n|Brooklyn|\n|Anderson Mesa|\n|Brorfelde|\n|Tautenburg Observatory|\n|Kushiro|\n|La Silla|\n|Kitami|\n|Nachi-Katsuura|\n|Nauchnij|\n|Cerro Tololo|\n|San Marcello|\n|Oohira|\n|Haute-Provence|\n|Stroncone|\n|Xinglong|\n|Gekko|\n|Catalina Station|\n|El Leoncito|\n|Kiyosato|\n|Palomar|\n|Kuma Kogen|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table231"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Originating Station|\n|---|\n|Corvallis|\n|Willsburg Junction|\n|Hillsboro|\n|Gerlinger|\n|Corvallis Junction|\n|Gasco|\n|Albany|\n|Beaverton (TriMet BTC)|\n|United Junction|\n|Willamina|\n|Beaverton (Junction with OE Dist)|\n|Whiteson|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table232"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Home \\ Away|\n|---|\n|Real Betis|\n|Real Sociedad|\n|Tacuense|\n|Levante|\n|Espanyol|\n|Santa Teresa|\n|Valencia|\n|Granadilla Tenerife Sur|\n|Zaragoza CFF|\n|Athletic Bilbao|\n|Oiartzun|\n|Sporting Huelva|\n|Barcelona|\n|Rayo Vallecano|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table233"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Personal names(Westernized)|\n|---|\n|Buyeo Gye|\n|Buyeo Chang|\n|Buyeo Modae Buyeo Dae Buyeo Mamo Buyeo Malda|\n|Buyeo Goi Buyeo Gui Buyeo Gomo|\n|Unknown|\n|Buyeo Jang Buyeo Seodong|\n|Buyeo Uija|\n|Buyeo Gusu Buyeo Guisu|\n|Buyeo Bunseo|\n|Buyeo Gyeong Buyeo Gyeongsa|\n|Buyeo Su|\n|Buyeo Giru|\n|Buyeo Yeong Buyeo Jeon|\n|Buyeo Saban Buyeo Sabi Buyeo Sai|\n|Buyeo Biryu|\n|Buyeo Biyu Buyeo Bi|\n|Buyeo Gu|\n|Buyeo Do Buyeo Modo|\n|Buyeo Chogo Buyeo Sogo Buyeo Sokgo|\n|Buyeo Chimnyu|\n|Buyeo Myeongnong Buyeo Myeong|\n|Buyeo Pung Buyeo Pungjang|\n|Buyeo Onjo|\n|Buyeo Daru|\n|Buyeo Sama Buyeo Yung|\n|Buyeo Samgeun Buyeo Samgeol Buyeo Imgeol|\n|Buyeo Chaekgye Buyeo Cheonggye|\n|Buyeo Asin Buyeo Abang Buyeo Ahwa Buyeo Ami|\n|Buyeo Seon Buyeo Hyosun|\n|Buyeo Gaeru|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table234"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Crew|\n|---|\n|V. Solovyov launch G. Strekalov landing|\n|A. Aleksandrov|\n|A. Volkov|\n|D. Prunariu|\n|V. Lebedev launch A. Serebrov landing|\n|V. Savinykh launch G. Grechko landing|\n|O. Makarov|\n|S. Savitskaya|\n|G. Strekalov|\n|A. Ivanchenkov|\n|V. Solovyov|\n|V. Savinykh|\n|A. Serebrov launch V. Lebedev landing|\n|G. Strekalov launch V. Solovyov landing|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table235"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discovery(Site)|\n|---|\n|Dynic|\n|Tautenburg Observatory|\n|Palomar|\n|Siding Spring|\n|Okutama|\n|Brorfelde|\n|Nauchnij|\n|Oohira|\n|La Silla|\n|Kiyosato|\n|Chiyoda|\n|Toyota|\n|Kagoshima|\n|Kiso|\n|Heidelberg|\n|Johannesburg|\n|Haute-Provence|\n|Kushiro|\n|Yatsugatake|\n|Cerro Tololo|\n|Kitami|\n|Minami-Oda|\n|Anderson Mesa|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table236"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Nearest Town|\n|---|\n|Donibristle|\n|Fearn|\n|Stretton|\n|Drem|\n|Prestwick|\n|Ronaldsway|\n|South Wonston|\n|Ponam Island|\n|Arbroath|\n|Sembawang|\n|Schofields|\n|Ballykelly|\n|Bramcote|\n|Kalutara|\n|Zeals|\n|Middle Wallop|\n|Pinkenba|\n|Boaz Island|\n|Sydenham|\n|Sandbanks|\n|Ludham|\n|Moi International Airport|\n|Inskip|\n|Lympne|\n|Beccles|\n|Nowra|\n|East Haven|\n|Kingsbarns|\n|Kowloon Bay|\n|Maryborough|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table237"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|U.S. H.S.(Metric)|\n|---|\n|25.60 m|\n|Same as NBA|\n|Non-existent|\n|6.01 m|\n|Same as NCAA|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table238"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name of Privy Councillor|\n|---|\n|Marc Lalonde|\n|Stanley Haidasz|\n|William Warren Allmand|\n|W. Bennett Campbell|\n|Marcel Lessard|\n|Charles L. Caccia|\n|J. Gilles Lamontagne|\n|John Roberts|\n|Leonard Stephen Marchand|\n|Herbert Eser Gray|\n|Jean-Jacques Blais|\n|Donald James Johnston|\n|James Hugh Faulkner|\n|Edward C. Lumley|\n|Gerald Augustine Regan|\n|Otto Emil Lang|\n|Barnett Jerome Danson|\n|Pierre Juneau|\n|Alastair William Gillespie|\n|Yvon Pinard|\n|Roy MacLaren|\n|Robert Douglas George Stanbury|\n|John M. Reid|\n|Jacob Austin|\n|J. Judd Buchanan|\n|Jean-Pierre Goyer|\n|Donald Stovel Macdonald|\n|Norman A. Cafik|\n|Patrick Morgan Mahoney|\n|Raymond Joseph Perrault|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table239"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|County|\n|---|\n|Yakima|\n|Okanagan|\n|Walla Walla|\n|King, Pierce|\n|Spokane|\n|Jefferson|\n|Garfield|\n|Okanogen|\n|Whitman|\n|Lewis|\n|Snohomish|\n|San Juan|\n|Kitsap|\n|Asotin|\n|Skagit|\n|Okanogan|\n|Chelan|\n|Thurston|\n|Franklin|\n|Stevens|\n|Kittitas|\n|Benton|\n|Lincoln|\n|Pierce|\n|Grant|\n|Klickitat|\n|Cowlitz|\n|King|\n|Island|\n|Clallam|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Okanagan', 'Okanogen']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table24"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name|\n|---|\n|Changjiang II|\n|Fangjiashan|\n|Fangchenggang|\n|Xianning|\n|Daya Bay (Guangdong)|\n|Ningde II|\n|Fuqing II|\n|Qinshan V|\n|Fuqing I|\n|Sanmen|\n|Taohuajiang|\n|Taishan|\n|Qinshan I|\n|Haiyang I|\n|Ningde I|\n|Xiapu|\n|Qinshan IV|\n|Pengze|\n|Zhangzhou|\n|Ling Ao II|\n|Haiyang III|\n|Haiyang II|\n|Yangjiang I|\n|Qinshan II|\n|Tianwan|\n|Yangjiang II|\n|Hongyanhe II|\n|Hongyanhe I|\n|Changjiang I|\n|Qinshan III|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table240"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name|\n|---|\n|Birgitta Carlsson|\n|Elver Jonsson|\n|Jerry Martinger|\n|Kjell Nilsson|\n|John Bouvin|\n|Lars Sundin|\n|Birger Andersson|\n|Birgitta Dahl|\n|Widar Andersson|\n|Karl-Erik Persson|\n|Anders Nilsson|\n|Richard Ulfvengren|\n|Fanny Rizell|\n|Roland Larsson|\n|Ingvar Carlsson|\n|Rolf L. Nilson|\n|Agne Hansson|\n|Alf Egnerfors|\n|Bengt Wittbom|\n|Elving Andersson|\n|Claus Zaar|\n|Ewa Hedkvist Petersen|\n|Stina Gustavsson|\n|Britta Bjelle|\n|Britta Sundin|\n|Oskar Lindkvist|\n|Leo Persson|\n|Bo Nilsson|\n|Mikael Odenberg|\n|Inga Berggren|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table241"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Division|\n|---|\n|Second Division|\n|Third Division South|\n|First Division|\n|Third Division North|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table242"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Title|\n|---|\n|\"Since I've Been Loving You\"|\n|Black Dog|\n|\"Custard Pie\"|\n|\"Immigrant Song\"|\n|\"The Battle of Evermore\"|\n|\"Tangerine\"|\n|\"Over the Hills and Far Away\"|\n|\"Gallows Pole\"|\n|\"Going to California\"|\n|\"Bron-Y-Aur Stomp\"|\n|\"The Rain Song\"|\n|\"Stairway to Heaven\"|\n|\"Rock and Roll\"|\n|\"Misty Mountain Hop\"|\n|\"D'yer Mak'er\"|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table243"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Team|\n|---|\n|Fort Wayne|\n|New York|\n|Philadelphia|\n|Rockford|\n|Washington|\n|Boston|\n|Troy|\n|Chicago|\n|Cleveland|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table244"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Candidate|\n|---|\n|Yvar Tronstad|\n|Alain Martel|\n|Raynald Voyer|\n|Alain Marcoux|\n|Claude St-Hilaire|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table245"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Colour|\n|---|\n|Gold|\n|Green|\n|Purple|\n|Red|\n|Blank|\n|White|\n|Black|\n|Silver|\n|Bronze|\n|Blue|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table246"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Player|\n|---|\n|Dean Chance|\n|Tim Lincecum|\n|Roger Clemens|\n|Robin Roberts (baseball)|\n|Dwight Gooden|\n|Clayton Kershaw|\n|Vida Blue|\n|Fernando Valenzuela|\n|Bob Lemon|\n|Bill Voiselle|\n|Warren Spahn|\n|Greg Maddux|\n|Hal Newhouser|\n|Sandy Koufax|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table247"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Result|\n|---|\n|Winner|\n|2nd place|\n|Disqualified (DSQ)|\n|Non-classified finish (NC)|\n|Withdrew (WD)|\n|Retired (Ret)|\n|Did not pre-qualify (DNPQ)|\n|Non-points finish|\n|Did not start (DNS)|\n|Race cancelled (C)|\n|Excluded (EX)|\n|3rd place|\n|Points finish|\n|Did not participate (DNP)|\n|Did not qualify (DNQ)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table248"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|PIM application|\n|---|\n|mobile PhoneTools|\n|Osmo|\n|MyInfo|\n|doogiePIM|\n|DEVONthink|\n|GroupWise|\n|Things|\n|Calendar|\n|OneNote|\n|EssentialPIM|\n|Personal Knowbase|\n|Lightning|\n|ical|\n|3D Topicscape|\n|Kontact|\n|Time & Chaos|\n|InfiTrac|\n|MyLifeOrganized|\n|Evolution|\n|Zim|\n|Yahoo! Calendar|\n|Chaos Intellect|\n|Wrike|\n|TiddlyWiki|\n|MyBrainMate|\n|TagSpaces|\n|MicroLogic Info Select|\n|eM Client|\n|Planz|\n|TopXNotes|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table249"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Party Affiliation|\n|---|\n|All India Trinamool Congress|\n|Communist Party of India (Marxist)|\n|praja socialist party|\n|Indian National Congress|\n|Bharatiya Lok Dal|\n|praja socialst party|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['praja socialist party', 'praja socialst party']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table25"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name\/Party|\n|---|\n|Marie Carrubba (D)|\n|Tom Nelson (D)|\n|Anthony Dolce (R)|\n|Brent Sheldon (R)|\n|George S. Spitale (D)|\n|Gregory P. Rabb (D)|\n|Kimberly A. Ecklund (R)|\n|Vickye James (D)|\n|Maria B. Jones (D)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table250"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Industry Names|\n|---|\n|Heavy Pressure|\n|Nickel Genuine|\n|No. 1|\n|Grade 4|\n|Grade 11|\n|Royal|\n|Durite|\n|Super Tough|\n|Grade 13|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table251"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Title|\n|---|\n|Sudeki|\n|Warhammer 40,000: Fire Warrior|\n|MediEvil: Resurrection|\n|Heretic Kingdoms: The Inquisition|\n|Cold Winter|\n|Little Britain: The Game|\n|Ecco the Dolphin: Defender of the Future|\n|Little Britain: The Video Game|\n|Destiny of the Doctors|\n|Hostile Waters: Antaeus Rising|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table252"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Candidate|\n|---|\n|Democratic hold|\n|Michelle Cook|\n|Turnout|\n|Wendy A. Traub|\n|Majority|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table253"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discovery(Site)|\n|---|\n|Nachi-Katsuura|\n|Anderson Mesa|\n|Kitt Peak|\n|Reedy Creek|\n|Prescott|\n|Nanyo|\n|Woomera|\n|Catalina|\n|Socorro|\n|Goodricke-Pigott|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table254"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Title|\n|---|\n|2 ou 3 choses que je sais d'elle (Two or Three Things I Know About Her)|\n|Vivre sa vie (My Life to Live)|\n|Le Petit soldat (The Little Soldier)|\n|Une femme est une femme (A Woman Is a Woman)|\n|Week-end|\n|Les Carabiniers (The Carabineers)|\n|Pierrot le fou|\n|Made in U.S.A.|\n|La Chinoise|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table255"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Category|\n|---|\n|NEM|\n|ALA|\n|WIT|\n|EOS|\n|EUN|\n|V|\n|FLO|\n|BRA|\n|ADE|\n|KRM|\n|HEN|\n|VIB|\n|HOF|\n|PAD|\n|HYG|\n|GER|\n|NYS|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table256"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Party|\n|---|\n|Turnout|\n|Eligible voters|\n|New Democratic|\n|Green|\n|Conservative|\n|Liberal|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table257"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|U.S. Junior H.S.(Imperial)|\n|---|\n|42 ft|\n|Same as high school|\n|Non-existent|\n|Same as NCAA|\n|Same as NBA|\n|74 ft|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table258"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Written by|\n|---|\n|Justin Hurwitz|\n|Jeff Schaffer & Jackie Marcus Schaffer & Dave King|\n|Dan O'Keefe|\n|Jeff Schaffer & Jackie Marcus Schaffer|\n|Nick Kroll & Paul Scheer|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table259"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Notes|\n|---|\n|Jacmel, Haiti|\n|nan|\n|Company Founded by Nicholas \"Bada Bing\" Karagiannis in Tarpon Springs, Florida.|\n|Belgium|\n|Dominican Republic | Nicaragua|\n|Tuscan-style cigar|\n|Honduras|\n|Dominican Republic (Non premium cigar)|\n|Dominican Republica|\n|Distributed by House of Emilio Bodega Premium Blends Website|\n|Nicaraguan Tobacco|\n|All the Ashton branded cigars are made by Fuente in the Dominican Republic|\n|Switzerland|\n|Costa Rica|\n|Tortuga Island|\n|anise-flavored|\n|Nicaraguan Puros|\n|Dominican Republic|\n|Ecuadoran Vintage and Cuban Vintage Tobacco|\n|Dueling Cuban and non-Cuban brands, Non Cuban made in Honduras.|\n|Mexico - Nicaragua Blend \/ Filler: Mexico & Nicaragua, Binder: Nicaragua, Wrapper: Maduro Negro de San Andres\/Sumatra\/Habano|\n|Original Italian cigars|\n|Rolled in Estelli, Nicaragua at Joya de Nicaragua|\n|Dueling Cuban and non-Cuban brands|\n|Mexico - Mexico Tobacco Blend \/ Filler: Mexico, Binder: Mexico, Wrapper: Negro de San Andres\/Sumatra\/Habano|\n|Ybor City|\n|discontinued|\n|New York, NY; from Cuba via Tampa Fla. See also above \"Cumbalette\"|\n|Mexico|\n|Has used various makers over time|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Dominican Republic', 'Dominican Republica']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table26"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Urbanized area|\n|---|\n|Middletown|\n|Danbury|\n|Twin Rivers-Hightstown|\n|Waterbury|\n|Allentown-Bethlehem-Easton|\n|Trenton|\n|New Haven|\n|Kingston|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table260"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Retired names|\n|---|\n|Gustav, Ike, Paloma|\n|Fabian, Isabel, Juan|\n|Charley, Frances, Ivan, Jeanne|\n|Isidore, Lili|\n|Allison, Iris, Michelle|\n|Dean, Felix, Noel|\n|Keith|\n|Dennis, Katrina, Rita, Stan, Wilma|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table261"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|City|\n|---|\n|Auckland|\n|Manchester|\n|Birmingham|\n|Brisbane|\n|London|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table262"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Meaning|\n|---|\n|Denoting a green color|\n|Of or pertaining to the urinary bladder|\n|Of or pertaining to the wrist|\n|cell|\n|cartilage, gristle, granule, granular|\n|Of or pertaining to the heart (uncommon as a prefix)|\n|cold|\n|Of or pertaining to the cornu; a horn|\n|Of or pertaining to the cilia, the eyelashes; eyelids|\n|killing, destroying|\n|Cortex, or outer region|\n|Of or pertaining to bile|\n|spindle|\n|Denotes a blue color|\n|Pertaining to the head (as a whole)|\n|color|\n|skin|\n|Of or pertaining to the ribs|\n|chemistry, drug|\n|Of or pertaining to the lips|\n|Of or pertaining to the heart|\n|with, together, in association|\n|Of or relating to the hip, haunch, or hip-joint|\n|colon|\n|Of or pertaining to the cerebellum|\n|Of or pertaining to the gallbladder|\n|Of or pertaining to the neck, the cervix|\n|Of or pertaining to hair|\n|Applied to processes and parts of the body describing them likened or similar to horns|\n|against|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table263"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Province|\n|---|\n|Guangxi|\n|Anhui|\n|Guangdong|\n|Guizhou|\n|Henan|\n|Shandong|\n|Shanghai|\n|Jiangsu|\n|Chongqing|\n|Hebei|\n|Beijing|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table264"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Couple|\n|---|\n|Marco & Babsi|\n|Petra & Vadim|\n|Frenkie & Roswitha|\n|Dolly & Gerhard|\n|Brigitte & Willi|\n|Eva Maria & Thomas|\n|David & Kathrin|\n|Wolfram & Anna|\n|Sueli & Florian|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table265"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|HMS|\n|---|\n|HMS Gannet|\n|HMS Kipanga II|\n|HMS Nabswick|\n|HMS Nabaron|\n|HMS Godwit|\n|HMS Europa II|\n|HMS Corncrake|\n|HMS Nabthorpe|\n|HMS Grebe|\n|HMS Nuthatch|\n|HMS Ukussa|\n|HMS Gamecock|\n|HMS Malabar|\n|HMS Buzzard|\n|HMS Mentor II|\n|HMS Landrail|\n|HMS Gadwall|\n|HMS Spurwing|\n|HMS Curlew|\n|HMS Goldcrest|\n|HMS Raven|\n|HMS Hornbill|\n|HMS Nightjar|\n|HMS Merlin|\n|HMS Falcon|\n|HMS Robin|\n|HMS Peewit|\n|HMS Nabstock|\n|HMS Tern|\n|HMS Nabberley|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table266"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Dance \/ Song|\n|---|\n|Quickstep \/ \"Dr. Bones\" Freestyle \/ \"Footprints in the Sand\" Argentine Tango & Cha-cha-cha Fusion \/ \"All the Way\"|\n|Rumba \/ \"(I've Had) The Time of My Life\"|\n|Argentine Tango \/ \"Cry Little Sister\" Team freestyle \/ \"Ghostbusters\"|\n|Quickstep \/ \"Movin' on Up\"|\n|Jive \/ \"Crocodile Rock\"|\n|Foxtrot \/ \"Grace Kelly\" Jive dance-off \/ \"Travelin' Band\"|\n|Salsa \/ \"You're Never Fully Dressed Without a Smile\" Samba dance-off \/ \"Lean On\" Trio Jazz \/ \"Resolve\"|\n|Contemporary \/ \"Every Breath You Take\"|\n|Viennese Waltz \/ \"Roses and Violets\" Team-up dance (Charleston) \/ \"All That Jazz\" & \"Hot Honey Rag\"|\n|Tango \/ \"You Shook Me All Night Long\" Waltz \/ \"Only a Man\"|\n|Cha-cha-cha \/ \"Hold My Hand\"|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table267"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name|\n|---|\n|Ahmad Almutairi|\n|John Roberts|\n|Denis Schmitz|\n|Naser Saleh|\n|Toby Gold|\n|Daniel Bramall|\n|Andrew Small|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table268"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Minor Premiers|\n|---|\n|Tweed Heads Seagulls|\n|Burleigh Bears|\n|Northern Pride|\n|Ipswich Jets|\n|Townsville Blackhawks|\n|Wynnum Manly Seagulls|\n|Norths Devils|\n|Toowoomba Clydesdales|\n|Souths Logan Magpies|\n|Redcliffe Dolphins|\n|North Queensland Young Guns|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table269"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Winners|\n|---|\n|Green & Silley Weir|\n|Guinness|\n|Olympic|\n|Walls United (Atlas Road)|\n|Star|\n|Tower Hill|\n|Battersea Park Rovers|\n|Leytonstone|\n|Catford United|\n|West India & Millwall Docks|\n|Siemens Sports|\n|Alston Rangers|\n|Lewisham St. Mary's|\n|Minerva|\n|St. Mary's (Islington)|\n|Claptonians Reserves|\n|Tower Hil|\n|St. James' Old Boys|\n|District Line|\n|Putney Athletic|\n|Hotel Cecil|\n|--NO COMPETITION--|\n|J & M Sports|\n|Robins Athletic|\n|Burlington|\n|Flanders|\n|Harrodian|\n|Clapton|\n|Lyle Sports|\n|Ujamaa|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Tower Hil', 'Tower Hill']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table27"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Player|\n|---|\n|Bryan Bridges|\n|Petr Nedved|\n|Glen Goodall|\n|Victor Gervais|\n|Mitch Wilson|\n|Craig Channell|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table270"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Via|\n|---|\n|North City, Shoreline|\n|Mariner Park and Ride, Ash Way Park and Ride, Lynnwood Transit Center|\n|Lynnwood, 44th Avenue W, Lynnwood Transit Center|\n|Eastmont Park and Ride|\n|Edmonds Community College, Meadowdale|\n|Ash Way Park and Ride|\n|Canyon Park Park and Ride|\n|Aurora Village Transit Center|\n|Lynnwood Transit Center|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table271"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Website|\n|---|\n|http:\/\/renfrewcenter.com\/locations\/non-residential\/charlotte-nc|\n|http:\/\/www.carolinashealthcare.org\/carolinas-rehab|\n|http:\/\/www.carolinashealthcare.org\/cmc-pineville|\n|http:\/\/www.carolinashealthcare.org\/cmc|\n|http:\/\/www.novanthealth.org\/presbyterian-medical-center.aspx|\n|https:\/\/web.archive.org\/web\/20130531054839\/https:\/\/cshnc.com\/|\n|http:\/\/www.novanthealth.org\/charlotte-orthopedic-hospital.aspx|\n|http:\/\/www.carolinashealthcare.org\/cmc-mercy|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table272"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Class|\n|---|\n|Pop solo|\n|This year's newcomer|\n|The jury's special award|\n|Dance Orchestra\/Norwegian folk|\n|Pop band|\n|Jazz|\n|Dance\/techno|\n|This year's Spellemann|\n|Open class|\n|Traditional music|\n|Rock|\n|This year's song|\n|Hardrock|\n|Folk and Folk Rock|\n|Music for children|\n|This year's artist|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table273"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Venue|\n|---|\n|Lord's Cricket Ground|\n|Edgbaston|\n|The Gabba|\n|Eden Park|\n|Old Trafford Cricket Ground|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table274"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Notes|\n|---|\n|Python-scriptable folding editor\/IDE organized around multiple views (clones) of underlying text spread across files. Inspired by literate programming and similar to org-mode.|\n|organizes information as notes, grouped using tags|\n|TagSpaces is running completely offline on your computer, smartphone or tablet and does not require internet connection or online registration. You can create a personal \"wiki\" for tracking of your projects, ideas or memories.|\n|Freeform database|\n|organizer, todo list, reminders, email client, file storage, mindmap editor, contact book, ip pbx|\n|Used to record, manage and share any knowledge.|\n|Included with macOS|\n|Has a freeware offline client, Calendar (Windows)|\n|Free-form info repository; high-speed search, notes, calendar, email client (Originally \"Tornado Notes\" on DOS)|\n|A personal knowledge database management used for organizing, planning, learning.|\n|Included with GNOME|\n|Task management and scheduling|\n|\"Personal information manager\"|\n|Notes manager|\n|Included with Windows 7 and 8|\n|Freeform note-taking organizer. Portable.|\n|Addon for the Thunderbird e-mail client|\n|Hybrid Note-taking software and outliner|\n|Included with KDE|\n|Sync with major calendars\/contacts; sharing; passwords; lists; notes; free text;|\n|Graphical text editor designed to maintain a collection of locally stored wiki-pages.|\n|Provides a single, integrative document-like view of personal information as an overlay to the user's file system.|\n|Manages contacts, projects, email|\n|Personal information manager, Email client, Calendaring software|\n|Multi-level outline, folders, projects, contexts, prioritization, recurring items, due dates, reminders, sync cloud or wifi, No calendar.|\n|Hybrid personal note and information organizer|\n|Contact & project management|\n|organizes information into 3D landscapes|\n|Tags and folders. Auto-classifies files. Has wiki links.|\n|Single html file application used directly in browser.|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table275"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Notes|\n|---|\n|Recurring - Season 4|\n|Episode: \"Teachers\"|\n|7 episodes|\n|23 episodes|\n|Episode: \"The Satanic Piano\"|\n|119 episodes|\n|1 episode|\n|2 episodes|\n|Episode: \"Entrapment\"|\n|Episodes: \"Homeward Bound\", \"Love Stories\"|\n|Elections special with Bonet as host.|\n|Television movie|\n|5 episodes|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table276"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Wylie transliteration|\n|---|\n|blo bzang nyi ma|\n|thub bstan kun dga|\n|byang chub nam mkha'|\n|ye shes chos 'phel|\n|thub bstan lung rtogs bstan 'dzin 'phrin las|\n|blo bzang snyan grags rgya mtsho|\n|blo bzang sbyin pa|\n|blo bzang rgyal mtshan|\n|blo bzang tshul khrims|\n|thub bstan nyin byed|\n|byams pa chos grags|\n|blo bzang tshul khrims dpal ldan|\n|To be advised|\n|tshul khrims dar rgyas|\n|grags pa don grub|\n|mkhyen rab yon tan rgya mtsho|\n|thub bstan nyi ma lung rtogs bstan 'dzin nor bu|\n|bkra shis stong thun|\n|ye shes don ldan|\n|ngag dbang blo bzang bstan pa'i rgyal mtshan|\n|'jam dpal gzhan phan|\n|lhun grub brtson 'grus|\n|blo bzang mkhyen rab dbang phyug|\n|ngag dbang nor bu|\n|jam dbyangs dam chos|\n|ye shes dbang ldan|\n|lung rig rnam rgyal|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table277"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Title|\n|---|\n|\"The Case of the Abandoned Street\"|\n|The Case of the Shorn Sheep|\n|\"The Case of the Phony Half\"|\n|\"The Case of the Numbered Days\"|\n|\"The Case of the Still Waters\"|\n|\"The Case of the Obedient Son\"|\n|\"The Case of the Sinful Past\"|\n|\"The Case of the Good Boy\"|\n|\"The Case of the Educated Slug\"|\n|\"The Case of the Delicate Racket\"|\n|\"The Case of the Counterfeit Christmas\"|\n|\"The Case of the Curious Convict\"|\n|\"The Case of the Million Dollar Wash\"|\n|\"The Case of the Sparkling Alibi\"|\n|\"The Case of the Careful Swindler\"|\n|\"The Case of the Deadly Garbage\"|\n|\"The Case of the Vanishing Victim\"|\n|\"The Case of the Deadly Formula\"|\n|\"The Case of the Hidden Profile\"|\n|\"The Case of the Honest Thief\"|\n|\"The Case of the Deadly Counterfeit\"|\n|\"The Case of the Automatic Killer\"|\n|\"The Case of the Foolproof Set-Up\"|\n|\"The Case of the Ace of Hearts\"|\n|\"The Case of the Fatal Souvenir\"|\n|\"The Case of the Brotherly Love\"|\n|\"The Case of the Lonely Student\"|\n|\"The Case of the Ambitious Brothers\"|\n|\"The Case of the Unlawful Spenders\"|\n|\"The Case of the Violent Artist\"|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table278"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Player|\n|---|\n|Bryce Platt|\n|Jakob LaPointe|\n|Jakob Stukel|\n|Colby Harmsworth (C)|\n|Andrew Fyten|\n|Dawson Martin|\n|Keegan Kanzig|\n|Mark Kastelic|\n|Carsen Twarynski|\n|Pavel Karnaukhov|\n|Jake Bean|\n|Michael Zipp (A)|\n|Matt Dorsey|\n|Matteo Gennaro|\n|Jackson Houck|\n|Cody Porter|\n|Nik Amundrud|\n|Beck Malenstyn|\n|Jordan Stallard|\n|Tyler Mrkonjic|\n|Taylor Sanheim (A)|\n|Radel Fazleev|\n|Travis Sanheim|\n|Vladislav Yeryomenko|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table279"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Role|\n|---|\n|Seema\/Shalani Saxena|\n|Divya Thapar|\n|Bharati|\n|Pratusha|\n|Tanvi Singh|\n|Kaajal|\n|Seema|\n|Divya|\n|Laila \/ Sitara|\n|Sharmila|\n|Payal|\n|Renu|\n|Rekha|\n|Rani|\n|Kusum|\n|Deepa|\n|Pooja|\n|Kajal|\n|Surya|\n|Chittemma|\n|Neha|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Kaajal', 'Kajal']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table28"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Commission|\n|---|\n|Thorn|\n|Jenkins|\n|Delors I|\n|Barroso I|\n|Delors III|\n|Delors II|\n|Ortoli|\n|Juncker|\n|Prodi|\n|Barroso II|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table280"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|End|\n|---|\n|Lewisham Shopping Centre|\n|London Bridge bus station|\n|South Croydon garage|\n|Brixton station|\n|Grove Park|\n|Croydon|\n|Barnet Church|\n|Woodford Wells|\n|Woodford King's Avenue|\n|Kingston|\n|Stanley Technical High School|\n|New Cross Gate|\n|Charville Lane Estate|\n|Hampton Hill|\n|Walthamstow bus station|\n|Woolwich|\n|Morden station|\n|Clapton Park Estate|\n|Hounslow bus station|\n|New Addington|\n|Colindale ASDA|\n|Charles Darwin School|\n|Forestdale|\n|Heathrow Airport Central bus station|\n|Liverpool Street bus station|\n|Aldwych|\n|Shirley Monks Orchard|\n|Marble Arch|\n|Northwick Park Hospital|\n|Addington Village Interchange|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table281"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Label|\n|---|\n|OctoArts \/ EMI (Philippines)|\n|Viva Records (Philippines)|\n|Alpha Records Corporation (Philippines)|\n|Stallion Records POPPSINC Phils. & Artistika Records Phils|\n|Mayon Recordings|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table282"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Candidate|\n|---|\n|Liberal Democrat hold|\n|Hugh Millar|\n|Elsie Truscott|\n|John Milne|\n|Turnout|\n|Majority|\n|Beryl Humphrey|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table283"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name|\n|---|\n|Cristian Tello|\n|Alex Song|\n|Gerard Deulofeu|\n|Xavi|\n|Pedro|\n|Ibrahim Afellay|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table284"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Commissioner|\n|---|\n|Peter Sutherland|\n|Phil Hogan|\n|Patrick Hillery|\n|Michael O'Kennedy|\n|Ray MacSharry|\n|Richard Burke|\n|David Byrne|\n|Charlie McCreevy|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table285"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Party|\n|---|\n|New Democracy|\n|Christian Democrats|\n|Centre Party|\n|Social Democrats|\n|Left Party|\n|Moderate Party|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table286"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Runner(s)-up|\n|---|\n|Sammy Byrd|\n|Sam Snead|\n|Denny Shute, Craig Wood|\n|Ralph Guldahl|\n|Ben Hogan|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table287"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Candidate|\n|---|\n|Turnout|\n|Aidan Crawley|\n|Labour gain from Conservative|\n|Majority|\n|Lionel Berry|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table288"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Grade|\n|---|\n|D+|\n|B|\n|C|\n|F|\n|A|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table289"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Moving from|\n|---|\n|Torino|\n|Columbus Crew|\n|NSC Minnesota Stars|\n|Philadelphia Union|\n|Real Salt Lake|\n|Notts County|\n|Rosario Central|\n|Guadalajara|\n|F.C. New York|\n|Atlas|\n|Colombus Crew|\n|Vancouver Whitecaps FC|\n|Montevideo Wanderers|\n|Chicago Fire|\n|Brann|\n|1860 Munich|\n|Houston Dynamo|\n|San Lorenzo|\n|Braga|\n|Sporting Kansas City|\n|Hull City|\n|Racing Club|\n|Los Angeles Galaxy|\n|Crystal Palace Baltimore|\n|Chacarita Juniors|\n|FC Santa Rosa|\n|Beerschot AC|\n|FC Dallas|\n|D.C. United|\n|Dayton Dutch Lions|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Columbus Crew', 'Colombus Crew']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table29"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|1949(WIM)|\n|---|\n|A|\n|F|\n|W|\n|SF|\n|1R|\n|4R|\n|3R|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table290"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discoverer(s)|\n|---|\n|K. Endate, K. Watanabe|\n|Oak Ridge Observatory|\n|S. Otomo|\n|S. Ueda, H. Kaneda|\n|C. W. Hergenrother|\n|L. Tesi, A. Boattini|\n|H. E. Holt|\n|C. J. van Houten, I. van Houten-Groeneveld, T. Gehrels|\n|Y. Kushida, O. Muramatsu|\n|Copenhagen Obs.|\n|S. Inoda, T. Urata|\n|E. F. Helin, S. J. Bus|\n|T. Niijima, T. Urata|\n|SCAP|\n|T. Niijima, K. Kanai|\n|H. Debehogne|\n|L. I. Chernykh|\n|L. V. Zhuravleva|\n|T. Kobayashi|\n|E. Bowell|\n|A. Nakamura|\n|T. B. Spahr|\n|J. B. Child|\n|NEAT|\n|Y. Oshima|\n|E. F. Helin|\n|A. Mrkos|\n|E. W. Elst|\n|L. G. Karachkina|\n|Y. Shimizu, T. Urata|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table291"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Network|\n|---|\n|Nickelodeon|\n|ABC|\n|Disney|\n|CBS|\n|TV Land|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table292"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discoverer(s)|\n|---|\n|M. Arai, H. Mori|\n|S. Otomo|\n|C.-I. Lagerkvist|\n|H. Debehogne|\n|K. Endate, K. Watanabe|\n|L. G. Karachkina|\n|A. Nakamura|\n|C. S. Shoemaker, E. M. Shoemaker|\n|M. Akiyama, T. Furuta|\n|E. F. Helin, S. J. Bus|\n|S. J. Bus|\n|S. Ueda, H. Kaneda|\n|San Vittore Obs.|\n|Spacewatch|\n|T. Kobayashi|\n|H. E. Holt|\n|H. Shiozawa, M. Kizawa|\n|H. E. Holt, D. H. Levy|\n|E. F. Helin|\n|A. Sugie|\n|M. Yanai, K. Watanabe|\n|T. Urata|\n|L. I. Chernykh|\n|A. Takahashi, K. Watanabe|\n|S. Inoda, T. Urata|\n|K. J. Lawrence|\n|A. Mrkos|\n|C. J. van Houten, I. van Houten-Groeneveld, T. Gehrels|\n|Bassano Bresciano Obs.|\n|UESAC|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table293"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discovery(Site)|\n|---|\n|Palomar|\n|Geisei|\n|Crimea-Simeis|\n|La Silla|\n|Turku|\n|Heidelberg|\n|Johannesburg|\n|Harvard Observatory|\n|Cerro El Roble|\n|Zimmerwald|\n|El Leoncito|\n|Nanking|\n|Anderson Mesa|\n|Nauchnij|\n|Hamburg-Bergedorf|\n|Brooklyn|\n|Uccle|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table294"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Portrayed by|\n|---|\n|Melissa DiMarco|\n|Dan Woods|\n|Stacie Mistysyn|\n|Stefan Brogren|\n|Cory Lee|\n|Pat Mastroianni|\n|Amanda Stepto|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table295"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Venue, city|\n|---|\n|RAOB Hall, Belfast|\n|Jersey|\n|Edinburgh|\n|Tower Circus, Blackpool|\n|Leicester Square Hall, London|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table296"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Landmarks|\n|---|\n|St. Mary's Episcopal Church|\n|Timonium Light Rail Stop|\n|Soldiers Delight Natural Environmental Area|\n|Home of Cal Ripken Jr.|\n|Towson Town Center Towson Sheraton Goucher College Stella Maris Hospice Loch Raven Reservoir and Dam|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table297"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name|\n|---|\n|Martensville|\n|Estevan|\n|Melfort|\n|Swift Current|\n|Saskatoon|\n|Regina|\n|Meadow Lake|\n|Weyburn|\n|Humboldt|\n|Flin Flon (part)|\n|Moose Jaw|\n|Lloydminster (part)|\n|Warman|\n|North Battleford|\n|Yorkton|\n|Melville|\n|Prince Albert|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table298"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|5|\n|---|\n|FUJ|\n|MEX|\n|MEX 1|\n|COA 4|\n|COA Ret|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table299"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Oxford(College)|\n|---|\n|Magdalen|\n|Christ Church|\n|Worcester|\n|St John's|\n|Pembroke|\n|Magadalen|\n|Corpus Christi|\n|Lincoln|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Magadalen', 'Magdalen']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table3"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Music|\n|---|\n|K. V. Mahadevan|\n|S. P. Kodandapani|\n|P. Adinarayana Rao|\n|S. A. Rajkumar|\n|Saluri Rajeswara Rao|\n|K. Chakravarthy|\n|Saketh Sairam|\n|T. V. Raju|\n|Ilayaraja|\n|Devi Sri Prasad|\n|Ilaiyaraaja|\n|Vandemataram Srinivas|\n|Mickey J. Meyer|\n|M. M. Keeravani|\n|Koti|\n|Deva|\n|Ramani Prasad|\n|R. Anil, E. S. Murthy|\n|RP Patnaik|\n|Mani Sharma|\n|Ramesh Naidu|\n|B. Gopalam, Saluri Rajeshwara Rao|\n|-|\n|S.P.Balasubrahmanyam|\n|M. M. Srilekha|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Ilaiyaraaja', 'Ilayaraja']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table30"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Rank|\n|---|\n|Major|\n|Leutnant of the Reserves|\n|Hauptmann of the Reserves|\n|Feldwebel|\n|Oberleutnant zur See|\n|Oberleutnant of the Reserves|\n|Leutnant|\n|Oberstleutnant|\n|Hauptmann|\n|Wachtmeister|\n|Major im Generalstab (in the General Staff)|\n|Generalmajor|\n|Major of the Reserves|\n|Oberwachtmeister|\n|Gefreiter|\n|Oberleutnant|\n|Unteroffizier|\n|Oberst|\n|Obergefreiter|\n|Oberfeuerwerker|\n|Oberstleutnant of the Reserves|\n|Generalleutnant|\n|Oberfeldwebel|\n|Fahnenjunker-Feldwebel|\n|Rittmeister|\n|Stabsgefreiter|\n|Volkssturmmann (holding a rank equivalent to Major)|\n|Oberleutnant zur See of the Reserves|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table300"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|1947(AUS)|\n|---|\n|A|\n|QF|\n|SF|\n|2R|\n|W|\n|F|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table301"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Title|\n|---|\n|\"The Anchor Baby\"|\n|\"A Krampus Carol\"|\n|\"Our Dinner With Andre\"|\n|\"The Hoodie\"|\n|\"The Vapora Sport\"|\n|\"12.12.12\"|\n|\"Bro-Lo El Cordero\"|\n|\"The Tailgate\"|\n|Training Camp|\n|\"The Freeze Out\"|\n|\"Judge MacArthur\"|\n|\"The Curse of Shiva\"|\n|\"The Breastalyzer\"|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table302"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|U.S. Junior H.S.(Metric)|\n|---|\n|Same as NBA|\n|Same as NCAA|\n|Non-existent|\n|12.80 m|\n|22.56 m|\n|Same as high school|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table303"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Opponent#|\n|---|\n|Memphis|\n|South Florida*|\n|Southern Miss|\n|East Carolina|\n|Pittsburgh*|\n|No. 7 Florida Gators*|\n|UAB|\n|Tulane|\n|Houston|\n|Marshall|\n|Villanova Wildcats*|\n|Rice|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table304"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discoverer(s)|\n|---|\n|L. V. Zhuravleva|\n|S. Arend|\n|H. van Gent|\n|C. S. Shoemaker|\n|P. Wild|\n|L. Oterma|\n|H. Debehogne, G. DeSanctis|\n|S. Sei|\n|T. Seki|\n|A. Mrkos|\n|E. F. Helin, S. J. Bus|\n|K. Reinmuth|\n|H. Alikoski|\n|R. M. West|\n|E. Bowell|\n|M. Watt|\n|N. S. Chernykh|\n|C. W. Tombaugh|\n|H. Potter, A. Lokalov|\n|Crimean Astrophysical Obs.|\n|H. Kosai, K. Furukawa|\n|H. Debehogne|\n|C.-I. Lagerkvist|\n|T. Furuta|\n|C. Torres|\n|L. I. Chernykh|\n|Indiana University|\n|L. Kohoutek|\n|I. van Houten-Groeneveld|\n|E. Delporte|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table305"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Persian|\n|---|\n|bist|\n|se|\n|yak, yek|\n|nuh, noh|\n|sad|\n|du, do|\n|haft|\n|dah|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table306"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Party \/ List|\n|---|\n|DPA|\n|SDSM and allies|\n|DUI|\n|DOM|\n|VMRO-DPMNE and allies|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table307"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discoverer(s)|\n|---|\n|N. S. Chernykh|\n|C.-I. Lagerkvist|\n|H. Debehogne, G. DeSanctis|\n|H. E. Wood|\n|L. I. Chernykh|\n|F. Rigaux|\n|M. F. Wolf|\n|S. Arend|\n|T. Seki|\n|C. S. Shoemaker, E. M. Shoemaker|\n|E. F. Helin, S. J. Bus|\n|E. Bowell|\n|Indiana University|\n|A. Mrkos|\n|L. G. Karachkina|\n|Purple Mountain Obs.|\n|G. Van Biesbroeck|\n|J. A. Bruwer|\n|H. Kosai, K. Furukawa|\n|C. J. van Houten, I. van Houten-Groeneveld, T. Gehrels|\n|L. V. Zhuravleva|\n|C. Hoffmeister|\n|B. A. Skiff, N. G. Thomas|\n|P. Wild|\n|H. Thiele|\n|H.-E. Schuster|\n|H. Debehogne|\n|Harvard Obs.|\n|C. S. Shoemaker, S. J. Bus|\n|C. S. Shoemaker|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table308"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Broadcaster|\n|---|\n|Kombat Sport|\n|ESPN3|\n|Fight Channel|\n|Sky Sport|\n|KBS N|\n|Digi Sport 2|\n|Sport TV|\n|Combat Channel|\n|ATV|\n|Spike|\n|StarTimes|\n|Digi Sport 1|\n|Ring|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table309"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Role|\n|---|\n|Mario Cavaradossi|\n|Paolo|\n|Marius|\n|Duc de Mantoue|\n|Don Carlos|\n|Rodolfo|\n|Turiddu|\n|Calaf|\n|Des Grieux|\n|Werther|\n|Ruggero|\n|Roberto|\n|Ulysse|\n|Rodrigue|\n|Canio|\n|Hoffmann|\n|Jean|\n|Pinkerton|\n|Edgardo|\n|Alfredo|\n|Cyrano|\n|Fritz|\n|MacDuff|\n|Don Carlo|\n|Riccardo|\n|Le Chevalier des Grieux|\n|Manrico|\n|Nadir|\n|Faust|\n|Fiesque|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Don Carlos', 'Don Carlo']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table31"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Candidate|\n|---|\n|Margot Hartley|\n|Liberal Democrat gain from Conservative|\n|Paul Dunbar|\n|Bill Weights|\n|Majority|\n|Dorothy M. Kirk|\n|Colin Breed|\n|Warwick Lightfoot|\n|Turnout|\n|James Wonnacott|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table310"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|1945(USA)|\n|---|\n|W|\n|A|\n|QF|\n|1R|\n|F|\n|SF|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table311"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name|\n|---|\n|Tim Sills|\n|Marvin Williams|\n|Michael Brough|\n|Chris Todd|\n|Martin Rice|\n|Mo Camara|\n|Chris Hargreaves|\n|Tyrone Thompson|\n|Lee Hodges|\n|Ben Joyce|\n|Steve Adams|\n|Mustapha Carayol|\n|Matt Green|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table312"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Writer|\n|---|\n|Rowena Rumble|\n|Sue Teddern|\n|Helen Leadbeater|\n|Veronica Rumble|\n|Simon Frith|\n|Andy Rashleigh|\n|Nicholas McInerny|\n|Veronica Henry|\n|Charles Hodges|\n|Diana Souhami|\n|Ben Aaronovitch|\n|Jonathan Myserson|\n|Robert Smith|\n|William Smethurst|\n|Nick Warburton|\n|Steve May|\n|Torrey Steed|\n|Margaret Phelan|\n|Graham Harvey|\n|Jonathan Myerson|\n|Julian Spilsbury|\n|Joanne Maguire|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table313"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Candidate|\n|---|\n|Majority|\n|Anthony Wood|\n|John Gill|\n|Turnout|\n|Independent hold|\n|Christopher Turner|\n|Neil Basil|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table314"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name|\n|---|\n|Wide Network Solutions|\n|Globecast|\n|Arqiva|\n|SKY Italia|\n|Satellite MEDIA|\n|Eutelsat|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table315"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Operator|\n|---|\n|Arriva Trains Wales|\n|Abellio ScotRail|\n|Gatwick Express|\n|South West Trains|\n|Great Western Railway Grand Central Hull Trains|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table316"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discovery(Site)|\n|---|\n|Yatsugatake|\n|Siding Spring|\n|Colleverde|\n|Stroncone|\n|Dynic|\n|Tautenburg Observatory|\n|La Silla|\n|Palomar|\n|Kitt Peak|\n|Kushiro|\n|Kitami|\n|Kiyosato|\n|Caussols|\n|Geisei|\n|Oizumi|\n|Sormano|\n|Yakiimo|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table317"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name|\n|---|\n|NTT DoCoMo|\n|Deutsche Telekom|\n|Intel Corporation|\n|General Electric|\n|Microsoft|\n|Nippon Telegraph and Telephone|\n|Cisco Systems|\n|Lucent Technologies|\n|Exxon Mobil|\n|Wal-Mart|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table318"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Location|\n|---|\n|St. John's Wood, London|\n|Mount Maunganui, Bay of Plenty|\n|Tunbridge Wells, Kent|\n|Galle, Southern Province|\n|Lucknow, Uttar Pradesh|\n|Harare|\n|Jodhpur, Rajasthan|\n|Nairobi, Nairobi County|\n|Kingston, Jamaica (West Indies)|\n|North Sound, Antigua and Barbuda (West Indies)|\n|Kanpur, Uttar Pradesh|\n|Canberra, Australian Capital Territory|\n|Kolkata, West Bengal|\n|Jamshedpur, Jharkhand|\n|Ayr, Ayrshire|\n|Wellington, Wellington|\n|Basseterre, Saint Kitts and Nevis (West Indies)|\n|Port Elizabeth, Eastern Cape|\n|King City, Ontario|\n|Belfast, County Antrim|\n|Tangier, Tangier-Tetouan|\n|Glasgow, Strathclyde|\n|Wellington|\n|Bangalore, Karnataka|\n|Queenstown, Otago|\n|Manchester, Greater Manchester|\n|Visakhapatnam, Andhra Pradesh|\n|Cuttack, Odisha|\n|Taunton, Somerset|\n|Melbourne, Victoria|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table319"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name of place|\n|---|\n|Crawford Fork|\n|Chastang|\n|Cottondale|\n|Coaling|\n|Chilton|\n|Clarksville|\n|Country Club Estates|\n|Carara|\n|Chambers|\n|Cardiff|\n|Catoma|\n|Carns|\n|Calera|\n|Clackville|\n|Cox Beach|\n|Claysville|\n|Campbellville|\n|Carolina|\n|Coleman|\n|Cobbs Ford|\n|Crockett Junction|\n|Chesson|\n|Cooks|\n|Cold Springs|\n|Copeland|\n|Cedar Bluff|\n|Centenary|\n|Cedar Hill|\n|Cobb Town|\n|Curry|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Clackville', 'Clarksville']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table32"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Website|\n|---|\n|www.eutelsat.com|\n|www.widenetworks.net|\n|www.arqiva.com|\n|www.globecast.com|\n|www.sky.it|\n|www.sat.me|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table320"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Player|\n|---|\n|Al Oliver|\n|Buddy Bell|\n|Gorman Thomas|\n|Frank White|\n|Tony Armas|\n|Dwight Evans|\n|Fred Lynn|\n|Eddie Murray|\n|Ted Simmons|\n|Tom Paciorek|\n|Rick Burleson|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table321"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|1946(WIM)|\n|---|\n|3R|\n|F|\n|A|\n|1R|\n|QF|\n|SF|\n|W|\n|4R|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table322"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Album title|\n|---|\n|Shadows and Cracks|\n|Rhumba Lee|\n|Take the Gamble|\n|That's What I'm Talkin' About|\n|Painted Blue|\n|Hey Sugar|\n|Excuses Plenty|\n|Allow Me to Confess|\n|It Wasn't Real|\n|Manifestation|\n|The Arson's Match: Peter Karp, Live in NYC|\n|Crawling the Walls|\n|On the Floor|\n|What's It Gonna Take|\n|Cartel|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table323"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Country|\n|---|\n|United States|\n|Cuba|\n|Venezuela|\n|Chile|\n|Spain|\n|Colombia|\n|Canada|\n|Argentina|\n|Germany|\n|Peru|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table324"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Producer(s)|\n|---|\n|Q-Tip|\n|Boi-1da Frank Dukes Hudson Mohawke The-Dream|\n|Timbaland Death|\n|J Gramm Metro Boomin Sean \"Puff Daddy\" Combs G Koop|\n|Baauer West Mano|\n|Timbaland Milli Beatz|\n|Puff Daddy Myrick Davidson|\n|Puff Daddy Mario Winans Sean C & LV Honorable C.N.O.T.E. Yung Dev|\n|West Pope J. Cole|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table325"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discovery(Site)|\n|---|\n|La Silla|\n|Siding Spring|\n|Yatsugatake|\n|Kiyosato|\n|Yorii|\n|Kitt Peak|\n|Kitami|\n|Tautenburg Observatory|\n|Oizumi|\n|Caussols|\n|Dynic|\n|Yakiimo|\n|Kushiro|\n|Geisei|\n|Cima Ekar|\n|Kani|\n|Palomar|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table326"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Player of the year(Player)|\n|---|\n|Shane Perry|\n|Javarn White|\n|Nat Bowman|\n|Michael Roberts|\n|Denny Lambert|\n|Luke Page|\n|Ricky Bird|\n|Shannon Walker|\n|Chris Lawler|\n|Ryan Cullen|\n|Pat Templeman|\n|?|\n|Robbie Schmidt|\n|Luke Capewell|\n|Brandon Costin|\n|Cody Walker|\n|Scott Thorburn|\n|Alan Wieland|\n|Jace Van Dijk|\n|Ian Lacey|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table327"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Guest(s)|\n|---|\n|Charles Grodin|\n|Scott Thompson, Joshua Jackson|\n|Geraldo Rivera, Rachel Griffiths|\n|Ana Gasteyer, Malcolm McDowell|\n|Fran Drescher, D. L. Hughley|\n|Tom Brokaw, Caroline Rhea|\n|Will Ferrell, Ken Olin|\n|Jeff Daniels, Christina Applegate|\n|Alec Baldwin, Jordana Brewster|\n|Lyle Lovett, David Brenner, Amy Sedaris|\n|John Leguizamo, Tom Green|\n|Martin Lawrence, Seth Green|\n|Ryan Gosling, Thomas Gibson|\n|Gina Gershon, Dylan McDermott|\n|Jason Priestley, George Hamilton|\n|Jon Stewart, Louis C.K., Annabella Sciorra|\n|Michael Caine, Garcelle Beauvais|\n|Kevin Nealon, Ed Byrne, Michael Michele|\n|Chris Rock, Jennifer Esposito|\n|Dave Foley, Jennifer Grey|\n|Stephen King, Gloria Reuben|\n|Bill Maher, Fabio|\n|Dave Foley, Garth Brooks|\n|Paul Reiser, Chris Kattan|\n|Tom Selleck, William Shatner|\n|Scott Thompson, Ruby Wax|\n|Barney Frank, Wanda Sykes|\n|Rudy Giuliani, Ryan Phillippe|\n|Pierce Brosnan, Al Goldstein|\n|Fred Savage, Garry Marshall, Shannon Hall|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table328"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Range Name|\n|---|\n|Violet|\n|Grey|\n|Red|\n|Orange|\n|Blue|\n|Yellow|\n|Green|\n|White\/Black|\n|Brown|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table329"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Golfer|\n|---|\n|David Duval|\n|John Daly|\n|Tiger Woods|\n|Retief Goosen|\n|Karrie Webb|\n|Ernie Els|\n|Hank Kuehne|\n|Lee Trevino|\n|Jack Nicklaus|\n|Rory McIlroy|\n|Phil Mickelson|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table33"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|1948(USA)|\n|---|\n|W|\n|2R|\n|3R|\n|A|\n|F|\n|QF|\n|SF|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table330"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Category|\n|---|\n|MAR|\n|URS|\n|HYG|\n|THM|\n|KLI|\n|MRC|\n|KOR|\n|MIS|\n|AMO|\n|V|\n|H|\n|GEF|\n|ERI|\n|EUN|\n|EOS|\n|PHO|\n|RAF|\n|KAR|\n|FLO|\n|HEN|\n|PAD|\n|NYS|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table331"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Athlete|\n|---|\n|Charlie Buckingham|\n|David Hughes Stuart McNay|\n|Caleb Paine|\n|Thomas Barrows III Joseph Morris|\n|Pedro Pascual|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table332"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Unnamed: 0|\n|---|\n|Scott Holtzman (c)|\n|Pearl Gonzalez|\n|Luis Santos|\n|Luke Sanders|\n|Heather Jo Clark|\n|Deivison Ribeiro|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table333"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Theme|\n|---|\n|Food & Drink|\n|Air & Wind|\n|Board Games|\n|NASA|\n|Music|\n|Love|\n|Fire|\n|Birds|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table334"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Remarks|\n|---|\n|Originally classified as Kr Kl T K and H Kl T K|\n|Double locomotive from two IKs|\n|Originally classified as F T K|\n|Also classified as H M T K V|\n|Originally classified as H V TK|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table335"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|First Round|\n|---|\n|Evgeny Karlovskiy|\n|Jeremy Jahn|\n|Andrey Golubev|\n|Jan-Lennard Struff|\n|Farrukh Dustov|\n|Julian Reister|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table336"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Title|\n|---|\n|The Earth Day Special|\n|St. Elsewhere|\n|Lathe of Heaven|\n|ABC Afterschool Special|\n|New Eden|\n|The Cosby Show|\n|Tales from the Darkside|\n|New Girl|\n|Drunk History|\n|A Different World|\n|The Red Road|\n|Why Bother Voting?|\n|Girls|\n|Life on Mars|\n|Ray Donovan|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table337"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Home team|\n|---|\n|Northeastern State|\n|Lindenwood|\n|Central Oklahoma|\n|Central Missouri|\n|Missouri Southern|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table338"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Country|\n|---|\n|Isle of Man|\n|Bermuda|\n|Papua New Guinea|\n|Australia|\n|Kenya|\n|Wales|\n|Singapore|\n|Jamaica|\n|Sri Lanka|\n|Egypt|\n|England|\n|Malta|\n|Northern Ireland|\n|Scotland|\n|Hong Kong|\n|Sierra Leone|\n|Canada|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table339"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Artist|\n|---|\n|Fiona Garvey|\n|Caoimhe McCarthy|\n|Nerissa Moore|\n|Kristyna Hayes|\n|Emma Houlihan|\n|Luke Ray Lacey|\n|Mags White|\n|Miranda Trouabal|\n|Emmie Reek|\n|Megan Quinn|\n|Andrew Berry|\n|Pauric O'Meara|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table34"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Title|\n|---|\n|Wes Craven's New Nightmare|\n|A Nightmare on Elm Street 3: Dream Warriors|\n|Truth or Dare|\n|The Survivors|\n|I Am Nancy|\n|Fugitive Mind|\n|Star Trek Into Darkness|\n|The Demolitionist|\n|Nickel Mountain|\n|The Butterfly Room|\n|Rumble Fish|\n|Fantasm|\n|Intruder|\n|The Sub|\n|Home|\n|Shocker|\n|Hellraiser: Judgment|\n|The Outsiders|\n|Don't Fall Asleep|\n|Never Sleep Again: The Elm Street Legacy|\n|The Bet|\n|Road Trash|\n|A Nightmare on Elm Street|\n|Flashlight|\n|Vault of the Macabre II|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table340"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|1949(AUS)|\n|---|\n|A|\n|QF|\n|SF|\n|W|\n|F|\n|2R|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table341"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|1948(AUS)|\n|---|\n|QF|\n|A|\n|F|\n|2R|\n|W|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table342"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Pos.|\n|---|\n|RW|\n|P|\n|LB|\n|GK|\n|CB|\n|RB|\n|LW|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table343"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Nation|\n|---|\n|Germany|\n|Austria|\n|United States|\n|Italy|\n|Australia|\n|Poland|\n|Canada|\n|Brazil|\n|Ireland|\n|Belgium|\n|New Zealand|\n|France|\n|Great Britain|\n|Sweden|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table344"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Role|\n|---|\n|Herself|\n|Landlady|\n|Extra|\n|Callie Wells|\n|Moto|\n|Victim|\n|Christy Carruthers|\n|Heather|\n|Narrator|\n|Sally|\n|Dorothy|\n|Senora Babcock|\n|Suzanne Hicks|\n|Donna Boone (Adult)|\n|Nancy Thompson|\n|Heather Langenkamp|\n|???|\n|Julie|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table345"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Colour|\n|---|\n|Red|\n|Green|\n|Silver|\n|Blank|\n|Black|\n|Gold|\n|Blue|\n|White|\n|Purple|\n|Bronze|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table346"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Musical\/entertainment guest(s)|\n|---|\n|Ozomatli|\n|Kelly Willis|\n|The Flys|\n|Arj Barker|\n|Everlast|\n|Patton Oswalt|\n|Ginuwine|\n|R.E.M.|\n|Upright Citizens Brigade|\n|Greg Fitzsimmons|\n|Everclear|\n|Link|\n|John Pizzarelli|\n|Fear of Pop|\n|Crackpipe Wisconsin|\n|Train|\n|Deborah Cox|\n|Patti Smith|\n|Local H|\n|Simbi Khali|\n|Lewis Black|\n|Al Green|\n|Trans-Siberian Orchestra|\n|Case|\n|Canibus|\n|Robert Cray|\n|nan|\n|Mase|\n|Tyrese|\n|Los Super Seven|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table347"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Eliminated|\n|---|\n|Phoenix|\n|Mimi Imfurst|\n|Venus D-Lite|\n|India Ferrah|\n|Manila Luzon|\n|Shangela|\n|Mariah|\n|Stacy Layne Matthews|\n|Yara Sofia|\n|Delta Work|\n|Carmen Carrera|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table348"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Class|\n|---|\n|Hg VII TK|\n|II K (old)|\n|VI K|\n|III K|\n|I K|\n|II K (new)|\n|IV K|\n|V K|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table349"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Team 2|\n|---|\n|Simba SC|\n|Mbilinga FC|\n|US Chaouia|\n|JS Saint-Pierroise|\n|Aigle Nkongsamba|\n|Fire Brigade SC|\n|Stade Malien|\n|Orlando Pirates|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table35"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Party|\n|---|\n|Labour|\n|Turnout|\n|Liberal|\n|Majority|\n|Liberal gain from Conservative|\n|Conservative|\n|Liberal hold|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table350"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|comment|\n|---|\n|not notable|\n|because of historical reasons|\n|popular because of TV, but I couldn't find a scientific article about this Atlantis hyp. There are scienific articles about the natural geological origin of what S. ment to be artificial.|\n|It is said that there was an exhibition\/conference about Sardinia at the Unesco, but I didn't find a confimation that this exhibition\/speek\/conference was Atlantis related.|\n|also because of historical reasons|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table351"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Musical\/entertainment guest(s)|\n|---|\n|nan|\n|Jamie Lee|\n|Transviolet|\n|JR JR|\n|Rachel Platten|\n|X Ambassadors|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table352"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Candidate|\n|---|\n|Majority|\n|K. Jones|\n|C. Hutchinson *|\n|A. E. Janes|\n|Liberal gain from Conservative|\n|K. O. Rainford|\n|Liberal hold|\n|E. W. Mossford|\n|Fairclough|\n|N. Wood *|\n|Turnout|\n|P. V. Wall|\n|M. Kingston|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table353"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Description|\n|---|\n|Lannik Jedi Master and Jedi Council member in The Phantom Menace, Attack of the Clones, and The Clone Wars.|\n|Imperial Navy officer who serves as Darth Vader's aide aboard the Star Destroyer Devastator in A New Hope. He reports to Vader regarding the status of the stolen Death Star plans.|\n|Sith Lord mentioned in Revenge of the Sith who was obsessed with finding the key to immortality. Palpatine tells Anakin Skywalker that Darth Plagueis became so powerful that he was able to create life by influencing the midi-chlorians, and had the power to save people from dying. Plagueis was killed in his sleep by his apprentice: Palpatine himself.|\n|A Resistance X-wing pilot introduced in The Force Awakens. She is shown to idolize Luke Skywalker in the spin-off novel The Weapon of a Jedi: A Luke Skywalker Adventure. The character also appears in the comic series Star Wars: Poe Dameron.|\n|Captain of the Queen Amidala's guard in The Phantom Menace.|\n|Droid introduced in the 2015 young adult novel Moving Target: A Princess Leia Adventure by Cecil Castellucci and Jason Fry to whom Leia Organa dictates her memoirs. PZ-4CO also appears in The Force Awakens.|\n|Imperial officer, initially a captain, who is promoted to replace Admiral Ozzel as commanding officer of the Super Star Destroyer, Executor, after Vader executes Ozzel for incompetence. As the only Imperial officer to appear in more than one original trilogy film, Piett also appears in Return of the Jedi meeting his demise, when the Executor crashes into the Death Star during the Battle of Endor.|\n|Portly X-wing pilot codenamed \"Red Six\" who is killed in A New Hope in the attack on the first Death Star. Porkins has gained some comedic notoriety due to his size, manner and untimely death, which was spoofed in the Family Guy episode Blue Harvest.|\n|Jedi Master on the Jedi High Council in The Phantom Menace.|\n|Officer who commands the First Order's legions of stormtroopers in The Force Awakens.|\n|Archduke of Geonosis, part of the Techno Union and one of the Separatist leaders killed by Darth Vader on Mustafar in Revenge of the Sith. Poggle also assists in the early planning and construction of the first Death Star, as revealed in Catalyst: A Rogue One Novel.|\n|Pantoran Senator and Chairman of the Pantoran Assembly.|\n|Naboo senator and later Supreme Chancellor of the Republic, later revealed to be Darth Sidious, a Dark Lord of the Sith. His machinations turn the Galactic Republic into the Galactic Empire, with himself as its emperor. He lures Anakin Skywalker to the dark side of the Force and renames him Darth Vader. He is eventually killed by a redeemed Anakin.|\n|One of the more visible Ewoks in Return of the Jedi, who steals a speeder bike from the Imperial scout troopers to distract them from the Rebel mission on Endor.|\n|One of Baron Papaoida's two daughters who serves as a representative for her home world of Pantora. She and her sister, Chi, are kidnapped by the Trade Federation following a trade blockade of Pantora.|\n|Daughter of Baron Papanoida who represents the planet Wroona in the Galactic Senate. She appears in scenes deleted from Revenge of the Sith as one of the senators of the Delegation of 2000.|\n|Crolute junkboss on the planet Jakku who pays out portions of food in exchange for pieces of salvage. He attempts to bargain the droid BB-8 from Rey and then tries to steal it when she refuses, but Rey ends up fleeing the planet by stealing the Millennium Falcon from him.|\n|Ongree Jedi Knight from Attack of the Clones, present at the Battle of Geonosis, where he wields a blue lightsaber.|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table354"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Championship|\n|---|\n|Masters Tournament (2)|\n|U.S. Open|\n|Masters Tournament|\n|PGA Championship (2)|\n|PGA Championship|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table355"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Party|\n|---|\n|Green|\n|Liberal Democrat|\n|Conservative|\n|Conservative gain from Liberal Democrat|\n|Labour|\n|Turnout|\n|Majority|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table356"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Team|\n|---|\n|Dick Johnson Racing|\n|Wayne Gardner Racing|\n|Larkham Motor Sport|\n|Glenn Seton Racing|\n|PACE Racing|\n|Castrol Perkins Racing|\n|Simon Emerzidis|\n|Romano Racing|\n|John Briggs Motorsport|\n|Tomas Mezera Motorsport|\n|Lansvale Racing Team|\n|Stone Brothers Racing|\n|John Faulkner Racing|\n|Holden Racing Team|\n|Longhurst Racing|\n|Garry Rogers Motorsport|\n|Greg Crick Motorsport|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table357"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Grand Final Information(Premiers)|\n|---|\n|Mackay Cutters|\n|Redcliffe Dolphins|\n|Wynnum Manly Seagulls|\n|Toowoomba Clydesdales|\n|Tweed Heads Seagulls|\n|Burleigh Bears|\n|Northern Pride|\n|Norths Devils|\n|Ipswich Jets|\n|Souths Logan Magpies|\n|North Queensland Young Guns|\n|Sunshine Coast Sea Eagles|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table358"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Final(Winner)|\n|---|\n|Puebla F.C. Mexico|\n|Club Universidad Nacional Mexico|\n|Monarcas Morelia Mexico|\n|Cruz Azul Mexico|\n|C.F. Pachuca Mexico|\n|Club Atlas Mexico|\n|Atlante FC Mexico|\n|Club Deportivo Guadalajara Mexico|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table359"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Rider|\n|---|\n|Margit Appelt|\n|Dolf Desmedt|\n|Nicolas Touzaint|\n|Bettina Hoy|\n|William Fox-Pitt|\n|Ian Roberts|\n|Karin Donckers|\n|Susan Shortt|\n|Hendrik Degros|\n|Andreas Dibowski|\n|John Williams|\n|Harald Riedl|\n|Daniel Jocelyn|\n|Jean Teulere|\n|Pippa Funnell|\n|Constantin van Rijckevorsel|\n|Bruce Mandeville|\n|Cedric Lyard|\n|Mary King|\n|Michael Winter|\n|Edmond Gibney|\n|Andreas Zehrer|\n|Mark Kyle|\n|Kamil Rajnert|\n|Fabio Magni|\n|Joris Vanspringel|\n|Sergio Marins|\n|Harald Ambros|\n|Heelan Tompkins|\n|Giovanni Menchi|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table36"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Real name|\n|---|\n|Kanako Urai|\n|Amanda Saccomanno|\n|Cassie McIntosh|\n|Adrienne Reese|\n|Nicola Glencross|\n|Gionna Daddio|\n|Jessica McKay|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table360"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Album|\n|---|\n|I Am Shelby Lynne|\n|Restless|\n|Sunrise|\n|Tough All Over|\n|nan|\n|Temptation|\n|Soft Talk|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table361"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Written by|\n|---|\n|Ronnie Krauss & Renee Creange|\n|Jill Gluckson|\n|Billy Aronson|\n|Ronnie Krauss & Ellen Doherty|\n|McPaul Smith|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table362"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Nation|\n|---|\n|Czechoslovakia|\n|Bulgaria|\n|Chinese Taipei|\n|Romania|\n|Greece|\n|North Korea|\n|China|\n|Hungary|\n|Colombia|\n|United States|\n|Turkey|\n|Soviet Union|\n|Great Britain|\n|Indonesia|\n|South Korea|\n|Japan|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table363"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|1946(USA)|\n|---|\n|F|\n|SF|\n|W|\n|QF|\n|1R|\n|A|\n|3R|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table364"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|1947(USA)|\n|---|\n|W|\n|SF|\n|A|\n|QF|\n|F|\n|2R|\n|3R|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table365"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|1949(FRA)|\n|---|\n|W|\n|F|\n|3R|\n|A|\n|1R|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table366"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Hospital name|\n|---|\n|Carolinas Medical Center-Mercy|\n|Carolinas Rehabilitation|\n|Carolinas Medical Center-Pineville|\n|Carolinas Specialty Hospital|\n|Carolinas Medical Center \/ Center for Mental Health|\n|Novant Health Charlotte Orthopedic Hospital|\n|Novant Health Presbyterian Medical Center|\n|Renfrew Center|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table367"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Artist|\n|---|\n|Velvet Belly|\n|Espen Lind|\n|Poor Rich Ones|\n|Gluntan|\n|Palace of Pleasure|\n|Motorpsycho|\n|Locomotives|\n|Vigleik Storaas Trio|\n|Ragnhild Furholt|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table368"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Crew|\n|---|\n|L. Kizim launch Yu. Malyshev landing|\n|V. Kovalyonok|\n|V. Lyakhov|\n|L. Popov|\n|V. Titov|\n|V. Vasyutin|\n|Yu. Malyshev launch L. Kizim landing|\n|L. Kizim|\n|V. Dzhanibekov|\n|L. Popov launch A. Berezovoy landing|\n|A. Berezovoy launch L. Popov landing|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table369"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|County|\n|---|\n|Suffolk|\n|Co. Londonderry|\n|Belfast|\n|Argyllshire|\n|Renfrewshire|\n|New South Wales|\n|Nova Scotia|\n|Taita-Taveta County|\n|Co. Antrim|\n|Ross and Cromarty|\n|Western Area|\n|Somerset|\n|South Ayrshire|\n|Fife|\n|Brisbane|\n|Kowloon Bay|\n|Cornwall|\n|West Sussex|\n|Cumbria|\n|Pembrokeshire|\n|Queensland|\n|Dorset|\n|Outer Hebrides|\n|Orkney|\n|Kingston|\n|Western Province|\n|Shropshire|\n|Oxfordshire|\n|Kent|\n|Angus|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table37"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Notes|\n|---|\n|Route 146 becomes Jarrettsville Pike at the Loch Raven Reservoir and Dam. Dulaney Valley Road splits off unnumbered, then continues east to Manor Road.|\n|Dolfield Road, once a single road, has various sections. One is from Painters Mill Road to Owings Mills Boulevard running through Owings Mills Industrial Park, this portion technically named S. Dolfield Road. This road then continues across Owings Mills Boulevard as Dolfield Road and dead ends near I-795. The remaining major portion of the road runs from Deer Park Road to Lakeside Boulevard. As that road continues north of Lakeside Boulevard, it converts to a major multi-lane roadway called Dolfield Boulevard, proceeding north from Lakeside Boulevard to Reisterstown Road as its terminus.|\n|Split into two sections. The first off Liberty Road dead-ends past Ivy Mill Road. The second part begins west off Ivy Mill Road about a mile north as a continuation to Nicodemus Road, crosses into Carroll County, and ends at Sykesville Road.|\n|Part of former route of No. 5 Streetcar Line|\n|Part of a longer road that is made of McCormick Road, Beaver Dam Road, Deereco Road, and Greenspring Drive, which starts in the north at York Rd and proceeds south to Timonium Rd.|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table370"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name|\n|---|\n|Republic of Cyprus|\n|Republic of Korea|\n|People's Republic of China|\n|Democratic People's Republic of Korea|\n|Republic of Armenia|\n|State of Israel|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table371"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Match|\n|---|\n|John Pulman v Rex Williams|\n|Fred Davis v Jackie Rea|\n|John Pulman v Alec Brown|\n|Fred Davis v John Pulman|\n|Jackie Rea v Harry Stokes|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table372"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Variants|\n|---|\n|Astral, Monadic and Movanic|\n|Red, Blue, Green, Gray and Death|\n|Cat Lord, Wolf Lord and Hawk Lord|\n|Lantern, Hound, Warden, Sword and Tome|\n|Farastu, Kelubar and Shator|\n|Black, Green and Red|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table373"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name|\n|---|\n|College Boulevard Activity Center|\n|District Education Center|\n|Food Production Center|\n|Instructional Resource Center|\n|Technology Support Center|\n|North Lindenwood Support Center|\n|Operations Service Center|\n|Lone Elm Service Center|\n|West Dennis Support Center|\n|Olathe District Activity Center|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table374"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Team 1|\n|---|\n|Goldfields Obuasi|\n|Ismaili|\n|BCC Lions|\n|Express FC|\n|Dynamos|\n|ASEC Abidjan|\n|Real Banjul|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table375"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Function|\n|---|\n|Lysis of virally infected cells and tumour cells|\n|Release cytokines and growth factors that regulate other immune cells|\n|Immunoregulation and cytotoxicity|\n|Secretion of antibodies|\n|Lysis of virally infected cells, tumour cells and allografts|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table376"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discoverer(s)|\n|---|\n|A. Sugie|\n|E. F. Helin, J. Alu|\n|C. Gualdoni, A. Testa|\n|H. Debehogne, E. W. Elst|\n|E. W. Elst, C. Pollas|\n|UESAC|\n|Y. Kushida, O. Muramatsu|\n|S. Ueda, H. Kaneda|\n|K. Endate, K. Watanabe|\n|A. Natori, T. Urata|\n|H. E. Holt|\n|R. H. McNaught|\n|M. Yanai, K. Watanabe|\n|A. Vagnozzi|\n|E. W. Elst|\n|E. F. Helin|\n|V. S. Casulli|\n|H. Debehogne|\n|Spacewatch|\n|T. Seki|\n|T. Kobayashi|\n|S. Otomo|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table377"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discoverer(s)|\n|---|\n|S. Arend|\n|L. I. Chernykh|\n|E. Bowell|\n|H. Kosai, K. Furukawa|\n|G. Van Biesbroeck|\n|N. S. Chernykh|\n|G. N. Neujmin|\n|L. Oterma|\n|K. Reinmuth|\n|P. Wild|\n|Purple Mountain Obs.|\n|E. Delporte|\n|K. Tomita|\n|Harvard Obs.|\n|C. T. Kowal|\n|L. Kohoutek|\n|A. Bohrmann|\n|B. A. Burnasheva|\n|L. E. Cunningham|\n|C. Torres|\n|Indiana University|\n|H.-E. Schuster|\n|S. J. Bus|\n|T. M. Smirnova|\n|E. F. Helin|\n|H. Alikoski|\n|G. Kulin|\n|L. V. Zhuravleva|\n|T. Gehrels|\n|H. L. Giclas|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table378"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Notes|\n|---|\n|Crime drama|\n|Crime thriller|\n|Crime comedy|\n|Gangster film|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table379"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Title|\n|---|\n|\"Ben? Her?\"|\n|\"Advise and Resent\"|\n|\"Election\"|\n|\"Sweet and Sour Charity\"|\n|Guess Who's Not Coming to Dinner|\n|\"Hey La, Hey La, My Ex-Boyfriend's Back\"|\n|\"To Serve and Disinfect\"|\n|\"My Best Friend's Tush\"|\n|\"Seeds of Discontent\"|\n|\"The Hospital Show\"|\n|\"Homo for the Holidays\"|\n|\"Terms of Employment\"|\n|\"An Affair to Forget\"|\n|\"Das Boob\"|\n|\"He's Come Undone\"|\n|\"There But for the Grace of Grace\"|\n|\"Whose Mom is it Anyway?\"|\n|\"I Never Promised You An Olive Garden\"|\n|\"Girls, Interrupted\"|\n|\"Acting Out\"|\n|\"Oh Dad, Poor Dad, He's Kept Me in the Closet and I'm So Sad\"|\n|\"Polk Defeats Truman\"|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table38"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Destinations|\n|---|\n|I-87 \/ New York Thruway|\n|Cross County Parkway east \/ Midland Avenue|\n|Nepperhan Avenue south (NY 983B)|\n|Bronx River Road \/ Mount Vernon Avenue east|\n|Saw Mill River Parkway to Cross County Parkway|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table380"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Following station|\n|---|\n|South Park toward Wheeling|\n|Campus toward Windermere|\n|Terminus|\n|Buffalo Central Terminal toward New York City|\n|East Cleveland toward New York City|\n|East 34th toward Warrensville or Green|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table381"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|NHL team|\n|---|\n|Phoenix Coyotes|\n|Minnesota Wild (from Dallas)|\n|San Jose Sharks|\n|Atlanta Thrashers|\n|Tampa Bay Lightning|\n|Philadelphia Flyers|\n|Atlanta Thrashers (from Carolina)|\n|Pittsburgh Penguins|\n|San Jose Sharks (from Washington)|\n|Toronto Maple Leafs|\n|Boston Bruins|\n|Colorado Avalanche|\n|Buffalo Sabres (from Calgary; compensatory)|\n|Detroit Red Wings (from Ottawa)|\n|Columbus Blue Jackets|\n|New York Rangers|\n|Los Angeles Kings|\n|Carolina Hurricanes (compensatory)|\n|Atlanta Thrashers (from Anaheim)|\n|Edmonton Oilers|\n|Calgary Flames|\n|Florida Panthers|\n|Minnesota Wild|\n|Vancouver Canucks|\n|New Jersey Devils|\n|Chicago Blackhawks|\n|Montreal Canadiens|\n|Detroit Red Wings|\n|Los Angeles Kings (from Buffalo)|\n|Nashville Predators|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table382"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name|\n|---|\n|Natallia Viatkina|\n|Anna Pyatykh|\n|Mabel Gay|\n|Anna Jagaciak|\n|Sarah Nambawa|\n|Irina Gumenyuk|\n|Ruslana Tsykhotska|\n|Kimberly Williams|\n|Olha Saladuha|\n|Niki Panetta|\n|Hanna Knyazyeva-Minenko|\n|Irina Litvinenko Ektova|\n|Simona La Mantia|\n|Anastasiya Juravleva|\n|Keila Costa|\n|Baya Rahouli|\n|Athanasia Perra|\n|Ekaterina Koneva|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table383"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Title|\n|---|\n|\"Murder in Tempo\"|\n|Nailed|\n|\"Nan's Ghost: Part 1\"|\n|\"The Secret of Gila Junction\"|\n|\"Evidence of Malice\"|\n|\"What You Don't Know Can Kill You\"|\n|\"Home Care\"|\n|\"Mrs. Parker's Revenge\"|\n|\"Death by Demographics\"|\n|\"Nan's Ghost: Part 2\"|\n|\"Southern Double-Cross\"|\n|\"Big Easy Murder\"|\n|\"Race to Death\"|\n|\"A Quaking in Aspen\"|\n|\"Murder Among Friends\"|\n|\"Shooting in Rome\"|\n|\"The Dark Side of the Door\"|\n|\"Death Goes Double Platinum\"|\n|\"Track of a Soldier\"|\n|\"Unwilling Witness\"|\n|\"Frozen Stiff\"|\n|\"Kendo Killing\"|\n|\"Something Foul in Flappieville\"|\n|\"Deadly Bidding\"|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table384"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Sport|\n|---|\n|Athletics|\n|Wrestling|\n|Luge|\n|Field hockey|\n|Alpine skiing|\n|Shooting|\n|Boxing|\n|Tennis|\n|Football|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table385"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Constructor|\n|---|\n|Williams-Toyota|\n|BMW Sauber|\n|Toyota|\n|Renault|\n|Toro Rosso-Ferrari|\n|Honda|\n|Ferrari|\n|McLaren-Mercedes|\n|Red Bull-Renault|\n|Super Aguri-Honda|\n|Spyker-Ferrari|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table386"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Role|\n|---|\n|Andy|\n|Wedding Minister|\n|Tank|\n|Haggard Alum|\n|Jimmy|\n|Hayashi (voice)|\n|Marlon Whirlen (voice)|\n|Carney|\n|Additional voice|\n|Video Store Clerk|\n|Eugene Drifke|\n|Ben|\n|Murray (voice)|\n|Darrel|\n|Auteur #2|\n|Randy|\n|Cleb (voice)|\n|Fan from Casper|\n|Friend|\n|Dog Cop #2|\n|Bus Driver|\n|Store clerk|\n|Uncle Nick|\n|Gilberto|\n|Grissom|\n|Man at Table 9|\n|Glen Maverick (voice)|\n|Tarquin|\n|Mr. Rected (voice)|\n|Orville the Scraggly Guy|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table387"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Titles|\n|---|\n|Roger Federer|\n|David Ferrer|\n|Andy Murray|\n|Stefan Edberg|\n|Boris Becker|\n|Pete Sampras|\n|Rafael Nadal|\n|Novak Djokovic|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table388"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name|\n|---|\n|Jeffrey Gross|\n|Adam Junglen|\n|Sean Getzwiller (1\/1)|\n|Tom Marchese|\n|Todd Terry|\n|Mark Radoja (1\/1)|\n|Scott Baumstein|\n|Daniel Smith|\n|Nikita Lebedev|\n|Nicolas Fierrogottner|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table389"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Party|\n|---|\n|Conservative|\n|Labour gain from Conservative|\n|Turnout|\n|Majority|\n|Labour|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table39"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Team 2|\n|---|\n|Sasa|\n|Pobeda|\n|Karaorman|\n|Sileks|\n|Belasica|\n|Cementarnica|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table390"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Party|\n|---|\n|Working Families|\n|Democratic hold|\n|Republican|\n|Democratic|\n|Majority|\n|Turnout|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table391"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Team|\n|---|\n|Jordan|\n|Yemen|\n|Uzbekistan|\n|Palestine|\n|Afghanistan|\n|Nepal|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table392"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Player|\n|---|\n|Jimmy Douglas|\n|Brad Guzan|\n|Arnie Mausser|\n|Tom Presthus|\n|George Tintle|\n|Nick Rimando|\n|David Bingham|\n|Luis Robles|\n|Sandy Feher|\n|David Vanole|\n|Zach Thornton|\n|Alan Mayer|\n|Troy Perkins|\n|Sean Johnson|\n|Mike Ivanow|\n|Zach Wells|\n|Julius Hjulian|\n|Jonny Walker|\n|Gary DeLong|\n|David Brcic|\n|Jeff Duback|\n|Donald Malinowski|\n|William Yarbrough|\n|Mark Dodd|\n|Ethan Horvath|\n|Findlay Kerr|\n|Joe Cannon|\n|Winston DuBose|\n|Frank Borghi|\n|Marcus Hahnemann|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table393"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|College\/junior\/club team|\n|---|\n|Toronto St. Michael's Majors (OHL)|\n|New England Jr. Huskies (EJHL)|\n|Leksands IF (Sweden)|\n|Lethbridge Hurricanes(WHL)|\n|Tri-Cities Americans (WHL)|\n|Mississauga IceDogs (OHL)|\n|Omaha Lancers(USHL)|\n|Ilves (Finland)|\n|University of Minnesota (WCHA)|\n|Pirati Chomutov (Czech Republic)|\n|US NTDP (NAHL)|\n|HK Moscow (Russia)|\n|Swift Current Broncos (WHL)|\n|St. Paul Vulcans (USHL)|\n|Severstal Cherepovets (Russia)|\n|University of Notre Dame (CCHA)|\n|Lukko Jr. (Finland)|\n|Kitchener Rangers(OHL)|\n|Hermes Mestis (Finland)|\n|Rensselaer Polytechnic Institute (ECAC)|\n|Moose Jaw Warriors (WHL)|\n|SKA St. Petersburg (Russia)|\n|Detroit Compuware Ambassadors (NAHL)|\n|Portland Winterhawks (WHL)|\n|Nipawin Hawks (SJHL)|\n|North Bay Centennials (OHL)|\n|Tappara Jr. (Finland)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table394"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Hindi|\n|---|\n|das|\n|nau|\n|do|\n|che|\n|ek|\n|sau|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table395"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Strongest storm|\n|---|\n|Bill|\n|Isidore|\n|Michelle|\n|Wilma|\n|Isabel|\n|Dean|\n|Gordon and Helene|\n|Keith|\n|Ike|\n|Ivan|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table396"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Event|\n|---|\n|Laser|\n|49er|\n|RS:X|\n|470|\n|Finn|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table397"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Unnamed: 0|\n|---|\n|Cortney Casey|\n|Justin Davis|\n|Roger Carroll|\n|Jason Hicks|\n|Zach Underwood|\n|Hannah Cifers|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table398"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Route|\n|---|\n|various sections|\n|Liberty Road to Sykesville Road (in Carroll County)|\n|York Road\/Joppa Road (known as Towson Circle to Manor Road|\n|Padonia Road to Greenspring Dr|\n|Hanover Pike to Butler Road (northern section) Tufton Avenue to Greenspring Avenue (southern section)|\n|Old Court Road to Baltimore City Line (continues as Franklintown Road)|\n|Eastern Avenue to dead end|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table399"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Former railroad ROW|\n|---|\n|Lehigh Valley|\n|Pennsylvania Erie|\n|Lehigh Valley Railroad|\n|Pennsylvania & Jersey Central|\n|Jersey Central|\n|Erie Main Line|\n|Jersey Cenrtal|\n|Erie|\n|Pennsylvania|\n|Penn-Reading Seashore|\n|Lackawanna|\n|Montclair Connection|\n|Pennsylvania|\n|Lackawanna Boonton Line|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Jersey Central', 'Jersey Cenrtal']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table4"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Title name(Westernized)|\n|---|\n|Yelan khaghan|\n|Hendeji khaghan|\n|Bala khaghan|\n|Prince of Beiping|\n|Hula khaghan|\n|Xianzhi khaghan|\n|Zuwu Khagan|\n|Zhaogu khaghan|\n|Wa khaghan|\n|Su khaghan|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table40"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Contestants|\n|---|\n|Mariah|\n|Raja|\n|Manila Luzon|\n|Shangela|\n|Mimi Imfurst|\n|Stacy Layne Matthews|\n|Yara Sofia|\n|Phoenix|\n|Venus D-Lite|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table400"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discovery(Site)|\n|---|\n|Harvard Observatory|\n|El Leoncito|\n|Hamburg-Bergedorf|\n|Geisei|\n|Sonneberg|\n|Kiso|\n|Nanking|\n|Zimmerwald|\n|Anderson Mesa|\n|Williams Bay|\n|Uccle|\n|Mount Stromlo|\n|Brooklyn|\n|Siding Spring|\n|Nauchnij|\n|Palomar|\n|Nice|\n|Johannesburg|\n|Tautenburg Observatory|\n|La Silla|\n|Heidelberg|\n|Turku|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table401"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Title|\n|---|\n|\"Alone in Vegas\"|\n|\"I Still Wanna\" (featuring Rick Ross & Ab-Liva)|\n|\"What Dreams Are Made Of\"|\n|\"So Obvious\"|\n|\"Everything That Glitters\" (featuring French Montana)|\n|\"My God\"|\n|\"Raid\" (featuring 50 Cent & Pharrell)|\n|Changing of the Guards (featuring Diddy)|\n|\"Amen\" (featuring Kanye West & Young Jeezy)|\n|\"Trouble on My Mind\" (featuring Tyler, the Creator)|\n|\"Body Work\" (featuring Juicy J, Meek Mill & French Montana)|\n|\"Feeling Myself\" (featuring Kevin Cossom)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table402"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name|\n|---|\n|Xiaguan (dissolved)|\n|Wansheng (dissolved)|\n|Xiaohe (dissolved)|\n|Shizhong (dissolved)|\n|Qiaodong (dissolved)|\n|Maogang (dissolved)|\n|Shuangqiao (dissolved)|\n|Baixia (dissolved)|\n|Canglang (dissolved)|\n|Chongwen (dissolved)|\n|Xuanwu (dissolved)|\n|Luwan (dissolved)|\n|Jinming (dissolved)|\n|Jinjiazhuang (dissolved)|\n|Luogang (dissolved)|\n|Jinchang (dissolved)|\n|Sifang (dissolved)|\n|Weiyang (dissolved)|\n|Dieshan (dissolved)|\n|Pingjiang (dissolved)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table403"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Team|\n|---|\n|Yorkshire Vikings|\n|Nottinghamshire Outlaws|\n|Derbyshire Falcons|\n|Leicestershire Foxes|\n|Lancashire Lightning|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table404"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discoverer(s)|\n|---|\n|K. Reinmuth|\n|T. Seki|\n|O. Pizarro, G. Pizarro|\n|R. M. West|\n|T. M. Smirnova|\n|E. Bowell|\n|L. I. Chernykh|\n|M. F. Wolf|\n|P. Wild|\n|C. S. Shoemaker|\n|L. Kohoutek|\n|Purple Mountain Obs.|\n|L. V. Zhuravleva|\n|N. S. Chernykh|\n|C. U. Cesco, A. R. Klemola|\n|B. A. Skiff|\n|C. Torres|\n|E. L. Johnson|\n|H. Debehogne|\n|Harvard Obs.|\n|B. A. Skiff, N. G. Thomas|\n|Indiana University|\n|H. Alikoski|\n|G. N. Neujmin|\n|E. Delporte|\n|S. Arend|\n|C.-I. Lagerkvist|\n|N. G. Thomas|\n|C. T. Kowal|\n|A. Mrkos|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table405"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Notes|\n|---|\n|Restored|\n|New creation|\n|10th Earl of Arundel|\n|New creation for the 4th Earl of Leicester and Lancaster|\n|Died, none of his heirs were summoned to Parliament in respect of this Barony|\n|Died, Barony fell into abeyance|\n|Never summoned to Parliament|\n|Died, title extinct|\n|Attainted|\n|Created Earl of Stafford, see above|\n|Died, title dormant|\n|Died|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table406"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Candidate|\n|---|\n|Christine Stanfield|\n|Conservative gain from Liberal Democrat|\n|Richard Plunkett|\n|Mark Hemingway|\n|Turnout|\n|Majority|\n|Douglas Morgan|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table407"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Nominee|\n|---|\n|Danny Elfman|\n|Ve Neill, Stan Winston|\n|Bob Ringwood, Mary E. Vogt, Vin Burnham|\n|Danny DeVito|\n|Michael Keaton, Michelle Pfeiffer|\n|Tim Burton|\n|Michael L. Fink, Craig Barron, John Bruno, Dennis Skotak|\n|Ve Neill, Ronnie Specter, Stan Winston|\n|Michelle Pfeiffer|\n|Stan Winston, Ve Neill|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table408"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|First Round|\n|---|\n|Bastian Knittel|\n|Maximilian Neuchrist|\n|Martin Fischer|\n|Sebastian Sachs|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table409"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Abbreviation|\n|---|\n|TPN|\n|Txp|\n|TEC|\n|Tx|\n|T|\n|TG|\n|TENS|\n|TF|\n|T2DM|\n|TE|\n|TEB|\n|TRH|\n|TEM|\n|TTTS|\n|TKR|\n|TRAM|\n|TGA|\n|TCOM|\n|TRF|\n|TP|\n|TNTC|\n|TA|\n|TSH|\n|TKO|\n|TIPS|\n|TSI|\n|TME|\n|THR|\n|TOE|\n|TAH-BSO|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table41"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Horse|\n|---|\n|Keymaster|\n|Tamarillo|\n|Winsome Adante|\n|All Love du Fenaud|\n|Mr Pracatan|\n|Jeepster|\n|Land Heir|\n|Balista|\n|Robin des Bois|\n|Mata-riki|\n|Top of the Line|\n|Air Jordan|\n|Oaklea Groover|\n|Withcote Nellie|\n|Weriusz|\n|Over To You|\n|Bold Action|\n|Sleep Late|\n|Shear l'Eau|\n|Nova Top|\n|Marnego|\n|Stand By Me|\n|Miss Ferrari|\n|Jacob Two Two|\n|Revo|\n|Rally LF|\n|Drunken Disorderly|\n|Mr. Noppus|\n|Hunefer|\n|Carrick|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table410"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|City\/County\/District|\n|---|\n|Liuzhou City|\n|Outskirts of Guilin City|\n|Guilin City|\n|Western suburb of Liuzhou City|\n|Yongning County, Nanning City|\n|Beihai City|\n|Nanning City|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table411"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Guest(s)|\n|---|\n|Morgan Freeman, Zooey Deschanel, Tim Roth|\n|Kurt Russell, Paul Dano|\n|Sarah Hyland, Rami Malek, Jack McBrayer|\n|Jane Lynch, Carrie Brownstein, Joel Edgerton|\n|Betty White, Amar'e Stoudemire, Jack Hanna|\n|Tim Robbins, America Ferrera, Adam DeVine|\n|Sarah Silverman, Alicia Vikander, Taylor Kinney|\n|J. K. Simmons, Josh Holloway|\n|Gillian Anderson, Tyler Perry|\n|Lily James, Rashida Jones, Sean Hayes|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table412"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discoverer(s)|\n|---|\n|M. Arai, H. Mori|\n|E. W. Elst|\n|T. Kobayashi, H. Fujii|\n|H. Debehogne|\n|Spacewatch|\n|A. Takahashi, K. Watanabe|\n|T. Kobayashi|\n|C. S. Shoemaker, E. M. Shoemaker|\n|Y. Mizuno, T. Furuta|\n|C. S. Shoemaker, D. H. Levy|\n|Y. Kushida, O. Muramatsu|\n|C. P. de Saint-Aignan|\n|S. Otomo|\n|H. E. Holt|\n|R. H. McNaught|\n|UESAC|\n|A. Sugie|\n|A. Natori, T. Urata|\n|K. Endate, K. Watanabe|\n|E. F. Helin|\n|T. Seki|\n|V. Goretti, M. Tombelli|\n|S. Ueda, H. Kaneda|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table413"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Player of the year(Club)|\n|---|\n|Ipswich Jets|\n|Easts Tigers|\n|Redcliffe Dolphins|\n|Norths Devils|\n|Wynnum-Manly Seagulls|\n|Souths Logan Magpies|\n|Central Comets|\n|Cairns Cyclones|\n|Wests Panthers|\n|Logan Scorpions|\n|Tweed Heads Seagulls|\n|?|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table414"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Player|\n|---|\n|Choi Eun-sung|\n|Ali Parvin|\n|Mohamed Abdelwahab|\n|Giacinto Facchetti|\n|Marc Zellweger|\n|Piermario Morosini|\n|Gianluca Signorini|\n|Bobby Moore|\n|Salvador Reyes|\n|Roberto Baggio|\n|Jack Lester|\n|Jonathan Richter|\n|Mike Connell|\n|Antonio de Nigris|\n|David di Tommaso|\n|Mauro Biello|\n|Michele Mignani|\n|Federico Pisani|\n|Fernando Cornejo|\n|Mao Mengsuo|\n|Salvatore Sullo|\n|Federico Vilar|\n|Hugo Cunha|\n|Kim Eun-jung|\n|Panagiotis Katsouris|\n|Dagfinn Enerly|\n|Zakaria Zerouali|\n|Kazimierz Deyna|\n|Johny Erlandsson|\n|Ryosuke Okuno|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table415"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Credited as(Actor)|\n|---|\n|The Snitch|\n|Lang's Assistant Director|\n|Voice of Nana's boyfriend|\n|Richard Politzer (voice)|\n|Man at Railway Station|\n|Narrator|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table416"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Single|\n|---|\n|\"Little Bits and Pieces\"|\n|\"Don't Cross Your Heart\"|\n|\"I'll Lie Myself to Sleep\"|\n|\"Feelin' Kind of Lonely Tonight\"|\n|\"Tell Me I'm Crazy\"|\n|\"The Hurtin' Side\"|\n|\"Things Are Tough All Over\"|\n|\"What About the Love We Made\"|\n|\"The Very First Lasting Love\" (with Les Taylor)|\n|Under Your Spell Again|\n|\"I'm Not the One\"|\n|\"Another Chance at Love\"|\n|\"Slow Me Down\"|\n|\"Your Lies\"|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table417"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Location|\n|---|\n|Markham|\n|Thornhill|\n|Georgina|\n|Aurora|\n|Richmond Hill|\n|Maple|\n|Newmarket|\n|King Township|\n|Vaughan|\n|Whitchurch-Stouffville|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table418"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Primary industry|\n|---|\n|Retail|\n|Conglomerate|\n|Computer hardware|\n|Telecommunications|\n|Networking hardware|\n|Oil and gas|\n|Software industry|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table419"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Moving to|\n|---|\n|Aston Villa|\n|West Ham United|\n|Fiorentina|\n|Villarreal|\n|Everton|\n|Stoke City|\n|Al-Sadd|\n|Internazionale|\n|Chelsea|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table42"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Accreditation|\n|---|\n|Gina Sicilia|\n|Hank Mowery|\n|Doug Deming & the Jewel Tones|\n|Matt Hill|\n|Shayna Goldstein|\n|Jumpin' Jack|\n|Sandy Mack|\n|Peter Karp|\n|Cartel|\n|Rusty|\n|Peter Karp \/ Mick Taylor|\n|Dave Gross|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table420"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discoverer(s)|\n|---|\n|S. J. Bus|\n|N. S. Chernykh|\n|R. H. McNaught|\n|E. Bowell|\n|San Vittore Obs.|\n|J. Gibson|\n|C. S. Shoemaker, E. M. Shoemaker|\n|Oak Ridge Observatory|\n|G. A. Plyugin, Yu. A. Belyaev|\n|K. Reinmuth|\n|T. Seki|\n|A. Mrkos|\n|C. J. van Houten, I. van Houten-Groeneveld, T. Gehrels|\n|A. Boattini, M. Tombelli|\n|L. I. Chernykh|\n|W. Baade|\n|T. Fujii, K. Watanabe|\n|UESAC|\n|N. Kawasato|\n|A. Nakamura|\n|M. Akiyama, T. Furuta|\n|A. Sugie|\n|T. Kojima|\n|Y. Kushida, O. Muramatsu|\n|A. C. Gilmore, P. M. Kilmartin|\n|E. W. Elst|\n|Z. Moravec|\n|L. V. Zhuravleva, G. R. Kastel'|\n|B. G. W. Manning|\n|T. Hioki, N. Kawasato|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table421"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Away team|\n|---|\n|Atherton LR|\n|New Mills|\n|AFC Darwen|\n|Alsager Town|\n|Stockport Town|\n|Barnoldswick Town|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table422"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Contestant|\n|---|\n|Rose Mary|\n|Syed Sajid Abbas|\n|Syed Ali Asad Zaidi|\n|Muhammad Shoaib|\n|Kashif Ali|\n|Shamir Aziz Quidwai|\n|Sana Zulfiqar|\n|Zammad Baig|\n|Waqas Ali Vicky|\n|Abd-ul-Rafay Khan|\n|Asad Raza Suno|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table423"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Writer(s)|\n|---|\n|Page Plant|\n|traditional, arranged by Page Plant|\n|Jones Page Plant|\n|Page|\n|Bonham Jones Page Plant|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table424"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Candidate|\n|---|\n|J H Potter|\n|Turnout|\n|H Hampton|\n|Registered electors|\n|Majority|\n|Lee Martin|\n|Stewart Reid|\n|Informal votes|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table425"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Party|\n|---|\n|Labour|\n|Majority|\n|Liberal Democrat hold|\n|UKIP|\n|Conservative|\n|Turnout|\n|Liberal Democrat|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table426"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discoverer(s)|\n|---|\n|Y. Mizuno, T. Furuta|\n|A. Sugie|\n|J. Alu, E. F. Helin|\n|Y. Kushida, O. Muramatsu|\n|M. Matsuyama, K. Watanabe|\n|M. Hirasawa, S. Suzuki|\n|T. Kobayashi|\n|K. Endate, K. Watanabe|\n|S. Inoda, T. Urata|\n|E. W. Elst|\n|E. F. Helin|\n|C. S. Shoemaker, D. H. Levy|\n|S. J. Bus|\n|A. C. Gilmore, P. M. Kilmartin|\n|R. H. McNaught|\n|M. Arai, H. Mori|\n|H. E. Holt|\n|E. Bowell|\n|A. Natori, T. Urata|\n|T. Seki|\n|S. Otomo|\n|L. I. Chernykh|\n|Oak Ridge Observatory|\n|I. P. Williams, A. Fitzsimmons, D. O'Ceallaigh|\n|D. C. Jewitt, J. X. Luu|\n|UESAC|\n|S. Ueda, H. Kaneda|\n|H. Debehogne|\n|A. Takahashi, K. Watanabe|\n|M. Mukai, M. Takeishi|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table427"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Ranking|\n|---|\n|U.S. News & World Report (Medicine)|\n|Design Intelligence (Architecture)|\n|U.S. News & World Report (Law)|\n|U.S. News & World Report (Social Work)|\n|BusinessWeek (BSBA)|\n|U.S. News & World Report (MBA)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table428"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Awarding Body|\n|---|\n|Hugo Awards|\n|Golden Raspberry Awards (Razzies)|\n|British Academy Film Awards (BAFTAs)|\n|MTV Movie Awards|\n|Academy Awards|\n|BMI Film & TV Awards|\n|Saturn Awards|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table429"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Class|\n|---|\n|Todendorf|\n|Star|\n|Lindau|\n|Emsland|\n|Stier|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table43"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Official name (known as)|\n|---|\n|Toronto Cricket, Skating and Curling Club|\n|Pallekele International Cricket Stadium (Muttiah Muralitharan International Cricket Stadium)|\n|McLean Park|\n|Western Australian Cricket Association Ground (The WACA)|\n|Fatullah Osmani Stadium|\n|County Cricket Ground (Edgbaston)|\n|Lord's Cricket Ground (Lord's)|\n|Carisbrook|\n|Niaz Stadium|\n|Boland Park (Boland Bank Park)|\n|Moti Bagh Stadium (formerly Motibaug Palace Ground)|\n|Sports Stadium (Sargodha Stadium)|\n|Civil Service Cricket Club (Stormont)|\n|Malahide (The Village)|\n|Basin Reserve (The Basin)|\n|Queen's Park Oval|\n|Kensington Oval (The Mecca)|\n|Formby Recreation Ground (Devonport Oval)|\n|County Ground (Wantage Road)|\n|Maple Leaf North-West Ground|\n|Sheikhupura Stadium|\n|Albion Sports Complex|\n|Cobham Oval (New)|\n|Aga Khan Sports Club Ground|\n|K.D. Singh Babu Stadium|\n|M. A. Chidambaram Stadium (Chepauk)|\n|Bayuemas Oval|\n|Bundaberg Rum Stadium (Cazaly's Stadium)|\n|Bay Oval|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table430"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Cast|\n|---|\n|Beat Takeshi Kitano, Kayoko Kishimoto, Ren Osugi|\n|Koji Yakusho, Tsuyoshi Ujiki, Anna Nakagawa|\n|Han Suk-kyu, Shim Hye-jin, Moon Sung-keun|\n|Mathieu Kassovitz, Michel Serrault, Mehdi Benoufa|\n|Sergei Bodrov Jr., Viktor Sukhorukov, Svetlana Pismichenko|\n|Pam Grier, Samuel L. Jackson, Robert Forster|\n|John Cusack, Minnie Driver, Dan Aykroyd|\n|Nick Nolte, James Coburn, Sissy Spacek|\n|Kevin Spacey, Russell Crowe, Guy Pearce|\n|James Woods, Melanie Griffith, Vincent Kartheiser|\n|Johnny Depp, Al Pacino, Michael Madsen|\n|Jesdaporn Pholdee, Noppachai Muttaweevong|\n|Eric Stoltz, Cameron Diaz, James Spader|\n|Abou-Bakre Aalam, Astrid Asseta|\n|Sylvester Stallone, Harvey Keitel, Ray Liotta|\n|Christopher Walken, Denis Leary, Henry Thomas|\n|David Duchovny, Timothy Hutton, Angelina Jolie|\n|Rose McGowan, Salvator Xuereb, Dan Gunther|\n|Tobey Maguire, Wilson Cruz, Benicio del Toro|\n|Joe Pesci, Andy Comeau, Kristy Swanson|\n|Rosie Perez, Javier Bardem, Harley Cross|\n|Dan Futterman, Stuart Townsend, Kate Beckinsale|\n|Ekin Cheng, Jordan Chan|\n|Harvey Keitel, Stephen Dorff, Famke Janssen|\n|Frances O'Connor, Matt Day, Chris Haywood|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table431"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Ring name|\n|---|\n|Ember Moon|\n|Mandy Rose|\n|Billie Kay|\n|Asuka|\n|Peyton Royce|\n|Nikki Cross|\n|Liv Morgan|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table432"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Chart (1986\u201387)|\n|---|\n|Italian Albums Chart|\n|Norwegian VG-lista Albums Chart|\n|New Zealand Albums Chart|\n|French SNEP Albums Chart|\n|UK Albums Chart|\n|Dutch Albums Chart|\n|Swedish Albums Chart|\n|Japanese Oricon Albums Chart|\n|West German Media Control Albums Chart|\n|Swiss Albums Chart|\n|Canadian Albums Chart|\n|Australian Kent Music Report|\n|Austrian Albums Chart|\n|US Billboard 200|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table44"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Prefecture|\n|---|\n|Directly administered|\n|Shijiazhuang|\n|Guiyang|\n|Ma'anshan|\n|Guangzhou|\n|Wuzhou|\n|Maoming|\n|Jining|\n|Yangzhou|\n|Kaifeng|\n|Suzhou|\n|Qingdao|\n|Nanjing|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table45"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Title|\n|---|\n|\"Kula-Mae\"|\n|\"Princess Sonata\" I. \"Princess and the Magician\" II. \"Like Voices of Sleeping Birds\" III. \"Flowers Laugh\" IV. \"They Enter the Dream\"|\n|\"Black Bottom\"|\n|Blind Willie|\n|\"Broken Toys\"|\n|\"Devils Doll Baby\"|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table46"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Candidate|\n|---|\n|Victor Lyon|\n|Joy H. Boustred|\n|Anthony D. Wildsmith|\n|Michael A. J. O'Donnell|\n|Diane Derksen|\n|Victoria M. Spawls|\n|Gavin A. Jordan|\n|Kevin D. Edson|\n|Brian J. Coleman|\n|Katherine Rounce|\n|Turnout|\n|Conservative hold|\n|Irene Brewer|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table47"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Writer(s)|\n|---|\n|Terrence Thornton, William Leonard Roberts II, Rennard East, Leigh Elliott|\n|Terrence Thornton, Shondrae Crawford|\n|Terrence Thornton, Kevin Cossom|\n|Terrence Thornton, Ricardo Lamarre, Jordan Michael Houston, Robert Williams, Karim Kharbouch|\n|Terrence Thornton, Ricardo Lamarre, Sean Combs|\n|Terrence Thornton, Curtis Jackson, Pharrell Williams, Chad Hugo|\n|Terrence Thornton|\n|Terrence Thornton, Tyler Okonma, Pharrell Williams, Chad Hugo, Vyron Turner|\n|Terrence Thornton, Demetrius Stewart, Kanye West, Jay Wayne Jenkins|\n|Terrence Thornton, Dominick Lamb|\n|Terrence Thornton, Chauncey Hollis|\n|Terrence Thornton, Karim Kharbouch|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table48"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Team 1|\n|---|\n|Borec|\n|Pelister|\n|Makedonija|\n|Sloga Jugomagnat|\n|Vardar|\n|Osogovo|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table49"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Silver|\n|---|\n|Zofia Klepacka (POL)|\n|Blanca Manchon (ESP)|\n|Marina Alabau (ESP)|\n|bryony shaw (gbr)|\n|Alessandra Sensini (ITA)|\n|Barbara Kendall (NZL)|\n|byrony shaw (gbr)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['byrony shaw (gbr)', 'bryony shaw (gbr)']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table5"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Statistic|\n|---|\n|Most points (defenseman)|\n|Most points (rookie)|\n|Most assists|\n|Best GAA (goalie)|\n|Most shutouts (goalie)|\n|Most goals|\n|Most points|\n|Most penalty minutes|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table50"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|1946(AUS)|\n|---|\n|SF|\n|F|\n|QF|\n|A|\n|W|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table51"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discovery(Site)|\n|---|\n|Church Stretton|\n|Farra d'Isonzo|\n|Kitami|\n|Linz|\n|Harvard Observatory|\n|Colleverde|\n|Prescott|\n|Xinglong|\n|Haleakala|\n|Nanyo|\n|Yatsuka|\n|Palomar|\n|Kitt Peak|\n|Sudbury|\n|Kiyosato|\n|Oizumi|\n|Socorro|\n|Uccle|\n|Nachi-Katsuura|\n|Zeno|\n|Kushiro|\n|Anderson Mesa|\n|Sormano|\n|Cima Ekar|\n|Hadano|\n|Tautenburg Observatory|\n|Caussols|\n|La Silla|\n|Oohira|\n|Chichibu|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table52"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Player|\n|---|\n|Cary Caliendo|\n|Larry Williams|\n|Jake Coffman|\n|Sean Progar-Jackson|\n|C.J. Rose|\n|Larry English|\n|Brian Atkinson|\n|Scott Kellar|\n|Alan Baxter|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table53"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Country|\n|---|\n|Bulgaria|\n|New Zealand|\n|South Korea|\n|France|\n|South Africa|\n|Suriname|\n|Portugal|\n|Hungary|\n|Netherlands|\n|Croatia|\n|Russia|\n|United States|\n|Romania|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table54"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name|\n|---|\n|Richmond Green Secondary School|\n|Stephen Lewis Secondary School|\n|Unionville High School|\n|Bill Crothers Secondary School|\n|Milliken Mills High School|\n|Thornlea Secondary School|\n|Sutton District High School|\n|Alexander Mackenzie High School|\n|King City Secondary School|\n|Sir William Mulock Secondary School|\n|Richmond Hill High School|\n|Dr. G.W. Williams Secondary School|\n|Vaughan Secondary School|\n|Bayview Secondary School|\n|Middlefield Collegiate Institute|\n|Tommy Douglas Secondary School|\n|Markham District High School|\n|Huron Heights Secondary School|\n|Pierre Elliott Trudeau High School|\n|Maple High School|\n|Woodbridge College|\n|Bur Oak Secondary School|\n|Aurora High School|\n|Westmount Collegiate Institute|\n|Langstaff Secondary School|\n|Markville Secondary School|\n|ACCESS Program Jefferson Community Learning Centre|\n|Stouffville District Secondary School|\n|Thornhill Secondary School|\n|Dr. John M. Denison Secondary School|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table55"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Chart (2007)|\n|---|\n|Scottish Singles Chart|\n|Irish Singles Chart|\n|Norwegian Singles Chart|\n|German Singles Chart|\n|Swedish Singles Chart|\n|UK Singles Chart|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table56"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Program|\n|---|\n|Two and a Half Men|\n|Mom|\n|The Soul Man|\n|Nicky, Ricky, Dicky & Dawn|\n|Retired at 35|\n|The Exes|\n|Pair of Kings|\n|Mike & Molly|\n|Rules of Engagement|\n|Wizards of Waverly Place|\n|The Big Bang Theory|\n|2 Broke Girls|\n|Last Man Standing|\n|How I Met Your Mother|\n|The Millers|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table57"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Team|\n|---|\n|Hull City|\n|Port Vale|\n|Brighton & Hove Albion|\n|Oxford United|\n|Huddersfield Town|\n|Macclesfield Town|\n|Manchester City|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table58"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Synopsis|\n|---|\n|Gabriella stows away on the shuttle as Drummond goes to G33.|\n|The ship is in danger of running out of air.|\n|The Santa Maria fires a missile.|\n|Tim has problems with a restricted file.|\n|The Santa Maria attacks.|\n|Brelan wants to use the Ilea to help scan Amalthea.|\n|All power must be turned off to stop the plasma cloud imploding.|\n|Radiation leaks into the dome.|\n|Cats reaches the Copernicus and finds it badly damaged.|\n|Victoria discovers molybdenum on Achilles G33.|\n|Mercedes, Daniel and Jim plan to build a railgun.|\n|Brelan refuses Finbow's resignation.|\n|Eliot and Finbow discover there was a murder on the Achilles expedition.|\n|The Ilea comes through the cloud.|\n|Finbow is charged with mutiny.|\n|The pirate ship seems to head to Ganymede.|\n|Eliot looks for a new job.|\n|Alex Hartman arrives.|\n|All communication is lost, preventing Finbow contacting the Valencia.|\n|Harriet is angry that students are missing lectures.|\n|Finbow thinks the Ilea is under attack.|\n|Victoria plans to leave.|\n|Mercedes finds Sabine ensconced with Brelan.|\n|Eliot plans to share any blame with Finbow.|\n|Daniel and Finbow trigger a dangerous computer program.|\n|The crew tries to dock with the Copernicus.|\n|Cats reaches the surviving crewman.|\n|Eliot and Mercedes try to fix Petra by erasing some files.|\n|Finbow thinks something is eating through the shields.|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table59"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Moving to|\n|---|\n|Watford|\n|Aston Villa|\n|Fiorentina|\n|Blackpool|\n|Queens Park Rangers|\n|Al Ahli Club|\n|Bristol City|\n|Millwall|\n|Hull City|\n|Huddersfield Town|\n|Villarreal|\n|Crystal Palace|\n|Chesterfield|\n|Midtjylland|\n|Blackburn Rovers|\n|Middlesbrough|\n|Swindon Town|\n|Bochum|\n|Lierse|\n|Luton Town|\n|Milton Keynes Dons|\n|West Ham United|\n|Brenford|\n|Leeds United|\n|Brentford|\n|Hartlepool United|\n|Wigan Athletic|\n|Chicago Fire|\n|Motherwell|\n|Accrington Stanley|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Brentford', 'Brenford']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table6"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Candidate|\n|---|\n|David Coe|\n|David Soans|\n|Richard Tod|\n|Alan Window|\n|Michael Tebbutt|\n|Stan Freeman|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table60"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Month|\n|---|\n|Percent possible sunshine|\n|Record low wind chill|\n|Average snowfall cm (inches)|\n|Average rainfall mm (inches)|\n|Average relative humidity (%)|\n|Record high humidex|\n|Average precipitation mm (inches)|\n|Mean monthly sunshine hours|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table61"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Posthumous name(Westernized)|\n|---|\n|Chogo Sogo Sokgo|\n|Gusu Guisu|\n|Jeonji Jikji Jinji|\n|Wideok Chang|\n|Hye Heon|\n|Mu Mugang Mugwang|\n|Daru|\n|Chimnyu|\n|Asin Abang Ahwa Ami|\n|Onjo|\n|Biryu|\n|Gaeru|\n|Giru|\n|Geunchogo Chogo Sokgo Jogo|\n|Biyu Piryu|\n|Goi Gui Gomo|\n|Geun-gusu Geun-guisu Guisu Guiryu Guso|\n|Beop|\n|Seong Myeong Seongmyeong|\n|Samgeun Mun-geun|\n|Gaero Geun-gaeru|\n|Muryeong Sama|\n|Gu-isin|\n|Munju|\n|Bunseo|\n|Chaekgye Cheonggye|\n|Jinsa|\n|Saban Sabi Sai|\n|Gye|\n|Dongseong Malda|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table62"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Character name|\n|---|\n|Daniel \"Dan\" Raditch|\n|Christine \"Spike\" Nelson|\n|Daphne Hatzilakos|\n|Joseph \"Joey\" Jeremiah|\n|Archibald \"Archie\" \"Snake\" Simpson|\n|Winnie Oh|\n|Caitlin Ryan|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table63"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Nationality|\n|---|\n|Jamaica (JAM)|\n|Belarus (BLR)|\n|Slovakia (SVK)|\n|Russia (RUS)|\n|Kazakhstan (KAZ)|\n|Uzbekistan (UZB)|\n|Poland (POL)|\n|Algeria (ALG)|\n|Greece (GRE)|\n|Brazil (BRA)|\n|Slovenia (SVN)|\n|Ukraine (UKR)|\n|Uganda (UGA)|\n|Israel (ISR)|\n|Colombia (COL)|\n|Italy (ITA)|\n|Cuba (CUB)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table64"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Notes|\n|---|\n|Minister in the Trudeau government|\n|Minister in the Trudeau government, 1984 leadership candidate and former senator|\n|Minister in the Trudeau government [406]|\n|Minister in the Trudeau and Turner governments and MP until 2004|\n|Minister in the Trudeau government and former senator|\n|Minister in the Trudeau and Turner governments and former Premier of Prince Edward Island|\n|Minister and Senator in the Trudeau government|\n|Minister in the Trudeau and Turner governments and former Premier of Nova Scotia[412]|\n|Minister and Senator in the Trudeau government, and former Governor General of Canada|\n|Minister in the Trudeau and Turner governments|\n|House Leader under Trudeau|\n|Minister in the Trudeau and Martin governments|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table65"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Recipient(s)|\n|---|\n|Wally Buttsworth|\n|Keith Forbes (2)|\n|Scott Lucas (2)|\n|Mark Thompson (2)|\n|Dick Reynolds+ (3)|\n|Norm Beckton|\n|Howard Okey|\n|Alan Ezard|\n|Paddy Walsh|\n|Dyson Heppell^|\n|Jobe Watson^|\n|Albert Thurgood|\n|Mark Johnson|\n|Tom Fitzmaurice|\n|Andy Wilson|\n|John Gill|\n|Ken Fletcher|\n|Perc Bushby|\n|Dustin Fletcher|\n|James Hird (5)|\n|Adam McPhee|\n|Mark Mercuri|\n|Tom Fitzmaurice (2)|\n|Ken Fraser (2)|\n|Frank Maher|\n|Sean Denham|\n|Jason Johnson (2)|\n|Dick Reynolds (5)|\n|Hugh Gavin|\n|Barry Davis (3)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table66"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Supporting|\n|---|\n|Rae|\n|Ignatieff|\n|Dryden|\n|Kennedy|\n|Dion|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table67"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Unnamed: 0|\n|---|\n|M|\n|L|\n|K|\n|SS|\n|MJ|\n|Q|\n|R|\n|T|\n|J|\n|7|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table68"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Notes|\n|---|\n|Short film|\n|Uncredited|\n|Also writer|\n|English dub|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table69"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Club|\n|---|\n|VfB Friedrichhafen|\n|VfL Sindelfingen|\n|TSG Ulm 1846|\n|vfb friedrichhafen|\n|SSV Ulm|\n|Spfr. Stuttgart|\n|SpVgg Feuerbach|\n|FV Zuffenhausen|\n|VfR Aalen|\n|VfR Heilbronn|\n|VfB Stuttgart II|\n|SC Geislingen|\n|vfb friedrichshafen|\n|VfB Friedrichshafen|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['vfb friedrichshafen', 'vfb friedrichhafen']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table7"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Candidate's Name|\n|---|\n|Michael Prue|\n|Michael Seaward|\n|Jessica Brennan|\n|Joanne Bury|\n|Wendy Young|\n|Doug Wilcox|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table70"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name|\n|---|\n|DSMasterPlus|\n|Gearsystem|\n|MasterGear|\n|jsSMS|\n|MEKA|\n|Genesis Plus GX|\n|Mednafen|\n|Kega Fusion|\n|SMS Plus|\n|CrabEmu|\n|BrSMS|\n|Provenance|\n|nemulator|\n|higan|\n|MasterEmu|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table71"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Song|\n|---|\n|\"Bad Romance\" (Lady Gaga)|\n|\"I Think About You\" (Patti LaBelle)|\n|\"Straight Up\" (Paula Abdul)|\n|\"MacArthur Park\" (Donna Summer)|\n|\"Champion (DJ BunJoe's Olympic Mix)\" (RuPaul)|\n|\"Knock on Wood\" (Amii Stewart)|\n|\"Don't Leave Me This Way\" (Thelma Houston)|\n|The Right Stuff (Vanessa Williams)|\n|\"Meeting in the Ladies Room\" (Klymaxx)|\n|\"Believe\" (Cher)|\n|\"Mickey\" (Spanish version) (Toni Basil)|\n|\"Even Angels\" (Fantasia)|\n|\"Looking for a New Love\" (Jody Watley)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table72"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Title|\n|---|\n|\"Troubled Shadows\"|\n|\"Young Griffons in Flight\"|\n|\"Snowdrift Waltz\"|\n|\"Encampment Dreams\"|\n|\"An Invisible Crown\"|\n|\"Where Lords Rule Not\"|\n|\"Under a Clouded Moon\"|\n|\"Royal Wanderlust\"|\n|\"Kindred Cry\"|\n|\"Iron Colossus\"|\n|\"Stargazing\"|\n|\"Ragnarok\"|\n|\"On this Blade\"|\n|March of the Allied Forces|\n|\"Cloister of Time and Souls\"|\n|\"Griffons Never Die\"|\n|\"Clash of Standards\"|\n|\"Run Maggot, Run!\"|\n|\"Echoes of a Zephyr\"|\n|\"Flowers on the Battlefield\"|\n|\"The Cosmic Wheel\"|\n|\"Roar of the Battle Drums\"|\n|\"Wings of the Goddess\"|\n|\"Thunder of the March\"|\n|\"Autumn Footfalls\"|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table73"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|TV|\n|---|\n|CSS|\n|PPV|\n|CSTV|\n|ESPN|\n|ESPN2|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table74"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Candidate|\n|---|\n|Christopher Clarkson|\n|Liz McInnes|\n|Labour hold|\n|Lee Seville|\n|Bill Winlow|\n|Turnout|\n|Majority|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table75"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Team|\n|---|\n|Liga Deportiva Alajuelense|\n|VfL Wolfsburg|\n|Fujieda MYFC|\n|Macclesfield Town|\n|Vicenza|\n|Lens|\n|NK Maribor|\n|Persebaya Surabaya|\n|Hartlepool United|\n|SK Rapid Vienna|\n|Motagua|\n|Assyriska FF|\n|FC St. Gallen|\n|Happy Valley|\n|Chengdu Blades|\n|Roulado|\n|Universitario de Deportes|\n|Persepolis|\n|Ajax|\n|Spartak Trnava|\n|Wycombe Wanderers|\n|Anorthosis Famagusta|\n|JS Kabylie|\n|Cobreloa|\n|West Ham United|\n|Los Angeles Galaxy|\n|Kalmar FF|\n|Beijing Enterprises|\n|AaB|\n|Tai Po FC|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table76"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Other claimants|\n|---|\n|South Korea claims to be the sole legitimate government of Korea.|\n|Northern Cyprus claims part of the island of Cyprus.|\n|North Korea claims to be the sole legitimate government of Korea.|\n|Republic of China claims to be the sole legitimate government over all of China under the Constitution of the Republic of China.|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table77"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name|\n|---|\n|Chi Eekway Papanoida|\n|Poggle the Lesser|\n|Unkar Plutt|\n|Pablo-Jill|\n|Captain Panaka|\n|Darth Plagueis|\n|Even Piell|\n|Admiral Firmus Piett|\n|Paploo|\n|Jessika \"Jess\" Testor Pava|\n|Baron Papanoida|\n|Yarael Poof|\n|Captain Phasma|\n|PZ-4CO|\n|Jek Tono Porkins|\n|Nahdonnis Praji|\n|Palpatine (a.k.a. Darth Sidious)|\n|Che Amanwe Papanoida|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table78"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Platform|\n|---|\n|iOS, Windows, OS X, Linux, Raspberry Pi|\n|Windows, OS X, Linux|\n|DOS|\n|Windows, OS X, Linux, FreeBSD, OpenBSD, NetBSD, Nintendo Wii|\n|Android|\n|Windows, Linux, Dreamcast|\n|iOS|\n|Nintendo DS|\n|OS X, Linux, Dreamcast|\n|Windows, Linux, FreeBSD|\n|Windows|\n|Web Browser|\n|Windows, Linux|\n|Nintendo GameCube, Wii|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table79"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Music|\n|---|\n|Vijaya Bhaskar|\n|T. G. Lingappa|\n|M. S. Viswanathan|\n|Ilayaraja|\n|Chandrashekhara Kambara|\n|M. Ranga Rao|\n|Ilayaraaja|\n|Satyam|\n|Chittibabu|\n|C. Ashwath, L. Vaidyanathan|\n|K. V. Mahadevan|\n|Rajan-Nagendra|\n|Upendra Kumar|\n|G. K. Venkatesh|\n|Jayaprakash|\n|Ramesh Naidu|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['Ilayaraaja', 'Ilayaraja']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table8"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Contestants|\n|---|\n|Delta Work|\n|Manila Luzon|\n|Shangela|\n|Alexis Mateo|\n|India Ferrah|\n|Carmen Carrera|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table80"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Silver|\n|---|\n|Callum Skinner Great Britain|\n|Australia (AUS) Alexander Edmondson Jack Bobridge Michael Hepburn Sam Welsford Callum Scotson|\n|Matthijs Buchli Netherlands|\n|New Zealand (NZL) Eddie Dawkins Ethan Mitchell Sam Webster|\n|Mark Cavendish Great Britain|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table81"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Notes|\n|---|\n|Offers gifted education, Advanced Placement Program, SHSM|\n|Offers gifted education and the Advanced Placement Program Non-Semestered School|\n|French immersion school|\n|Only grade 9 and 10 in its first year|\n|Offers the Advanced Placement Program|\n|Offers French Immersion Program and Pre-AP and Advanced Placement Programs.|\n|Arts specialized school|\n|Arts specialized school, International Baccalaureate school (as of 2017)|\n|Offers gifted education|\n|Offers gifted education & French immersion|\n|International Baccalaureate school|\n|Offers blended learning and SHSM|\n|International Baccalaureate school (as of 2017)|\n|Offers a Arts specialized program and SHSM in arts & culture or business.|\n|Athletics focused|\n|Alternative school|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table82"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Discoverer(s)|\n|---|\n|L. V. Zhuravleva, L. G. Karachkina|\n|A. Mrkos|\n|T. Kojima|\n|H. Debehogne|\n|C. S. Shoemaker|\n|N. S. Chernykh|\n|L. I. Chernykh|\n|N. G. Thomas|\n|T. Hioki, N. Kawasato|\n|T. Urata|\n|A. Sugie|\n|C. S. Shoemaker, E. M. Shoemaker|\n|B. A. Skiff|\n|Y. Kushida, O. Muramatsu|\n|L. V. Zhuravleva|\n|C. Jackson|\n|E. F. Helin|\n|T. M. Smirnova|\n|S. Ueda, H. Kaneda|\n|E. Bowell|\n|H. E. Holt|\n|T. Nomura, K. Kawanishi|\n|C.-I. Lagerkvist|\n|Y. Kushida, M. Inoue|\n|M. Mukai, M. Takeishi|\n|T. Fujii, K. Watanabe|\n|S. Otomo|\n|Haute-Provence Obs.|\n|L. G. Karachkina|\n|E. W. Elst|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table83"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Area|\n|---|\n|Restricted arc radius|\n|Free-throw line distance from point on the floor directly below the backboard|\n|Key (shaded lane or restricted area) width|\n|Center circle diameter|\n|Court length|\n|Court width|\n|3-point line distance from the basket|\n|Rim height|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table84"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Class|\n|---|\n|Cytotoxic T cells|\n|Gamma delta T cells|\n|T helper cells|\n|B cells|\n|Natural killer cells|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table85"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Team|\n|---|\n|Hibiscus Coast|\n|North Harbour|\n|Northcote Tigers|\n|Mount Albert Lions|\n|Auckland|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table86"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Player|\n|---|\n|Ginette Jucker Bucaille|\n|Margaret Osborne duPont|\n|Joyce Fitch|\n|Patricia Ward Hales|\n|Louise Brough Clapp|\n|Patricia Canning Todd|\n|Marie Toomey|\n|Beverly Baker Fleitz|\n|Betty Nuthall Shoemaker|\n|Kay Stammers Bullitt|\n|Sarah Palfrey Cooke|\n|Thelma Coyne Long|\n|Anita Lizana de Ellis|\n|Nelly Adamson Landry|\n|Margaret \"Peggy\" Scriven-Vivian|\n|Simonne Mathieu|\n|Nell Hall Hopman|\n|Maureen Connolly Brinker|\n|Pauline Betz Addie|\n|Joan Hartigan Bathurst|\n|Nancye Wynne Bolton|\n|Doris Hart|\n|Shirley Fry Irvin|\n|Dorothy Head Knode|\n|Dorothy \"Dodo\" Bundy Cheney|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table87"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Opponent#|\n|---|\n|at UCF|\n|at SMU|\n|East Carolina|\n|at Tennessee*|\n|at Rice|\n|Troy*|\n|at No. 24 Mississippi State*|\n|UTEP|\n|Memphis|\n|at Southern Miss|\n|Marshall|\n|Florida Atlantic*|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table88"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Notes|\n|---|\n|utility motorboats, GRP hull|\n|cutter, wooden, with 20PS motor|\n|prototype of closed lifeboat for tankers, GRP hull|\n|another class of Pirat dinghies, have male names, all decommissioned|\n|air crew rescue boats, one gone to harbour police, Bremen|\n|former Royal Air Force aircrew rescue boats, one used as Type 740 target ship from 1975 to 1977, others scrapped|\n|pinnaces, with cabin, 70PS motor|\n|another class of Pirat dinghies, have male names,|\n|cutters, wooden, with sail, no motor|\n|dinghies, wooden, with sail|\n|dinghies, GRP hull, with sail|\n|tug barges|\n|former Luftwaffe and USN boats, used for air crew rescue missions|\n|assorted stand-by boats|\n|At least 2 decommissioned, named after Gemstones|\n|pinnaces without cabin, 70PS motor, GRP hull|\n|assorted small yachts, some sunk, most (all?) decommissioned|\n|two types of open lifeboats for tankers 6.5 m (20 persons) or 6.0 m (14 persons) long, steel hull|\n|pinnaces with cabin, GRP hull, 70PS motor, GRP hull|\n|motor cutters, 20PS motor, GRP hull|\n|barges , with cabin|\n|pinnaces, wooden, 70 or 54PS motor|\n|liaison boats, 70\/120PS motor|\n|barges, 70\/90PS motor|\n|fast messenger boats|\n|motor dinghy, 5m, wooden\/GRP hull, 75PS pump-jet|\n|Pirate class dinghy at least 1 decommissioned, have female given names|\n|dinghies, GRP hull|\n|pinnaces, wooden, without cabin, 70PS motor|\n|motor dinghies|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table89"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Referee(s)|\n|---|\n|Sean Hampstead|\n|Steve Clark|\n|Greg McCallum|\n|Kelvin Jeffes|\n|Kevin Roberts|\n|Shayne Hayne and Ben Cummins|\n|Shayne Hayne and Ashley Klein|\n|Tony Archer and Ben Cummins|\n|Tony Archer and Shayne Hayne|\n|shanye hayne and ben cummins|\n|Barry Gomersall|\n|Shayne Hayne|\n|Ben Cummins and Tony Archer|\n|Mick Stone|\n|John Gocher|\n|shayne hayne and ben cummins|\n|Tony Archer|\n|Matt Cecchin and Gerard Sutton|\n|Ben Cummins and Matt Cecchin|\n|Don Wilson|\n|Tony Archer and Jared Maxwell|\n|Eddie Ward|\n|Shanye Hayne and Ben Cummins|\n|Ben Cummins and Shayne Hayne|\n|Ben Cummins and Gerard Sutton|\n|Gerard Sutton and Ben Cummins|\n|Graham Annesley|\n|Robin Whitfield|\n|Bill Harrigan|\n|Paul Simpkins|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"['shanye hayne and ben cummins', 'shayne hayne and ben cummins']\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table9"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Notes|\n|---|\n|In-development|\n|Short|\n|Pre-production, Direct to video|\n|Post-production|\n|Video|\n|Documentary, producer|\n|Documentary|\n|Documentary, executive producer|\n|Scenes deleted|\n|In-development, Short|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table90"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Candidate|\n|---|\n|Turnout|\n|Chris Austin|\n|Eligible voters|\n|Catherine Chaulk-Stokes|\n|Josh Lund|\n|Rona Ambrose|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table91"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Autor|\n|---|\n|Zangger|\n|Peter James|\n|Berlioux|\n|Nunes dos Santos|\n|Erlingsson|\n|Werner Wickboldt|\n|Franke|\n|Collins|\n|Leo Frobenius|\n|Saint-Vincent|\n|Spence|\n|Rudbeck|\n|Georgeos Diaz-Montexano|\n|Allen|\n|Donnelly|\n|Herm|\n|Matlock|\n|Giovannini|\n|Arundell|\n|Dunbavin|\n|Ribero-Meneses|\n|Russian team|\n|Francis Galea|\n|Bock|\n|Jaime Manuschevich|\n|Mifsud\/Sultana\/Ventura|\n|Robert Sarmast|\n|Eagle\/Wind|\n|Sergio Frau|\n|Zeitlmair|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table92"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Chart (2004)|\n|---|\n|Swiss Albums (Schweizer Hitparade)|\n|New Zealand Albums (RIANZ)|\n|Irish Albums (IRMA)|\n|Belgian Albums Chart (Wallonia)|\n|German Albums (Offizielle Top 100)|\n|French Albums (SNEP)|\n|UK Albums (OCC)|\n|Danish Albums (Hitlisten)|\n|US Billboard 200|\n|Australian Albums (ARIA Charts)|\n|Australian Albums (ARIA)|\n|New Zealand Albums (RMNZ)|\n|Dutch Albums (MegaCharts)|\n|Mexican Albums (Top 100 Mexico)|\n|Finnish Albums (Suomen virallinen lista)|\n|Belgian Albums Chart (Flanders)|\n|Swedish Albums (Sverigetopplistan)|\n|Worldwide (IFPI)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table93"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Team 1|\n|---|\n|Remo (PA)|\n|Linhares (ES)|\n|CSA (AL)|\n|ABC (RN)|\n|Villa Nova (MG)|\n|Vila Nova (GO)|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table94"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Name|\n|---|\n|Edward Ellice|\n|Richard More O'Ferrall|\n|Henry Tufnell|\n|Edward John Stanley|\n|William Goodenough Hayter|\n|Charles Wood|\n|Francis Thornhill Baring|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table95"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Chart (1995\u201396)|\n|---|\n|Australian Albums Chart|\n|Irish Albums Chart|\n|Spanish Albums Chart|\n|Swedish Albums Chart|\n|New Zealand Albums Chart|\n|Belgian Albums Chart (Flanders)|\n|UK Albums Chart|\n|US Billboard 200|\n|Austrian Albums Chart|\n|Canadian Albums Chart|\n|Portuguese Albums Chart|\n|French Albums Chart|\n|Finnish Albums Chart|\n|Zimbabwean Albums Chart|\n|European Albums Chart|\n|German Albums Chart|\n|Norwegian Albums Chart|\n|Icelandic Albums Chart|\n|Belgian Albums Chart (Wallonia)|\n|Dutch Albums Chart|\n|Swiss Albums Chart|\n|Hungarian Albums Chart|\n|Italian Albums Chart|\n|Japanese Albums Chart|\n|Danish Albums Chart|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table96"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Team|\n|---|\n|Elite Motorsport|\n|Supergreen Racing|\n|Douglas Motorsport|\n|Tollbar Racing|\n|HHC Motorsport|\n|Hillspeed|\n|Jam-Sport|\n|JHR Developments|\n|Richardson Chassis Engineering|\n|R & J Motorsport|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table97"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Team|\n|---|\n|Royals|\n|Mariners|\n|Brewers|\n|Rangers|\n|Orioles|\n|Indians|\n|Athletics|\n|Angels|\n|Red Sox|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table98"}}
{"prompt":"# Task Description: Please examine the input table and let me know which cell or cells are erroneous. If there are multiple erroneous cells, return them all in a list. If there is no erroneous cell, return 'None'. Please only return the erroneous cell or cells with high confidence.\n\n## Input:\n|Birthplace|\n|---|\n|Wenatchee, Washington|\n|Elkhorn, Manitoba|\n|Phoenix, Arizona|\n|Regina, Saskatchewan|\n|Brandon, Manitoba|\n|Athabasca, Alberta|\n|St. Albert, Alberta|\n|Surrey, British Columbia|\n|Kazan, Russia|\n|Winnipeg, Manitoba|\n|Mishutki, Belarus|\n|Delta, British Columbia|\n|Sundre, Alberta|\n|Calgary, Alberta|\n|Edmonton, Alberta|\n|Leduc, Alberta|\n|Melfort, Saskatchewan|\n|Minsk, Belarus|\n|North Vancouver, British Columbia|\n|Saskatoon, Saskatchewan|\n\nReturn the final result as JSON in the format {\"erroneous_cells\": \"<a list of erroneous cells or None>\"}.\n\n## Output:\n","completion":"{\"erroneous_cells\": \"None\"}","metadata":{"task":"ErrorDetection","num_fewshots":0,"seed":1,"dataset":"WebTables-Real-ED","table":"Table99"}}
